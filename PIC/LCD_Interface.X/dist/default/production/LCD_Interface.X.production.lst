

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar  7 09:09:51 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           ; Version 2.05
    77                           ; Generated 20/12/2018 GMT
    78                           ; 
    79                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F4620 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     
   111                           	psect	smallconst
   112  001000                     __psmallconst:
   113                           	opt callstack 0
   114  001000  00                 	db	0
   115  001001                     _reset:
   116                           	opt callstack 0
   117  001001  00                 	db	0
   118  001002  46                 	db	70
   119  001003  11                 	db	17
   120  001004  01                 	db	1
   121  001005  25                 	db	37
   122  001006  02                 	db	2
   123  001007  19                 	db	25
   124  001008                     __end_of_reset:
   125                           	opt callstack 0
   126  0000                     _SSPBUF	set	4041
   127  0000                     _SSPCON2bits	set	4037
   128  0000                     _SSPCON1	set	4038
   129  0000                     _SSPADD	set	4040
   130  0000                     _TRISCbits	set	3988
   131  0000                     _SSPCON1bits	set	4038
   132  0000                     _SSPCON2	set	4037
   133  0000                     _SSPSTAT	set	4039
   134  0000                     _LATDbits	set	3980
   135  0000                     _INTCON3bits	set	4080
   136  0000                     _INTCONbits	set	4082
   137  0000                     _LATAbits	set	3977
   138  0000                     _TRISAbits	set	3986
   139  0000                     _TRISD	set	3989
   140  0000                     _LATD	set	3980
   141  0000                     _INT0IF	set	32657
   142  0000                     _INT0IE	set	32660
   143  0000                     _INT2IF	set	32641
   144  0000                     _INT2IE	set	32644
   145  0000                     _INT1IF	set	32640
   146  0000                     _INT1IE	set	32643
   147  001008                     STR_5:
   148  001008  54                 	db	84	;'T'
   149  001009  69                 	db	105	;'i'
   150  00100A  6D                 	db	109	;'m'
   151  00100B  65                 	db	101	;'e'
   152  00100C  3A                 	db	58	;':'
   153  00100D  20                 	db	32
   154  00100E  25                 	db	37
   155  00100F  30                 	db	48	;'0'
   156  001010  32                 	db	50	;'2'
   157  001011  64                 	db	100	;'d'
   158  001012  3A                 	db	58	;':'
   159  001013  25                 	db	37
   160  001014  30                 	db	48	;'0'
   161  001015  32                 	db	50	;'2'
   162  001016  64                 	db	100	;'d'
   163  001017  00                 	db	0
   164  001018                     STR_9:
   165  001018  43                 	db	67	;'C'
   166  001019  72                 	db	114	;'r'
   167  00101A  61                 	db	97	;'a'
   168  00101B  63                 	db	99	;'c'
   169  00101C  6B                 	db	107	;'k'
   170  00101D  20                 	db	32
   171  00101E  25                 	db	37
   172  00101F  64                 	db	100	;'d'
   173  001020  3A                 	db	58	;':'
   174  001021  20                 	db	32
   175  001022  25                 	db	37
   176  001023  66                 	db	102	;'f'
   177  001024  63                 	db	99	;'c'
   178  001025  6D                 	db	109	;'m'
   179  001026  00                 	db	0
   180  001027                     STR_1:
   181  001027  25                 	db	37
   182  001028  30                 	db	48	;'0'
   183  001029  32                 	db	50	;'2'
   184  00102A  78                 	db	120	;'x'
   185  00102B  2F                 	db	47
   186  00102C  25                 	db	37
   187  00102D  30                 	db	48	;'0'
   188  00102E  32                 	db	50	;'2'
   189  00102F  78                 	db	120	;'x'
   190  001030  2F                 	db	47
   191  001031  25                 	db	37
   192  001032  30                 	db	48	;'0'
   193  001033  32                 	db	50	;'2'
   194  001034  78                 	db	120	;'x'
   195  001035  00                 	db	0
   196  001036                     STR_2:
   197  001036  25                 	db	37
   198  001037  30                 	db	48	;'0'
   199  001038  32                 	db	50	;'2'
   200  001039  78                 	db	120	;'x'
   201  00103A  3A                 	db	58	;':'
   202  00103B  25                 	db	37
   203  00103C  30                 	db	48	;'0'
   204  00103D  32                 	db	50	;'2'
   205  00103E  78                 	db	120	;'x'
   206  00103F  3A                 	db	58	;':'
   207  001040  25                 	db	37
   208  001041  30                 	db	48	;'0'
   209  001042  32                 	db	50	;'2'
   210  001043  78                 	db	120	;'x'
   211  001044  00                 	db	0
   212  001045                     STR_11:
   213  001045  48                 	db	72	;'H'
   214  001046  6F                 	db	111	;'o'
   215  001047  6C                 	db	108	;'l'
   216  001048  65                 	db	101	;'e'
   217  001049  20                 	db	32
   218  00104A  25                 	db	37
   219  00104B  64                 	db	100	;'d'
   220  00104C  3A                 	db	58	;':'
   221  00104D  20                 	db	32
   222  00104E  25                 	db	37
   223  00104F  66                 	db	102	;'f'
   224  001050  63                 	db	99	;'c'
   225  001051  6D                 	db	109	;'m'
   226  001052  00                 	db	0
   227  001053                     STR_7:
   228  001053  43                 	db	67	;'C'
   229  001054  72                 	db	114	;'r'
   230  001055  61                 	db	97	;'a'
   231  001056  63                 	db	99	;'c'
   232  001057  6B                 	db	107	;'k'
   233  001058  73                 	db	115	;'s'
   234  001059  3A                 	db	58	;':'
   235  00105A  20                 	db	32
   236  00105B  25                 	db	37
   237  00105C  64                 	db	100	;'d'
   238  00105D  00                 	db	0
   239  00105E                     STR_8:
   240  00105E  48                 	db	72	;'H'
   241  00105F  6F                 	db	111	;'o'
   242  001060  6C                 	db	108	;'l'
   243  001061  65                 	db	101	;'e'
   244  001062  73                 	db	115	;'s'
   245  001063  3A                 	db	58	;':'
   246  001064  20                 	db	32
   247  001065  25                 	db	37
   248  001066  64                 	db	100	;'d'
   249  001067  00                 	db	0
   250  001068                     STR_6:
   251  001068  43                 	db	67	;'C'
   252  001069  6F                 	db	111	;'o'
   253  00106A  6E                 	db	110	;'n'
   254  00106B  65                 	db	101	;'e'
   255  00106C  73                 	db	115	;'s'
   256  00106D  3A                 	db	58	;':'
   257  00106E  20                 	db	32
   258  00106F  25                 	db	37
   259  001070  64                 	db	100	;'d'
   260  001071  00                 	db	0
   261  001072                     STR_3:
   262  001072  4F                 	db	79	;'O'
   263  001073  70                 	db	112	;'p'
   264  001074  65                 	db	101	;'e'
   265  001075  72                 	db	114	;'r'
   266  001076  61                 	db	97	;'a'
   267  001077  74                 	db	116	;'t'
   268  001078  69                 	db	105	;'i'
   269  001079  6F                 	db	111	;'o'
   270  00107A  6E                 	db	110	;'n'
   271  00107B  00                 	db	0
   272  00107C                     STR_4:
   273  00107C  43                 	db	67	;'C'
   274  00107D  6F                 	db	111	;'o'
   275  00107E  6D                 	db	109	;'m'
   276  00107F  70                 	db	112	;'p'
   277  001080  6C                 	db	108	;'l'
   278  001081  65                 	db	101	;'e'
   279  001082  74                 	db	116	;'t'
   280  001083  65                 	db	101	;'e'
   281  001084  00                 	db	0
   282  001085                     STR_13:
   283  001085  49                 	db	73	;'I'
   284  001086  4E                 	db	78	;'N'
   285  001087  46                 	db	70	;'F'
   286  001088  00                 	db	0
   287  001089                     STR_17:
   288  001089  4E                 	db	78	;'N'
   289  00108A  41                 	db	65	;'A'
   290  00108B  4E                 	db	78	;'N'
   291  00108C  00                 	db	0
   292  00108D                     STR_14:
   293  00108D  69                 	db	105	;'i'
   294  00108E  6E                 	db	110	;'n'
   295  00108F  66                 	db	102	;'f'
   296  001090  00                 	db	0
   297  001091                     STR_18:
   298  001091  6E                 	db	110	;'n'
   299  001092  61                 	db	97	;'a'
   300  001093  6E                 	db	110	;'n'
   301  001094  00                 	db	0
   302  001095                     STR_21:
   303  001095  6C                 	db	108	;'l'
   304  001096  66                 	db	102	;'f'
   305  001097  00                 	db	0
   306  0000                     
   307                           ; #config settings
   308  001098  00                 	db	0	; dummy byte at the end
   309  0000                     
   310                           	psect	cinit
   311  004A18                     __pcinit:
   312                           	opt callstack 0
   313  004A18                     start_initialization:
   314                           	opt callstack 0
   315  004A18                     __initialization:
   316                           	opt callstack 0
   317                           
   318                           ; Clear objects allocated to BANK3 (200 bytes)
   319  004A18  EE03  F000         	lfsr	0,__pbssBANK3
   320  004A1C  0EC8               	movlw	200
   321  004A1E                     clear_0:
   322  004A1E  6AEE               	clrf	postinc0,c
   323  004A20  06E8               	decf	wreg,f,c
   324  004A22  E1FD               	bnz	clear_0
   325                           
   326                           ; Clear objects allocated to BANK2 (200 bytes)
   327  004A24  EE02  F000         	lfsr	0,__pbssBANK2
   328  004A28  0EC8               	movlw	200
   329  004A2A                     clear_1:
   330  004A2A  6AEE               	clrf	postinc0,c
   331  004A2C  06E8               	decf	wreg,f,c
   332  004A2E  E1FD               	bnz	clear_1
   333                           
   334                           ; Clear objects allocated to BANK1 (94 bytes)
   335  004A30  EE01  F000         	lfsr	0,__pbssBANK1
   336  004A34  0E5E               	movlw	94
   337  004A36                     clear_2:
   338  004A36  6AEE               	clrf	postinc0,c
   339  004A38  06E8               	decf	wreg,f,c
   340  004A3A  E1FD               	bnz	clear_2
   341                           
   342                           ; Clear objects allocated to BANK0 (2 bytes)
   343  004A3C  0100               	movlb	0
   344  004A3E  6BEF               	clrf	(__pbssBANK0+1)& (0+255),b
   345  004A40  6BEE               	clrf	__pbssBANK0& (0+255),b
   346                           
   347                           ; Clear objects allocated to COMRAM (14 bytes)
   348  004A42  EE00  F060         	lfsr	0,__pbssCOMRAM
   349  004A46  0E0E               	movlw	14
   350  004A48                     clear_3:
   351  004A48  6AEE               	clrf	postinc0,c
   352  004A4A  06E8               	decf	wreg,f,c
   353  004A4C  E1FD               	bnz	clear_3
   354  004A4E                     end_of_initialization:
   355                           	opt callstack 0
   356  004A4E                     __end_of__initialization:
   357                           	opt callstack 0
   358  004A4E  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   359  004A50  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   360  004A52  0E00               	movlw	low (__Lmediumconst shr (0+16))
   361  004A54  6EF8               	movwf	tblptru,c
   362  004A56  0100               	movlb	0
   363  004A58  EF34  F00D         	goto	_main	;jump to C main() function
   364                           
   365                           	psect	bssCOMRAM
   366  000060                     __pbssCOMRAM:
   367                           	opt callstack 0
   368  000060                     floorf@F524:
   369                           	opt callstack 0
   370  000060                     	ds	4
   371  000064                     ___fpclassifyf@F463:
   372                           	opt callstack 0
   373  000064                     	ds	4
   374  000068                     _width:
   375                           	opt callstack 0
   376  000068                     	ds	2
   377  00006A                     _prec:
   378                           	opt callstack 0
   379  00006A                     	ds	2
   380  00006C                     _flags:
   381                           	opt callstack 0
   382  00006C                     	ds	2
   383                           
   384                           	psect	bssBANK0
   385  0000EE                     __pbssBANK0:
   386                           	opt callstack 0
   387  0000EE                     _nout:
   388                           	opt callstack 0
   389  0000EE                     	ds	2
   390                           
   391                           	psect	bssBANK1
   392  000100                     __pbssBANK1:
   393                           	opt callstack 0
   394  000100                     _distance_travelled:
   395                           	opt callstack 0
   396  000100                     	ds	4
   397  000104                     _key_pressed:
   398                           	opt callstack 0
   399  000104                     	ds	2
   400  000106                     _total_holes:
   401                           	opt callstack 0
   402  000106                     	ds	2
   403  000108                     _total_cracks:
   404                           	opt callstack 0
   405  000108                     	ds	2
   406  00010A                     _total_cones:
   407                           	opt callstack 0
   408  00010A                     	ds	2
   409  00010C                     _data_count:
   410                           	opt callstack 0
   411  00010C                     	ds	2
   412  00010E                     _dbuf:
   413                           	opt callstack 0
   414  00010E                     	ds	80
   415                           
   416                           	psect	bssBANK2
   417  000200                     __pbssBANK2:
   418                           	opt callstack 0
   419  000200                     _crack_dist:
   420                           	opt callstack 0
   421  000200                     	ds	200
   422                           
   423                           	psect	bssBANK3
   424  000300                     __pbssBANK3:
   425                           	opt callstack 0
   426  000300                     _hole_dist:
   427                           	opt callstack 0
   428  000300                     	ds	200
   429                           
   430                           	psect	cstackBANK1
   431  00015E                     __pcstackBANK1:
   432                           	opt callstack 0
   433  00015E                     	ds	2
   434  000160                     main@time:
   435                           	opt callstack 0
   436                           
   437                           ; 7 bytes @ 0x2
   438  000160                     	ds	7
   439  000167                     main@begin_min:
   440                           	opt callstack 0
   441                           
   442                           ; 1 bytes @ 0x9
   443  000167                     	ds	1
   444  000168                     main@end_sec:
   445                           	opt callstack 0
   446                           
   447                           ; 1 bytes @ 0xA
   448  000168                     	ds	1
   449  000169                     main@end_min:
   450                           	opt callstack 0
   451                           
   452                           ; 1 bytes @ 0xB
   453  000169                     	ds	1
   454  00016A                     main@op_time:
   455                           	opt callstack 0
   456                           
   457                           ; 4 bytes @ 0xC
   458  00016A                     	ds	4
   459  00016E                     main@begin_sec:
   460                           	opt callstack 0
   461                           
   462                           ; 1 bytes @ 0x10
   463  00016E                     	ds	1
   464  00016F                     main@break_while:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0x11
   468  00016F                     	ds	2
   469  000171                     main@i_310:
   470                           	opt callstack 0
   471                           
   472                           ; 1 bytes @ 0x13
   473  000171                     	ds	1
   474  000172                     main@data:
   475                           	opt callstack 0
   476                           
   477                           ; 1 bytes @ 0x14
   478  000172                     	ds	1
   479  000173                     main@i:
   480                           	opt callstack 0
   481                           
   482                           ; 2 bytes @ 0x15
   483  000173                     	ds	2
   484                           
   485                           	psect	cstackBANK0
   486  000080                     __pcstackBANK0:
   487                           	opt callstack 0
   488  000080                     efgtoa@ou:
   489                           	opt callstack 0
   490                           
   491                           ; 4 bytes @ 0x0
   492  000080                     	ds	4
   493  000084                     _efgtoa$677:
   494                           	opt callstack 0
   495                           
   496                           ; 2 bytes @ 0x4
   497  000084                     	ds	2
   498  000086                     _efgtoa$678:
   499                           	opt callstack 0
   500                           
   501                           ; 2 bytes @ 0x6
   502  000086                     	ds	2
   503  000088                     _efgtoa$682:
   504                           	opt callstack 0
   505                           
   506                           ; 2 bytes @ 0x8
   507  000088                     	ds	2
   508  00008A                     _efgtoa$686:
   509                           	opt callstack 0
   510                           
   511                           ; 2 bytes @ 0xA
   512  00008A                     	ds	2
   513  00008C                     _efgtoa$687:
   514                           	opt callstack 0
   515                           
   516                           ; 2 bytes @ 0xC
   517  00008C                     	ds	2
   518  00008E                     _efgtoa$688:
   519                           	opt callstack 0
   520                           
   521                           ; 2 bytes @ 0xE
   522  00008E                     	ds	2
   523  000090                     efgtoa@t:
   524                           	opt callstack 0
   525                           
   526                           ; 2 bytes @ 0x10
   527  000090                     	ds	2
   528  000092                     efgtoa@pp:
   529                           	opt callstack 0
   530                           
   531                           ; 2 bytes @ 0x12
   532  000092                     	ds	2
   533  000094                     efgtoa@m:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0x14
   537  000094                     	ds	2
   538  000096                     efgtoa@ne:
   539                           	opt callstack 0
   540                           
   541                           ; 2 bytes @ 0x16
   542  000096                     	ds	2
   543  000098                     efgtoa@d:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0x18
   547  000098                     	ds	2
   548  00009A                     efgtoa@sign:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x1A
   552  00009A                     	ds	2
   553  00009C                     efgtoa@p:
   554                           	opt callstack 0
   555                           
   556                           ; 2 bytes @ 0x1C
   557  00009C                     	ds	2
   558  00009E                     efgtoa@nmode:
   559                           	opt callstack 0
   560                           
   561                           ; 1 bytes @ 0x1E
   562  00009E                     	ds	1
   563  00009F                     efgtoa@w:
   564                           	opt callstack 0
   565                           
   566                           ; 2 bytes @ 0x1F
   567  00009F                     	ds	2
   568  0000A1                     efgtoa@mode:
   569                           	opt callstack 0
   570                           
   571                           ; 1 bytes @ 0x21
   572  0000A1                     	ds	1
   573  0000A2                     efgtoa@h:
   574                           	opt callstack 0
   575                           
   576                           ; 4 bytes @ 0x22
   577  0000A2                     	ds	4
   578  0000A6                     efgtoa@l:
   579                           	opt callstack 0
   580                           
   581                           ; 4 bytes @ 0x26
   582  0000A6                     	ds	4
   583  0000AA                     efgtoa@i:
   584                           	opt callstack 0
   585                           
   586                           ; 2 bytes @ 0x2A
   587  0000AA                     	ds	2
   588  0000AC                     efgtoa@g:
   589                           	opt callstack 0
   590                           
   591                           ; 4 bytes @ 0x2C
   592  0000AC                     	ds	4
   593  0000B0                     efgtoa@e:
   594                           	opt callstack 0
   595                           
   596                           ; 2 bytes @ 0x30
   597  0000B0                     	ds	2
   598  0000B2                     efgtoa@n:
   599                           	opt callstack 0
   600                           
   601                           ; 2 bytes @ 0x32
   602  0000B2                     	ds	2
   603  0000B4                     efgtoa@u:
   604                           	opt callstack 0
   605                           
   606                           ; 4 bytes @ 0x34
   607  0000B4                     	ds	4
   608  0000B8                     ?_vfpfcnvrt:
   609                           	opt callstack 0
   610  0000B8                     vfpfcnvrt@fp:
   611                           	opt callstack 0
   612                           
   613                           ; 2 bytes @ 0x38
   614  0000B8                     	ds	2
   615  0000BA                     vfpfcnvrt@fmt:
   616                           	opt callstack 0
   617                           
   618                           ; 2 bytes @ 0x3A
   619  0000BA                     	ds	2
   620  0000BC                     vfpfcnvrt@ap:
   621                           	opt callstack 0
   622                           
   623                           ; 2 bytes @ 0x3C
   624  0000BC                     	ds	2
   625  0000BE                     vfpfcnvrt@ll:
   626                           	opt callstack 0
   627                           
   628                           ; 8 bytes @ 0x3E
   629  0000BE                     	ds	8
   630  0000C6                     vfpfcnvrt@llu:
   631                           	opt callstack 0
   632                           
   633                           ; 8 bytes @ 0x46
   634  0000C6                     	ds	8
   635  0000CE                     vfpfcnvrt@done:
   636                           	opt callstack 0
   637                           
   638                           ; 2 bytes @ 0x4E
   639  0000CE                     	ds	2
   640  0000D0                     _vfpfcnvrt$713:
   641                           	opt callstack 0
   642                           
   643                           ; 2 bytes @ 0x50
   644  0000D0                     	ds	2
   645  0000D2                     _vfpfcnvrt$718:
   646                           	opt callstack 0
   647                           
   648                           ; 2 bytes @ 0x52
   649  0000D2                     	ds	2
   650  0000D4                     vfpfcnvrt@f:
   651                           	opt callstack 0
   652                           
   653                           ; 4 bytes @ 0x54
   654  0000D4                     	ds	4
   655  0000D8                     vfpfcnvrt@ct:
   656                           	opt callstack 0
   657                           
   658                           ; 3 bytes @ 0x58
   659  0000D8                     	ds	3
   660  0000DB                     vfpfcnvrt@c:
   661                           	opt callstack 0
   662                           
   663                           ; 1 bytes @ 0x5B
   664  0000DB                     	ds	1
   665  0000DC                     ?_vfprintf:
   666                           	opt callstack 0
   667  0000DC                     vfprintf@fp:
   668                           	opt callstack 0
   669                           
   670                           ; 2 bytes @ 0x5C
   671  0000DC                     	ds	2
   672  0000DE                     vfprintf@fmt:
   673                           	opt callstack 0
   674                           
   675                           ; 2 bytes @ 0x5E
   676  0000DE                     	ds	2
   677  0000E0                     vfprintf@ap:
   678                           	opt callstack 0
   679                           
   680                           ; 2 bytes @ 0x60
   681  0000E0                     	ds	2
   682  0000E2                     ?_printf:
   683                           	opt callstack 0
   684  0000E2                     printf@fmt:
   685                           	opt callstack 0
   686                           
   687                           ; 2 bytes @ 0x62
   688  0000E2                     	ds	8
   689  0000EA                     ??_main:
   690                           
   691                           ; 1 bytes @ 0x6A
   692  0000EA                     	ds	4
   693                           
   694                           	psect	cstackCOMRAM
   695  000001                     __pcstackCOMRAM:
   696                           	opt callstack 0
   697  000001                     ?i2___fladd:
   698                           	opt callstack 0
   699  000001                     i2___fladd@b:
   700                           	opt callstack 0
   701                           
   702                           ; 4 bytes @ 0x0
   703  000001                     	ds	4
   704  000005                     i2___fladd@a:
   705                           	opt callstack 0
   706                           
   707                           ; 4 bytes @ 0x4
   708  000005                     	ds	4
   709  000009                     ??i2___fladd:
   710                           
   711                           ; 1 bytes @ 0x8
   712  000009                     	ds	4
   713  00000D                     i2___fladd@signs:
   714                           	opt callstack 0
   715                           
   716                           ; 1 bytes @ 0xC
   717  00000D                     	ds	1
   718  00000E                     i2___fladd@aexp:
   719                           	opt callstack 0
   720                           
   721                           ; 1 bytes @ 0xD
   722  00000E                     	ds	1
   723  00000F                     i2___fladd@bexp:
   724                           	opt callstack 0
   725                           
   726                           ; 1 bytes @ 0xE
   727  00000F                     	ds	1
   728  000010                     i2___fladd@grs:
   729                           	opt callstack 0
   730                           
   731                           ; 1 bytes @ 0xF
   732  000010                     	ds	1
   733  000011                     ??_I2C_Master_Wait:
   734  000011                     ?_strlen:
   735                           	opt callstack 0
   736  000011                     ?___fpclassifyf:
   737                           	opt callstack 0
   738  000011                     ?_isupper:
   739                           	opt callstack 0
   740  000011                     ?_isalpha:
   741                           	opt callstack 0
   742  000011                     ?_isdigit:
   743                           	opt callstack 0
   744  000011                     ?_strncmp:
   745                           	opt callstack 0
   746  000011                     ?_isspace:
   747                           	opt callstack 0
   748  000011                     ?_islower:
   749                           	opt callstack 0
   750  000011                     ?_atohtoi:
   751                           	opt callstack 0
   752  000011                     ?___wmul:
   753                           	opt callstack 0
   754  000011                     ?___awdiv:
   755                           	opt callstack 0
   756  000011                     ?___awmod:
   757                           	opt callstack 0
   758  000011                     ?___fladd:
   759                           	opt callstack 0
   760  000011                     ?___fldiv:
   761                           	opt callstack 0
   762  000011                     ?___flmul:
   763                           	opt callstack 0
   764  000011                     ?___lldiv:
   765                           	opt callstack 0
   766  000011                     ?___flneg:
   767                           	opt callstack 0
   768  000011                     ?___fltol:
   769                           	opt callstack 0
   770  000011                     ?___xxtofl:
   771                           	opt callstack 0
   772  000011                     ?___aodiv:
   773                           	opt callstack 0
   774  000011                     ?___aomod:
   775                           	opt callstack 0
   776  000011                     lcd_byte@temp:
   777                           	opt callstack 0
   778  000011                     ___wmul@multiplier:
   779                           	opt callstack 0
   780  000011                     ___awdiv@dividend:
   781                           	opt callstack 0
   782  000011                     ___awmod@dividend:
   783                           	opt callstack 0
   784  000011                     isalpha@c:
   785                           	opt callstack 0
   786  000011                     isdigit@c:
   787                           	opt callstack 0
   788  000011                     isspace@c:
   789                           	opt callstack 0
   790  000011                     isupper@c:
   791                           	opt callstack 0
   792  000011                     strcpy@dest:
   793                           	opt callstack 0
   794  000011                     strlen@s:
   795                           	opt callstack 0
   796  000011                     strncmp@_l:
   797                           	opt callstack 0
   798  000011                     islower@c:
   799                           	opt callstack 0
   800  000011                     ___lldiv@dividend:
   801                           	opt callstack 0
   802  000011                     ___fleq@ff1:
   803                           	opt callstack 0
   804  000011                     ___flneg@f1:
   805                           	opt callstack 0
   806  000011                     ___fltol@f1:
   807                           	opt callstack 0
   808  000011                     ___fladd@b:
   809                           	opt callstack 0
   810  000011                     ___fldiv@b:
   811                           	opt callstack 0
   812  000011                     ___flmul@b:
   813                           	opt callstack 0
   814  000011                     ___xxtofl@val:
   815                           	opt callstack 0
   816  000011                     ___fpclassifyf@x:
   817                           	opt callstack 0
   818  000011                     ___aodiv@dividend:
   819                           	opt callstack 0
   820  000011                     ___aomod@dividend:
   821                           	opt callstack 0
   822                           
   823                           ; 8 bytes @ 0x10
   824  000011                     	ds	1
   825  000012                     lcd_byte@data:
   826                           	opt callstack 0
   827  000012                     I2C_Master_Read@ackBit:
   828                           	opt callstack 0
   829                           
   830                           ; 1 bytes @ 0x11
   831  000012                     	ds	1
   832  000013                     ??_isupper:
   833  000013                     ??_isalpha:
   834  000013                     ??_isdigit:
   835  000013                     ??_isspace:
   836  000013                     ??_islower:
   837  000013                     lcd_Instructions@data:
   838                           	opt callstack 0
   839  000013                     putch@data:
   840                           	opt callstack 0
   841  000013                     I2C_Master_Read@receivedByte:
   842                           	opt callstack 0
   843  000013                     atohtoi@ascii:
   844                           	opt callstack 0
   845  000013                     ___wmul@multiplicand:
   846                           	opt callstack 0
   847  000013                     ___awdiv@divisor:
   848                           	opt callstack 0
   849  000013                     ___awmod@divisor:
   850                           	opt callstack 0
   851  000013                     strcpy@src:
   852                           	opt callstack 0
   853  000013                     strlen@a:
   854                           	opt callstack 0
   855  000013                     strncmp@_r:
   856                           	opt callstack 0
   857                           
   858                           ; 2 bytes @ 0x12
   859  000013                     	ds	1
   860  000014                     ??_initialize_LCD:
   861  000014                     ??_clear:
   862  000014                     atohtoi@dec_ascii:
   863                           	opt callstack 0
   864  000014                     fputc@c:
   865                           	opt callstack 0
   866                           
   867                           ; 2 bytes @ 0x13
   868  000014                     	ds	1
   869  000015                     ??___fpclassifyf:
   870  000015                     ??_strcpy:
   871  000015                     ??___fltol:
   872  000015                     ??___xxtofl:
   873  000015                     ___awdiv@counter:
   874                           	opt callstack 0
   875  000015                     ___awmod@counter:
   876                           	opt callstack 0
   877  000015                     ___wmul@product:
   878                           	opt callstack 0
   879  000015                     strncmp@n:
   880                           	opt callstack 0
   881  000015                     ___lldiv@divisor:
   882                           	opt callstack 0
   883  000015                     ___fleq@ff2:
   884                           	opt callstack 0
   885  000015                     ___fladd@a:
   886                           	opt callstack 0
   887  000015                     ___fldiv@a:
   888                           	opt callstack 0
   889  000015                     ___flmul@a:
   890                           	opt callstack 0
   891                           
   892                           ; 4 bytes @ 0x14
   893  000015                     	ds	1
   894  000016                     ___awdiv@sign:
   895                           	opt callstack 0
   896  000016                     ___awmod@sign:
   897                           	opt callstack 0
   898  000016                     fputc@fp:
   899                           	opt callstack 0
   900                           
   901                           ; 2 bytes @ 0x15
   902  000016                     	ds	1
   903  000017                     ??_strncmp:
   904  000017                     ?_tolower:
   905                           	opt callstack 0
   906  000017                     ?_toupper:
   907                           	opt callstack 0
   908  000017                     _isspace$1232:
   909                           	opt callstack 0
   910  000017                     ___awdiv@quotient:
   911                           	opt callstack 0
   912  000017                     strcpy@s:
   913                           	opt callstack 0
   914  000017                     tolower@c:
   915                           	opt callstack 0
   916  000017                     toupper@c:
   917                           	opt callstack 0
   918                           
   919                           ; 2 bytes @ 0x16
   920  000017                     	ds	1
   921  000018                     ??_fputc:
   922  000018                     ?_atoi:
   923                           	opt callstack 0
   924  000018                     atoi@s:
   925                           	opt callstack 0
   926  000018                     strncmp@l:
   927                           	opt callstack 0
   928                           
   929                           ; 2 bytes @ 0x17
   930  000018                     	ds	1
   931  000019                     ??_tolower:
   932  000019                     ??_toupper:
   933  000019                     ??___fladd:
   934  000019                     ??___fldiv:
   935  000019                     ??___flmul:
   936  000019                     ??___fleq:
   937  000019                     time_elapsed@begin_sec:
   938                           	opt callstack 0
   939  000019                     ___fltol@sign1:
   940                           	opt callstack 0
   941  000019                     ___xxtofl@sign:
   942                           	opt callstack 0
   943  000019                     ___fpclassifyf@e:
   944                           	opt callstack 0
   945  000019                     strcpy@d:
   946                           	opt callstack 0
   947  000019                     ___lldiv@quotient:
   948                           	opt callstack 0
   949  000019                     ___aodiv@divisor:
   950                           	opt callstack 0
   951  000019                     ___aomod@divisor:
   952                           	opt callstack 0
   953                           
   954                           ; 8 bytes @ 0x18
   955  000019                     	ds	1
   956  00001A                     ??_atoi:
   957  00001A                     time_elapsed@end_min:
   958                           	opt callstack 0
   959  00001A                     ___fltol@exp1:
   960                           	opt callstack 0
   961  00001A                     ___xxtofl@exp:
   962                           	opt callstack 0
   963  00001A                     strncmp@r:
   964                           	opt callstack 0
   965                           
   966                           ; 2 bytes @ 0x19
   967  00001A                     	ds	1
   968  00001B                     time_elapsed@end_sec:
   969                           	opt callstack 0
   970  00001B                     I2C_Master_Write@byteToWrite:
   971                           	opt callstack 0
   972  00001B                     ___xxtofl@arg:
   973                           	opt callstack 0
   974  00001B                     ___fpclassifyf@u:
   975                           	opt callstack 0
   976                           
   977                           ; 4 bytes @ 0x1A
   978  00001B                     	ds	1
   979  00001C                     time_elapsed@array:
   980                           	opt callstack 0
   981                           
   982                           ; 2 bytes @ 0x1B
   983  00001C                     	ds	1
   984  00001D                     ___lldiv@counter:
   985                           	opt callstack 0
   986  00001D                     ___fladd@signs:
   987                           	opt callstack 0
   988  00001D                     ___flmul@sign:
   989                           	opt callstack 0
   990  00001D                     fputs@s:
   991                           	opt callstack 0
   992  00001D                     _tolower$1306:
   993                           	opt callstack 0
   994  00001D                     _toupper$1321:
   995                           	opt callstack 0
   996  00001D                     ___fldiv@rem:
   997                           	opt callstack 0
   998                           
   999                           ; 4 bytes @ 0x1C
  1000  00001D                     	ds	1
  1001  00001E                     ___fladd@aexp:
  1002                           	opt callstack 0
  1003  00001E                     time_elapsed@b_min_int:
  1004                           	opt callstack 0
  1005  00001E                     atoi@neg:
  1006                           	opt callstack 0
  1007  00001E                     I2C_Master_Init@clockFreq:
  1008                           	opt callstack 0
  1009  00001E                     ___flmul@grs:
  1010                           	opt callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x1D
  1013  00001E                     	ds	1
  1014  00001F                     ___fladd@bexp:
  1015                           	opt callstack 0
  1016  00001F                     fputs@fp:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x1E
  1020  00001F                     	ds	1
  1021  000020                     ___fladd@grs:
  1022                           	opt callstack 0
  1023  000020                     time_elapsed@b_sec_int:
  1024                           	opt callstack 0
  1025  000020                     _atoi$1192:
  1026                           	opt callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x1F
  1029  000020                     	ds	1
  1030  000021                     ___aodiv@counter:
  1031                           	opt callstack 0
  1032  000021                     ___aomod@counter:
  1033                           	opt callstack 0
  1034  000021                     ___fldiv@sign:
  1035                           	opt callstack 0
  1036  000021                     fputs@c:
  1037                           	opt callstack 0
  1038                           
  1039                           ; 1 bytes @ 0x20
  1040  000021                     	ds	1
  1041  000022                     ??_I2C_Master_Init:
  1042  000022                     ___aodiv@sign:
  1043                           	opt callstack 0
  1044  000022                     ___aomod@sign:
  1045                           	opt callstack 0
  1046  000022                     ___flmul@aexp:
  1047                           	opt callstack 0
  1048  000022                     time_elapsed@e_min_int:
  1049                           	opt callstack 0
  1050  000022                     ___fldiv@new_exp:
  1051                           	opt callstack 0
  1052  000022                     _atoi$1194:
  1053                           	opt callstack 0
  1054  000022                     fputs@i:
  1055                           	opt callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x21
  1058  000022                     	ds	1
  1059  000023                     ?_abs:
  1060                           	opt callstack 0
  1061  000023                     ___flmul@bexp:
  1062                           	opt callstack 0
  1063  000023                     abs@a:
  1064                           	opt callstack 0
  1065  000023                     ___aodiv@quotient:
  1066                           	opt callstack 0
  1067                           
  1068                           ; 8 bytes @ 0x22
  1069  000023                     	ds	1
  1070  000024                     ?_pad:
  1071                           	opt callstack 0
  1072  000024                     _atoi$1193:
  1073                           	opt callstack 0
  1074  000024                     time_elapsed@e_sec_int:
  1075                           	opt callstack 0
  1076  000024                     pad@fp:
  1077                           	opt callstack 0
  1078  000024                     ___fldiv@grs:
  1079                           	opt callstack 0
  1080  000024                     ___flmul@prod:
  1081                           	opt callstack 0
  1082                           
  1083                           ; 4 bytes @ 0x23
  1084  000024                     	ds	1
  1085  000025                     ??_abs:
  1086  000025                     atoi@n:
  1087                           	opt callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x24
  1090  000025                     	ds	1
  1091  000026                     time_elapsed@begin_s:
  1092                           	opt callstack 0
  1093  000026                     pad@buf:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x25
  1097  000026                     	ds	2
  1098  000028                     ___fldiv@bexp:
  1099                           	opt callstack 0
  1100  000028                     time_elapsed@end_s:
  1101                           	opt callstack 0
  1102  000028                     pad@p:
  1103                           	opt callstack 0
  1104  000028                     ___flmul@temp:
  1105                           	opt callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x27
  1108  000028                     	ds	1
  1109  000029                     ___fldiv@aexp:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 1 bytes @ 0x28
  1113  000029                     	ds	1
  1114  00002A                     ??_pad:
  1115  00002A                     ?_floorf:
  1116                           	opt callstack 0
  1117  00002A                     ?___flsub:
  1118                           	opt callstack 0
  1119  00002A                     time_elapsed@minutes:
  1120                           	opt callstack 0
  1121  00002A                     ___flge@ff1:
  1122                           	opt callstack 0
  1123  00002A                     ___flsub@b:
  1124                           	opt callstack 0
  1125  00002A                     floorf@x:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 4 bytes @ 0x29
  1129  00002A                     	ds	1
  1130  00002B                     pad@i:
  1131                           	opt callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x2A
  1134  00002B                     	ds	1
  1135  00002C                     time_elapsed@seconds:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x2B
  1139  00002C                     	ds	1
  1140  00002D                     pad@w:
  1141                           	opt callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x2C
  1144  00002D                     	ds	1
  1145  00002E                     ??_floorf:
  1146  00002E                     time_elapsed@begin_min:
  1147                           	opt callstack 0
  1148  00002E                     ___flge@ff2:
  1149                           	opt callstack 0
  1150  00002E                     ___flsub@a:
  1151                           	opt callstack 0
  1152                           
  1153                           ; 4 bytes @ 0x2D
  1154  00002E                     	ds	1
  1155  00002F                     ?_dtoa:
  1156                           	opt callstack 0
  1157  00002F                     ?_xtoa:
  1158                           	opt callstack 0
  1159  00002F                     time_elapsed@total_s:
  1160                           	opt callstack 0
  1161  00002F                     dtoa@fp:
  1162                           	opt callstack 0
  1163  00002F                     xtoa@fp:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x2E
  1167  00002F                     	ds	2
  1168  000031                     dtoa@d:
  1169                           	opt callstack 0
  1170  000031                     xtoa@d:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 8 bytes @ 0x30
  1174  000031                     	ds	1
  1175  000032                     ??___flge:
  1176                           
  1177                           ; 1 bytes @ 0x31
  1178  000032                     	ds	2
  1179  000034                     floorf@m:
  1180                           	opt callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x33
  1183  000034                     	ds	4
  1184  000038                     floorf@e:
  1185                           	opt callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x37
  1188  000038                     	ds	1
  1189  000039                     ??_dtoa:
  1190  000039                     xtoa@x:
  1191                           	opt callstack 0
  1192                           
  1193                           ; 1 bytes @ 0x38
  1194  000039                     	ds	1
  1195  00003A                     ??_xtoa:
  1196  00003A                     floorf@u:
  1197                           	opt callstack 0
  1198                           
  1199                           ; 4 bytes @ 0x39
  1200  00003A                     	ds	4
  1201  00003E                     ?_efgtoa:
  1202                           	opt callstack 0
  1203  00003E                     efgtoa@fp:
  1204                           	opt callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x3D
  1207  00003E                     	ds	2
  1208  000040                     efgtoa@f:
  1209                           	opt callstack 0
  1210                           
  1211                           ; 4 bytes @ 0x3F
  1212  000040                     	ds	1
  1213  000041                     _dtoa$653:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x40
  1217  000041                     	ds	1
  1218  000042                     _xtoa$698:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x41
  1222  000042                     	ds	1
  1223  000043                     dtoa@p:
  1224                           	opt callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x42
  1227  000043                     	ds	1
  1228  000044                     efgtoa@c:
  1229                           	opt callstack 0
  1230  000044                     _xtoa$699:
  1231                           	opt callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x43
  1234  000044                     	ds	1
  1235  000045                     ??_efgtoa:
  1236  000045                     dtoa@w:
  1237                           	opt callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x44
  1240  000045                     	ds	1
  1241  000046                     xtoa@p:
  1242                           	opt callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x45
  1245  000046                     	ds	1
  1246  000047                     dtoa@s:
  1247                           	opt callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x46
  1250  000047                     	ds	1
  1251  000048                     xtoa@w:
  1252                           	opt callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x47
  1255  000048                     	ds	1
  1256  000049                     dtoa@n:
  1257                           	opt callstack 0
  1258                           
  1259                           ; 8 bytes @ 0x48
  1260  000049                     	ds	1
  1261  00004A                     xtoa@n:
  1262                           	opt callstack 0
  1263                           
  1264                           ; 8 bytes @ 0x49
  1265  00004A                     	ds	7
  1266  000051                     dtoa@i:
  1267                           	opt callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x50
  1270  000051                     	ds	1
  1271  000052                     xtoa@i:
  1272                           	opt callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x51
  1275  000052                     	ds	2
  1276  000054                     xtoa@c:
  1277                           	opt callstack 0
  1278                           
  1279                           ; 2 bytes @ 0x53
  1280  000054                     	ds	2
  1281  000056                     ??_vfpfcnvrt:
  1282                           
  1283                           ; 1 bytes @ 0x55
  1284  000056                     	ds	4
  1285  00005A                     vfprintf@cfmt:
  1286                           	opt callstack 0
  1287                           
  1288                           ; 2 bytes @ 0x59
  1289  00005A                     	ds	2
  1290  00005C                     
  1291                           ; 1 bytes @ 0x5B
  1292  00005C                     	ds	2
  1293  00005E                     printf@ap:
  1294                           	opt callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x5D
  1297  00005E                     	ds	2
  1298                           
  1299 ;;
  1300 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1301 ;;
  1302 ;; *************** function _main *****************
  1303 ;; Defined at:
  1304 ;;		line 61 in file "main.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  i               1   19[BANK1 ] unsigned char 
  1309 ;;  op_time         4   12[BANK1 ] int [2]
  1310 ;;  temp            2    0        PTR unsigned char 
  1311 ;;		 -> main@begin_sec(1), 
  1312 ;;  begin_sec       1   16[BANK1 ] unsigned char 
  1313 ;;  end_min         1   11[BANK1 ] unsigned char 
  1314 ;;  end_sec         1   10[BANK1 ] unsigned char 
  1315 ;;  begin_min       1    9[BANK1 ] unsigned char 
  1316 ;;  time            7    2[BANK1 ] unsigned char [7]
  1317 ;;  i               2   21[BANK1 ] int 
  1318 ;;  break_while     2   17[BANK1 ] int 
  1319 ;;  data            1   20[BANK1 ] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;      Totals:         0       4      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1333 ;;Total ram usage:       27 bytes
  1334 ;; Hardware stack levels required when called:   11
  1335 ;; This function calls:
  1336 ;;		_I2C_Master_Init
  1337 ;;		_I2C_Master_Read
  1338 ;;		_I2C_Master_Start
  1339 ;;		_I2C_Master_Stop
  1340 ;;		_I2C_Master_Write
  1341 ;;		___fltol
  1342 ;;		___xxtofl
  1343 ;;		_clear
  1344 ;;		_cursor_reset
  1345 ;;		_initialize_LCD
  1346 ;;		_line_2
  1347 ;;		_printf
  1348 ;;		_time_elapsed
  1349 ;; This function is called by:
  1350 ;;		Startup code after reset
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           	psect	text0
  1355  001A68                     __ptext0:
  1356                           	opt callstack 0
  1357  001A68                     _main:
  1358                           	opt callstack 20
  1359                           
  1360                           ;main.c: 66:     LATD = 0x00;
  1361                           
  1362                           ;incstack = 0
  1363  001A68  0E00               	movlw	0
  1364  001A6A  6E8C               	movwf	3980,c	;volatile
  1365                           
  1366                           ;main.c: 67:     TRISD = 0x00;
  1367  001A6C  0E00               	movlw	0
  1368  001A6E  6E95               	movwf	3989,c	;volatile
  1369                           
  1370                           ;main.c: 68:     initialize_LCD();
  1371  001A70  ECE9  F024         	call	_initialize_LCD	;wreg free
  1372                           
  1373                           ;main.c: 71:     I2C_Master_Init(100000);
  1374  001A74  0EA0               	movlw	160
  1375  001A76  6E1E               	movwf	I2C_Master_Init@clockFreq,c
  1376  001A78  0E86               	movlw	134
  1377  001A7A  6E1F               	movwf	I2C_Master_Init@clockFreq+1,c
  1378  001A7C  0E01               	movlw	1
  1379  001A7E  6E20               	movwf	I2C_Master_Init@clockFreq+2,c
  1380  001A80  0E00               	movlw	0
  1381  001A82  6E21               	movwf	I2C_Master_Init@clockFreq+3,c
  1382  001A84  EC8D  F021         	call	_I2C_Master_Init	;wreg free
  1383                           
  1384                           ;main.c: 72:     unsigned char time[7];;main.c: 76:     cursor_reset();
  1385  001A88  EC77  F026         	call	_cursor_reset	;wreg free
  1386                           
  1387                           ;main.c: 79:     unsigned char data;;main.c: 83:     TRISAbits.RA0 = 0;
  1388  001A8C  9092               	bcf	3986,0,c	;volatile
  1389                           
  1390                           ;main.c: 84:     TRISAbits.RA1 = 0;
  1391  001A8E  9292               	bcf	3986,1,c	;volatile
  1392                           
  1393                           ;main.c: 85:     LATAbits.LATA0 = 0;
  1394  001A90  9089               	bcf	3977,0,c	;volatile
  1395                           
  1396                           ;main.c: 86:     LATAbits.LATA1 = 0;
  1397  001A92  9289               	bcf	3977,1,c	;volatile
  1398                           
  1399                           ;main.c: 89:     INTCONbits.GIE = 1;
  1400  001A94  8EF2               	bsf	4082,7,c	;volatile
  1401                           
  1402                           ;main.c: 90:     INTCONbits.PEIE = 1;
  1403  001A96  8CF2               	bsf	4082,6,c	;volatile
  1404                           
  1405                           ;main.c: 93:     INTCON3bits.INT1IE = 1;
  1406  001A98  86F0               	bsf	4080,3,c	;volatile
  1407                           
  1408                           ;main.c: 96:     TRISAbits.RA2 = 0;
  1409  001A9A  9492               	bcf	3986,2,c	;volatile
  1410  001A9C                     l6020:
  1411                           
  1412                           ;main.c: 107:             I2C_Master_Start();
  1413  001A9C  EC7F  F026         	call	_I2C_Master_Start	;wreg free
  1414                           
  1415                           ;main.c: 108:             I2C_Master_Write(0b11010000);
  1416  001AA0  0E00               	movlw	0
  1417  001AA2  6E1C               	movwf	I2C_Master_Write@byteToWrite+1,c
  1418  001AA4  0ED0               	movlw	208
  1419  001AA6  6E1B               	movwf	I2C_Master_Write@byteToWrite,c
  1420  001AA8  EC6E  F026         	call	_I2C_Master_Write	;wreg free
  1421                           
  1422                           ;main.c: 109:             I2C_Master_Write(0x00);
  1423  001AAC  0E00               	movlw	0
  1424  001AAE  6E1C               	movwf	I2C_Master_Write@byteToWrite+1,c
  1425  001AB0  0E00               	movlw	0
  1426  001AB2  6E1B               	movwf	I2C_Master_Write@byteToWrite,c
  1427  001AB4  EC6E  F026         	call	_I2C_Master_Write	;wreg free
  1428                           
  1429                           ;main.c: 110:             I2C_Master_Stop();
  1430  001AB8  EC7B  F026         	call	_I2C_Master_Stop	;wreg free
  1431                           
  1432                           ;main.c: 113:             I2C_Master_Start();
  1433  001ABC  EC7F  F026         	call	_I2C_Master_Start	;wreg free
  1434                           
  1435                           ;main.c: 114:             I2C_Master_Write(0b11010001);
  1436  001AC0  0E00               	movlw	0
  1437  001AC2  6E1C               	movwf	I2C_Master_Write@byteToWrite+1,c
  1438  001AC4  0ED1               	movlw	209
  1439  001AC6  6E1B               	movwf	I2C_Master_Write@byteToWrite,c
  1440  001AC8  EC6E  F026         	call	_I2C_Master_Write	;wreg free
  1441                           
  1442                           ;main.c: 115:             for(unsigned char i = 0; i < 6; i++){
  1443  001ACC  0E00               	movlw	0
  1444  001ACE  0101               	movlb	1	; () banked
  1445  001AD0  6F71               	movwf	main@i_310& (0+255),b
  1446  001AD2                     l6038:
  1447                           
  1448                           ; BSR set to: 1
  1449                           ;main.c: 116:                 time[i] = I2C_Master_Read(0);
  1450  001AD2  0E60               	movlw	low main@time
  1451  001AD4  2571               	addwf	main@i_310& (0+255),w,b
  1452  001AD6  6ED9               	movwf	fsr2l,c
  1453  001AD8  6ADA               	clrf	fsr2h,c
  1454  001ADA  0E01               	movlw	high main@time
  1455  001ADC  22DA               	addwfc	fsr2h,f,c
  1456  001ADE  0E00               	movlw	0
  1457  001AE0  EC37  F026         	call	_I2C_Master_Read
  1458  001AE4  6EDF               	movwf	indf2,c
  1459                           
  1460                           ;main.c: 117:             }
  1461  001AE6  0101               	movlb	1	; () banked
  1462  001AE8  2B71               	incf	main@i_310& (0+255),f,b
  1463                           
  1464                           ; BSR set to: 1
  1465  001AEA  0E05               	movlw	5
  1466  001AEC  6571               	cpfsgt	main@i_310& (0+255),b
  1467  001AEE  D7F1               	goto	l6038
  1468                           
  1469                           ; BSR set to: 1
  1470                           ;main.c: 122:             time[6] = I2C_Master_Read(1);
  1471  001AF0  0E01               	movlw	1
  1472  001AF2  EC37  F026         	call	_I2C_Master_Read
  1473  001AF6  0101               	movlb	1	; () banked
  1474  001AF8  6F66               	movwf	(main@time+6)& (0+255),b
  1475                           
  1476                           ;main.c: 123:             I2C_Master_Stop();
  1477  001AFA  EC7B  F026         	call	_I2C_Master_Stop	;wreg free
  1478                           
  1479                           ;main.c: 126:             clear();
  1480  001AFE  EC49  F026         	call	_clear	;wreg free
  1481                           
  1482                           ;main.c: 127:             printf("%02x/%02x/%02x", time[4],time[5],time[6]);
  1483  001B02  0E27               	movlw	low STR_1
  1484  001B04  0100               	movlb	0	; () banked
  1485  001B06  6FE2               	movwf	printf@fmt& (0+255),b
  1486  001B08  0E10               	movlw	high STR_1
  1487  001B0A  6FE3               	movwf	(printf@fmt+1)& (0+255),b
  1488  001B0C  C164  F0E4         	movff	main@time+4,?_printf+2
  1489  001B10  6BE5               	clrf	(?_printf+3)& (0+255),b
  1490  001B12  C165  F0E6         	movff	main@time+5,?_printf+4
  1491  001B16  6BE7               	clrf	(?_printf+5)& (0+255),b
  1492  001B18  C166  F0E8         	movff	main@time+6,?_printf+6
  1493  001B1C  6BE9               	clrf	(?_printf+7)& (0+255),b
  1494  001B1E  EC10  F026         	call	_printf	;wreg free
  1495                           
  1496                           ;main.c: 128:             line_2();
  1497  001B22  EC73  F026         	call	_line_2	;wreg free
  1498                           
  1499                           ;main.c: 129:             printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  1500  001B26  0E36               	movlw	low STR_2
  1501  001B28  0100               	movlb	0	; () banked
  1502  001B2A  6FE2               	movwf	printf@fmt& (0+255),b
  1503  001B2C  0E10               	movlw	high STR_2
  1504  001B2E  6FE3               	movwf	(printf@fmt+1)& (0+255),b
  1505  001B30  C162  F0E4         	movff	main@time+2,?_printf+2
  1506  001B34  6BE5               	clrf	(?_printf+3)& (0+255),b
  1507  001B36  C161  F0E6         	movff	main@time+1,?_printf+4
  1508  001B3A  6BE7               	clrf	(?_printf+5)& (0+255),b
  1509  001B3C  C160  F0E8         	movff	main@time,?_printf+6
  1510  001B40  6BE9               	clrf	(?_printf+7)& (0+255),b
  1511  001B42  EC10  F026         	call	_printf	;wreg free
  1512                           
  1513                           ;main.c: 130:             _delay((unsigned long)((1000)*(40000000/4000.0)));
  1514  001B46  0E33               	movlw	51
  1515  001B48  0100               	movlb	0	; () banked
  1516  001B4A  6FEB               	movwf	(??_main+1)& (0+255),b
  1517  001B4C  0EBB               	movlw	187
  1518  001B4E  6FEA               	movwf	??_main& (0+255),b
  1519  001B50  0EDF               	movlw	223
  1520  001B52                     u7897:
  1521  001B52  2EE8               	decfsz	wreg,f,c
  1522  001B54  D7FE               	bra	u7897
  1523  001B56  2FEA               	decfsz	??_main& (0+255),f,b
  1524  001B58  D7FC               	bra	u7897
  1525  001B5A  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  1526  001B5C  D7FA               	bra	u7897
  1527  001B5E  D000               	nop2	
  1528                           
  1529                           ;main.c: 131:             if (key_pressed){
  1530  001B60  0101               	movlb	1	; () banked
  1531  001B62  5104               	movf	_key_pressed& (0+255),w,b	;volatile
  1532  001B64  1105               	iorwf	(_key_pressed+1)& (0+255),w,b	;volatile
  1533  001B66  B4D8               	btfsc	status,2,c
  1534  001B68  D799               	goto	l6020
  1535                           
  1536                           ; BSR set to: 1
  1537                           ;main.c: 132:                 key_pressed = 0;
  1538  001B6A  0E00               	movlw	0
  1539  001B6C  6F05               	movwf	(_key_pressed+1)& (0+255),b	;volatile
  1540  001B6E  0E00               	movlw	0
  1541  001B70  6F04               	movwf	_key_pressed& (0+255),b	;volatile
  1542                           
  1543                           ; BSR set to: 1
  1544                           ;main.c: 136:     clear();
  1545                           
  1546                           ;main.c: 133:                     break;
  1547  001B72  EC49  F026         	call	_clear	;wreg free
  1548                           
  1549                           ;main.c: 140:     I2C_Master_Start();
  1550  001B76  EC7F  F026         	call	_I2C_Master_Start	;wreg free
  1551                           
  1552                           ;main.c: 141:     I2C_Master_Write(0b11010000);
  1553  001B7A  0E00               	movlw	0
  1554  001B7C  6E1C               	movwf	I2C_Master_Write@byteToWrite+1,c
  1555  001B7E  0ED0               	movlw	208
  1556  001B80  6E1B               	movwf	I2C_Master_Write@byteToWrite,c
  1557  001B82  EC6E  F026         	call	_I2C_Master_Write	;wreg free
  1558                           
  1559                           ;main.c: 142:     I2C_Master_Write(0x00);
  1560  001B86  0E00               	movlw	0
  1561  001B88  6E1C               	movwf	I2C_Master_Write@byteToWrite+1,c
  1562  001B8A  0E00               	movlw	0
  1563  001B8C  6E1B               	movwf	I2C_Master_Write@byteToWrite,c
  1564  001B8E  EC6E  F026         	call	_I2C_Master_Write	;wreg free
  1565                           
  1566                           ;main.c: 143:     I2C_Master_Stop();
  1567  001B92  EC7B  F026         	call	_I2C_Master_Stop	;wreg free
  1568                           
  1569                           ;main.c: 145:     I2C_Master_Start();
  1570  001B96  EC7F  F026         	call	_I2C_Master_Start	;wreg free
  1571                           
  1572                           ;main.c: 146:     I2C_Master_Write(0b11010001);
  1573  001B9A  0E00               	movlw	0
  1574  001B9C  6E1C               	movwf	I2C_Master_Write@byteToWrite+1,c
  1575  001B9E  0ED1               	movlw	209
  1576  001BA0  6E1B               	movwf	I2C_Master_Write@byteToWrite,c
  1577  001BA2  EC6E  F026         	call	_I2C_Master_Write	;wreg free
  1578                           
  1579                           ;main.c: 147:     unsigned char begin_sec = I2C_Master_Read(0);
  1580  001BA6  0E00               	movlw	0
  1581  001BA8  EC37  F026         	call	_I2C_Master_Read
  1582  001BAC  0101               	movlb	1	; () banked
  1583  001BAE  6F6E               	movwf	main@begin_sec& (0+255),b
  1584                           
  1585                           ;main.c: 148:     unsigned char begin_min = I2C_Master_Read(1);
  1586  001BB0  0E01               	movlw	1
  1587  001BB2  EC37  F026         	call	_I2C_Master_Read
  1588  001BB6  0101               	movlb	1	; () banked
  1589  001BB8  6F67               	movwf	main@begin_min& (0+255),b
  1590                           
  1591                           ; BSR set to: 1
  1592                           ;main.c: 150:     I2C_Master_Stop();
  1593                           
  1594                           ; BSR set to: 1
  1595  001BBA  EC7B  F026         	call	_I2C_Master_Stop	;wreg free
  1596                           
  1597                           ;main.c: 153:     I2C_Master_Start();
  1598  001BBE  EC7F  F026         	call	_I2C_Master_Start	;wreg free
  1599                           
  1600                           ;main.c: 154:     I2C_Master_Write(0b00010000);
  1601  001BC2  0E00               	movlw	0
  1602  001BC4  6E1C               	movwf	I2C_Master_Write@byteToWrite+1,c
  1603  001BC6  0E10               	movlw	16
  1604  001BC8  6E1B               	movwf	I2C_Master_Write@byteToWrite,c
  1605  001BCA  EC6E  F026         	call	_I2C_Master_Write	;wreg free
  1606                           
  1607                           ;main.c: 155:     I2C_Master_Write('A');
  1608  001BCE  0E00               	movlw	0
  1609  001BD0  6E1C               	movwf	I2C_Master_Write@byteToWrite+1,c
  1610  001BD2  0E41               	movlw	65
  1611  001BD4  6E1B               	movwf	I2C_Master_Write@byteToWrite,c
  1612  001BD6  EC6E  F026         	call	_I2C_Master_Write	;wreg free
  1613                           
  1614                           ;main.c: 156:     I2C_Master_Stop();
  1615  001BDA  EC7B  F026         	call	_I2C_Master_Stop	;wreg free
  1616                           
  1617                           ;main.c: 159:     LATAbits.LATA2 = 1;
  1618  001BDE  8489               	bsf	3977,2,c	;volatile
  1619                           
  1620                           ;main.c: 160:     INTCONbits.RBIE = 1;
  1621  001BE0  86F2               	bsf	4082,3,c	;volatile
  1622  001BE2                     l6074:
  1623                           
  1624                           ;main.c: 164:         I2C_Master_Start();
  1625  001BE2  EC7F  F026         	call	_I2C_Master_Start	;wreg free
  1626                           
  1627                           ;main.c: 165:         I2C_Master_Write(0b00010000);
  1628  001BE6  0E00               	movlw	0
  1629  001BE8  6E1C               	movwf	I2C_Master_Write@byteToWrite+1,c
  1630  001BEA  0E10               	movlw	16
  1631  001BEC  6E1B               	movwf	I2C_Master_Write@byteToWrite,c
  1632  001BEE  EC6E  F026         	call	_I2C_Master_Write	;wreg free
  1633                           
  1634                           ;main.c: 166:         I2C_Master_Write(distance_travelled);
  1635  001BF2  C100  F011         	movff	_distance_travelled,___fltol@f1
  1636  001BF6  C101  F012         	movff	_distance_travelled+1,___fltol@f1+1
  1637  001BFA  C102  F013         	movff	_distance_travelled+2,___fltol@f1+2
  1638  001BFE  C103  F014         	movff	_distance_travelled+3,___fltol@f1+3
  1639  001C02  EC30  F021         	call	___fltol	;wreg free
  1640  001C06  C011  F01B         	movff	?___fltol,I2C_Master_Write@byteToWrite
  1641  001C0A  C012  F01C         	movff	?___fltol+1,I2C_Master_Write@byteToWrite+1
  1642  001C0E  EC6E  F026         	call	_I2C_Master_Write	;wreg free
  1643                           
  1644                           ;main.c: 167:         I2C_Master_Stop();
  1645  001C12  EC7B  F026         	call	_I2C_Master_Stop	;wreg free
  1646                           
  1647                           ;main.c: 170:         I2C_Master_Start();
  1648  001C16  EC7F  F026         	call	_I2C_Master_Start	;wreg free
  1649                           
  1650                           ;main.c: 171:         I2C_Master_Write(0b00010001);
  1651  001C1A  0E00               	movlw	0
  1652  001C1C  6E1C               	movwf	I2C_Master_Write@byteToWrite+1,c
  1653  001C1E  0E11               	movlw	17
  1654  001C20  6E1B               	movwf	I2C_Master_Write@byteToWrite,c
  1655  001C22  EC6E  F026         	call	_I2C_Master_Write	;wreg free
  1656                           
  1657                           ;main.c: 172:         data = I2C_Master_Read(1);
  1658  001C26  0E01               	movlw	1
  1659  001C28  EC37  F026         	call	_I2C_Master_Read
  1660  001C2C  0101               	movlb	1	; () banked
  1661  001C2E  6F72               	movwf	main@data& (0+255),b
  1662                           
  1663                           ; BSR set to: 1
  1664                           ;main.c: 173:         I2C_Master_Stop();
  1665  001C30  EC7B  F026         	call	_I2C_Master_Stop	;wreg free
  1666                           
  1667                           ;main.c: 176:         if (data == 'H'){
  1668  001C34  0E48               	movlw	72
  1669  001C36  0101               	movlb	1	; () banked
  1670  001C38  1972               	xorwf	main@data& (0+255),w,b
  1671  001C3A  A4D8               	btfss	status,2,c
  1672  001C3C  D00F               	goto	l6096
  1673                           
  1674                           ; BSR set to: 1
  1675                           ;main.c: 177:             LATAbits.LATA0 = 1;
  1676  001C3E  8089               	bsf	3977,0,c	;volatile
  1677                           
  1678                           ; BSR set to: 1
  1679                           ;main.c: 178:             _delay((unsigned long)((1000)*(40000000/4000.0)));
  1680  001C40  0E33               	movlw	51
  1681  001C42  0100               	movlb	0	; () banked
  1682  001C44  6FEB               	movwf	(??_main+1)& (0+255),b
  1683  001C46  0EBB               	movlw	187
  1684  001C48  6FEA               	movwf	??_main& (0+255),b
  1685  001C4A  0EDF               	movlw	223
  1686  001C4C                     u7907:
  1687  001C4C  2EE8               	decfsz	wreg,f,c
  1688  001C4E  D7FE               	bra	u7907
  1689  001C50  2FEA               	decfsz	??_main& (0+255),f,b
  1690  001C52  D7FC               	bra	u7907
  1691  001C54  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  1692  001C56  D7FA               	bra	u7907
  1693  001C58  D000               	nop2	
  1694                           
  1695                           ;main.c: 179:             LATAbits.LATA0 = 0;
  1696  001C5A  9089               	bcf	3977,0,c	;volatile
  1697  001C5C                     l6096:
  1698                           
  1699                           ;main.c: 181:         if (data == 'C'){
  1700  001C5C  0E43               	movlw	67
  1701  001C5E  0101               	movlb	1	; () banked
  1702  001C60  1972               	xorwf	main@data& (0+255),w,b
  1703  001C62  A4D8               	btfss	status,2,c
  1704  001C64  D00F               	goto	l6104
  1705                           
  1706                           ; BSR set to: 1
  1707                           ;main.c: 182:             LATAbits.LATA1 = 1;
  1708  001C66  8289               	bsf	3977,1,c	;volatile
  1709                           
  1710                           ; BSR set to: 1
  1711                           ;main.c: 183:             _delay((unsigned long)((1000)*(40000000/4000.0)));
  1712  001C68  0E33               	movlw	51
  1713  001C6A  0100               	movlb	0	; () banked
  1714  001C6C  6FEB               	movwf	(??_main+1)& (0+255),b
  1715  001C6E  0EBB               	movlw	187
  1716  001C70  6FEA               	movwf	??_main& (0+255),b
  1717  001C72  0EDF               	movlw	223
  1718  001C74                     u7917:
  1719  001C74  2EE8               	decfsz	wreg,f,c
  1720  001C76  D7FE               	bra	u7917
  1721  001C78  2FEA               	decfsz	??_main& (0+255),f,b
  1722  001C7A  D7FC               	bra	u7917
  1723  001C7C  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  1724  001C7E  D7FA               	bra	u7917
  1725  001C80  D000               	nop2	
  1726                           
  1727                           ;main.c: 184:             LATAbits.LATA1 = 1;
  1728  001C82  8289               	bsf	3977,1,c	;volatile
  1729  001C84                     l6104:
  1730                           
  1731                           ;main.c: 188:         if (data == 'A'){
  1732  001C84  0E41               	movlw	65
  1733  001C86  0101               	movlb	1	; () banked
  1734  001C88  1972               	xorwf	main@data& (0+255),w,b
  1735  001C8A  A4D8               	btfss	status,2,c
  1736  001C8C  D7AA               	goto	l6074
  1737                           
  1738                           ; BSR set to: 1
  1739                           ;main.c: 195:     I2C_Master_Start();
  1740  001C8E  EC7F  F026         	call	_I2C_Master_Start	;wreg free
  1741                           
  1742                           ;main.c: 196:     I2C_Master_Write(0b11010000);
  1743  001C92  0E00               	movlw	0
  1744  001C94  6E1C               	movwf	I2C_Master_Write@byteToWrite+1,c
  1745  001C96  0ED0               	movlw	208
  1746  001C98  6E1B               	movwf	I2C_Master_Write@byteToWrite,c
  1747  001C9A  EC6E  F026         	call	_I2C_Master_Write	;wreg free
  1748                           
  1749                           ;main.c: 197:     I2C_Master_Write(0x00);
  1750  001C9E  0E00               	movlw	0
  1751  001CA0  6E1C               	movwf	I2C_Master_Write@byteToWrite+1,c
  1752  001CA2  0E00               	movlw	0
  1753  001CA4  6E1B               	movwf	I2C_Master_Write@byteToWrite,c
  1754  001CA6  EC6E  F026         	call	_I2C_Master_Write	;wreg free
  1755                           
  1756                           ;main.c: 198:     I2C_Master_Stop();
  1757  001CAA  EC7B  F026         	call	_I2C_Master_Stop	;wreg free
  1758                           
  1759                           ;main.c: 200:     I2C_Master_Start();
  1760  001CAE  EC7F  F026         	call	_I2C_Master_Start	;wreg free
  1761                           
  1762                           ;main.c: 201:     I2C_Master_Write(0b11010001);
  1763  001CB2  0E00               	movlw	0
  1764  001CB4  6E1C               	movwf	I2C_Master_Write@byteToWrite+1,c
  1765  001CB6  0ED1               	movlw	209
  1766  001CB8  6E1B               	movwf	I2C_Master_Write@byteToWrite,c
  1767  001CBA  EC6E  F026         	call	_I2C_Master_Write	;wreg free
  1768                           
  1769                           ;main.c: 202:     unsigned char end_sec = I2C_Master_Read(0);
  1770  001CBE  0E00               	movlw	0
  1771  001CC0  EC37  F026         	call	_I2C_Master_Read
  1772  001CC4  0101               	movlb	1	; () banked
  1773  001CC6  6F68               	movwf	main@end_sec& (0+255),b
  1774                           
  1775                           ;main.c: 203:     unsigned char end_min = I2C_Master_Read(1);
  1776  001CC8  0E01               	movlw	1
  1777  001CCA  EC37  F026         	call	_I2C_Master_Read
  1778  001CCE  0101               	movlb	1	; () banked
  1779  001CD0  6F69               	movwf	main@end_min& (0+255),b
  1780                           
  1781                           ;main.c: 204:     I2C_Master_Stop();
  1782  001CD2  EC7B  F026         	call	_I2C_Master_Stop	;wreg free
  1783                           
  1784                           ;main.c: 206:     int op_time[2];;main.c: 207:     time_elapsed(begin_min, begin_sec, en
      +                          d_min, end_sec, op_time);
  1785  001CD6  C16E  F019         	movff	main@begin_sec,time_elapsed@begin_sec
  1786  001CDA  C169  F01A         	movff	main@end_min,time_elapsed@end_min
  1787  001CDE  C168  F01B         	movff	main@end_sec,time_elapsed@end_sec
  1788  001CE2  0E6A               	movlw	low main@op_time
  1789  001CE4  6E1C               	movwf	time_elapsed@array,c
  1790  001CE6  0E01               	movlw	high main@op_time
  1791  001CE8  6E1D               	movwf	time_elapsed@array+1,c
  1792  001CEA  0101               	movlb	1	; () banked
  1793  001CEC  5167               	movf	main@begin_min& (0+255),w,b
  1794  001CEE  ECF0  F01F         	call	_time_elapsed
  1795  001CF2                     l6112:
  1796                           
  1797                           ;main.c: 212:         I2C_Master_Start();
  1798  001CF2  EC7F  F026         	call	_I2C_Master_Start	;wreg free
  1799                           
  1800                           ;main.c: 213:         I2C_Master_Write(0b00010001);
  1801  001CF6  0E00               	movlw	0
  1802  001CF8  6E1C               	movwf	I2C_Master_Write@byteToWrite+1,c
  1803  001CFA  0E11               	movlw	17
  1804  001CFC  6E1B               	movwf	I2C_Master_Write@byteToWrite,c
  1805  001CFE  EC6E  F026         	call	_I2C_Master_Write	;wreg free
  1806                           
  1807                           ;main.c: 214:         data = I2C_Master_Read(1);
  1808  001D02  0E01               	movlw	1
  1809  001D04  EC37  F026         	call	_I2C_Master_Read
  1810  001D08  0101               	movlb	1	; () banked
  1811  001D0A  6F72               	movwf	main@data& (0+255),b
  1812                           
  1813                           ; BSR set to: 1
  1814                           ;main.c: 215:         I2C_Master_Stop();
  1815  001D0C  EC7B  F026         	call	_I2C_Master_Stop	;wreg free
  1816                           
  1817                           ;main.c: 216:         if (data_count == 0){
  1818  001D10  0101               	movlb	1	; () banked
  1819  001D12  510C               	movf	_data_count& (0+255),w,b
  1820  001D14  110D               	iorwf	(_data_count+1)& (0+255),w,b
  1821  001D16  A4D8               	btfss	status,2,c
  1822  001D18  D007               	goto	l6126
  1823                           
  1824                           ; BSR set to: 1
  1825                           ;main.c: 217:             total_cones = data;
  1826  001D1A  C172  F10A         	movff	main@data,_total_cones
  1827  001D1E  6B0B               	clrf	(_total_cones+1)& (0+255),b
  1828  001D20                     l6124:
  1829                           
  1830                           ;main.c: 218:             data_count++;
  1831  001D20  0101               	movlb	1	; () banked
  1832  001D22  4B0C               	infsnz	_data_count& (0+255),f,b
  1833  001D24  2B0D               	incf	(_data_count+1)& (0+255),f,b
  1834                           
  1835                           ;main.c: 219:         }
  1836  001D26  D7E5               	goto	l6112
  1837  001D28                     l6126:
  1838                           
  1839                           ; BSR set to: 1
  1840  001D28  050C               	decf	_data_count& (0+255),w,b
  1841  001D2A  110D               	iorwf	(_data_count+1)& (0+255),w,b
  1842  001D2C  A4D8               	btfss	status,2,c
  1843  001D2E  D004               	goto	l6132
  1844                           
  1845                           ; BSR set to: 1
  1846                           ;main.c: 221:             total_cracks = data;
  1847  001D30  C172  F108         	movff	main@data,_total_cracks
  1848  001D34  6B09               	clrf	(_total_cracks+1)& (0+255),b
  1849  001D36  D7F4               	goto	l6124
  1850  001D38                     l6132:
  1851                           
  1852                           ; BSR set to: 1
  1853  001D38  0E02               	movlw	2
  1854  001D3A  190C               	xorwf	_data_count& (0+255),w,b
  1855  001D3C  110D               	iorwf	(_data_count+1)& (0+255),w,b
  1856  001D3E  A4D8               	btfss	status,2,c
  1857  001D40  D004               	goto	l6138
  1858                           
  1859                           ; BSR set to: 1
  1860                           ;main.c: 225:             total_holes = data;
  1861  001D42  C172  F106         	movff	main@data,_total_holes
  1862  001D46  6B07               	clrf	(_total_holes+1)& (0+255),b
  1863  001D48  D7EB               	goto	l6124
  1864  001D4A                     l6138:
  1865                           
  1866                           ; BSR set to: 1
  1867  001D4A  BF0D               	btfsc	(_data_count+1)& (0+255),7,b
  1868  001D4C  D040               	goto	l6146
  1869  001D4E  510D               	movf	(_data_count+1)& (0+255),w,b
  1870  001D50  E104               	bnz	u7750
  1871  001D52  0E03               	movlw	3
  1872  001D54  5D0C               	subwf	_data_count& (0+255),w,b
  1873  001D56  A0D8               	btfss	status,0,c
  1874  001D58  D03A               	goto	l6146
  1875  001D5A                     u7750:
  1876                           
  1877                           ; BSR set to: 1
  1878  001D5A  0E03               	movlw	3
  1879  001D5C  2508               	addwf	_total_cracks& (0+255),w,b
  1880  001D5E  0100               	movlb	0	; () banked
  1881  001D60  6FEA               	movwf	??_main& (0+255),b
  1882  001D62  0E00               	movlw	0
  1883  001D64  0101               	movlb	1	; () banked
  1884  001D66  2109               	addwfc	(_total_cracks+1)& (0+255),w,b
  1885  001D68  0100               	movlb	0	; () banked
  1886  001D6A  6FEB               	movwf	(??_main+1)& (0+255),b
  1887  001D6C  51EA               	movf	??_main& (0+255),w,b
  1888  001D6E  0101               	movlb	1	; () banked
  1889  001D70  5D0C               	subwf	_data_count& (0+255),w,b
  1890  001D72  510D               	movf	(_data_count+1)& (0+255),w,b
  1891  001D74  0A80               	xorlw	128
  1892  001D76  0100               	movlb	0	; () banked
  1893  001D78  6FEC               	movwf	(??_main+2)& (0+255),b
  1894  001D7A  51EB               	movf	(??_main+1)& (0+255),w,b
  1895  001D7C  0A80               	xorlw	128
  1896  001D7E  59EC               	subwfb	(??_main+2)& (0+255),w,b
  1897  001D80  B0D8               	btfsc	status,0,c
  1898  001D82  D025               	goto	l6146
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;main.c: 229:             crack_dist[data_count-3] = data;
  1902  001D84  0101               	movlb	1	; () banked
  1903  001D86  5172               	movf	main@data& (0+255),w,b
  1904  001D88  6E11               	movwf	___xxtofl@val,c
  1905  001D8A  6A12               	clrf	___xxtofl@val+1,c
  1906  001D8C  6A13               	clrf	___xxtofl@val+2,c
  1907  001D8E  6A14               	clrf	___xxtofl@val+3,c
  1908  001D90  0E00               	movlw	0
  1909  001D92  EC30  F01E         	call	___xxtofl
  1910  001D96  0EF4               	movlw	244
  1911  001D98  0100               	movlb	0	; () banked
  1912  001D9A  6FEA               	movwf	??_main& (0+255),b
  1913  001D9C  0EFF               	movlw	255
  1914  001D9E  6FEB               	movwf	(??_main+1)& (0+255),b
  1915  001DA0  0E00               	movlw	low _crack_dist
  1916  001DA2  6FEC               	movwf	(??_main+2)& (0+255),b
  1917  001DA4  0E02               	movlw	high _crack_dist
  1918  001DA6  6FED               	movwf	(??_main+3)& (0+255),b
  1919  001DA8  51EA               	movf	??_main& (0+255),w,b
  1920  001DAA  27EC               	addwf	(??_main+2)& (0+255),f,b
  1921  001DAC  51EB               	movf	(??_main+1)& (0+255),w,b
  1922  001DAE  23ED               	addwfc	(??_main+3)& (0+255),f,b
  1923  001DB0  90D8               	bcf	status,0,c
  1924  001DB2  0101               	movlb	1	; () banked
  1925  001DB4  350C               	rlcf	_data_count& (0+255),w,b
  1926  001DB6  6ED9               	movwf	fsr2l,c
  1927  001DB8  350D               	rlcf	(_data_count+1)& (0+255),w,b
  1928  001DBA  6EDA               	movwf	fsr2h,c
  1929  001DBC  90D8               	bcf	status,0,c
  1930  001DBE  36D9               	rlcf	fsr2l,f,c
  1931  001DC0  36DA               	rlcf	fsr2h,f,c
  1932  001DC2  0100               	movlb	0	; () banked
  1933  001DC4  51EC               	movf	(??_main+2)& (0+255),w,b
  1934  001DC6  26D9               	addwf	fsr2l,f,c
  1935  001DC8  51ED               	movf	(??_main+3)& (0+255),w,b
  1936  001DCA  22DA               	addwfc	fsr2h,f,c
  1937  001DCC  D04F               	goto	L1
  1938  001DCE                     l6146:
  1939  001DCE  0E03               	movlw	3
  1940  001DD0  0101               	movlb	1	; () banked
  1941  001DD2  2508               	addwf	_total_cracks& (0+255),w,b
  1942  001DD4  0100               	movlb	0	; () banked
  1943  001DD6  6FEA               	movwf	??_main& (0+255),b
  1944  001DD8  0E00               	movlw	0
  1945  001DDA  0101               	movlb	1	; () banked
  1946  001DDC  2109               	addwfc	(_total_cracks+1)& (0+255),w,b
  1947  001DDE  0100               	movlb	0	; () banked
  1948  001DE0  6FEB               	movwf	(??_main+1)& (0+255),b
  1949  001DE2  51EA               	movf	??_main& (0+255),w,b
  1950  001DE4  0101               	movlb	1	; () banked
  1951  001DE6  5D0C               	subwf	_data_count& (0+255),w,b
  1952  001DE8  510D               	movf	(_data_count+1)& (0+255),w,b
  1953  001DEA  0A80               	xorlw	128
  1954  001DEC  0100               	movlb	0	; () banked
  1955  001DEE  6FEC               	movwf	(??_main+2)& (0+255),b
  1956  001DF0  51EB               	movf	(??_main+1)& (0+255),w,b
  1957  001DF2  0A80               	xorlw	128
  1958  001DF4  59EC               	subwfb	(??_main+2)& (0+255),w,b
  1959  001DF6  A0D8               	btfss	status,0,c
  1960  001DF8  D042               	goto	l6154
  1961                           
  1962                           ; BSR set to: 0
  1963  001DFA  0101               	movlb	1	; () banked
  1964  001DFC  5106               	movf	_total_holes& (0+255),w,b
  1965  001DFE  2508               	addwf	_total_cracks& (0+255),w,b
  1966  001E00  0100               	movlb	0	; () banked
  1967  001E02  6FEA               	movwf	??_main& (0+255),b
  1968  001E04  0101               	movlb	1	; () banked
  1969  001E06  5107               	movf	(_total_holes+1)& (0+255),w,b
  1970  001E08  2109               	addwfc	(_total_cracks+1)& (0+255),w,b
  1971  001E0A  0100               	movlb	0	; () banked
  1972  001E0C  6FEB               	movwf	(??_main+1)& (0+255),b
  1973  001E0E  0E03               	movlw	3
  1974  001E10  27EA               	addwf	??_main& (0+255),f,b
  1975  001E12  0E00               	movlw	0
  1976  001E14  23EB               	addwfc	(??_main+1)& (0+255),f,b
  1977  001E16  51EA               	movf	??_main& (0+255),w,b
  1978  001E18  0101               	movlb	1	; () banked
  1979  001E1A  5D0C               	subwf	_data_count& (0+255),w,b
  1980  001E1C  510D               	movf	(_data_count+1)& (0+255),w,b
  1981  001E1E  0A80               	xorlw	128
  1982  001E20  0100               	movlb	0	; () banked
  1983  001E22  6FEC               	movwf	(??_main+2)& (0+255),b
  1984  001E24  51EB               	movf	(??_main+1)& (0+255),w,b
  1985  001E26  0A80               	xorlw	128
  1986  001E28  59EC               	subwfb	(??_main+2)& (0+255),w,b
  1987  001E2A  B0D8               	btfsc	status,0,c
  1988  001E2C  D028               	goto	l6154
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;main.c: 233:             hole_dist[data_count-(3+total_cracks)] = data;
  1992  001E2E  0101               	movlb	1	; () banked
  1993  001E30  5172               	movf	main@data& (0+255),w,b
  1994  001E32  6E11               	movwf	___xxtofl@val,c
  1995  001E34  6A12               	clrf	___xxtofl@val+1,c
  1996  001E36  6A13               	clrf	___xxtofl@val+2,c
  1997  001E38  6A14               	clrf	___xxtofl@val+3,c
  1998  001E3A  0E00               	movlw	0
  1999  001E3C  EC30  F01E         	call	___xxtofl
  2000  001E40  0101               	movlb	1	; () banked
  2001  001E42  5108               	movf	_total_cracks& (0+255),w,b
  2002  001E44  5D0C               	subwf	_data_count& (0+255),w,b
  2003  001E46  0100               	movlb	0	; () banked
  2004  001E48  6FEA               	movwf	??_main& (0+255),b
  2005  001E4A  0101               	movlb	1	; () banked
  2006  001E4C  5109               	movf	(_total_cracks+1)& (0+255),w,b
  2007  001E4E  590D               	subwfb	(_data_count+1)& (0+255),w,b
  2008  001E50  0100               	movlb	0	; () banked
  2009  001E52  6FEB               	movwf	(??_main+1)& (0+255),b
  2010  001E54  90D8               	bcf	status,0,c
  2011  001E56  37EA               	rlcf	??_main& (0+255),f,b
  2012  001E58  37EB               	rlcf	(??_main+1)& (0+255),f,b
  2013  001E5A  90D8               	bcf	status,0,c
  2014  001E5C  37EA               	rlcf	??_main& (0+255),f,b
  2015  001E5E  37EB               	rlcf	(??_main+1)& (0+255),f,b
  2016  001E60  0EF4               	movlw	low (_hole_dist+65524)
  2017  001E62  25EA               	addwf	??_main& (0+255),w,b
  2018  001E64  6ED9               	movwf	fsr2l,c
  2019  001E66  0E02               	movlw	high (_hole_dist+65524)
  2020  001E68  21EB               	addwfc	(??_main+1)& (0+255),w,b
  2021  001E6A  6EDA               	movwf	fsr2h,c
  2022  001E6C                     L1:
  2023  001E6C  C011  FFDE         	movff	?___xxtofl,postinc2
  2024  001E70  C012  FFDE         	movff	?___xxtofl+1,postinc2
  2025  001E74  C013  FFDE         	movff	?___xxtofl+2,postinc2
  2026  001E78  C014  FFDE         	movff	?___xxtofl+3,postinc2
  2027  001E7C  D751               	goto	l6124
  2028  001E7E                     l6154:
  2029                           
  2030                           ; BSR set to: 0
  2031  001E7E  0101               	movlb	1	; () banked
  2032  001E80  5106               	movf	_total_holes& (0+255),w,b
  2033  001E82  2508               	addwf	_total_cracks& (0+255),w,b
  2034  001E84  0100               	movlb	0	; () banked
  2035  001E86  6FEA               	movwf	??_main& (0+255),b
  2036  001E88  0101               	movlb	1	; () banked
  2037  001E8A  5107               	movf	(_total_holes+1)& (0+255),w,b
  2038  001E8C  2109               	addwfc	(_total_cracks+1)& (0+255),w,b
  2039  001E8E  0100               	movlb	0	; () banked
  2040  001E90  6FEB               	movwf	(??_main+1)& (0+255),b
  2041  001E92  0E03               	movlw	3
  2042  001E94  27EA               	addwf	??_main& (0+255),f,b
  2043  001E96  0E00               	movlw	0
  2044  001E98  23EB               	addwfc	(??_main+1)& (0+255),f,b
  2045  001E9A  51EA               	movf	??_main& (0+255),w,b
  2046  001E9C  0101               	movlb	1	; () banked
  2047  001E9E  5D0C               	subwf	_data_count& (0+255),w,b
  2048  001EA0  510D               	movf	(_data_count+1)& (0+255),w,b
  2049  001EA2  0A80               	xorlw	128
  2050  001EA4  0100               	movlb	0	; () banked
  2051  001EA6  6FEC               	movwf	(??_main+2)& (0+255),b
  2052  001EA8  51EB               	movf	(??_main+1)& (0+255),w,b
  2053  001EAA  0A80               	xorlw	128
  2054  001EAC  59EC               	subwfb	(??_main+2)& (0+255),w,b
  2055  001EAE  A0D8               	btfss	status,0,c
  2056  001EB0  D720               	goto	l6112
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;main.c: 242:     LATAbits.LATA2 = 0;
  2060                           
  2061                           ; BSR set to: 0
  2062  001EB2  9489               	bcf	3977,2,c	;volatile
  2063  001EB4                     l6158:
  2064                           
  2065                           ;main.c: 246:     clear();
  2066  001EB4  EC49  F026         	call	_clear	;wreg free
  2067                           
  2068                           ;main.c: 247:     printf("Operation");
  2069  001EB8  0E72               	movlw	low STR_3
  2070  001EBA  0100               	movlb	0	; () banked
  2071  001EBC  6FE2               	movwf	printf@fmt& (0+255),b
  2072  001EBE  0E10               	movlw	high STR_3
  2073  001EC0  6FE3               	movwf	(printf@fmt+1)& (0+255),b
  2074  001EC2  EC10  F026         	call	_printf	;wreg free
  2075                           
  2076                           ;main.c: 248:     line_2();
  2077  001EC6  EC73  F026         	call	_line_2	;wreg free
  2078                           
  2079                           ;main.c: 249:     printf("Complete");
  2080  001ECA  0E7C               	movlw	low STR_4
  2081  001ECC  0100               	movlb	0	; () banked
  2082  001ECE  6FE2               	movwf	printf@fmt& (0+255),b
  2083  001ED0  0E10               	movlw	high STR_4
  2084  001ED2  6FE3               	movwf	(printf@fmt+1)& (0+255),b
  2085  001ED4  EC10  F026         	call	_printf	;wreg free
  2086                           
  2087                           ;main.c: 250:     _delay((unsigned long)((2000)*(40000000/4000.0)));
  2088  001ED8  0E66               	movlw	102
  2089  001EDA  0100               	movlb	0	; () banked
  2090  001EDC  6FEB               	movwf	(??_main+1)& (0+255),b
  2091  001EDE  0E76               	movlw	118
  2092  001EE0  6FEA               	movwf	??_main& (0+255),b
  2093  001EE2  0EC1               	movlw	193
  2094  001EE4                     u7927:
  2095  001EE4  2EE8               	decfsz	wreg,f,c
  2096  001EE6  D7FE               	bra	u7927
  2097  001EE8  2FEA               	decfsz	??_main& (0+255),f,b
  2098  001EEA  D7FC               	bra	u7927
  2099  001EEC  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  2100  001EEE  D7FA               	bra	u7927
  2101                           
  2102                           ;main.c: 251:             if (key_pressed){
  2103  001EF0  0101               	movlb	1	; () banked
  2104  001EF2  5104               	movf	_key_pressed& (0+255),w,b	;volatile
  2105  001EF4  1105               	iorwf	(_key_pressed+1)& (0+255),w,b	;volatile
  2106  001EF6  B4D8               	btfsc	status,2,c
  2107  001EF8  D7DD               	goto	l6158
  2108                           
  2109                           ; BSR set to: 1
  2110                           ;main.c: 252:                key_pressed = 0;
  2111  001EFA  0E00               	movlw	0
  2112  001EFC  6F05               	movwf	(_key_pressed+1)& (0+255),b	;volatile
  2113  001EFE  0E00               	movlw	0
  2114  001F00  6F04               	movwf	_key_pressed& (0+255),b	;volatile
  2115  001F02                     l6170:
  2116                           
  2117                           ; BSR set to: 1
  2118                           ;main.c: 259:         clear();
  2119  001F02  EC49  F026         	call	_clear	;wreg free
  2120                           
  2121                           ;main.c: 260:            printf("Time: %02d:%02d", op_time[1],op_time[0]);
  2122  001F06  0E08               	movlw	low STR_5
  2123  001F08  0100               	movlb	0	; () banked
  2124  001F0A  6FE2               	movwf	printf@fmt& (0+255),b
  2125  001F0C  0E10               	movlw	high STR_5
  2126  001F0E  6FE3               	movwf	(printf@fmt+1)& (0+255),b
  2127  001F10  C16C  F0E4         	movff	main@op_time+2,?_printf+2
  2128  001F14  C16D  F0E5         	movff	main@op_time+3,?_printf+3
  2129  001F18  C16A  F0E6         	movff	main@op_time,?_printf+4
  2130  001F1C  C16B  F0E7         	movff	main@op_time+1,?_printf+5
  2131  001F20  EC10  F026         	call	_printf	;wreg free
  2132                           
  2133                           ;main.c: 261:            line_2();
  2134  001F24  EC73  F026         	call	_line_2	;wreg free
  2135                           
  2136                           ;main.c: 262:            printf("Cones: %d", total_cones);
  2137  001F28  0E68               	movlw	low STR_6
  2138  001F2A  0100               	movlb	0	; () banked
  2139  001F2C  6FE2               	movwf	printf@fmt& (0+255),b
  2140  001F2E  0E10               	movlw	high STR_6
  2141  001F30  6FE3               	movwf	(printf@fmt+1)& (0+255),b
  2142  001F32  C10A  F0E4         	movff	_total_cones,?_printf+2
  2143  001F36  C10B  F0E5         	movff	_total_cones+1,?_printf+3
  2144  001F3A  EC10  F026         	call	_printf	;wreg free
  2145                           
  2146                           ;main.c: 263:            if (key_pressed){
  2147  001F3E  0101               	movlb	1	; () banked
  2148  001F40  5104               	movf	_key_pressed& (0+255),w,b	;volatile
  2149  001F42  1105               	iorwf	(_key_pressed+1)& (0+255),w,b	;volatile
  2150  001F44  B4D8               	btfsc	status,2,c
  2151  001F46  D005               	goto	l6180
  2152  001F48                     u7810:
  2153                           
  2154                           ; BSR set to: 1
  2155                           ;main.c: 264:                key_pressed = 0;
  2156  001F48  0E00               	movlw	0
  2157  001F4A  6F05               	movwf	(_key_pressed+1)& (0+255),b	;volatile
  2158  001F4C  0E00               	movlw	0
  2159  001F4E  6F04               	movwf	_key_pressed& (0+255),b	;volatile
  2160                           
  2161                           ;main.c: 265:                break;
  2162  001F50  D5A5               	goto	l6020
  2163  001F52                     l6180:
  2164                           
  2165                           ; BSR set to: 1
  2166                           ;main.c: 267:            _delay((unsigned long)((2000)*(40000000/4000.0)));
  2167  001F52  0E66               	movlw	102
  2168  001F54  0100               	movlb	0	; () banked
  2169  001F56  6FEB               	movwf	(??_main+1)& (0+255),b
  2170  001F58  0E76               	movlw	118
  2171  001F5A  6FEA               	movwf	??_main& (0+255),b
  2172  001F5C  0EC1               	movlw	193
  2173  001F5E                     u7937:
  2174  001F5E  2EE8               	decfsz	wreg,f,c
  2175  001F60  D7FE               	bra	u7937
  2176  001F62  2FEA               	decfsz	??_main& (0+255),f,b
  2177  001F64  D7FC               	bra	u7937
  2178  001F66  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  2179  001F68  D7FA               	bra	u7937
  2180                           
  2181                           ;main.c: 268:            clear();
  2182  001F6A  EC49  F026         	call	_clear	;wreg free
  2183                           
  2184                           ;main.c: 269:            printf("Cracks: %d", total_cracks);
  2185  001F6E  0E53               	movlw	low STR_7
  2186  001F70  0100               	movlb	0	; () banked
  2187  001F72  6FE2               	movwf	printf@fmt& (0+255),b
  2188  001F74  0E10               	movlw	high STR_7
  2189  001F76  6FE3               	movwf	(printf@fmt+1)& (0+255),b
  2190  001F78  C108  F0E4         	movff	_total_cracks,?_printf+2
  2191  001F7C  C109  F0E5         	movff	_total_cracks+1,?_printf+3
  2192  001F80  EC10  F026         	call	_printf	;wreg free
  2193                           
  2194                           ;main.c: 270:            line_2();
  2195  001F84  EC73  F026         	call	_line_2	;wreg free
  2196                           
  2197                           ;main.c: 271:            printf("Holes: %d", total_holes);
  2198  001F88  0E5E               	movlw	low STR_8
  2199  001F8A  0100               	movlb	0	; () banked
  2200  001F8C  6FE2               	movwf	printf@fmt& (0+255),b
  2201  001F8E  0E10               	movlw	high STR_8
  2202  001F90  6FE3               	movwf	(printf@fmt+1)& (0+255),b
  2203  001F92  C106  F0E4         	movff	_total_holes,?_printf+2
  2204  001F96  C107  F0E5         	movff	_total_holes+1,?_printf+3
  2205  001F9A  EC10  F026         	call	_printf	;wreg free
  2206                           
  2207                           ;main.c: 272:            if (key_pressed){
  2208  001F9E  0101               	movlb	1	; () banked
  2209  001FA0  5104               	movf	_key_pressed& (0+255),w,b	;volatile
  2210  001FA2  1105               	iorwf	(_key_pressed+1)& (0+255),w,b	;volatile
  2211  001FA4  A4D8               	btfss	status,2,c
  2212  001FA6  D7D0               	goto	u7810
  2213                           
  2214                           ; BSR set to: 1
  2215                           ;main.c: 276:            _delay((unsigned long)((2000)*(40000000/4000.0)));
  2216  001FA8  0E66               	movlw	102
  2217  001FAA  0100               	movlb	0	; () banked
  2218  001FAC  6FEB               	movwf	(??_main+1)& (0+255),b
  2219  001FAE  0E76               	movlw	118
  2220  001FB0  6FEA               	movwf	??_main& (0+255),b
  2221  001FB2  0EC1               	movlw	193
  2222  001FB4                     u7947:
  2223  001FB4  2EE8               	decfsz	wreg,f,c
  2224  001FB6  D7FE               	bra	u7947
  2225  001FB8  2FEA               	decfsz	??_main& (0+255),f,b
  2226  001FBA  D7FC               	bra	u7947
  2227  001FBC  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  2228  001FBE  D7FA               	bra	u7947
  2229                           
  2230                           ;main.c: 277:            for (i=0;i<total_cracks; i+=2){
  2231  001FC0  0E00               	movlw	0
  2232  001FC2  0101               	movlb	1	; () banked
  2233  001FC4  6F74               	movwf	(main@i+1)& (0+255),b
  2234  001FC6  0E00               	movlw	0
  2235  001FC8  6F73               	movwf	main@i& (0+255),b
  2236  001FCA  D077               	goto	l6212
  2237  001FCC                     l6198:
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;main.c: 278:                clear();
  2241  001FCC  EC49  F026         	call	_clear	;wreg free
  2242                           
  2243                           ;main.c: 279:                printf("Crack %d: %fcm",i,crack_dist[i]);
  2244  001FD0  0E18               	movlw	low STR_9
  2245  001FD2  0100               	movlb	0	; () banked
  2246  001FD4  6FE2               	movwf	printf@fmt& (0+255),b
  2247  001FD6  0E10               	movlw	high STR_9
  2248  001FD8  6FE3               	movwf	(printf@fmt+1)& (0+255),b
  2249  001FDA  C173  F0E4         	movff	main@i,?_printf+2
  2250  001FDE  C174  F0E5         	movff	main@i+1,?_printf+3
  2251  001FE2  0E00               	movlw	low _crack_dist
  2252  001FE4  6FEA               	movwf	??_main& (0+255),b
  2253  001FE6  0E02               	movlw	high _crack_dist
  2254  001FE8  6FEB               	movwf	(??_main+1)& (0+255),b
  2255  001FEA  90D8               	bcf	status,0,c
  2256  001FEC  0101               	movlb	1	; () banked
  2257  001FEE  3573               	rlcf	main@i& (0+255),w,b
  2258  001FF0  6ED9               	movwf	fsr2l,c
  2259  001FF2  3574               	rlcf	(main@i+1)& (0+255),w,b
  2260  001FF4  6EDA               	movwf	fsr2h,c
  2261  001FF6  90D8               	bcf	status,0,c
  2262  001FF8  36D9               	rlcf	fsr2l,f,c
  2263  001FFA  36DA               	rlcf	fsr2h,f,c
  2264  001FFC  0100               	movlb	0	; () banked
  2265  001FFE  51EA               	movf	??_main& (0+255),w,b
  2266  002000  26D9               	addwf	fsr2l,f,c
  2267  002002  51EB               	movf	(??_main+1)& (0+255),w,b
  2268  002004  22DA               	addwfc	fsr2h,f,c
  2269  002006  CFDE F0E6          	movff	postinc2,?_printf+4
  2270  00200A  CFDE F0E7          	movff	postinc2,?_printf+5
  2271  00200E  CFDE F0E8          	movff	postinc2,?_printf+6
  2272  002012  CFDE F0E9          	movff	postinc2,?_printf+7
  2273  002016  EC10  F026         	call	_printf	;wreg free
  2274                           
  2275                           ;main.c: 280:                line_2();
  2276  00201A  EC73  F026         	call	_line_2	;wreg free
  2277                           
  2278                           ;main.c: 281:                printf("Crack %d: %fcm",i+1,crack_dist[i+1]);
  2279  00201E  0E18               	movlw	low STR_9
  2280  002020  0100               	movlb	0	; () banked
  2281  002022  6FE2               	movwf	printf@fmt& (0+255),b
  2282  002024  0E10               	movlw	high STR_9
  2283  002026  6FE3               	movwf	(printf@fmt+1)& (0+255),b
  2284  002028  0E01               	movlw	1
  2285  00202A  0101               	movlb	1	; () banked
  2286  00202C  2573               	addwf	main@i& (0+255),w,b
  2287  00202E  0100               	movlb	0	; () banked
  2288  002030  6FE4               	movwf	(?_printf+2)& (0+255),b
  2289  002032  0E00               	movlw	0
  2290  002034  0101               	movlb	1	; () banked
  2291  002036  2174               	addwfc	(main@i+1)& (0+255),w,b
  2292  002038  0100               	movlb	0	; () banked
  2293  00203A  6FE5               	movwf	(?_printf+3)& (0+255),b
  2294  00203C  0E00               	movlw	low _crack_dist
  2295  00203E  6FEA               	movwf	??_main& (0+255),b
  2296  002040  0E02               	movlw	high _crack_dist
  2297  002042  6FEB               	movwf	(??_main+1)& (0+255),b
  2298  002044  0E04               	movlw	4
  2299  002046  27EA               	addwf	??_main& (0+255),f,b
  2300  002048  0E00               	movlw	0
  2301  00204A  23EB               	addwfc	(??_main+1)& (0+255),f,b
  2302  00204C  90D8               	bcf	status,0,c
  2303  00204E  0101               	movlb	1	; () banked
  2304  002050  3573               	rlcf	main@i& (0+255),w,b
  2305  002052  6ED9               	movwf	fsr2l,c
  2306  002054  3574               	rlcf	(main@i+1)& (0+255),w,b
  2307  002056  6EDA               	movwf	fsr2h,c
  2308  002058  90D8               	bcf	status,0,c
  2309  00205A  36D9               	rlcf	fsr2l,f,c
  2310  00205C  36DA               	rlcf	fsr2h,f,c
  2311  00205E  0100               	movlb	0	; () banked
  2312  002060  51EA               	movf	??_main& (0+255),w,b
  2313  002062  26D9               	addwf	fsr2l,f,c
  2314  002064  51EB               	movf	(??_main+1)& (0+255),w,b
  2315  002066  22DA               	addwfc	fsr2h,f,c
  2316  002068  CFDE F0E6          	movff	postinc2,?_printf+4
  2317  00206C  CFDE F0E7          	movff	postinc2,?_printf+5
  2318  002070  CFDE F0E8          	movff	postinc2,?_printf+6
  2319  002074  CFDE F0E9          	movff	postinc2,?_printf+7
  2320  002078  EC10  F026         	call	_printf	;wreg free
  2321                           
  2322                           ;main.c: 282:                if (key_pressed){
  2323  00207C  0101               	movlb	1	; () banked
  2324  00207E  5104               	movf	_key_pressed& (0+255),w,b	;volatile
  2325  002080  1105               	iorwf	(_key_pressed+1)& (0+255),w,b	;volatile
  2326  002082  B4D8               	btfsc	status,2,c
  2327  002084  D009               	goto	l6208
  2328                           
  2329                           ; BSR set to: 1
  2330                           ;main.c: 283:                key_pressed = 0;
  2331  002086  0E00               	movlw	0
  2332  002088  6F05               	movwf	(_key_pressed+1)& (0+255),b	;volatile
  2333  00208A  0E00               	movlw	0
  2334  00208C  6F04               	movwf	_key_pressed& (0+255),b	;volatile
  2335                           
  2336                           ;main.c: 284:                break_while = 1;
  2337  00208E  0E00               	movlw	0
  2338  002090  6F70               	movwf	(main@break_while+1)& (0+255),b
  2339  002092  0E01               	movlw	1
  2340  002094  6F6F               	movwf	main@break_while& (0+255),b
  2341                           
  2342                           ;main.c: 285:                   break;
  2343  002096  D01E               	goto	u7840
  2344  002098                     l6208:
  2345                           
  2346                           ; BSR set to: 1
  2347                           ;main.c: 287:                _delay((unsigned long)((2000)*(40000000/4000.0)));
  2348  002098  0E66               	movlw	102
  2349  00209A  0100               	movlb	0	; () banked
  2350  00209C  6FEB               	movwf	(??_main+1)& (0+255),b
  2351  00209E  0E76               	movlw	118
  2352  0020A0  6FEA               	movwf	??_main& (0+255),b
  2353  0020A2  0EC1               	movlw	193
  2354  0020A4                     u7957:
  2355  0020A4  2EE8               	decfsz	wreg,f,c
  2356  0020A6  D7FE               	bra	u7957
  2357  0020A8  2FEA               	decfsz	??_main& (0+255),f,b
  2358  0020AA  D7FC               	bra	u7957
  2359  0020AC  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  2360  0020AE  D7FA               	bra	u7957
  2361                           
  2362                           ;main.c: 288:            }
  2363  0020B0  0E02               	movlw	2
  2364  0020B2  0101               	movlb	1	; () banked
  2365  0020B4  2773               	addwf	main@i& (0+255),f,b
  2366  0020B6  0E00               	movlw	0
  2367  0020B8  2374               	addwfc	(main@i+1)& (0+255),f,b
  2368  0020BA                     l6212:
  2369                           
  2370                           ; BSR set to: 1
  2371  0020BA  5108               	movf	_total_cracks& (0+255),w,b
  2372  0020BC  5D73               	subwf	main@i& (0+255),w,b
  2373  0020BE  5174               	movf	(main@i+1)& (0+255),w,b
  2374  0020C0  0A80               	xorlw	128
  2375  0020C2  0100               	movlb	0	; () banked
  2376  0020C4  6FEA               	movwf	??_main& (0+255),b
  2377  0020C6  0101               	movlb	1	; () banked
  2378  0020C8  5109               	movf	(_total_cracks+1)& (0+255),w,b
  2379  0020CA  0A80               	xorlw	128
  2380  0020CC  0100               	movlb	0	; () banked
  2381  0020CE  59EA               	subwfb	??_main& (0+255),w,b
  2382  0020D0  A0D8               	btfss	status,0,c
  2383  0020D2  D77C               	goto	l6198
  2384  0020D4                     u7840:
  2385                           
  2386                           ;main.c: 289:            if (break_while){
  2387  0020D4  0101               	movlb	1	; () banked
  2388  0020D6  516F               	movf	main@break_while& (0+255),w,b
  2389  0020D8  1170               	iorwf	(main@break_while+1)& (0+255),w,b
  2390  0020DA  B4D8               	btfsc	status,2,c
  2391  0020DC  D005               	goto	l6218
  2392  0020DE                     u7850:
  2393                           
  2394                           ; BSR set to: 1
  2395                           ;main.c: 290:                break_while = 0;
  2396  0020DE  0E00               	movlw	0
  2397  0020E0  6F70               	movwf	(main@break_while+1)& (0+255),b
  2398  0020E2  0E00               	movlw	0
  2399  0020E4  6F6F               	movwf	main@break_while& (0+255),b
  2400                           
  2401                           ;main.c: 291:                break;
  2402  0020E6  D4DA               	goto	l6020
  2403  0020E8                     l6218:
  2404                           
  2405                           ; BSR set to: 1
  2406                           ;main.c: 293:            for (i=0;i<total_holes; i+=2){
  2407  0020E8  0E00               	movlw	0
  2408  0020EA  6F74               	movwf	(main@i+1)& (0+255),b
  2409  0020EC  0E00               	movlw	0
  2410  0020EE  6F73               	movwf	main@i& (0+255),b
  2411  0020F0  D077               	goto	l6234
  2412  0020F2                     l6220:
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;main.c: 294:                clear();
  2416  0020F2  EC49  F026         	call	_clear	;wreg free
  2417                           
  2418                           ;main.c: 295:                printf("Hole %d: %fcm", i, hole_dist[i]);
  2419  0020F6  0E45               	movlw	low STR_11
  2420  0020F8  0100               	movlb	0	; () banked
  2421  0020FA  6FE2               	movwf	printf@fmt& (0+255),b
  2422  0020FC  0E10               	movlw	high STR_11
  2423  0020FE  6FE3               	movwf	(printf@fmt+1)& (0+255),b
  2424  002100  C173  F0E4         	movff	main@i,?_printf+2
  2425  002104  C174  F0E5         	movff	main@i+1,?_printf+3
  2426  002108  0E00               	movlw	low _hole_dist
  2427  00210A  6FEA               	movwf	??_main& (0+255),b
  2428  00210C  0E03               	movlw	high _hole_dist
  2429  00210E  6FEB               	movwf	(??_main+1)& (0+255),b
  2430  002110  90D8               	bcf	status,0,c
  2431  002112  0101               	movlb	1	; () banked
  2432  002114  3573               	rlcf	main@i& (0+255),w,b
  2433  002116  6ED9               	movwf	fsr2l,c
  2434  002118  3574               	rlcf	(main@i+1)& (0+255),w,b
  2435  00211A  6EDA               	movwf	fsr2h,c
  2436  00211C  90D8               	bcf	status,0,c
  2437  00211E  36D9               	rlcf	fsr2l,f,c
  2438  002120  36DA               	rlcf	fsr2h,f,c
  2439  002122  0100               	movlb	0	; () banked
  2440  002124  51EA               	movf	??_main& (0+255),w,b
  2441  002126  26D9               	addwf	fsr2l,f,c
  2442  002128  51EB               	movf	(??_main+1)& (0+255),w,b
  2443  00212A  22DA               	addwfc	fsr2h,f,c
  2444  00212C  CFDE F0E6          	movff	postinc2,?_printf+4
  2445  002130  CFDE F0E7          	movff	postinc2,?_printf+5
  2446  002134  CFDE F0E8          	movff	postinc2,?_printf+6
  2447  002138  CFDE F0E9          	movff	postinc2,?_printf+7
  2448  00213C  EC10  F026         	call	_printf	;wreg free
  2449                           
  2450                           ;main.c: 296:                line_2();;
  2451  002140  EC73  F026         	call	_line_2	;wreg free
  2452                           
  2453                           ;main.c: 297:                printf("Hole %d: %fcm", i+1, hole_dist[i+1]);
  2454  002144  0E45               	movlw	low STR_11
  2455  002146  0100               	movlb	0	; () banked
  2456  002148  6FE2               	movwf	printf@fmt& (0+255),b
  2457  00214A  0E10               	movlw	high STR_11
  2458  00214C  6FE3               	movwf	(printf@fmt+1)& (0+255),b
  2459  00214E  0E01               	movlw	1
  2460  002150  0101               	movlb	1	; () banked
  2461  002152  2573               	addwf	main@i& (0+255),w,b
  2462  002154  0100               	movlb	0	; () banked
  2463  002156  6FE4               	movwf	(?_printf+2)& (0+255),b
  2464  002158  0E00               	movlw	0
  2465  00215A  0101               	movlb	1	; () banked
  2466  00215C  2174               	addwfc	(main@i+1)& (0+255),w,b
  2467  00215E  0100               	movlb	0	; () banked
  2468  002160  6FE5               	movwf	(?_printf+3)& (0+255),b
  2469  002162  0E00               	movlw	low _hole_dist
  2470  002164  6FEA               	movwf	??_main& (0+255),b
  2471  002166  0E03               	movlw	high _hole_dist
  2472  002168  6FEB               	movwf	(??_main+1)& (0+255),b
  2473  00216A  0E04               	movlw	4
  2474  00216C  27EA               	addwf	??_main& (0+255),f,b
  2475  00216E  0E00               	movlw	0
  2476  002170  23EB               	addwfc	(??_main+1)& (0+255),f,b
  2477  002172  90D8               	bcf	status,0,c
  2478  002174  0101               	movlb	1	; () banked
  2479  002176  3573               	rlcf	main@i& (0+255),w,b
  2480  002178  6ED9               	movwf	fsr2l,c
  2481  00217A  3574               	rlcf	(main@i+1)& (0+255),w,b
  2482  00217C  6EDA               	movwf	fsr2h,c
  2483  00217E  90D8               	bcf	status,0,c
  2484  002180  36D9               	rlcf	fsr2l,f,c
  2485  002182  36DA               	rlcf	fsr2h,f,c
  2486  002184  0100               	movlb	0	; () banked
  2487  002186  51EA               	movf	??_main& (0+255),w,b
  2488  002188  26D9               	addwf	fsr2l,f,c
  2489  00218A  51EB               	movf	(??_main+1)& (0+255),w,b
  2490  00218C  22DA               	addwfc	fsr2h,f,c
  2491  00218E  CFDE F0E6          	movff	postinc2,?_printf+4
  2492  002192  CFDE F0E7          	movff	postinc2,?_printf+5
  2493  002196  CFDE F0E8          	movff	postinc2,?_printf+6
  2494  00219A  CFDE F0E9          	movff	postinc2,?_printf+7
  2495  00219E  EC10  F026         	call	_printf	;wreg free
  2496                           
  2497                           ;main.c: 298:                if (key_pressed){
  2498  0021A2  0101               	movlb	1	; () banked
  2499  0021A4  5104               	movf	_key_pressed& (0+255),w,b	;volatile
  2500  0021A6  1105               	iorwf	(_key_pressed+1)& (0+255),w,b	;volatile
  2501  0021A8  B4D8               	btfsc	status,2,c
  2502  0021AA  D009               	goto	l6230
  2503                           
  2504                           ; BSR set to: 1
  2505                           ;main.c: 299:                key_pressed = 0;
  2506  0021AC  0E00               	movlw	0
  2507  0021AE  6F05               	movwf	(_key_pressed+1)& (0+255),b	;volatile
  2508  0021B0  0E00               	movlw	0
  2509  0021B2  6F04               	movwf	_key_pressed& (0+255),b	;volatile
  2510                           
  2511                           ;main.c: 300:                break_while = 1;
  2512  0021B4  0E00               	movlw	0
  2513  0021B6  6F70               	movwf	(main@break_while+1)& (0+255),b
  2514  0021B8  0E01               	movlw	1
  2515  0021BA  6F6F               	movwf	main@break_while& (0+255),b
  2516                           
  2517                           ;main.c: 301:                   break;
  2518  0021BC  D01E               	goto	u7870
  2519  0021BE                     l6230:
  2520                           
  2521                           ; BSR set to: 1
  2522                           ;main.c: 303:                _delay((unsigned long)((2000)*(40000000/4000.0)));
  2523  0021BE  0E66               	movlw	102
  2524  0021C0  0100               	movlb	0	; () banked
  2525  0021C2  6FEB               	movwf	(??_main+1)& (0+255),b
  2526  0021C4  0E76               	movlw	118
  2527  0021C6  6FEA               	movwf	??_main& (0+255),b
  2528  0021C8  0EC1               	movlw	193
  2529  0021CA                     u7967:
  2530  0021CA  2EE8               	decfsz	wreg,f,c
  2531  0021CC  D7FE               	bra	u7967
  2532  0021CE  2FEA               	decfsz	??_main& (0+255),f,b
  2533  0021D0  D7FC               	bra	u7967
  2534  0021D2  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  2535  0021D4  D7FA               	bra	u7967
  2536                           
  2537                           ;main.c: 304:            }
  2538  0021D6  0E02               	movlw	2
  2539  0021D8  0101               	movlb	1	; () banked
  2540  0021DA  2773               	addwf	main@i& (0+255),f,b
  2541  0021DC  0E00               	movlw	0
  2542  0021DE  2374               	addwfc	(main@i+1)& (0+255),f,b
  2543  0021E0                     l6234:
  2544                           
  2545                           ; BSR set to: 1
  2546  0021E0  5106               	movf	_total_holes& (0+255),w,b
  2547  0021E2  5D73               	subwf	main@i& (0+255),w,b
  2548  0021E4  5174               	movf	(main@i+1)& (0+255),w,b
  2549  0021E6  0A80               	xorlw	128
  2550  0021E8  0100               	movlb	0	; () banked
  2551  0021EA  6FEA               	movwf	??_main& (0+255),b
  2552  0021EC  0101               	movlb	1	; () banked
  2553  0021EE  5107               	movf	(_total_holes+1)& (0+255),w,b
  2554  0021F0  0A80               	xorlw	128
  2555  0021F2  0100               	movlb	0	; () banked
  2556  0021F4  59EA               	subwfb	??_main& (0+255),w,b
  2557  0021F6  A0D8               	btfss	status,0,c
  2558  0021F8  D77C               	goto	l6220
  2559  0021FA                     u7870:
  2560                           
  2561                           ;main.c: 305:            if (break_while){
  2562  0021FA  0101               	movlb	1	; () banked
  2563  0021FC  516F               	movf	main@break_while& (0+255),w,b
  2564  0021FE  1170               	iorwf	(main@break_while+1)& (0+255),w,b
  2565  002200  A4D8               	btfss	status,2,c
  2566  002202  D76D               	goto	u7850
  2567  002204  D67E               	goto	l6170
  2568  002206                     __end_of_main:
  2569                           	opt callstack 0
  2570                           
  2571 ;; *************** function _time_elapsed *****************
  2572 ;; Defined at:
  2573 ;;		line 41 in file "timer.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;  begin_min       1    wreg     unsigned char 
  2576 ;;  begin_sec       1   24[COMRAM] unsigned char 
  2577 ;;  end_min         1   25[COMRAM] unsigned char 
  2578 ;;  end_sec         1   26[COMRAM] unsigned char 
  2579 ;;  array           2   27[COMRAM] PTR int 
  2580 ;;		 -> main@op_time(4), 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  begin_min       1   45[COMRAM] unsigned char 
  2583 ;;  total_s         2   46[COMRAM] int 
  2584 ;;  seconds         2   43[COMRAM] int 
  2585 ;;  minutes         2   41[COMRAM] int 
  2586 ;;  end_s           2   39[COMRAM] int 
  2587 ;;  begin_s         2   37[COMRAM] int 
  2588 ;;  e_sec_int       2   35[COMRAM] int 
  2589 ;;  e_min_int       2   33[COMRAM] int 
  2590 ;;  b_sec_int       2   31[COMRAM] int 
  2591 ;;  b_min_int       2   29[COMRAM] int 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  2   24[COMRAM] int 
  2594 ;; Registers used:
  2595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2601 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;Total ram usage:       24 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    3
  2608 ;; This function calls:
  2609 ;;		___awdiv
  2610 ;;		___awmod
  2611 ;;		___wmul
  2612 ;;		_atohtoi
  2613 ;; This function is called by:
  2614 ;;		_main
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text1
  2619  003FE0                     __ptext1:
  2620                           	opt callstack 0
  2621  003FE0                     _time_elapsed:
  2622                           	opt callstack 27
  2623                           
  2624                           ; BSR set to: 1
  2625                           ;incstack = 0
  2626                           ;time_elapsed@begin_min stored from wreg
  2627  003FE0  6E2E               	movwf	time_elapsed@begin_min,c
  2628                           
  2629                           ;timer.c: 42:     int b_min_int = atohtoi(begin_min);
  2630  003FE2  502E               	movf	time_elapsed@begin_min,w,c
  2631  003FE4  EC62  F01F         	call	_atohtoi
  2632  003FE8  C011  F01E         	movff	?_atohtoi,time_elapsed@b_min_int
  2633  003FEC  C012  F01F         	movff	?_atohtoi+1,time_elapsed@b_min_int+1
  2634                           
  2635                           ;timer.c: 43:     int b_sec_int = atohtoi(begin_sec);
  2636  003FF0  5019               	movf	time_elapsed@begin_sec,w,c
  2637  003FF2  EC62  F01F         	call	_atohtoi
  2638  003FF6  C011  F020         	movff	?_atohtoi,time_elapsed@b_sec_int
  2639  003FFA  C012  F021         	movff	?_atohtoi+1,time_elapsed@b_sec_int+1
  2640                           
  2641                           ;timer.c: 44:     int e_min_int = atohtoi(end_min);
  2642  003FFE  501A               	movf	time_elapsed@end_min,w,c
  2643  004000  EC62  F01F         	call	_atohtoi
  2644  004004  C011  F022         	movff	?_atohtoi,time_elapsed@e_min_int
  2645  004008  C012  F023         	movff	?_atohtoi+1,time_elapsed@e_min_int+1
  2646                           
  2647                           ;timer.c: 45:     int e_sec_int = atohtoi(end_sec);
  2648  00400C  501B               	movf	time_elapsed@end_sec,w,c
  2649  00400E  EC62  F01F         	call	_atohtoi
  2650  004012  C011  F024         	movff	?_atohtoi,time_elapsed@e_sec_int
  2651  004016  C012  F025         	movff	?_atohtoi+1,time_elapsed@e_sec_int+1
  2652                           
  2653                           ;timer.c: 46:     int begin_s = b_min_int*60+b_sec_int;
  2654  00401A  C01E  F011         	movff	time_elapsed@b_min_int,___wmul@multiplier
  2655  00401E  C01F  F012         	movff	time_elapsed@b_min_int+1,___wmul@multiplier+1
  2656  004022  0E00               	movlw	0
  2657  004024  6E14               	movwf	___wmul@multiplicand+1,c
  2658  004026  0E3C               	movlw	60
  2659  004028  6E13               	movwf	___wmul@multiplicand,c
  2660  00402A  EC24  F026         	call	___wmul	;wreg free
  2661  00402E  5020               	movf	time_elapsed@b_sec_int,w,c
  2662  004030  2411               	addwf	?___wmul,w,c
  2663  004032  6E26               	movwf	time_elapsed@begin_s,c
  2664  004034  5021               	movf	time_elapsed@b_sec_int+1,w,c
  2665  004036  2012               	addwfc	?___wmul+1,w,c
  2666  004038  6E27               	movwf	time_elapsed@begin_s+1,c
  2667                           
  2668                           ;timer.c: 47:     int end_s = e_min_int*60+e_sec_int;
  2669  00403A  C022  F011         	movff	time_elapsed@e_min_int,___wmul@multiplier
  2670  00403E  C023  F012         	movff	time_elapsed@e_min_int+1,___wmul@multiplier+1
  2671  004042  0E00               	movlw	0
  2672  004044  6E14               	movwf	___wmul@multiplicand+1,c
  2673  004046  0E3C               	movlw	60
  2674  004048  6E13               	movwf	___wmul@multiplicand,c
  2675  00404A  EC24  F026         	call	___wmul	;wreg free
  2676  00404E  5024               	movf	time_elapsed@e_sec_int,w,c
  2677  004050  2411               	addwf	?___wmul,w,c
  2678  004052  6E28               	movwf	time_elapsed@end_s,c
  2679  004054  5025               	movf	time_elapsed@e_sec_int+1,w,c
  2680  004056  2012               	addwfc	?___wmul+1,w,c
  2681  004058  6E29               	movwf	time_elapsed@end_s+1,c
  2682                           
  2683                           ;timer.c: 48:     int total_s = end_s - begin_s;
  2684  00405A  5026               	movf	time_elapsed@begin_s,w,c
  2685  00405C  5C28               	subwf	time_elapsed@end_s,w,c
  2686  00405E  6E2F               	movwf	time_elapsed@total_s,c
  2687  004060  5027               	movf	time_elapsed@begin_s+1,w,c
  2688  004062  5829               	subwfb	time_elapsed@end_s+1,w,c
  2689  004064  6E30               	movwf	time_elapsed@total_s+1,c
  2690                           
  2691                           ;timer.c: 49:     int minutes = total_s/60;
  2692  004066  C02F  F011         	movff	time_elapsed@total_s,___awdiv@dividend
  2693  00406A  C030  F012         	movff	time_elapsed@total_s+1,___awdiv@dividend+1
  2694  00406E  0E00               	movlw	0
  2695  004070  6E14               	movwf	___awdiv@divisor+1,c
  2696  004072  0E3C               	movlw	60
  2697  004074  6E13               	movwf	___awdiv@divisor,c
  2698  004076  EC0A  F023         	call	___awdiv	;wreg free
  2699  00407A  C011  F02A         	movff	?___awdiv,time_elapsed@minutes
  2700  00407E  C012  F02B         	movff	?___awdiv+1,time_elapsed@minutes+1
  2701                           
  2702                           ;timer.c: 50:     int seconds = total_s%60;
  2703  004082  C02F  F011         	movff	time_elapsed@total_s,___awmod@dividend
  2704  004086  C030  F012         	movff	time_elapsed@total_s+1,___awmod@dividend+1
  2705  00408A  0E00               	movlw	0
  2706  00408C  6E14               	movwf	___awmod@divisor+1,c
  2707  00408E  0E3C               	movlw	60
  2708  004090  6E13               	movwf	___awmod@divisor,c
  2709  004092  EC8D  F023         	call	___awmod	;wreg free
  2710  004096  C011  F02C         	movff	?___awmod,time_elapsed@seconds
  2711  00409A  C012  F02D         	movff	?___awmod+1,time_elapsed@seconds+1
  2712                           
  2713                           ;timer.c: 51:     array[0] = seconds;
  2714  00409E  C01C  FFD9         	movff	time_elapsed@array,fsr2l
  2715  0040A2  C01D  FFDA         	movff	time_elapsed@array+1,fsr2h
  2716  0040A6  C02C  FFDE         	movff	time_elapsed@seconds,postinc2
  2717  0040AA  C02D  FFDD         	movff	time_elapsed@seconds+1,postdec2
  2718                           
  2719                           ;timer.c: 52:     array[1] = minutes;
  2720  0040AE  EE20 F002          	lfsr	2,2
  2721  0040B2  501C               	movf	time_elapsed@array,w,c
  2722  0040B4  26D9               	addwf	fsr2l,f,c
  2723  0040B6  501D               	movf	time_elapsed@array+1,w,c
  2724  0040B8  22DA               	addwfc	fsr2h,f,c
  2725  0040BA  C02A  FFDE         	movff	time_elapsed@minutes,postinc2
  2726  0040BE  C02B  FFDD         	movff	time_elapsed@minutes+1,postdec2
  2727  0040C2  0012               	return		;funcret
  2728  0040C4                     __end_of_time_elapsed:
  2729                           	opt callstack 0
  2730                           
  2731 ;; *************** function _atohtoi *****************
  2732 ;; Defined at:
  2733 ;;		line 12 in file "timer.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  ascii           1    wreg     unsigned char 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  ascii           1   18[COMRAM] unsigned char 
  2738 ;;  dec_ascii       2   19[COMRAM] int 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  2   16[COMRAM] int 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2749 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;Total ram usage:        5 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    2
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_time_elapsed
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text2
  2763  003EC4                     __ptext2:
  2764                           	opt callstack 0
  2765  003EC4                     _atohtoi:
  2766                           	opt callstack 27
  2767                           
  2768                           ;incstack = 0
  2769                           ;atohtoi@ascii stored from wreg
  2770  003EC4  6E13               	movwf	atohtoi@ascii,c
  2771                           
  2772                           ;timer.c: 13:    int dec_ascii = (int)ascii;
  2773  003EC6  C013  F014         	movff	atohtoi@ascii,atohtoi@dec_ascii
  2774  003ECA  6A15               	clrf	atohtoi@dec_ascii+1,c
  2775                           
  2776                           ;timer.c: 14:    if (dec_ascii<10 && dec_ascii > 0){
  2777  003ECC  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2778  003ECE  D006               	goto	u6700
  2779  003ED0  5015               	movf	atohtoi@dec_ascii+1,w,c
  2780  003ED2  E110               	bnz	l5228
  2781  003ED4  0E0A               	movlw	10
  2782  003ED6  5C14               	subwf	atohtoi@dec_ascii,w,c
  2783  003ED8  B0D8               	btfsc	status,0,c
  2784  003EDA  D00C               	goto	l5228
  2785  003EDC                     u6700:
  2786  003EDC  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2787  003EDE  D00A               	goto	l5228
  2788  003EE0  5015               	movf	atohtoi@dec_ascii+1,w,c
  2789  003EE2  E103               	bnz	u6710
  2790  003EE4  0414               	decf	atohtoi@dec_ascii,w,c
  2791  003EE6  A0D8               	btfss	status,0,c
  2792  003EE8  D005               	goto	l5228
  2793  003EEA                     u6710:
  2794                           
  2795                           ;timer.c: 15:      return dec_ascii;
  2796  003EEA  C014  F011         	movff	atohtoi@dec_ascii,?_atohtoi
  2797  003EEE  C015  F012         	movff	atohtoi@dec_ascii+1,?_atohtoi+1
  2798  003EF2  0012               	return	
  2799  003EF4                     l5228:
  2800  003EF4  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2801  003EF6  D015               	goto	l5238
  2802  003EF8  5015               	movf	atohtoi@dec_ascii+1,w,c
  2803  003EFA  E104               	bnz	u6720
  2804  003EFC  0E10               	movlw	16
  2805  003EFE  5C14               	subwf	atohtoi@dec_ascii,w,c
  2806  003F00  A0D8               	btfss	status,0,c
  2807  003F02  D00F               	goto	l5238
  2808  003F04                     u6720:
  2809  003F04  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2810  003F06  D006               	goto	u6730
  2811  003F08  5015               	movf	atohtoi@dec_ascii+1,w,c
  2812  003F0A  E10B               	bnz	l5238
  2813  003F0C  0E1A               	movlw	26
  2814  003F0E  5C14               	subwf	atohtoi@dec_ascii,w,c
  2815  003F10  B0D8               	btfsc	status,0,c
  2816  003F12  D007               	goto	l5238
  2817  003F14                     u6730:
  2818                           
  2819                           ;timer.c: 18:      return dec_ascii-6;
  2820  003F14  0EFA               	movlw	250
  2821  003F16  2414               	addwf	atohtoi@dec_ascii,w,c
  2822  003F18  6E11               	movwf	?_atohtoi,c
  2823  003F1A  0EFF               	movlw	255
  2824  003F1C  2015               	addwfc	atohtoi@dec_ascii+1,w,c
  2825  003F1E  6E12               	movwf	?_atohtoi+1,c
  2826  003F20  0012               	return	
  2827  003F22                     l5238:
  2828  003F22  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2829  003F24  D015               	goto	l5248
  2830  003F26  5015               	movf	atohtoi@dec_ascii+1,w,c
  2831  003F28  E104               	bnz	u6740
  2832  003F2A  0E20               	movlw	32
  2833  003F2C  5C14               	subwf	atohtoi@dec_ascii,w,c
  2834  003F2E  A0D8               	btfss	status,0,c
  2835  003F30  D00F               	goto	l5248
  2836  003F32                     u6740:
  2837  003F32  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2838  003F34  D006               	goto	u6750
  2839  003F36  5015               	movf	atohtoi@dec_ascii+1,w,c
  2840  003F38  E10B               	bnz	l5248
  2841  003F3A  0E2A               	movlw	42
  2842  003F3C  5C14               	subwf	atohtoi@dec_ascii,w,c
  2843  003F3E  B0D8               	btfsc	status,0,c
  2844  003F40  D007               	goto	l5248
  2845  003F42                     u6750:
  2846                           
  2847                           ;timer.c: 21:      return dec_ascii-12;
  2848  003F42  0EF4               	movlw	244
  2849  003F44  2414               	addwf	atohtoi@dec_ascii,w,c
  2850  003F46  6E11               	movwf	?_atohtoi,c
  2851  003F48  0EFF               	movlw	255
  2852  003F4A  2015               	addwfc	atohtoi@dec_ascii+1,w,c
  2853  003F4C  6E12               	movwf	?_atohtoi+1,c
  2854  003F4E  0012               	return	
  2855  003F50                     l5248:
  2856  003F50  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2857  003F52  D015               	goto	l5258
  2858  003F54  5015               	movf	atohtoi@dec_ascii+1,w,c
  2859  003F56  E104               	bnz	u6760
  2860  003F58  0E30               	movlw	48
  2861  003F5A  5C14               	subwf	atohtoi@dec_ascii,w,c
  2862  003F5C  A0D8               	btfss	status,0,c
  2863  003F5E  D00F               	goto	l5258
  2864  003F60                     u6760:
  2865  003F60  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2866  003F62  D006               	goto	u6770
  2867  003F64  5015               	movf	atohtoi@dec_ascii+1,w,c
  2868  003F66  E10B               	bnz	l5258
  2869  003F68  0E3A               	movlw	58
  2870  003F6A  5C14               	subwf	atohtoi@dec_ascii,w,c
  2871  003F6C  B0D8               	btfsc	status,0,c
  2872  003F6E  D007               	goto	l5258
  2873  003F70                     u6770:
  2874                           
  2875                           ;timer.c: 24:      return dec_ascii-18;
  2876  003F70  0EEE               	movlw	238
  2877  003F72  2414               	addwf	atohtoi@dec_ascii,w,c
  2878  003F74  6E11               	movwf	?_atohtoi,c
  2879  003F76  0EFF               	movlw	255
  2880  003F78  2015               	addwfc	atohtoi@dec_ascii+1,w,c
  2881  003F7A  6E12               	movwf	?_atohtoi+1,c
  2882  003F7C  0012               	return	
  2883  003F7E                     l5258:
  2884  003F7E  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2885  003F80  D015               	goto	l206
  2886  003F82  5015               	movf	atohtoi@dec_ascii+1,w,c
  2887  003F84  E104               	bnz	u6780
  2888  003F86  0E40               	movlw	64
  2889  003F88  5C14               	subwf	atohtoi@dec_ascii,w,c
  2890  003F8A  A0D8               	btfss	status,0,c
  2891  003F8C  D00F               	goto	l206
  2892  003F8E                     u6780:
  2893  003F8E  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2894  003F90  D006               	goto	u6790
  2895  003F92  5015               	movf	atohtoi@dec_ascii+1,w,c
  2896  003F94  E10B               	bnz	l206
  2897  003F96  0E4A               	movlw	74
  2898  003F98  5C14               	subwf	atohtoi@dec_ascii,w,c
  2899  003F9A  B0D8               	btfsc	status,0,c
  2900  003F9C  D007               	goto	l206
  2901  003F9E                     u6790:
  2902                           
  2903                           ;timer.c: 27:      return dec_ascii-24;
  2904  003F9E  0EE8               	movlw	232
  2905  003FA0  2414               	addwf	atohtoi@dec_ascii,w,c
  2906  003FA2  6E11               	movwf	?_atohtoi,c
  2907  003FA4  0EFF               	movlw	255
  2908  003FA6  2015               	addwfc	atohtoi@dec_ascii+1,w,c
  2909  003FA8  6E12               	movwf	?_atohtoi+1,c
  2910  003FAA  0012               	return	
  2911  003FAC                     l206:
  2912                           
  2913                           ;timer.c: 29:    if (dec_ascii > 79 && dec_ascii < 90){
  2914  003FAC  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2915  003FAE  D015               	goto	l212
  2916  003FB0  5015               	movf	atohtoi@dec_ascii+1,w,c
  2917  003FB2  E104               	bnz	u6800
  2918  003FB4  0E50               	movlw	80
  2919  003FB6  5C14               	subwf	atohtoi@dec_ascii,w,c
  2920  003FB8  A0D8               	btfss	status,0,c
  2921  003FBA  D00F               	goto	l212
  2922  003FBC                     u6800:
  2923  003FBC  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2924  003FBE  D006               	goto	u6810
  2925  003FC0  5015               	movf	atohtoi@dec_ascii+1,w,c
  2926  003FC2  E10B               	bnz	l212
  2927  003FC4  0E5A               	movlw	90
  2928  003FC6  5C14               	subwf	atohtoi@dec_ascii,w,c
  2929  003FC8  B0D8               	btfsc	status,0,c
  2930  003FCA  D007               	goto	l212
  2931  003FCC                     u6810:
  2932                           
  2933                           ;timer.c: 30:      return dec_ascii-30;
  2934  003FCC  0EE2               	movlw	226
  2935  003FCE  2414               	addwf	atohtoi@dec_ascii,w,c
  2936  003FD0  6E11               	movwf	?_atohtoi,c
  2937  003FD2  0EFF               	movlw	255
  2938  003FD4  2015               	addwfc	atohtoi@dec_ascii+1,w,c
  2939  003FD6  6E12               	movwf	?_atohtoi+1,c
  2940  003FD8  0012               	return	
  2941  003FDA                     l212:
  2942                           
  2943                           ;timer.c: 33:      return -1;
  2944  003FDA  6811               	setf	?_atohtoi,c
  2945  003FDC  6812               	setf	?_atohtoi+1,c
  2946  003FDE  0012               	return		;funcret
  2947  003FE0                     __end_of_atohtoi:
  2948                           	opt callstack 0
  2949                           
  2950 ;; *************** function _printf *****************
  2951 ;; Defined at:
  2952 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  fmt             2   98[BANK0 ] PTR const unsigned char 
  2955 ;;		 -> STR_12(14), STR_11(14), STR_10(15), STR_9(15), 
  2956 ;;		 -> STR_8(10), STR_7(11), STR_6(10), STR_5(16), 
  2957 ;;		 -> STR_4(9), STR_3(10), STR_2(15), STR_1(15), 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  ap              2   93[COMRAM] PTR void [1]
  2960 ;;		 -> ?_printf(2), 
  2961 ;;  ret             2    0        int 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  2   98[BANK0 ] int 
  2964 ;; Registers used:
  2965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2971 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;Total ram usage:       12 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:   10
  2978 ;; This function calls:
  2979 ;;		_vfprintf
  2980 ;; This function is called by:
  2981 ;;		_main
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text3
  2986  004C20                     __ptext3:
  2987                           	opt callstack 0
  2988  004C20                     _printf:
  2989                           	opt callstack 20
  2990                           
  2991                           ;incstack = 0
  2992  004C20  0EE4               	movlw	low (?_printf+2)
  2993  004C22  6E5E               	movwf	printf@ap,c
  2994  004C24  0E00               	movlw	high (?_printf+2)
  2995  004C26  6E5F               	movwf	printf@ap+1,c
  2996  004C28  0E00               	movlw	0
  2997  004C2A  0100               	movlb	0	; () banked
  2998  004C2C  6FDC               	movwf	vfprintf@fp& (0+255),b
  2999  004C2E  0E00               	movlw	0
  3000  004C30  6FDD               	movwf	(vfprintf@fp+1)& (0+255),b
  3001  004C32  C0E2  F0DE         	movff	printf@fmt,vfprintf@fmt
  3002  004C36  C0E3  F0DF         	movff	printf@fmt+1,vfprintf@fmt+1
  3003  004C3A  0E5E               	movlw	low printf@ap
  3004  004C3C  6FE0               	movwf	vfprintf@ap& (0+255),b
  3005  004C3E  0E00               	movlw	high printf@ap
  3006  004C40  6FE1               	movwf	(vfprintf@ap+1)& (0+255),b
  3007  004C42  ECFB  F023         	call	_vfprintf	;wreg free
  3008  004C46  0012               	return		;funcret
  3009  004C48                     __end_of_printf:
  3010                           	opt callstack 0
  3011                           
  3012 ;; *************** function _vfprintf *****************
  3013 ;; Defined at:
  3014 ;;		line 1368 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  fp              2   92[BANK0 ] PTR struct _IO_FILE
  3017 ;;		 -> NULL(0), 
  3018 ;;  fmt             2   94[BANK0 ] PTR const unsigned char 
  3019 ;;		 -> STR_12(14), STR_11(14), STR_10(15), STR_9(15), 
  3020 ;;		 -> STR_8(10), STR_7(11), STR_6(10), STR_5(16), 
  3021 ;;		 -> STR_4(9), STR_3(10), STR_2(15), STR_1(15), 
  3022 ;;  ap              2   96[BANK0 ] PTR PTR void 
  3023 ;;		 -> printf@ap(2), 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  3026 ;;		 -> STR_12(14), STR_11(14), STR_10(15), STR_9(15), 
  3027 ;;		 -> STR_8(10), STR_7(11), STR_6(10), STR_5(16), 
  3028 ;;		 -> STR_4(9), STR_3(10), STR_2(15), STR_1(15), 
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  2   92[BANK0 ] int 
  3031 ;; Registers used:
  3032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3038 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;Total ram usage:        8 bytes
  3043 ;; Hardware stack levels used:    1
  3044 ;; Hardware stack levels required when called:    9
  3045 ;; This function calls:
  3046 ;;		_vfpfcnvrt
  3047 ;; This function is called by:
  3048 ;;		_printf
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text4
  3053  0047F6                     __ptext4:
  3054                           	opt callstack 0
  3055  0047F6                     _vfprintf:
  3056                           	opt callstack 20
  3057                           
  3058                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
  3059                           
  3060                           ;incstack = 0
  3061  0047F6  C0DE  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
  3062  0047FA  C0DF  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3063                           
  3064                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  3065  0047FE  0E00               	movlw	0
  3066  004800  0100               	movlb	0	; () banked
  3067  004802  6FEF               	movwf	(_nout+1)& (0+255),b
  3068  004804  0E00               	movlw	0
  3069  004806  6FEE               	movwf	_nout& (0+255),b
  3070                           
  3071                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  3072  004808  D013               	goto	l5282
  3073  00480A                     l5280:
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  3077  00480A  C0DC  F0B8         	movff	vfprintf@fp,vfpfcnvrt@fp
  3078  00480E  C0DD  F0B9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3079  004812  0E5A               	movlw	low vfprintf@cfmt
  3080  004814  6FBA               	movwf	vfpfcnvrt@fmt& (0+255),b
  3081  004816  0E00               	movlw	high vfprintf@cfmt
  3082  004818  6FBB               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3083  00481A  C0E0  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  3084  00481E  C0E1  F0BD         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3085  004822  EC03  F011         	call	_vfpfcnvrt	;wreg free
  3086  004826  0100               	movlb	0	; () banked
  3087  004828  51B8               	movf	?_vfpfcnvrt& (0+255),w,b
  3088  00482A  27EE               	addwf	_nout& (0+255),f,b
  3089  00482C  51B9               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3090  00482E  23EF               	addwfc	(_nout+1)& (0+255),f,b
  3091  004830                     l5282:
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  3095  004830  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
  3096  004834  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3097  004838                     	if	0	;tblptru may be non-zero
  3098  004838                     	endif
  3099  004838                     	if	0	;tblptru may be non-zero
  3100  004838                     	endif
  3101  004838  0008               	tblrd		*
  3102  00483A  50F5               	movf	tablat,w,c
  3103  00483C  0900               	iorlw	0
  3104  00483E  A4D8               	btfss	status,2,c
  3105  004840  D7E4               	goto	l5280
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
  3109  004842  C0EE  F0DC         	movff	_nout,?_vfprintf
  3110  004846  C0EF  F0DD         	movff	_nout+1,?_vfprintf+1
  3111                           
  3112                           ; BSR set to: 0
  3113  00484A  0012               	return		;funcret
  3114  00484C                     __end_of_vfprintf:
  3115                           	opt callstack 0
  3116                           
  3117 ;; *************** function _vfpfcnvrt *****************
  3118 ;; Defined at:
  3119 ;;		line 670 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  3122 ;;		 -> NULL(0), 
  3123 ;;  fmt             2   58[BANK0 ] PTR PTR unsigned char 
  3124 ;;		 -> vfprintf@cfmt(2), 
  3125 ;;  ap              2   60[BANK0 ] PTR PTR void 
  3126 ;;		 -> printf@ap(2), 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  llu             8   70[BANK0 ] unsigned long long 
  3129 ;;  ll              8   62[BANK0 ] long long 
  3130 ;;  f               4   84[BANK0 ] long long 
  3131 ;;  ct              3   88[BANK0 ] unsigned char [3]
  3132 ;;  vp              3    0        PTR void 
  3133 ;;  cp              3    0        PTR unsigned char 
  3134 ;;  done            2   78[BANK0 ] int 
  3135 ;;  i               2    0        int 
  3136 ;;  c               1   91[BANK0 ] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  2   56[BANK0 ] int 
  3139 ;; Registers used:
  3140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3146 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3147 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3149 ;;      Totals:         4      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;Total ram usage:       40 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    8
  3153 ;; This function calls:
  3154 ;;		_atoi
  3155 ;;		_dtoa
  3156 ;;		_efgtoa
  3157 ;;		_fputc
  3158 ;;		_isdigit
  3159 ;;		_isupper
  3160 ;;		_strncmp
  3161 ;;		_tolower
  3162 ;;		_xtoa
  3163 ;; This function is called by:
  3164 ;;		_vfprintf
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text5
  3169  002206                     __ptext5:
  3170                           	opt callstack 0
  3171  002206                     _vfpfcnvrt:
  3172                           	opt callstack 20
  3173                           
  3174                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.05/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;incstack = 0
  3178  002206  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3179  00220A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3180  00220E  CFDE FFF6          	movff	postinc2,tblptrl
  3181  002212  CFDD FFF7          	movff	postdec2,tblptrh
  3182  002216                     	if	0	;tblptru may be non-zero
  3183  002216                     	endif
  3184  002216                     	if	0	;tblptru may be non-zero
  3185  002216                     	endif
  3186  002216  0008               	tblrd		*
  3187  002218  50F5               	movf	tablat,w,c
  3188  00221A  0A25               	xorlw	37
  3189  00221C  A4D8               	btfss	status,2,c
  3190  00221E  D2B7               	goto	l5192
  3191                           
  3192                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  3193  002220  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3194  002224  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3195  002228  2ADE               	incf	postinc2,f,c
  3196  00222A  0E00               	movlw	0
  3197  00222C  22DD               	addwfc	postdec2,f,c
  3198                           
  3199                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
  3200  00222E  0E00               	movlw	0
  3201  002230  6E69               	movwf	_width+1,c
  3202  002232  0E00               	movlw	0
  3203  002234  6E68               	movwf	_width,c
  3204  002236  C068  F06C         	movff	_width,_flags
  3205  00223A  C069  F06D         	movff	_width+1,_flags+1
  3206                           
  3207                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
  3208  00223E  686A               	setf	_prec,c
  3209  002240  686B               	setf	_prec+1,c
  3210                           
  3211                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 
      +                          0;
  3212  002242  0E00               	movlw	0
  3213  002244  0100               	movlb	0	; () banked
  3214  002246  6FCF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3215  002248  0E00               	movlw	0
  3216  00224A  D014               	goto	L2
  3217  00224C                     l5066:
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                
      +                               flags |= (1 << 0);
  3221  00224C  806C               	bsf	_flags,0,c
  3222  00224E                     l5068:
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                
      +                               ++*fmt;
  3226  00224E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3227  002252  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3228  002256  2ADE               	incf	postinc2,f,c
  3229  002258  0E00               	movlw	0
  3230  00225A  22DD               	addwfc	postdec2,f,c
  3231                           
  3232                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                
      +                               break;
  3233  00225C  D02E               	goto	l5092
  3234  00225E                     l5070:
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                
      +                               flags |= (1 << 1);
  3238  00225E  826C               	bsf	_flags,1,c
  3239  002260  D7F6               	goto	l5068
  3240  002262                     l5074:
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                
      +                               flags |= (1 << 2);
  3244  002262  846C               	bsf	_flags,2,c
  3245  002264  D7F4               	goto	l5068
  3246  002266                     l5078:
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                
      +                               flags |= (1 << 3);
  3250  002266  866C               	bsf	_flags,3,c
  3251  002268  D7F2               	goto	l5068
  3252  00226A                     l5082:
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                
      +                               flags |= (1 << 4);
  3256  00226A  886C               	bsf	_flags,4,c
  3257  00226C  D7F0               	goto	l5068
  3258  00226E                     l5086:
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                
      +                               done = 1;
  3262  00226E  0E00               	movlw	0
  3263  002270  6FCF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3264  002272  0E01               	movlw	1
  3265  002274                     L2:
  3266  002274  6FCE               	movwf	vfpfcnvrt@done& (0+255),b
  3267                           
  3268                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                
      +                               break;
  3269  002276  D021               	goto	l5092
  3270  002278                     l5090:
  3271                           
  3272                           ; BSR set to: 0
  3273  002278  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3274  00227C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3275  002280  CFDE FFF6          	movff	postinc2,tblptrl
  3276  002284  CFDD FFF7          	movff	postdec2,tblptrh
  3277  002288                     	if	0	;tblptru may be non-zero
  3278  002288                     	endif
  3279  002288                     	if	0	;tblptru may be non-zero
  3280  002288                     	endif
  3281  002288  0008               	tblrd		*
  3282  00228A  50F5               	movf	tablat,w,c
  3283  00228C  6E56               	movwf	??_vfpfcnvrt& (0+255),c
  3284  00228E  6A57               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  3285                           
  3286                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3287                           ; Switch size 1, requested type "simple"
  3288                           ; Number of cases is 1, Range of values is 0 to 0
  3289                           ; switch strategies available:
  3290                           ; Name         Instructions Cycles
  3291                           ; simple_byte            4     3 (average)
  3292                           ;	Chosen strategy is simple_byte
  3293  002290  5057               	movf	??_vfpfcnvrt+1,w,c
  3294  002292  0A00               	xorlw	0	; case 0
  3295  002294  A4D8               	btfss	status,2,c
  3296  002296  D7EB               	goto	l5086
  3297                           
  3298                           ; BSR set to: 0
  3299                           ; Switch size 1, requested type "simple"
  3300                           ; Number of cases is 5, Range of values is 32 to 48
  3301                           ; switch strategies available:
  3302                           ; Name         Instructions Cycles
  3303                           ; simple_byte           16     9 (average)
  3304                           ;	Chosen strategy is simple_byte
  3305  002298  5056               	movf	??_vfpfcnvrt,w,c
  3306  00229A  0A20               	xorlw	32	; case 32
  3307  00229C  B4D8               	btfsc	status,2,c
  3308  00229E  D7E3               	goto	l5078
  3309  0022A0  0A03               	xorlw	3	; case 35
  3310  0022A2  B4D8               	btfsc	status,2,c
  3311  0022A4  D7E2               	goto	l5082
  3312  0022A6  0A08               	xorlw	8	; case 43
  3313  0022A8  B4D8               	btfsc	status,2,c
  3314  0022AA  D7DB               	goto	l5074
  3315  0022AC  0A06               	xorlw	6	; case 45
  3316  0022AE  B4D8               	btfsc	status,2,c
  3317  0022B0  D7CD               	goto	l5066
  3318  0022B2  0A1D               	xorlw	29	; case 48
  3319  0022B4  B4D8               	btfsc	status,2,c
  3320  0022B6  D7D3               	goto	l5070
  3321  0022B8  D7DA               	goto	l5086
  3322  0022BA                     l5092:
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (
      +                          !done) {
  3326  0022BA  51CE               	movf	vfpfcnvrt@done& (0+255),w,b
  3327  0022BC  11CF               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3328  0022BE  B4D8               	btfsc	status,2,c
  3329  0022C0  D7DB               	goto	l5090
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (fla
      +                          gs & (1 << 0)) {
  3333  0022C2  B06C               	btfsc	_flags,0,c
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             fla
      +                          gs &= ~(1 << 1);
  3337  0022C4  926C               	bcf	_flags,1,c
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*f
      +                          mt)[0] == '*') {
  3341  0022C6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3342  0022CA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3343  0022CE  CFDE FFF6          	movff	postinc2,tblptrl
  3344  0022D2  CFDD FFF7          	movff	postdec2,tblptrh
  3345  0022D6                     	if	0	;tblptru may be non-zero
  3346  0022D6                     	endif
  3347  0022D6                     	if	0	;tblptru may be non-zero
  3348  0022D6                     	endif
  3349  0022D6  0008               	tblrd		*
  3350  0022D8  50F5               	movf	tablat,w,c
  3351  0022DA  0A2A               	xorlw	42
  3352  0022DC  A4D8               	btfss	status,2,c
  3353  0022DE  D023               	goto	l5104
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*
      +                          fmt;
  3357  0022E0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3358  0022E4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3359  0022E8  2ADE               	incf	postinc2,f,c
  3360  0022EA  0E00               	movlw	0
  3361  0022EC  22DD               	addwfc	postdec2,f,c
  3362                           
  3363                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             wid
      +                          th = (*(int *)__va_arg(*(int **)ap, (int)0));
  3364  0022EE  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3365  0022F2  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3366  0022F6  CFDF F056          	movff	indf2,??_vfpfcnvrt
  3367  0022FA  0E02               	movlw	2
  3368  0022FC  26DE               	addwf	postinc2,f,c
  3369  0022FE  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  3370  002302  0E00               	movlw	0
  3371  002304  22DD               	addwfc	postdec2,f,c
  3372  002306  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3373  00230A  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3374  00230E  CFDE F068          	movff	postinc2,_width
  3375  002312  CFDD F069          	movff	postdec2,_width+1
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if 
      +                          (width < 0) {
  3379  002316  AE69               	btfss	_width+1,7,c
  3380  002318  D040               	goto	u6550
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                
      +                           flags |= (1 << 0);
  3384  00231A  806C               	bsf	_flags,0,c
  3385                           
  3386                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                
      +                           width = -width;
  3387  00231C  6C68               	negf	_width,c
  3388  00231E  1E69               	comf	_width+1,f,c
  3389  002320  B0D8               	btfsc	status,0,c
  3390  002322  2A69               	incf	_width+1,f,c
  3391  002324  D03A               	goto	u6550
  3392  002326                     l5104:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             wid
      +                          th = atoi(*fmt);
  3396  002326  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3397  00232A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3398  00232E  CFDE F018          	movff	postinc2,atoi@s
  3399  002332  CFDD F019          	movff	postdec2,atoi@s+1
  3400  002336  EC90  F01D         	call	_atoi	;wreg free
  3401  00233A  C018  F068         	movff	?_atoi,_width
  3402  00233E  C019  F069         	movff	?_atoi+1,_width+1
  3403                           
  3404                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             whi
      +                          le ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3405  002342  D007               	goto	l5108
  3406  002344                     l5106:
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                
      +                           ++*fmt;
  3410  002344  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3411  002348  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3412  00234C  2ADE               	incf	postinc2,f,c
  3413  00234E  0E00               	movlw	0
  3414  002350  22DD               	addwfc	postdec2,f,c
  3415  002352                     l5108:
  3416  002352  0ED0               	movlw	208
  3417  002354  6E56               	movwf	??_vfpfcnvrt& (0+255),c
  3418  002356  0EFF               	movlw	255
  3419  002358  6E57               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  3420  00235A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3421  00235E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3422  002362  CFDE FFF6          	movff	postinc2,tblptrl
  3423  002366  CFDD FFF7          	movff	postdec2,tblptrh
  3424  00236A                     	if	0	;tblptru may be non-zero
  3425  00236A                     	endif
  3426  00236A                     	if	0	;tblptru may be non-zero
  3427  00236A                     	endif
  3428  00236A  0008               	tblrd		*
  3429  00236C  50F5               	movf	tablat,w,c
  3430  00236E  6E58               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3431  002370  6A59               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3432  002372  5056               	movf	??_vfpfcnvrt,w,c
  3433  002374  2658               	addwf	??_vfpfcnvrt+2,f,c
  3434  002376  5057               	movf	??_vfpfcnvrt+1,w,c
  3435  002378  2259               	addwfc	??_vfpfcnvrt+3,f,c
  3436  00237A  5059               	movf	??_vfpfcnvrt+3,w,c
  3437  00237C  E106               	bnz	u6530
  3438  00237E  0E0A               	movlw	10
  3439  002380  5C58               	subwf	??_vfpfcnvrt+2,w,c
  3440  002382  B0D8               	btfsc	status,0,c
  3441  002384  D002               	goto	u6530
  3442  002386  0E01               	movlw	1
  3443  002388  D001               	goto	u6540
  3444  00238A                     u6530:
  3445  00238A  0E00               	movlw	0
  3446  00238C                     u6540:
  3447  00238C  0100               	movlb	0	; () banked
  3448  00238E  6FD0               	movwf	_vfpfcnvrt$713& (0+255),b
  3449  002390  6BD1               	clrf	(_vfpfcnvrt$713+1)& (0+255),b
  3450                           
  3451                           ; BSR set to: 0
  3452  002392  51D0               	movf	_vfpfcnvrt$713& (0+255),w,b
  3453  002394  11D1               	iorwf	(_vfpfcnvrt$713+1)& (0+255),w,b
  3454  002396  A4D8               	btfss	status,2,c
  3455  002398  D7D5               	goto	l5106
  3456  00239A                     u6550:
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 757:         ct[0] =
      +                           tolower((int)(*fmt)[0]);
  3460  00239A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3461  00239E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3462  0023A2  CFDE FFF6          	movff	postinc2,tblptrl
  3463  0023A6  CFDD FFF7          	movff	postdec2,tblptrh
  3464  0023AA                     	if	0	;tblptru may be non-zero
  3465  0023AA                     	endif
  3466  0023AA                     	if	0	;tblptru may be non-zero
  3467  0023AA                     	endif
  3468  0023AA  0008               	tblrd		*
  3469  0023AC  50F5               	movf	tablat,w,c
  3470  0023AE  6E17               	movwf	tolower@c,c
  3471  0023B0  6A18               	clrf	tolower@c+1,c
  3472  0023B2  EC7B  F024         	call	_tolower	;wreg free
  3473  0023B6  5017               	movf	?_tolower,w,c
  3474  0023B8  0100               	movlb	0	; () banked
  3475  0023BA  6FD8               	movwf	vfpfcnvrt@ct& (0+255),b
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 758:         if (ct[
      +                          0]) {
  3479  0023BC  51D8               	movf	vfpfcnvrt@ct& (0+255),w,b
  3480  0023BE  B4D8               	btfsc	status,2,c
  3481  0023C0  D035               	goto	l5124
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 759:             ct[
      +                          1] = tolower((int)(*fmt)[1]);
  3485  0023C2  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3486  0023C6  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3487  0023CA  CFDE F056          	movff	postinc2,??_vfpfcnvrt
  3488  0023CE  CFDD F057          	movff	postdec2,??_vfpfcnvrt+1
  3489  0023D2  0E01               	movlw	1
  3490  0023D4  2656               	addwf	??_vfpfcnvrt,f,c
  3491  0023D6  0E00               	movlw	0
  3492  0023D8  2257               	addwfc	??_vfpfcnvrt+1,f,c
  3493  0023DA  C056  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3494  0023DE  C057  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3495  0023E2                     	if	0	;tblptru may be non-zero
  3496  0023E2                     	endif
  3497  0023E2                     	if	0	;tblptru may be non-zero
  3498  0023E2                     	endif
  3499  0023E2  0008               	tblrd		*
  3500  0023E4  50F5               	movf	tablat,w,c
  3501  0023E6  6E17               	movwf	tolower@c,c
  3502  0023E8  6A18               	clrf	tolower@c+1,c
  3503  0023EA  EC7B  F024         	call	_tolower	;wreg free
  3504  0023EE  5017               	movf	?_tolower,w,c
  3505  0023F0  0100               	movlb	0	; () banked
  3506  0023F2  6FD9               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 760:             if 
      +                          (ct[1]) {
  3510  0023F4  51D9               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3511  0023F6  B4D8               	btfsc	status,2,c
  3512  0023F8  D019               	goto	l5124
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 761:                
      +                           ct[2] = tolower((int)(*fmt)[2]);
  3516  0023FA  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3517  0023FE  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3518  002402  CFDE F056          	movff	postinc2,??_vfpfcnvrt
  3519  002406  CFDD F057          	movff	postdec2,??_vfpfcnvrt+1
  3520  00240A  0E02               	movlw	2
  3521  00240C  2656               	addwf	??_vfpfcnvrt,f,c
  3522  00240E  0E00               	movlw	0
  3523  002410  2257               	addwfc	??_vfpfcnvrt+1,f,c
  3524  002412  C056  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3525  002416  C057  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3526  00241A                     	if	0	;tblptru may be non-zero
  3527  00241A                     	endif
  3528  00241A                     	if	0	;tblptru may be non-zero
  3529  00241A                     	endif
  3530  00241A  0008               	tblrd		*
  3531  00241C  50F5               	movf	tablat,w,c
  3532  00241E  6E17               	movwf	tolower@c,c
  3533  002420  6A18               	clrf	tolower@c+1,c
  3534  002422  EC7B  F024         	call	_tolower	;wreg free
  3535  002426  5017               	movf	?_tolower,w,c
  3536  002428  0100               	movlb	0	; () banked
  3537  00242A  6FDA               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3538  00242C                     l5124:
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  3542  00242C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3543  002430  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3544  002434  CFDE FFF6          	movff	postinc2,tblptrl
  3545  002438  CFDD FFF7          	movff	postdec2,tblptrh
  3546  00243C                     	if	0	;tblptru may be non-zero
  3547  00243C                     	endif
  3548  00243C                     	if	0	;tblptru may be non-zero
  3549  00243C                     	endif
  3550  00243C  0008               	tblrd		*
  3551  00243E  50F5               	movf	tablat,w,c
  3552  002440  0A64               	xorlw	100
  3553  002442  B4D8               	btfsc	status,2,c
  3554  002444  D00D               	goto	u6590
  3555                           
  3556                           ; BSR set to: 0
  3557  002446  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3558  00244A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3559  00244E  CFDE FFF6          	movff	postinc2,tblptrl
  3560  002452  CFDD FFF7          	movff	postdec2,tblptrh
  3561  002456                     	if	0	;tblptru may be non-zero
  3562  002456                     	endif
  3563  002456                     	if	0	;tblptru may be non-zero
  3564  002456                     	endif
  3565  002456  0008               	tblrd		*
  3566  002458  50F5               	movf	tablat,w,c
  3567  00245A  0A69               	xorlw	105
  3568  00245C  A4D8               	btfss	status,2,c
  3569  00245E  D03F               	goto	l5134
  3570  002460                     u6590:
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
  3574  002460  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3575  002464  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3576  002468  2ADE               	incf	postinc2,f,c
  3577  00246A  0E00               	movlw	0
  3578  00246C  22DD               	addwfc	postdec2,f,c
  3579                           
  3580                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3581  00246E  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3582  002472  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3583  002476  CFDF F056          	movff	indf2,??_vfpfcnvrt
  3584  00247A  0E02               	movlw	2
  3585  00247C  26DE               	addwf	postinc2,f,c
  3586  00247E  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  3587  002482  0E00               	movlw	0
  3588  002484  22DD               	addwfc	postdec2,f,c
  3589  002486  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3590  00248A  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3591  00248E  CFDE F0BE          	movff	postinc2,vfpfcnvrt@ll
  3592  002492  CFDD F0BF          	movff	postdec2,vfpfcnvrt@ll+1
  3593  002496  0E00               	movlw	0
  3594  002498  BFBF               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3595  00249A  0EFF               	movlw	-1
  3596  00249C  6FC0               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3597  00249E  6FC1               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3598  0024A0  6FC2               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3599  0024A2  6FC3               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3600  0024A4  6FC4               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3601  0024A6  6FC5               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
  3605  0024A8  C0B8  F02F         	movff	vfpfcnvrt@fp,dtoa@fp
  3606  0024AC  C0B9  F030         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3607  0024B0  C0BE  F031         	movff	vfpfcnvrt@ll,dtoa@d
  3608  0024B4  C0BF  F032         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3609  0024B8  C0C0  F033         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3610  0024BC  C0C1  F034         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3611  0024C0  C0C2  F035         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3612  0024C4  C0C3  F036         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3613  0024C8  C0C4  F037         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3614  0024CC  C0C5  F038         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3615  0024D0  ECDA  F019         	call	_dtoa	;wreg free
  3616  0024D4  C02F  F0B8         	movff	?_dtoa,?_vfpfcnvrt
  3617  0024D8  C030  F0B9         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3618  0024DC  0012               	return	
  3619  0024DE                     l5134:
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 920:         if (ct[
      +                          0] == 'f') {
  3623  0024DE  0E66               	movlw	102
  3624  0024E0  19D8               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3625  0024E2  A4D8               	btfss	status,2,c
  3626  0024E4  D03F               	goto	l5146
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 922:             c =
      +                           (*fmt)[0];
  3630  0024E6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3631  0024EA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3632  0024EE  CFDE FFF6          	movff	postinc2,tblptrl
  3633  0024F2  CFDD FFF7          	movff	postdec2,tblptrh
  3634  0024F6                     	if	0	;tblptru may be non-zero
  3635  0024F6                     	endif
  3636  0024F6                     	if	0	;tblptru may be non-zero
  3637  0024F6                     	endif
  3638  0024F6  0008               	tblrd		*
  3639  0024F8  CFF5 F0DB          	movff	tablat,vfpfcnvrt@c
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 923:             ++*
      +                          fmt;
  3643  0024FC  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3644  002500  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3645  002504  2ADE               	incf	postinc2,f,c
  3646  002506  0E00               	movlw	0
  3647  002508  22DD               	addwfc	postdec2,f,c
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 924:             f =
      +                           (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3651  00250A  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3652  00250E  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3653  002512  CFDF F056          	movff	indf2,??_vfpfcnvrt
  3654  002516  0E04               	movlw	4
  3655  002518  26DE               	addwf	postinc2,f,c
  3656  00251A  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  3657  00251E  0E00               	movlw	0
  3658  002520  22DD               	addwfc	postdec2,f,c
  3659  002522  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3660  002526  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3661  00252A  CFDE F0D4          	movff	postinc2,vfpfcnvrt@f
  3662  00252E  CFDE F0D5          	movff	postinc2,vfpfcnvrt@f+1
  3663  002532  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f+2
  3664  002536  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+3
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 926:             ret
      +                          urn efgtoa(fp, f, c);
  3668  00253A  C0B8  F03E         	movff	vfpfcnvrt@fp,efgtoa@fp
  3669  00253E  C0B9  F03F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3670  002542  C0D4  F040         	movff	vfpfcnvrt@f,efgtoa@f
  3671  002546  C0D5  F041         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3672  00254A  C0D6  F042         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3673  00254E  C0D7  F043         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3674  002552  C0DB  F044         	movff	vfpfcnvrt@c,efgtoa@c
  3675  002556  EC4D  F008         	call	_efgtoa	;wreg free
  3676  00255A  C03E  F0B8         	movff	?_efgtoa,?_vfpfcnvrt
  3677  00255E  C03F  F0B9         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3678  002562  0012               	return	
  3679  002564                     l5146:
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 928:         if (!st
      +                          rncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3683  002564  0ED8               	movlw	low vfpfcnvrt@ct
  3684  002566  6E11               	movwf	strncmp@_l,c
  3685  002568  0E00               	movlw	high vfpfcnvrt@ct
  3686  00256A  6E12               	movwf	strncmp@_l+1,c
  3687  00256C  0E95               	movlw	low STR_21
  3688  00256E  6E13               	movwf	strncmp@_r,c
  3689  002570  0E10               	movlw	high STR_21
  3690  002572  6E14               	movwf	strncmp@_r+1,c
  3691  002574  0E00               	movlw	0
  3692  002576  6E16               	movwf	strncmp@n+1,c
  3693  002578  0E02               	movlw	2
  3694  00257A  6E15               	movwf	strncmp@n,c
  3695  00257C  ECDF  F021         	call	_strncmp	;wreg free
  3696  002580  5011               	movf	?_strncmp,w,c
  3697  002582  1012               	iorwf	?_strncmp+1,w,c
  3698  002584  A4D8               	btfss	status,2,c
  3699  002586  D06A               	goto	l5162
  3700                           
  3701                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 931:             if 
      +                          ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3702  002588  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3703  00258C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3704  002590  CFDE F056          	movff	postinc2,??_vfpfcnvrt
  3705  002594  CFDD F057          	movff	postdec2,??_vfpfcnvrt+1
  3706  002598  0E01               	movlw	1
  3707  00259A  2656               	addwf	??_vfpfcnvrt,f,c
  3708  00259C  0E00               	movlw	0
  3709  00259E  2257               	addwfc	??_vfpfcnvrt+1,f,c
  3710  0025A0  C056  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3711  0025A4  C057  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3712  0025A8                     	if	0	;tblptru may be non-zero
  3713  0025A8                     	endif
  3714  0025A8                     	if	0	;tblptru may be non-zero
  3715  0025A8                     	endif
  3716  0025A8  0008               	tblrd		*
  3717  0025AA  CFF5 F0DB          	movff	tablat,vfpfcnvrt@c
  3718  0025AE  0EBF               	movlw	191
  3719  0025B0  6E56               	movwf	??_vfpfcnvrt& (0+255),c
  3720  0025B2  0EFF               	movlw	255
  3721  0025B4  6E57               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  3722  0025B6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3723  0025BA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3724  0025BE  CFDE FFF6          	movff	postinc2,tblptrl
  3725  0025C2  CFDD FFF7          	movff	postdec2,tblptrh
  3726  0025C6                     	if	0	;tblptru may be non-zero
  3727  0025C6                     	endif
  3728  0025C6                     	if	0	;tblptru may be non-zero
  3729  0025C6                     	endif
  3730  0025C6  0008               	tblrd		*
  3731  0025C8  50F5               	movf	tablat,w,c
  3732  0025CA  6E58               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3733  0025CC  6A59               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3734  0025CE  5056               	movf	??_vfpfcnvrt,w,c
  3735  0025D0  2658               	addwf	??_vfpfcnvrt+2,f,c
  3736  0025D2  5057               	movf	??_vfpfcnvrt+1,w,c
  3737  0025D4  2259               	addwfc	??_vfpfcnvrt+3,f,c
  3738  0025D6  5059               	movf	??_vfpfcnvrt+3,w,c
  3739  0025D8  E106               	bnz	u6620
  3740  0025DA  0E1A               	movlw	26
  3741  0025DC  5C58               	subwf	??_vfpfcnvrt+2,w,c
  3742  0025DE  B0D8               	btfsc	status,0,c
  3743  0025E0  D002               	goto	u6620
  3744  0025E2  0E01               	movlw	1
  3745  0025E4  D001               	goto	u6630
  3746  0025E6                     u6620:
  3747  0025E6  0E00               	movlw	0
  3748  0025E8                     u6630:
  3749  0025E8  0100               	movlb	0	; () banked
  3750  0025EA  6FD2               	movwf	_vfpfcnvrt$718& (0+255),b
  3751  0025EC  6BD3               	clrf	(_vfpfcnvrt$718+1)& (0+255),b
  3752                           
  3753                           ; BSR set to: 0
  3754  0025EE  51D2               	movf	_vfpfcnvrt$718& (0+255),w,b
  3755  0025F0  11D3               	iorwf	(_vfpfcnvrt$718+1)& (0+255),w,b
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 934:                
      +                           f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3759                           
  3760                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 933:             } e
      +                          lse {
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 932:                
      +                           f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3764  0025F2  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3765  0025F6  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3766  0025FA  CFDF F056          	movff	indf2,??_vfpfcnvrt
  3767  0025FE  0E04               	movlw	4
  3768  002600  26DE               	addwf	postinc2,f,c
  3769  002602  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  3770  002606  0E00               	movlw	0
  3771  002608  22DD               	addwfc	postdec2,f,c
  3772  00260A  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3773  00260E  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3774  002612  CFDE F0D4          	movff	postinc2,vfpfcnvrt@f
  3775  002616  CFDE F0D5          	movff	postinc2,vfpfcnvrt@f+1
  3776  00261A  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f+2
  3777  00261E  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+3
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 936:             *fm
      +                          t += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3781                           
  3782                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 935:             }
  3783  002622  0E02               	movlw	2
  3784  002624  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3785  002628  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3786  00262C  26DE               	addwf	postinc2,f,c
  3787  00262E  0E00               	movlw	0
  3788  002630  22DD               	addwfc	postdec2,f,c
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 938:             ret
      +                          urn efgtoa(fp, f, c);
  3792  002632  C0B8  F03E         	movff	vfpfcnvrt@fp,efgtoa@fp
  3793  002636  C0B9  F03F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3794  00263A  C0D4  F040         	movff	vfpfcnvrt@f,efgtoa@f
  3795  00263E  C0D5  F041         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3796  002642  C0D6  F042         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3797  002646  C0D7  F043         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3798  00264A  C0DB  F044         	movff	vfpfcnvrt@c,efgtoa@c
  3799  00264E  EC4D  F008         	call	_efgtoa	;wreg free
  3800  002652  C03E  F0B8         	movff	?_efgtoa,?_vfpfcnvrt
  3801  002656  C03F  F0B9         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3802  00265A  0012               	return	
  3803  00265C                     l5162:
  3804                           
  3805                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*
      +                          fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3806  00265C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3807  002660  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3808  002664  CFDE FFF6          	movff	postinc2,tblptrl
  3809  002668  CFDD FFF7          	movff	postdec2,tblptrh
  3810  00266C                     	if	0	;tblptru may be non-zero
  3811  00266C                     	endif
  3812  00266C                     	if	0	;tblptru may be non-zero
  3813  00266C                     	endif
  3814  00266C  0008               	tblrd		*
  3815  00266E  50F5               	movf	tablat,w,c
  3816  002670  0A78               	xorlw	120
  3817  002672  B4D8               	btfsc	status,2,c
  3818  002674  D00D               	goto	u6660
  3819  002676  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3820  00267A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3821  00267E  CFDE FFF6          	movff	postinc2,tblptrl
  3822  002682  CFDD FFF7          	movff	postdec2,tblptrh
  3823  002686                     	if	0	;tblptru may be non-zero
  3824  002686                     	endif
  3825  002686                     	if	0	;tblptru may be non-zero
  3826  002686                     	endif
  3827  002686  0008               	tblrd		*
  3828  002688  50F5               	movf	tablat,w,c
  3829  00268A  0A58               	xorlw	88
  3830  00268C  A4D8               	btfss	status,2,c
  3831  00268E  D04E               	goto	l5176
  3832  002690                     u6660:
  3833                           
  3834                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c 
      +                          = (*fmt)[0];
  3835  002690  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3836  002694  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3837  002698  CFDE FFF6          	movff	postinc2,tblptrl
  3838  00269C  CFDD FFF7          	movff	postdec2,tblptrh
  3839  0026A0                     	if	0	;tblptru may be non-zero
  3840  0026A0                     	endif
  3841  0026A0                     	if	0	;tblptru may be non-zero
  3842  0026A0                     	endif
  3843  0026A0  0008               	tblrd		*
  3844  0026A2  CFF5 F0DB          	movff	tablat,vfpfcnvrt@c
  3845                           
  3846                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++
      +                          *fmt;
  3847  0026A6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3848  0026AA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3849  0026AE  2ADE               	incf	postinc2,f,c
  3850  0026B0  0E00               	movlw	0
  3851  0026B2  22DD               	addwfc	postdec2,f,c
  3852                           
  3853                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1278:             ll
      +                          u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
  3854  0026B4  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3855  0026B8  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3856  0026BC  CFDF F056          	movff	indf2,??_vfpfcnvrt
  3857  0026C0  0E02               	movlw	2
  3858  0026C2  26DE               	addwf	postinc2,f,c
  3859  0026C4  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  3860  0026C8  0E00               	movlw	0
  3861  0026CA  22DD               	addwfc	postdec2,f,c
  3862  0026CC  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3863  0026D0  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3864  0026D4  CFDE F058          	movff	postinc2,??_vfpfcnvrt+2
  3865  0026D8  CFDD F059          	movff	postdec2,??_vfpfcnvrt+3
  3866  0026DC  C058  F0C6         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3867  0026E0  C059  F0C7         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3868  0026E4  0100               	movlb	0	; () banked
  3869  0026E6  6BC8               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3870  0026E8  6BC9               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3871  0026EA  6BCA               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3872  0026EC  6BCB               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3873  0026EE  6BCC               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3874  0026F0  6BCD               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1280:             re
      +                          turn xtoa(fp, llu, c);
  3878  0026F2  C0B8  F02F         	movff	vfpfcnvrt@fp,xtoa@fp
  3879  0026F6  C0B9  F030         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3880  0026FA  C0C6  F031         	movff	vfpfcnvrt@llu,xtoa@d
  3881  0026FE  C0C7  F032         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3882  002702  C0C8  F033         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3883  002706  C0C9  F034         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3884  00270A  C0CA  F035         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3885  00270E  C0CB  F036         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3886  002712  C0CC  F037         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3887  002716  C0CD  F038         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3888  00271A  C0DB  F039         	movff	vfpfcnvrt@c,xtoa@x
  3889  00271E  ECFB  F01A         	call	_xtoa	;wreg free
  3890  002722  C02F  F0B8         	movff	?_xtoa,?_vfpfcnvrt
  3891  002726  C030  F0B9         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3892  00272A  0012               	return	
  3893  00272C                     l5176:
  3894                           
  3895                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
  3896  00272C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3897  002730  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3898  002734  CFDE FFF6          	movff	postinc2,tblptrl
  3899  002738  CFDD FFF7          	movff	postdec2,tblptrh
  3900  00273C                     	if	0	;tblptru may be non-zero
  3901  00273C                     	endif
  3902  00273C                     	if	0	;tblptru may be non-zero
  3903  00273C                     	endif
  3904  00273C  0008               	tblrd		*
  3905  00273E  50F5               	movf	tablat,w,c
  3906  002740  0A25               	xorlw	37
  3907  002742  A4D8               	btfss	status,2,c
  3908  002744  D017               	goto	l5186
  3909                           
  3910                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
  3911  002746  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3912  00274A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3913  00274E  2ADE               	incf	postinc2,f,c
  3914  002750  0E00               	movlw	0
  3915  002752  22DD               	addwfc	postdec2,f,c
  3916                           
  3917                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
  3918  002754  0E00               	movlw	0
  3919  002756  6E15               	movwf	fputc@c+1,c
  3920  002758  0E25               	movlw	37
  3921  00275A  6E14               	movwf	fputc@c,c
  3922  00275C  C0B8  F016         	movff	vfpfcnvrt@fp,fputc@fp
  3923  002760  C0B9  F017         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3924  002764  ECC5  F023         	call	_fputc	;wreg free
  3925  002768                     l5182:
  3926                           
  3927                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
  3928  002768  0E00               	movlw	0
  3929  00276A  0100               	movlb	0	; () banked
  3930  00276C  6FB9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3931  00276E  0E01               	movlw	1
  3932  002770  6FB8               	movwf	?_vfpfcnvrt& (0+255),b
  3933  002772  0012               	return	
  3934  002774                     l5186:
  3935                           
  3936                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
  3937  002774  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3938  002778  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3939  00277C  2ADE               	incf	postinc2,f,c
  3940  00277E  0E00               	movlw	0
  3941  002780  22DD               	addwfc	postdec2,f,c
  3942                           
  3943                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
  3944  002782  0E00               	movlw	0
  3945  002784  0100               	movlb	0	; () banked
  3946  002786  6FB9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3947  002788  0E00               	movlw	0
  3948  00278A  6FB8               	movwf	?_vfpfcnvrt& (0+255),b
  3949  00278C  0012               	return	
  3950  00278E                     l5192:
  3951                           
  3952                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
  3953  00278E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3954  002792  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3955  002796  CFDE FFF6          	movff	postinc2,tblptrl
  3956  00279A  CFDD FFF7          	movff	postdec2,tblptrh
  3957  00279E                     	if	0	;tblptru may be non-zero
  3958  00279E                     	endif
  3959  00279E                     	if	0	;tblptru may be non-zero
  3960  00279E                     	endif
  3961  00279E  0008               	tblrd		*
  3962  0027A0  50F5               	movf	tablat,w,c
  3963  0027A2  6E14               	movwf	fputc@c,c
  3964  0027A4  6A15               	clrf	fputc@c+1,c
  3965  0027A6  C0B8  F016         	movff	vfpfcnvrt@fp,fputc@fp
  3966  0027AA  C0B9  F017         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3967  0027AE  ECC5  F023         	call	_fputc	;wreg free
  3968                           
  3969                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  3970  0027B2  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3971  0027B6  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3972  0027BA  2ADE               	incf	postinc2,f,c
  3973  0027BC  0E00               	movlw	0
  3974  0027BE  22DD               	addwfc	postdec2,f,c
  3975  0027C0  D7D3               	goto	l5182
  3976  0027C2                     __end_of_vfpfcnvrt:
  3977                           	opt callstack 0
  3978                           
  3979 ;; *************** function _xtoa *****************
  3980 ;; Defined at:
  3981 ;;		line 623 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  fp              2   46[COMRAM] PTR struct _IO_FILE
  3984 ;;		 -> NULL(0), 
  3985 ;;  d               8   48[COMRAM] unsigned long long 
  3986 ;;  x               1   56[COMRAM] unsigned char 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  n               8   73[COMRAM] unsigned long long 
  3989 ;;  c               2   83[COMRAM] int 
  3990 ;;  i               2   81[COMRAM] int 
  3991 ;;  w               2   71[COMRAM] int 
  3992 ;;  p               2   69[COMRAM] int 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  2   46[COMRAM] int 
  3995 ;; Registers used:
  3996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4002 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;Total ram usage:       39 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; Hardware stack levels required when called:    7
  4009 ;; This function calls:
  4010 ;;		_isalpha
  4011 ;;		_isupper
  4012 ;;		_pad
  4013 ;;		_toupper
  4014 ;; This function is called by:
  4015 ;;		_vfpfcnvrt
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text6
  4020  0035F6                     __ptext6:
  4021                           	opt callstack 0
  4022  0035F6                     _xtoa:
  4023                           	opt callstack 20
  4024                           
  4025                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa
      +                          (FILE *fp, unsigned long long d, char x);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 624: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 625:     int c, i, p, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/
      +                          doprnt.c: 626:     unsigned long long n;;/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 629:     if (!(prec < 0)) {
  4026                           
  4027                           ;incstack = 0
  4028  0035F6  AE6B               	btfss	_prec+1,7,c
  4029                           
  4030                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &
      +                          = ~(1 << 1);
  4031  0035F8  926C               	bcf	_flags,1,c
  4032                           
  4033                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < pr
      +                          ec) ? prec : 1;
  4034  0035FA  BE6B               	btfsc	_prec+1,7,c
  4035  0035FC  D005               	goto	u6200
  4036  0035FE  506B               	movf	_prec+1,w,c
  4037  003600  E108               	bnz	l390
  4038  003602  046A               	decf	_prec,w,c
  4039  003604  B0D8               	btfsc	status,0,c
  4040  003606  D005               	goto	l390
  4041  003608                     u6200:
  4042  003608  0E00               	movlw	0
  4043  00360A  6E47               	movwf	xtoa@p+1,c
  4044  00360C  0E01               	movlw	1
  4045  00360E  6E46               	movwf	xtoa@p,c
  4046  003610  D004               	goto	l392
  4047  003612                     l390:
  4048  003612  C06A  F046         	movff	_prec,xtoa@p
  4049  003616  C06B  F047         	movff	_prec+1,xtoa@p+1
  4050  00361A                     l392:
  4051                           
  4052                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  4053  00361A  C068  F048         	movff	_width,xtoa@w
  4054  00361E  C069  F049         	movff	_width+1,xtoa@w+1
  4055                           
  4056                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags &
      +                           (1 << 4)) {
  4057  003622  A86C               	btfss	_flags,4,c
  4058  003624  D004               	goto	l4938
  4059                           
  4060                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  4061  003626  0EFE               	movlw	254
  4062  003628  2648               	addwf	xtoa@w,f,c
  4063  00362A  0EFF               	movlw	255
  4064  00362C  2249               	addwfc	xtoa@w+1,f,c
  4065  00362E                     l4938:
  4066                           
  4067                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  4068  00362E  C031  F04A         	movff	xtoa@d,xtoa@n
  4069  003632  C032  F04B         	movff	xtoa@d+1,xtoa@n+1
  4070  003636  C033  F04C         	movff	xtoa@d+2,xtoa@n+2
  4071  00363A  C034  F04D         	movff	xtoa@d+3,xtoa@n+3
  4072  00363E  C035  F04E         	movff	xtoa@d+4,xtoa@n+4
  4073  003642  C036  F04F         	movff	xtoa@d+5,xtoa@n+5
  4074  003646  C037  F050         	movff	xtoa@d+6,xtoa@n+6
  4075  00364A  C038  F051         	movff	xtoa@d+7,xtoa@n+7
  4076                           
  4077                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(
      +                          dbuf) - 1;
  4078  00364E  0E00               	movlw	0
  4079  003650  6E53               	movwf	xtoa@i+1,c
  4080  003652  0E4F               	movlw	79
  4081  003654  6E52               	movwf	xtoa@i,c
  4082                           
  4083                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '
      +                          \0';
  4084  003656  0E00               	movlw	0
  4085  003658  0101               	movlb	1	; () banked
  4086  00365A  6F5D               	movwf	(_dbuf+79)& (0+255),b
  4087                           
  4088                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4089  00365C  D093               	goto	l4974
  4090  00365E                     l4944:
  4091                           
  4092                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  4093  00365E  0652               	decf	xtoa@i,f,c
  4094  003660  A0D8               	btfss	status,0,c
  4095  003662  0653               	decf	xtoa@i+1,f,c
  4096                           
  4097                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n &
      +                           0x0f;
  4098  003664  0E0F               	movlw	15
  4099  003666  144A               	andwf	xtoa@n,w,c
  4100  003668  6E54               	movwf	xtoa@c,c
  4101  00366A  6A55               	clrf	xtoa@c+1,c
  4102                           
  4103                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c 
      +                          < 10) ? '0' + c : 'a' + (c - 10);
  4104  00366C  BE55               	btfsc	xtoa@c+1,7,c
  4105  00366E  D008               	goto	l4952
  4106  003670  5055               	movf	xtoa@c+1,w,c
  4107  003672  E104               	bnz	u6220
  4108  003674  0E0A               	movlw	10
  4109  003676  5C54               	subwf	xtoa@c,w,c
  4110  003678  A0D8               	btfss	status,0,c
  4111  00367A  D002               	goto	l4952
  4112  00367C                     u6220:
  4113  00367C  0E57               	movlw	87
  4114  00367E  D001               	goto	L3
  4115  003680                     l4952:
  4116  003680  0E30               	movlw	48
  4117  003682                     L3:
  4118  003682  2454               	addwf	xtoa@c,w,c
  4119  003684  6E54               	movwf	xtoa@c,c
  4120  003686  0E00               	movlw	0
  4121  003688  2055               	addwfc	xtoa@c+1,w,c
  4122  00368A  6E55               	movwf	xtoa@c+1,c
  4123                           
  4124                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 
      +                          ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|
      +                          32)-'a') < 26)) {
  4125  00368C  0EBF               	movlw	191
  4126  00368E  6E3A               	movwf	??_xtoa& (0+255),c
  4127  003690  0EFF               	movlw	255
  4128  003692  6E3B               	movwf	(??_xtoa+1)& (0+255),c
  4129  003694  5039               	movf	xtoa@x,w,c
  4130  003696  6E3C               	movwf	(??_xtoa+2)& (0+255),c
  4131  003698  6A3D               	clrf	(??_xtoa+3)& (0+255),c
  4132  00369A  503A               	movf	??_xtoa,w,c
  4133  00369C  263C               	addwf	??_xtoa+2,f,c
  4134  00369E  503B               	movf	??_xtoa+1,w,c
  4135  0036A0  223D               	addwfc	??_xtoa+3,f,c
  4136  0036A2  503D               	movf	??_xtoa+3,w,c
  4137  0036A4  E106               	bnz	u6230
  4138  0036A6  0E1A               	movlw	26
  4139  0036A8  5C3C               	subwf	??_xtoa+2,w,c
  4140  0036AA  B0D8               	btfsc	status,0,c
  4141  0036AC  D002               	goto	u6230
  4142  0036AE  0E01               	movlw	1
  4143  0036B0  D001               	goto	u6240
  4144  0036B2                     u6230:
  4145  0036B2  0E00               	movlw	0
  4146  0036B4                     u6240:
  4147  0036B4  6E42               	movwf	_xtoa$698,c
  4148  0036B6  6A43               	clrf	_xtoa$698+1,c
  4149  0036B8  5042               	movf	_xtoa$698,w,c
  4150  0036BA  1043               	iorwf	_xtoa$698+1,w,c
  4151  0036BC  B4D8               	btfsc	status,2,c
  4152  0036BE  D027               	goto	l4966
  4153  0036C0  0E9F               	movlw	159
  4154  0036C2  6E3A               	movwf	??_xtoa& (0+255),c
  4155  0036C4  0EFF               	movlw	255
  4156  0036C6  6E3B               	movwf	(??_xtoa+1)& (0+255),c
  4157  0036C8  0E20               	movlw	32
  4158  0036CA  1054               	iorwf	xtoa@c,w,c
  4159  0036CC  6E3C               	movwf	(??_xtoa+2)& (0+255),c
  4160  0036CE  0E00               	movlw	0
  4161  0036D0  1055               	iorwf	xtoa@c+1,w,c
  4162  0036D2  6E3D               	movwf	(??_xtoa+3)& (0+255),c
  4163  0036D4  503A               	movf	??_xtoa,w,c
  4164  0036D6  263C               	addwf	??_xtoa+2,f,c
  4165  0036D8  503B               	movf	??_xtoa+1,w,c
  4166  0036DA  223D               	addwfc	??_xtoa+3,f,c
  4167  0036DC  503D               	movf	??_xtoa+3,w,c
  4168  0036DE  E106               	bnz	u6260
  4169  0036E0  0E1A               	movlw	26
  4170  0036E2  5C3C               	subwf	??_xtoa+2,w,c
  4171  0036E4  B0D8               	btfsc	status,0,c
  4172  0036E6  D002               	goto	u6260
  4173  0036E8  0E01               	movlw	1
  4174  0036EA  D001               	goto	u6270
  4175  0036EC                     u6260:
  4176  0036EC  0E00               	movlw	0
  4177  0036EE                     u6270:
  4178  0036EE  6E44               	movwf	_xtoa$699,c
  4179  0036F0  6A45               	clrf	_xtoa$699+1,c
  4180  0036F2  5044               	movf	_xtoa$699,w,c
  4181  0036F4  1045               	iorwf	_xtoa$699+1,w,c
  4182  0036F6  B4D8               	btfsc	status,2,c
  4183  0036F8  D00A               	goto	l4966
  4184                           
  4185                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c =
      +                           toupper(c);
  4186  0036FA  C054  F017         	movff	xtoa@c,toupper@c
  4187  0036FE  C055  F018         	movff	xtoa@c+1,toupper@c+1
  4188  003702  ECA1  F024         	call	_toupper	;wreg free
  4189  003706  C017  F054         	movff	?_toupper,xtoa@c
  4190  00370A  C018  F055         	movff	?_toupper+1,xtoa@c+1
  4191  00370E                     l4966:
  4192                           
  4193                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i]
      +                           = (char)c;
  4194  00370E  0E0E               	movlw	low _dbuf
  4195  003710  2452               	addwf	xtoa@i,w,c
  4196  003712  6ED9               	movwf	fsr2l,c
  4197  003714  0E01               	movlw	high _dbuf
  4198  003716  2053               	addwfc	xtoa@i+1,w,c
  4199  003718  6EDA               	movwf	fsr2h,c
  4200  00371A  C054  FFDF         	movff	xtoa@c,indf2
  4201                           
  4202                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  4203  00371E  0646               	decf	xtoa@p,f,c
  4204  003720  A0D8               	btfss	status,0,c
  4205  003722  0647               	decf	xtoa@p+1,f,c
  4206                           
  4207                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  4208  003724  0648               	decf	xtoa@w,f,c
  4209  003726  A0D8               	btfss	status,0,c
  4210  003728  0649               	decf	xtoa@w+1,f,c
  4211                           
  4212                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >
      +                          > 4;
  4213  00372A  C04A  F03A         	movff	xtoa@n,??_xtoa
  4214  00372E  C04B  F03B         	movff	xtoa@n+1,??_xtoa+1
  4215  003732  C04C  F03C         	movff	xtoa@n+2,??_xtoa+2
  4216  003736  C04D  F03D         	movff	xtoa@n+3,??_xtoa+3
  4217  00373A  C04E  F03E         	movff	xtoa@n+4,??_xtoa+4
  4218  00373E  C04F  F03F         	movff	xtoa@n+5,??_xtoa+5
  4219  003742  C050  F040         	movff	xtoa@n+6,??_xtoa+6
  4220  003746  C051  F041         	movff	xtoa@n+7,??_xtoa+7
  4221  00374A  0E05               	movlw	5
  4222  00374C  D009               	goto	u6290
  4223  00374E                     u6295:
  4224  00374E  90D8               	bcf	status,0,c
  4225  003750  3241               	rrcf	??_xtoa+7,f,c
  4226  003752  3240               	rrcf	??_xtoa+6,f,c
  4227  003754  323F               	rrcf	??_xtoa+5,f,c
  4228  003756  323E               	rrcf	??_xtoa+4,f,c
  4229  003758  323D               	rrcf	??_xtoa+3,f,c
  4230  00375A  323C               	rrcf	??_xtoa+2,f,c
  4231  00375C  323B               	rrcf	??_xtoa+1,f,c
  4232  00375E  323A               	rrcf	??_xtoa,f,c
  4233  003760                     u6290:
  4234  003760  2EE8               	decfsz	wreg,f,c
  4235  003762  D7F5               	goto	u6295
  4236  003764  C03A  F04A         	movff	??_xtoa,xtoa@n
  4237  003768  C03B  F04B         	movff	??_xtoa+1,xtoa@n+1
  4238  00376C  C03C  F04C         	movff	??_xtoa+2,xtoa@n+2
  4239  003770  C03D  F04D         	movff	??_xtoa+3,xtoa@n+3
  4240  003774  C03E  F04E         	movff	??_xtoa+4,xtoa@n+4
  4241  003778  C03F  F04F         	movff	??_xtoa+5,xtoa@n+5
  4242  00377C  C040  F050         	movff	??_xtoa+6,xtoa@n+6
  4243  003780  C041  F051         	movff	??_xtoa+7,xtoa@n+7
  4244  003784                     l4974:
  4245                           
  4246                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4247  003784  BE53               	btfsc	xtoa@i+1,7,c
  4248  003786  D020               	goto	u6340
  4249  003788  5053               	movf	xtoa@i+1,w,c
  4250  00378A  E104               	bnz	u6300
  4251  00378C  0E02               	movlw	2
  4252  00378E  5C52               	subwf	xtoa@i,w,c
  4253  003790  A0D8               	btfss	status,0,c
  4254  003792  D01A               	goto	u6340
  4255  003794                     u6300:
  4256  003794  504A               	movf	xtoa@n,w,c
  4257  003796  104B               	iorwf	xtoa@n+1,w,c
  4258  003798  104C               	iorwf	xtoa@n+2,w,c
  4259  00379A  104D               	iorwf	xtoa@n+3,w,c
  4260  00379C  104E               	iorwf	xtoa@n+4,w,c
  4261  00379E  104F               	iorwf	xtoa@n+5,w,c
  4262  0037A0  1050               	iorwf	xtoa@n+6,w,c
  4263  0037A2  1051               	iorwf	xtoa@n+7,w,c
  4264  0037A4  A4D8               	btfss	status,2,c
  4265  0037A6  D75B               	goto	l4944
  4266  0037A8  BE47               	btfsc	xtoa@p+1,7,c
  4267  0037AA  D005               	goto	u6320
  4268  0037AC  5047               	movf	xtoa@p+1,w,c
  4269  0037AE  E102               	bnz	u6321
  4270  0037B0  0446               	decf	xtoa@p,w,c
  4271  0037B2  B0D8               	btfsc	status,0,c
  4272  0037B4                     u6321:
  4273  0037B4  D754               	goto	l4944
  4274  0037B6                     u6320:
  4275  0037B6  BE49               	btfsc	xtoa@w+1,7,c
  4276  0037B8  D007               	goto	u6340
  4277  0037BA  5049               	movf	xtoa@w+1,w,c
  4278  0037BC  E103               	bnz	u6330
  4279  0037BE  0448               	decf	xtoa@w,w,c
  4280  0037C0  A0D8               	btfss	status,0,c
  4281  0037C2  D002               	goto	u6340
  4282  0037C4                     u6330:
  4283  0037C4  B26C               	btfsc	_flags,1,c
  4284  0037C6  D74B               	goto	l4944
  4285  0037C8                     u6340:
  4286                           
  4287                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags &
      +                           (1 << 4)) {
  4288  0037C8  A86C               	btfss	_flags,4,c
  4289  0037CA  D016               	goto	l4990
  4290                           
  4291                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  4292  0037CC  0652               	decf	xtoa@i,f,c
  4293  0037CE  A0D8               	btfss	status,0,c
  4294  0037D0  0653               	decf	xtoa@i+1,f,c
  4295                           
  4296                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i]
      +                           = x;
  4297  0037D2  0E0E               	movlw	low _dbuf
  4298  0037D4  2452               	addwf	xtoa@i,w,c
  4299  0037D6  6ED9               	movwf	fsr2l,c
  4300  0037D8  0E01               	movlw	high _dbuf
  4301  0037DA  2053               	addwfc	xtoa@i+1,w,c
  4302  0037DC  6EDA               	movwf	fsr2h,c
  4303  0037DE  C039  FFDF         	movff	xtoa@x,indf2
  4304                           
  4305                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  4306  0037E2  0652               	decf	xtoa@i,f,c
  4307  0037E4  A0D8               	btfss	status,0,c
  4308  0037E6  0653               	decf	xtoa@i+1,f,c
  4309                           
  4310                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i]
      +                           = '0';
  4311  0037E8  0E0E               	movlw	low _dbuf
  4312  0037EA  2452               	addwf	xtoa@i,w,c
  4313  0037EC  6ED9               	movwf	fsr2l,c
  4314  0037EE  0E01               	movlw	high _dbuf
  4315  0037F0  2053               	addwfc	xtoa@i+1,w,c
  4316  0037F2  6EDA               	movwf	fsr2h,c
  4317  0037F4  0E30               	movlw	48
  4318  0037F6  6EDF               	movwf	indf2,c
  4319  0037F8                     l4990:
  4320                           
  4321                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(
      +                          fp, &dbuf[i], w);
  4322  0037F8  C02F  F024         	movff	xtoa@fp,pad@fp
  4323  0037FC  C030  F025         	movff	xtoa@fp+1,pad@fp+1
  4324  003800  0E0E               	movlw	low _dbuf
  4325  003802  2452               	addwf	xtoa@i,w,c
  4326  003804  6E26               	movwf	pad@buf,c
  4327  003806  0E01               	movlw	high _dbuf
  4328  003808  2053               	addwfc	xtoa@i+1,w,c
  4329  00380A  6E27               	movwf	pad@buf+1,c
  4330  00380C  C048  F028         	movff	xtoa@w,pad@p
  4331  003810  C049  F029         	movff	xtoa@w+1,pad@p+1
  4332  003814  EC30  F022         	call	_pad	;wreg free
  4333  003818  C024  F02F         	movff	?_pad,?_xtoa
  4334  00381C  C025  F030         	movff	?_pad+1,?_xtoa+1
  4335  003820  0012               	return		;funcret
  4336  003822                     __end_of_xtoa:
  4337                           	opt callstack 0
  4338                           
  4339 ;; *************** function _toupper *****************
  4340 ;; Defined at:
  4341 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  c               2   22[COMRAM] int 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  2   22[COMRAM] int 
  4348 ;; Registers used:
  4349 ;;		wreg, status,2, status,0
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;Total ram usage:        8 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    3
  4362 ;; This function calls:
  4363 ;;		_islower
  4364 ;; This function is called by:
  4365 ;;		_xtoa
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text7
  4370  004942                     __ptext7:
  4371                           	opt callstack 0
  4372  004942                     _toupper:
  4373                           	opt callstack 23
  4374                           
  4375                           ;incstack = 0
  4376  004942  0E9F               	movlw	159
  4377  004944  6E19               	movwf	??_toupper& (0+255),c
  4378  004946  0EFF               	movlw	255
  4379  004948  6E1A               	movwf	(??_toupper+1)& (0+255),c
  4380  00494A  C017  F01B         	movff	toupper@c,??_toupper+2
  4381  00494E  C018  F01C         	movff	toupper@c+1,??_toupper+3
  4382  004952  5019               	movf	??_toupper,w,c
  4383  004954  261B               	addwf	??_toupper+2,f,c
  4384  004956  501A               	movf	??_toupper+1,w,c
  4385  004958  221C               	addwfc	??_toupper+3,f,c
  4386  00495A  501C               	movf	??_toupper+3,w,c
  4387  00495C  E106               	bnz	u4620
  4388  00495E  0E1A               	movlw	26
  4389  004960  5C1B               	subwf	??_toupper+2,w,c
  4390  004962  B0D8               	btfsc	status,0,c
  4391  004964  D002               	goto	u4620
  4392  004966  0E01               	movlw	1
  4393  004968  D001               	goto	u4630
  4394  00496A                     u4620:
  4395  00496A  0E00               	movlw	0
  4396  00496C                     u4630:
  4397  00496C  6E1D               	movwf	_toupper$1321,c
  4398  00496E  6A1E               	clrf	_toupper$1321+1,c
  4399  004970  501D               	movf	_toupper$1321,w,c
  4400  004972  101E               	iorwf	_toupper$1321+1,w,c
  4401  004974  B4D8               	btfsc	status,2,c
  4402  004976  D005               	goto	l1292
  4403  004978  0E5F               	movlw	95
  4404  00497A  1417               	andwf	toupper@c,w,c
  4405  00497C  6E17               	movwf	?_toupper,c
  4406  00497E  6A18               	clrf	?_toupper+1,c
  4407  004980  0012               	return	
  4408  004982                     l1292:
  4409  004982  C017  F017         	movff	toupper@c,?_toupper
  4410  004986  C018  F018         	movff	toupper@c+1,?_toupper+1
  4411  00498A  0012               	return		;funcret
  4412  00498C                     __end_of_toupper:
  4413                           	opt callstack 0
  4414                           
  4415 ;; *************** function _islower *****************
  4416 ;; Defined at:
  4417 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;  c               2   16[COMRAM] int 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;		None
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  2   16[COMRAM] int 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;Total ram usage:        6 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    2
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_toupper
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           	psect	text8
  4446  004B38                     __ptext8:
  4447                           	opt callstack 0
  4448  004B38                     _islower:
  4449                           	opt callstack 23
  4450                           
  4451                           ;incstack = 0
  4452  004B38  0E9F               	movlw	159
  4453  004B3A  6E13               	movwf	??_islower& (0+255),c
  4454  004B3C  0EFF               	movlw	255
  4455  004B3E  6E14               	movwf	(??_islower+1)& (0+255),c
  4456  004B40  C011  F015         	movff	islower@c,??_islower+2
  4457  004B44  C012  F016         	movff	islower@c+1,??_islower+3
  4458  004B48  5013               	movf	??_islower,w,c
  4459  004B4A  2615               	addwf	??_islower+2,f,c
  4460  004B4C  5014               	movf	??_islower+1,w,c
  4461  004B4E  2216               	addwfc	??_islower+3,f,c
  4462  004B50  5016               	movf	??_islower+3,w,c
  4463  004B52  E106               	bnz	u4310
  4464  004B54  0E1A               	movlw	26
  4465  004B56  5C15               	subwf	??_islower+2,w,c
  4466  004B58  B0D8               	btfsc	status,0,c
  4467  004B5A  D002               	goto	u4310
  4468  004B5C  0E01               	movlw	1
  4469  004B5E  D001               	goto	u4320
  4470  004B60                     u4310:
  4471  004B60  0E00               	movlw	0
  4472  004B62                     u4320:
  4473  004B62  6E11               	movwf	?_islower,c
  4474  004B64  6A12               	clrf	?_islower+1,c
  4475  004B66  0012               	return		;funcret
  4476  004B68                     __end_of_islower:
  4477                           	opt callstack 0
  4478                           
  4479 ;; *************** function _isalpha *****************
  4480 ;; Defined at:
  4481 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;  c               2   16[COMRAM] int 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;		None
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  2   16[COMRAM] int 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2, status,0
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4495 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;Total ram usage:        6 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:    2
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_xtoa
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text9
  4510  004AD2                     __ptext9:
  4511                           	opt callstack 0
  4512  004AD2                     _isalpha:
  4513                           	opt callstack 24
  4514                           
  4515                           ;incstack = 0
  4516  004AD2  0E9F               	movlw	159
  4517  004AD4  6E13               	movwf	??_isalpha& (0+255),c
  4518  004AD6  0EFF               	movlw	255
  4519  004AD8  6E14               	movwf	(??_isalpha+1)& (0+255),c
  4520  004ADA  0E20               	movlw	32
  4521  004ADC  1011               	iorwf	isalpha@c,w,c
  4522  004ADE  6E15               	movwf	(??_isalpha+2)& (0+255),c
  4523  004AE0  0E00               	movlw	0
  4524  004AE2  1012               	iorwf	isalpha@c+1,w,c
  4525  004AE4  6E16               	movwf	(??_isalpha+3)& (0+255),c
  4526  004AE6  5013               	movf	??_isalpha,w,c
  4527  004AE8  2615               	addwf	??_isalpha+2,f,c
  4528  004AEA  5014               	movf	??_isalpha+1,w,c
  4529  004AEC  2216               	addwfc	??_isalpha+3,f,c
  4530  004AEE  5016               	movf	??_isalpha+3,w,c
  4531  004AF0  E106               	bnz	u4600
  4532  004AF2  0E1A               	movlw	26
  4533  004AF4  5C15               	subwf	??_isalpha+2,w,c
  4534  004AF6  B0D8               	btfsc	status,0,c
  4535  004AF8  D002               	goto	u4600
  4536  004AFA  0E01               	movlw	1
  4537  004AFC  D001               	goto	u4610
  4538  004AFE                     u4600:
  4539  004AFE  0E00               	movlw	0
  4540  004B00                     u4610:
  4541  004B00  6E11               	movwf	?_isalpha,c
  4542  004B02  6A12               	clrf	?_isalpha+1,c
  4543  004B04  0012               	return		;funcret
  4544  004B06                     __end_of_isalpha:
  4545                           	opt callstack 0
  4546                           
  4547 ;; *************** function _strncmp *****************
  4548 ;; Defined at:
  4549 ;;		line 3 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  _l              2   16[COMRAM] PTR const unsigned char 
  4552 ;;		 -> vfpfcnvrt@ct(3), 
  4553 ;;  _r              2   18[COMRAM] PTR const unsigned char 
  4554 ;;		 -> STR_23(3), 
  4555 ;;  n               2   20[COMRAM] unsigned int 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  r               2   25[COMRAM] PTR const unsigned char 
  4558 ;;		 -> STR_23(3), 
  4559 ;;  l               2   23[COMRAM] PTR const unsigned char 
  4560 ;;		 -> vfpfcnvrt@ct(3), 
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  2   16[COMRAM] int 
  4563 ;; Registers used:
  4564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4570 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4571 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;Total ram usage:       11 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:    2
  4577 ;; This function calls:
  4578 ;;		Nothing
  4579 ;; This function is called by:
  4580 ;;		_vfpfcnvrt
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           	psect	text10
  4585  0043BE                     __ptext10:
  4586                           	opt callstack 0
  4587  0043BE                     _strncmp:
  4588                           	opt callstack 25
  4589                           
  4590                           ;incstack = 0
  4591  0043BE  C011  F018         	movff	strncmp@_l,strncmp@l
  4592  0043C2  C012  F019         	movff	strncmp@_l+1,strncmp@l+1
  4593  0043C6  C013  F01A         	movff	strncmp@_r,strncmp@r
  4594  0043CA  C014  F01B         	movff	strncmp@_r+1,strncmp@r+1
  4595  0043CE  0615               	decf	strncmp@n,f,c
  4596  0043D0  A0D8               	btfss	status,0,c
  4597  0043D2  0616               	decf	strncmp@n+1,f,c
  4598  0043D4  2815               	incf	strncmp@n,w,c
  4599  0043D6  E10F               	bnz	l5044
  4600  0043D8  2816               	incf	strncmp@n+1,w,c
  4601  0043DA  A4D8               	btfss	status,2,c
  4602  0043DC  D00C               	goto	l5044
  4603  0043DE  0E00               	movlw	0
  4604  0043E0  6E12               	movwf	?_strncmp+1,c
  4605  0043E2  0E00               	movlw	0
  4606  0043E4  6E11               	movwf	?_strncmp,c
  4607  0043E6  0012               	return	
  4608  0043E8                     l5042:
  4609  0043E8  4A18               	infsnz	strncmp@l,f,c
  4610  0043EA  2A19               	incf	strncmp@l+1,f,c
  4611  0043EC  4A1A               	infsnz	strncmp@r,f,c
  4612  0043EE  2A1B               	incf	strncmp@r+1,f,c
  4613  0043F0  0615               	decf	strncmp@n,f,c
  4614  0043F2  A0D8               	btfss	status,0,c
  4615  0043F4  0616               	decf	strncmp@n+1,f,c
  4616  0043F6                     l5044:
  4617  0043F6  C018  FFD9         	movff	strncmp@l,fsr2l
  4618  0043FA  C019  FFDA         	movff	strncmp@l+1,fsr2h
  4619  0043FE  50DF               	movf	indf2,w,c
  4620  004400  B4D8               	btfsc	status,2,c
  4621  004402  D01C               	goto	u6470
  4622  004404  C01A  FFF6         	movff	strncmp@r,tblptrl
  4623  004408  C01B  FFF7         	movff	strncmp@r+1,tblptrh
  4624  00440C                     	if	0	;tblptru may be non-zero
  4625  00440C                     	endif
  4626  00440C                     	if	0	;tblptru may be non-zero
  4627  00440C                     	endif
  4628  00440C  0008               	tblrd		*
  4629  00440E  50F5               	movf	tablat,w,c
  4630  004410  0900               	iorlw	0
  4631  004412  B4D8               	btfsc	status,2,c
  4632  004414  D013               	goto	u6470
  4633  004416  5015               	movf	strncmp@n,w,c
  4634  004418  1016               	iorwf	strncmp@n+1,w,c
  4635  00441A  B4D8               	btfsc	status,2,c
  4636  00441C  D00F               	goto	u6470
  4637  00441E  C018  FFD9         	movff	strncmp@l,fsr2l
  4638  004422  C019  FFDA         	movff	strncmp@l+1,fsr2h
  4639  004426  50DF               	movf	indf2,w,c
  4640  004428  6E17               	movwf	??_strncmp& (0+255),c
  4641  00442A  C01A  FFF6         	movff	strncmp@r,tblptrl
  4642  00442E  C01B  FFF7         	movff	strncmp@r+1,tblptrh
  4643  004432                     	if	0	;tblptru may be non-zero
  4644  004432                     	endif
  4645  004432                     	if	0	;tblptru may be non-zero
  4646  004432                     	endif
  4647  004432  0008               	tblrd		*
  4648  004434  50F5               	movf	tablat,w,c
  4649  004436  1817               	xorwf	??_strncmp,w,c
  4650  004438  B4D8               	btfsc	status,2,c
  4651  00443A  D7D6               	goto	l5042
  4652  00443C                     u6470:
  4653  00443C  C018  FFD9         	movff	strncmp@l,fsr2l
  4654  004440  C019  FFDA         	movff	strncmp@l+1,fsr2h
  4655  004444  50DF               	movf	indf2,w,c
  4656  004446  6E17               	movwf	??_strncmp& (0+255),c
  4657  004448  C01A  FFF6         	movff	strncmp@r,tblptrl
  4658  00444C  C01B  FFF7         	movff	strncmp@r+1,tblptrh
  4659  004450                     	if	0	;tblptru may be non-zero
  4660  004450                     	endif
  4661  004450                     	if	0	;tblptru may be non-zero
  4662  004450                     	endif
  4663  004450  0008               	tblrd		*
  4664  004452  50F5               	movf	tablat,w,c
  4665  004454  5C17               	subwf	??_strncmp,w,c
  4666  004456  6E11               	movwf	?_strncmp,c
  4667  004458  6A12               	clrf	?_strncmp+1,c
  4668  00445A  A0D8               	btfss	status,0,c
  4669  00445C  0612               	decf	?_strncmp+1,f,c
  4670  00445E  0012               	return		;funcret
  4671  004460                     __end_of_strncmp:
  4672                           	opt callstack 0
  4673                           
  4674 ;; *************** function _efgtoa *****************
  4675 ;; Defined at:
  4676 ;;		line 319 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;  fp              2   61[COMRAM] PTR struct _IO_FILE
  4679 ;;		 -> NULL(0), 
  4680 ;;  f               4   63[COMRAM] PTR struct _IO_FILE
  4681 ;;  c               1   67[COMRAM] unsigned char 
  4682 ;; Auto vars:     Size  Location     Type
  4683 ;;  u               4   52[BANK0 ] unsigned char 
  4684 ;;  g               4   44[BANK0 ] unsigned char 
  4685 ;;  l               4   38[BANK0 ] unsigned char 
  4686 ;;  h               4   34[BANK0 ] unsigned char 
  4687 ;;  ou              4    0[BANK0 ] unsigned char 
  4688 ;;  n               2   50[BANK0 ] int 
  4689 ;;  e               2   48[BANK0 ] int 
  4690 ;;  i               2   42[BANK0 ] int 
  4691 ;;  w               2   31[BANK0 ] int 
  4692 ;;  p               2   28[BANK0 ] int 
  4693 ;;  sign            2   26[BANK0 ] int 
  4694 ;;  d               2   24[BANK0 ] int 
  4695 ;;  ne              2   22[BANK0 ] int 
  4696 ;;  m               2   20[BANK0 ] int 
  4697 ;;  pp              2   18[BANK0 ] int 
  4698 ;;  t               2   16[BANK0 ] int 
  4699 ;;  mode            1   33[BANK0 ] unsigned char 
  4700 ;;  nmode           1   30[BANK0 ] unsigned char 
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  2   61[COMRAM] int 
  4703 ;; Registers used:
  4704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4710 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;Total ram usage:       68 bytes
  4715 ;; Hardware stack levels used:    1
  4716 ;; Hardware stack levels required when called:    7
  4717 ;; This function calls:
  4718 ;;		___awdiv
  4719 ;;		___awmod
  4720 ;;		___fladd
  4721 ;;		___fldiv
  4722 ;;		___fleq
  4723 ;;		___flge
  4724 ;;		___flmul
  4725 ;;		___flneg
  4726 ;;		___flsub
  4727 ;;		___fltol
  4728 ;;		___fpclassifyf
  4729 ;;		_floorf
  4730 ;;		_isupper
  4731 ;;		_pad
  4732 ;;		_strcpy
  4733 ;;		_tolower
  4734 ;; This function is called by:
  4735 ;;		_vfpfcnvrt
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           	psect	text11
  4740  00109A                     __ptext11:
  4741                           	opt callstack 0
  4742  00109A                     _efgtoa:
  4743                           	opt callstack 20
  4744                           
  4745                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 319: static int efgt
      +                          oa(FILE *fp, long double f, char c);/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 320: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c:
      +                           321:     char mode, nmode;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dop
      +                          rnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;/Applications/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 323:     long double g, h, l, ou, u;
  4746                           
  4747                           ;incstack = 0
  4748  00109A  0E00               	movlw	0
  4749  00109C  0100               	movlb	0	; () banked
  4750  00109E  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4751  0010A0  0E00               	movlw	0
  4752  0010A2  6F9A               	movwf	efgtoa@sign& (0+255),b
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 327:     g = f;
  4756  0010A4  C040  F0AC         	movff	efgtoa@f,efgtoa@g
  4757  0010A8  C041  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
  4758  0010AC  C042  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
  4759  0010B0  C043  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0
      +                          ) {
  4763  0010B4  AFAF               	btfss	(efgtoa@g+3)& (0+255),7,b
  4764  0010B6  D016               	goto	l4640
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 329:         sign = 
      +                          1;
  4768  0010B8  0E00               	movlw	0
  4769  0010BA  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4770  0010BC  0E01               	movlw	1
  4771  0010BE  6F9A               	movwf	efgtoa@sign& (0+255),b
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  4775  0010C0  C0AC  F011         	movff	efgtoa@g,___flneg@f1
  4776  0010C4  C0AD  F012         	movff	efgtoa@g+1,___flneg@f1+1
  4777  0010C8  C0AE  F013         	movff	efgtoa@g+2,___flneg@f1+2
  4778  0010CC  C0AF  F014         	movff	efgtoa@g+3,___flneg@f1+3
  4779  0010D0  ECE4  F025         	call	___flneg	;wreg free
  4780  0010D4  C011  F0AC         	movff	?___flneg,efgtoa@g
  4781  0010D8  C012  F0AD         	movff	?___flneg+1,efgtoa@g+1
  4782  0010DC  C013  F0AE         	movff	?___flneg+2,efgtoa@g+2
  4783  0010E0  C014  F0AF         	movff	?___flneg+3,efgtoa@g+3
  4784  0010E4                     l4640:
  4785                           
  4786                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  4787  0010E4  0E00               	movlw	0
  4788  0010E6  0100               	movlb	0	; () banked
  4789  0010E8  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
  4790  0010EA  0E00               	movlw	0
  4791  0010EC  6FB2               	movwf	efgtoa@n& (0+255),b
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 335:     w = width;
  4795  0010EE  C068  F09F         	movff	_width,efgtoa@w
  4796  0010F2  C069  F0A0         	movff	_width+1,efgtoa@w+1
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 336:     if (sign ||
      +                           (flags & (1 << 2))) {
  4800  0010F6  519A               	movf	efgtoa@sign& (0+255),w,b
  4801  0010F8  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4802  0010FA  A4D8               	btfss	status,2,c
  4803  0010FC  D002               	goto	u5690
  4804                           
  4805                           ; BSR set to: 0
  4806  0010FE  A46C               	btfss	_flags,2,c
  4807  001100  D013               	goto	l4660
  4808  001102                     u5690:
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 337:         dbuf[n]
      +                           = sign ? '-' : '+';
  4812  001102  519A               	movf	efgtoa@sign& (0+255),w,b
  4813  001104  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4814  001106  A4D8               	btfss	status,2,c
  4815  001108  D004               	goto	l4652
  4816                           
  4817                           ; BSR set to: 0
  4818  00110A  0E00               	movlw	0
  4819  00110C  6F85               	movwf	(_efgtoa$677+1)& (0+255),b
  4820  00110E  0E2B               	movlw	43
  4821  001110  D003               	goto	L4
  4822  001112                     l4652:
  4823                           
  4824                           ; BSR set to: 0
  4825  001112  0E00               	movlw	0
  4826  001114  6F85               	movwf	(_efgtoa$677+1)& (0+255),b
  4827  001116  0E2D               	movlw	45
  4828  001118                     L4:
  4829  001118  6F84               	movwf	_efgtoa$677& (0+255),b
  4830                           
  4831                           ; BSR set to: 0
  4832  00111A  C084  F10E         	movff	_efgtoa$677,_dbuf
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 338:         ++n;
  4836  00111E  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4837  001120  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 339:         --w;
  4841  001122  079F               	decf	efgtoa@w& (0+255),f,b
  4842  001124  A0D8               	btfss	status,0,c
  4843  001126  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4844  001128                     l4660:
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 344:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4848  001128  C0AC  F011         	movff	efgtoa@g,___fpclassifyf@x
  4849  00112C  C0AD  F012         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4850  001130  C0AE  F013         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4851  001134  C0AF  F014         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4852  001138  ECCA  F020         	call	___fpclassifyf	;wreg free
  4853  00113C  0411               	decf	?___fpclassifyf,w,c
  4854  00113E  1012               	iorwf	?___fpclassifyf+1,w,c
  4855  001140  A4D8               	btfss	status,2,c
  4856  001142  D04C               	goto	l4678
  4857  001144  0EBF               	movlw	191
  4858  001146  6E45               	movwf	??_efgtoa& (0+255),c
  4859  001148  0EFF               	movlw	255
  4860  00114A  6E46               	movwf	(??_efgtoa+1)& (0+255),c
  4861  00114C  5044               	movf	efgtoa@c,w,c
  4862  00114E  6E47               	movwf	(??_efgtoa+2)& (0+255),c
  4863  001150  6A48               	clrf	(??_efgtoa+3)& (0+255),c
  4864  001152  5045               	movf	??_efgtoa,w,c
  4865  001154  2647               	addwf	??_efgtoa+2,f,c
  4866  001156  5046               	movf	??_efgtoa+1,w,c
  4867  001158  2248               	addwfc	??_efgtoa+3,f,c
  4868  00115A  5048               	movf	??_efgtoa+3,w,c
  4869  00115C  E106               	bnz	u5720
  4870  00115E  0E1A               	movlw	26
  4871  001160  5C47               	subwf	??_efgtoa+2,w,c
  4872  001162  B0D8               	btfsc	status,0,c
  4873  001164  D002               	goto	u5720
  4874  001166  0E01               	movlw	1
  4875  001168  D001               	goto	u5730
  4876  00116A                     u5720:
  4877  00116A  0E00               	movlw	0
  4878  00116C                     u5730:
  4879  00116C  0100               	movlb	0	; () banked
  4880  00116E  6F86               	movwf	_efgtoa$678& (0+255),b
  4881  001170  6B87               	clrf	(_efgtoa$678+1)& (0+255),b
  4882                           
  4883                           ; BSR set to: 0
  4884  001172  5186               	movf	_efgtoa$678& (0+255),w,b
  4885  001174  1187               	iorwf	(_efgtoa$678+1)& (0+255),w,b
  4886  001176  B4D8               	btfsc	status,2,c
  4887  001178  D00D               	goto	l4670
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 345:             str
      +                          cpy(&dbuf[n], "INF");
  4891  00117A  0E0E               	movlw	low _dbuf
  4892  00117C  25B2               	addwf	efgtoa@n& (0+255),w,b
  4893  00117E  6E11               	movwf	strcpy@dest,c
  4894  001180  0E01               	movlw	high _dbuf
  4895  001182  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4896  001184  6E12               	movwf	strcpy@dest+1,c
  4897  001186  0E85               	movlw	low STR_13
  4898  001188  6E13               	movwf	strcpy@src,c
  4899  00118A  0E10               	movlw	high STR_13
  4900  00118C  6E14               	movwf	strcpy@src+1,c
  4901  00118E  EC51  F024         	call	_strcpy	;wreg free
  4902                           
  4903                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 346:         } else 
      +                          {
  4904  001192  D00C               	goto	l4672
  4905  001194                     l4670:
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 347:             str
      +                          cpy(&dbuf[n], "inf");
  4909  001194  0E0E               	movlw	low _dbuf
  4910  001196  25B2               	addwf	efgtoa@n& (0+255),w,b
  4911  001198  6E11               	movwf	strcpy@dest,c
  4912  00119A  0E01               	movlw	high _dbuf
  4913  00119C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4914  00119E  6E12               	movwf	strcpy@dest+1,c
  4915  0011A0  0E8D               	movlw	low STR_14
  4916  0011A2  6E13               	movwf	strcpy@src,c
  4917  0011A4  0E10               	movlw	high STR_14
  4918  0011A6  6E14               	movwf	strcpy@src+1,c
  4919  0011A8  EC51  F024         	call	_strcpy	;wreg free
  4920  0011AC                     l4672:
  4921                           
  4922                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 349:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  4923  0011AC  0100               	movlb	0	; () banked
  4924  0011AE  0EFD               	movlw	253
  4925  0011B0  279F               	addwf	efgtoa@w& (0+255),f,b
  4926  0011B2  0EFF               	movlw	255
  4927  0011B4  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 350:         return 
      +                          pad(fp, &dbuf[0], w);
  4931  0011B6  C03E  F024         	movff	efgtoa@fp,pad@fp
  4932  0011BA  C03F  F025         	movff	efgtoa@fp+1,pad@fp+1
  4933  0011BE  0E0E               	movlw	low _dbuf
  4934  0011C0  6E26               	movwf	pad@buf,c
  4935  0011C2  0E01               	movlw	high _dbuf
  4936  0011C4  6E27               	movwf	pad@buf+1,c
  4937  0011C6  C09F  F028         	movff	efgtoa@w,pad@p
  4938  0011CA  C0A0  F029         	movff	efgtoa@w+1,pad@p+1
  4939  0011CE  EC30  F022         	call	_pad	;wreg free
  4940  0011D2  C024  F03E         	movff	?_pad,?_efgtoa
  4941  0011D6  C025  F03F         	movff	?_pad+1,?_efgtoa+1
  4942  0011DA  0012               	return	
  4943  0011DC                     l4678:
  4944                           
  4945                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 353:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4946  0011DC  C0AC  F011         	movff	efgtoa@g,___fpclassifyf@x
  4947  0011E0  C0AD  F012         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4948  0011E4  C0AE  F013         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4949  0011E8  C0AF  F014         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4950  0011EC  ECCA  F020         	call	___fpclassifyf	;wreg free
  4951  0011F0  5011               	movf	?___fpclassifyf,w,c
  4952  0011F2  1012               	iorwf	?___fpclassifyf+1,w,c
  4953  0011F4  A4D8               	btfss	status,2,c
  4954  0011F6  D04C               	goto	l4696
  4955  0011F8  0EBF               	movlw	191
  4956  0011FA  6E45               	movwf	??_efgtoa& (0+255),c
  4957  0011FC  0EFF               	movlw	255
  4958  0011FE  6E46               	movwf	(??_efgtoa+1)& (0+255),c
  4959  001200  5044               	movf	efgtoa@c,w,c
  4960  001202  6E47               	movwf	(??_efgtoa+2)& (0+255),c
  4961  001204  6A48               	clrf	(??_efgtoa+3)& (0+255),c
  4962  001206  5045               	movf	??_efgtoa,w,c
  4963  001208  2647               	addwf	??_efgtoa+2,f,c
  4964  00120A  5046               	movf	??_efgtoa+1,w,c
  4965  00120C  2248               	addwfc	??_efgtoa+3,f,c
  4966  00120E  5048               	movf	??_efgtoa+3,w,c
  4967  001210  E106               	bnz	u5760
  4968  001212  0E1A               	movlw	26
  4969  001214  5C47               	subwf	??_efgtoa+2,w,c
  4970  001216  B0D8               	btfsc	status,0,c
  4971  001218  D002               	goto	u5760
  4972  00121A  0E01               	movlw	1
  4973  00121C  D001               	goto	u5770
  4974  00121E                     u5760:
  4975  00121E  0E00               	movlw	0
  4976  001220                     u5770:
  4977  001220  0100               	movlb	0	; () banked
  4978  001222  6F88               	movwf	_efgtoa$682& (0+255),b
  4979  001224  6B89               	clrf	(_efgtoa$682+1)& (0+255),b
  4980                           
  4981                           ; BSR set to: 0
  4982  001226  5188               	movf	_efgtoa$682& (0+255),w,b
  4983  001228  1189               	iorwf	(_efgtoa$682+1)& (0+255),w,b
  4984  00122A  B4D8               	btfsc	status,2,c
  4985  00122C  D00D               	goto	l4688
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 354:             str
      +                          cpy(&dbuf[n], "NAN");
  4989  00122E  0E0E               	movlw	low _dbuf
  4990  001230  25B2               	addwf	efgtoa@n& (0+255),w,b
  4991  001232  6E11               	movwf	strcpy@dest,c
  4992  001234  0E01               	movlw	high _dbuf
  4993  001236  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4994  001238  6E12               	movwf	strcpy@dest+1,c
  4995  00123A  0E89               	movlw	low STR_17
  4996  00123C  6E13               	movwf	strcpy@src,c
  4997  00123E  0E10               	movlw	high STR_17
  4998  001240  6E14               	movwf	strcpy@src+1,c
  4999  001242  EC51  F024         	call	_strcpy	;wreg free
  5000                           
  5001                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 355:         } else 
      +                          {
  5002  001246  D00C               	goto	l4690
  5003  001248                     l4688:
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 356:             str
      +                          cpy(&dbuf[n], "nan");
  5007  001248  0E0E               	movlw	low _dbuf
  5008  00124A  25B2               	addwf	efgtoa@n& (0+255),w,b
  5009  00124C  6E11               	movwf	strcpy@dest,c
  5010  00124E  0E01               	movlw	high _dbuf
  5011  001250  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5012  001252  6E12               	movwf	strcpy@dest+1,c
  5013  001254  0E91               	movlw	low STR_18
  5014  001256  6E13               	movwf	strcpy@src,c
  5015  001258  0E10               	movlw	high STR_18
  5016  00125A  6E14               	movwf	strcpy@src+1,c
  5017  00125C  EC51  F024         	call	_strcpy	;wreg free
  5018  001260                     l4690:
  5019                           
  5020                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 358:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  5021  001260  0100               	movlb	0	; () banked
  5022  001262  0EFD               	movlw	253
  5023  001264  279F               	addwf	efgtoa@w& (0+255),f,b
  5024  001266  0EFF               	movlw	255
  5025  001268  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 359:         return 
      +                          pad(fp, &dbuf[0], w);
  5029  00126A  C03E  F024         	movff	efgtoa@fp,pad@fp
  5030  00126E  C03F  F025         	movff	efgtoa@fp+1,pad@fp+1
  5031  001272  0E0E               	movlw	low _dbuf
  5032  001274  6E26               	movwf	pad@buf,c
  5033  001276  0E01               	movlw	high _dbuf
  5034  001278  6E27               	movwf	pad@buf+1,c
  5035  00127A  C09F  F028         	movff	efgtoa@w,pad@p
  5036  00127E  C0A0  F029         	movff	efgtoa@w+1,pad@p+1
  5037  001282  EC30  F022         	call	_pad	;wreg free
  5038  001286  C024  F03E         	movff	?_pad,?_efgtoa
  5039  00128A  C025  F03F         	movff	?_pad+1,?_efgtoa+1
  5040  00128E  0012               	return	
  5041  001290                     l4696:
  5042                           
  5043                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  5044  001290  0E00               	movlw	0
  5045  001292  0100               	movlb	0	; () banked
  5046  001294  6FB4               	movwf	efgtoa@u& (0+255),b
  5047  001296  0E00               	movlw	0
  5048  001298  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  5049  00129A  0E80               	movlw	128
  5050  00129C  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  5051  00129E  0E3F               	movlw	63
  5052  0012A0  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  5053                           
  5054                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  5055  0012A2  0E00               	movlw	0
  5056  0012A4  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  5057  0012A6  0E00               	movlw	0
  5058  0012A8  6FB0               	movwf	efgtoa@e& (0+255),b
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 
      +                          0.0)) {
  5062  0012AA  C0AC  F011         	movff	efgtoa@g,___fleq@ff1
  5063  0012AE  C0AD  F012         	movff	efgtoa@g+1,___fleq@ff1+1
  5064  0012B2  C0AE  F013         	movff	efgtoa@g+2,___fleq@ff1+2
  5065  0012B6  C0AF  F014         	movff	efgtoa@g+3,___fleq@ff1+3
  5066  0012BA  0E00               	movlw	0
  5067  0012BC  6E15               	movwf	___fleq@ff2,c
  5068  0012BE  0E00               	movlw	0
  5069  0012C0  6E16               	movwf	___fleq@ff2+1,c
  5070  0012C2  0E00               	movlw	0
  5071  0012C4  6E17               	movwf	___fleq@ff2+2,c
  5072  0012C6  0E00               	movlw	0
  5073  0012C8  6E18               	movwf	___fleq@ff2+3,c
  5074  0012CA  ECC5  F022         	call	___fleq	;wreg free
  5075  0012CE  A0D8               	btfss	status,0,c
  5076  0012D0  D01E               	goto	l4706
  5077  0012D2  D076               	goto	u5810
  5078  0012D4                     l4702:
  5079                           
  5080                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 367:             u =
      +                           u*10.0;
  5081  0012D4  C0B4  F011         	movff	efgtoa@u,___flmul@b
  5082  0012D8  C0B5  F012         	movff	efgtoa@u+1,___flmul@b+1
  5083  0012DC  C0B6  F013         	movff	efgtoa@u+2,___flmul@b+2
  5084  0012E0  C0B7  F014         	movff	efgtoa@u+3,___flmul@b+3
  5085  0012E4  0E00               	movlw	0
  5086  0012E6  6E15               	movwf	___flmul@a,c
  5087  0012E8  0E00               	movlw	0
  5088  0012EA  6E16               	movwf	___flmul@a+1,c
  5089  0012EC  0E20               	movlw	32
  5090  0012EE  6E17               	movwf	___flmul@a+2,c
  5091  0012F0  0E41               	movlw	65
  5092  0012F2  6E18               	movwf	___flmul@a+3,c
  5093  0012F4  ECE1  F013         	call	___flmul	;wreg free
  5094  0012F8  C011  F0B4         	movff	?___flmul,efgtoa@u
  5095  0012FC  C012  F0B5         	movff	?___flmul+1,efgtoa@u+1
  5096  001300  C013  F0B6         	movff	?___flmul+2,efgtoa@u+2
  5097  001304  C014  F0B7         	movff	?___flmul+3,efgtoa@u+3
  5098                           
  5099                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 368:             ++e
      +                          ;
  5100  001308  0100               	movlb	0	; () banked
  5101  00130A  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  5102  00130C  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  5103  00130E                     l4706:
  5104                           
  5105                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 366:         while (
      +                          !(g < (u*10.0))) {
  5106  00130E  C0AC  F02A         	movff	efgtoa@g,___flge@ff1
  5107  001312  C0AD  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  5108  001316  C0AE  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  5109  00131A  C0AF  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  5110  00131E  0E00               	movlw	0
  5111  001320  6E15               	movwf	___flmul@a,c
  5112  001322  0E00               	movlw	0
  5113  001324  6E16               	movwf	___flmul@a+1,c
  5114  001326  0E20               	movlw	32
  5115  001328  6E17               	movwf	___flmul@a+2,c
  5116  00132A  0E41               	movlw	65
  5117  00132C  6E18               	movwf	___flmul@a+3,c
  5118  00132E  C0B4  F011         	movff	efgtoa@u,___flmul@b
  5119  001332  C0B5  F012         	movff	efgtoa@u+1,___flmul@b+1
  5120  001336  C0B6  F013         	movff	efgtoa@u+2,___flmul@b+2
  5121  00133A  C0B7  F014         	movff	efgtoa@u+3,___flmul@b+3
  5122  00133E  ECE1  F013         	call	___flmul	;wreg free
  5123  001342  C011  F02E         	movff	?___flmul,___flge@ff2
  5124  001346  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  5125  00134A  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  5126  00134E  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  5127  001352  EC62  F020         	call	___flge	;wreg free
  5128  001356  A0D8               	btfss	status,0,c
  5129  001358  D01F               	goto	l4712
  5130  00135A  D7BC               	goto	l4702
  5131  00135C                     l4708:
  5132                           
  5133                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 371:             u =
      +                           u/10.0;
  5134  00135C  C0B4  F011         	movff	efgtoa@u,___fldiv@b
  5135  001360  C0B5  F012         	movff	efgtoa@u+1,___fldiv@b+1
  5136  001364  C0B6  F013         	movff	efgtoa@u+2,___fldiv@b+2
  5137  001368  C0B7  F014         	movff	efgtoa@u+3,___fldiv@b+3
  5138  00136C  0E00               	movlw	0
  5139  00136E  6E15               	movwf	___fldiv@a,c
  5140  001370  0E00               	movlw	0
  5141  001372  6E16               	movwf	___fldiv@a+1,c
  5142  001374  0E20               	movlw	32
  5143  001376  6E17               	movwf	___fldiv@a+2,c
  5144  001378  0E41               	movlw	65
  5145  00137A  6E18               	movwf	___fldiv@a+3,c
  5146  00137C  EC96  F018         	call	___fldiv	;wreg free
  5147  001380  C011  F0B4         	movff	?___fldiv,efgtoa@u
  5148  001384  C012  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  5149  001388  C013  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  5150  00138C  C014  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  5151                           
  5152                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 372:             --e
      +                          ;
  5153  001390  0100               	movlb	0	; () banked
  5154  001392  07B0               	decf	efgtoa@e& (0+255),f,b
  5155  001394  A0D8               	btfss	status,0,c
  5156  001396  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
  5157  001398                     l4712:
  5158                           
  5159                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 370:         while (
      +                          g < u) {
  5160  001398  C0AC  F02A         	movff	efgtoa@g,___flge@ff1
  5161  00139C  C0AD  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  5162  0013A0  C0AE  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  5163  0013A4  C0AF  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  5164  0013A8  C0B4  F02E         	movff	efgtoa@u,___flge@ff2
  5165  0013AC  C0B5  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  5166  0013B0  C0B6  F030         	movff	efgtoa@u+2,___flge@ff2+2
  5167  0013B4  C0B7  F031         	movff	efgtoa@u+3,___flge@ff2+3
  5168  0013B8  EC62  F020         	call	___flge	;wreg free
  5169  0013BC  A0D8               	btfss	status,0,c
  5170  0013BE  D7CE               	goto	l4708
  5171  0013C0                     u5810:
  5172                           
  5173                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 377:     mode = tolo
      +                          wer((int)c);
  5174  0013C0  C044  F017         	movff	efgtoa@c,tolower@c
  5175  0013C4  6A18               	clrf	tolower@c+1,c
  5176  0013C6  EC7B  F024         	call	_tolower	;wreg free
  5177  0013CA  5017               	movf	?_tolower,w,c
  5178  0013CC  0100               	movlb	0	; () banked
  5179  0013CE  6FA1               	movwf	efgtoa@mode& (0+255),b
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 378:     nmode = mod
      +                          e;
  5183  0013D0  C0A1  F09E         	movff	efgtoa@mode,efgtoa@nmode
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 379:     if (mode ==
      +                           'g') {
  5187  0013D4  0E67               	movlw	103
  5188  0013D6  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5189  0013D8  A4D8               	btfss	status,2,c
  5190  0013DA  D019               	goto	l4728
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0
      +                          ) {
  5194  0013DC  506A               	movf	_prec,w,c
  5195  0013DE  106B               	iorwf	_prec+1,w,c
  5196  0013E0  A4D8               	btfss	status,2,c
  5197  0013E2  D004               	goto	l4724
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  5201  0013E4  0E00               	movlw	0
  5202  0013E6  6E6B               	movwf	_prec+1,c
  5203  0013E8  0E01               	movlw	1
  5204  0013EA  6E6A               	movwf	_prec,c
  5205  0013EC                     l4724:
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 383:         p = (0 
      +                          < prec) ? prec : 6;
  5209  0013EC  BE6B               	btfsc	_prec+1,7,c
  5210  0013EE  D005               	goto	u5840
  5211  0013F0  506B               	movf	_prec+1,w,c
  5212  0013F2  E108               	bnz	l330
  5213  0013F4  046A               	decf	_prec,w,c
  5214  0013F6  B0D8               	btfsc	status,0,c
  5215  0013F8  D005               	goto	l330
  5216  0013FA                     u5840:
  5217                           
  5218                           ; BSR set to: 0
  5219  0013FA  0E00               	movlw	0
  5220  0013FC  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  5221  0013FE  0E06               	movlw	6
  5222  001400  6F9C               	movwf	efgtoa@p& (0+255),b
  5223  001402  D008               	goto	l4734
  5224  001404                     l330:
  5225                           
  5226                           ; BSR set to: 0
  5227  001404  C06A  F09C         	movff	_prec,efgtoa@p
  5228  001408  C06B  F09D         	movff	_prec+1,efgtoa@p+1
  5229  00140C  D003               	goto	l4734
  5230  00140E                     l4728:
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 385:         p = (pr
      +                          ec < 0) ? 6 : prec;
  5234  00140E  AE6B               	btfss	_prec+1,7,c
  5235  001410  D7F9               	goto	l330
  5236  001412  D7F3               	goto	u5840
  5237  001414                     l4734:
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 389:     if (mode ==
      +                           'g') {
  5241  001414  0E67               	movlw	103
  5242  001416  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5243  001418  A4D8               	btfss	status,2,c
  5244  00141A  D022               	goto	l4744
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 390:         if (!(e
      +                           < -4) && !((p - 1) < e)) {
  5248  00141C  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  5249  00141E  D006               	goto	u5870
  5250  001420  0EFC               	movlw	252
  5251  001422  5DB0               	subwf	efgtoa@e& (0+255),w,b
  5252  001424  0EFF               	movlw	255
  5253  001426  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5254  001428  A0D8               	btfss	status,0,c
  5255  00142A  D018               	goto	l4742
  5256  00142C                     u5870:
  5257                           
  5258                           ; BSR set to: 0
  5259  00142C  0EFF               	movlw	255
  5260  00142E  6E45               	movwf	??_efgtoa& (0+255),c
  5261  001430  0EFF               	movlw	255
  5262  001432  6E46               	movwf	(??_efgtoa+1)& (0+255),c
  5263  001434  C09C  F047         	movff	efgtoa@p,??_efgtoa+2
  5264  001438  C09D  F048         	movff	efgtoa@p+1,??_efgtoa+3
  5265  00143C  5045               	movf	??_efgtoa,w,c
  5266  00143E  2647               	addwf	??_efgtoa+2,f,c
  5267  001440  5046               	movf	??_efgtoa+1,w,c
  5268  001442  2248               	addwfc	??_efgtoa+3,f,c
  5269  001444  51B0               	movf	efgtoa@e& (0+255),w,b
  5270  001446  5C47               	subwf	??_efgtoa+2,w,c
  5271  001448  5048               	movf	??_efgtoa+3,w,c
  5272  00144A  0A80               	xorlw	128
  5273  00144C  6E49               	movwf	(??_efgtoa+4)& (0+255),c
  5274  00144E  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  5275  001450  0A80               	xorlw	128
  5276  001452  5849               	subwfb	(??_efgtoa+4)& (0+255),w,c
  5277  001454  A0D8               	btfss	status,0,c
  5278  001456  D002               	goto	l4742
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 391:             nmo
      +                          de = 'f';
  5282  001458  0E66               	movlw	102
  5283  00145A  D001               	goto	L5
  5284  00145C                     l4742:
  5285                           
  5286                           ; BSR set to: 0
  5287                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 393:             nmo
      +                          de = 'e';
  5288  00145C  0E65               	movlw	101
  5289  00145E                     L5:
  5290  00145E  6F9E               	movwf	efgtoa@nmode& (0+255),b
  5291  001460                     l4744:
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 398:     m = p;
  5295  001460  C09C  F094         	movff	efgtoa@p,efgtoa@m
  5296  001464  C09D  F095         	movff	efgtoa@p+1,efgtoa@m+1
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 399:     if (!(mode 
      +                          == 'g') || ((nmode == 'f') && (e < 0))) {
  5300  001468  0E67               	movlw	103
  5301  00146A  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5302  00146C  A4D8               	btfss	status,2,c
  5303  00146E  D005               	goto	u5910
  5304                           
  5305                           ; BSR set to: 0
  5306  001470  0E66               	movlw	102
  5307  001472  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  5308  001474  B4D8               	btfsc	status,2,c
  5309                           
  5310                           ; BSR set to: 0
  5311  001476  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  5312  001478  D002               	goto	l4754
  5313  00147A                     u5910:
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 400:         ++m;
  5317  00147A  4B94               	infsnz	efgtoa@m& (0+255),f,b
  5318  00147C  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  5319  00147E                     l4754:
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 404:     if (nmode =
      +                          = 'f') {
  5323  00147E  0E66               	movlw	102
  5324  001480  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  5325  001482  A4D8               	btfss	status,2,c
  5326  001484  D016               	goto	l4764
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 405:         if (e <
      +                           0) {
  5330  001486  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  5331  001488  D00C               	goto	l4760
  5332                           
  5333                           ; BSR set to: 0
  5334                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 406:             u =
      +                           1.0;
  5335  00148A  0E00               	movlw	0
  5336  00148C  6FB4               	movwf	efgtoa@u& (0+255),b
  5337  00148E  0E00               	movlw	0
  5338  001490  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  5339  001492  0E80               	movlw	128
  5340  001494  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  5341  001496  0E3F               	movlw	63
  5342  001498  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  5343                           
  5344                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 407:             e =
      +                           0;
  5345  00149A  0E00               	movlw	0
  5346  00149C  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  5347  00149E  0E00               	movlw	0
  5348  0014A0  6FB0               	movwf	efgtoa@e& (0+255),b
  5349  0014A2                     l4760:
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 409:         if (!(m
      +                          ode == 'g')) {
  5353  0014A2  0E67               	movlw	103
  5354  0014A4  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5355  0014A6  B4D8               	btfsc	status,2,c
  5356  0014A8  D004               	goto	l4764
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 410:             m +
      +                          = e;
  5360  0014AA  51B0               	movf	efgtoa@e& (0+255),w,b
  5361  0014AC  2794               	addwf	efgtoa@m& (0+255),f,b
  5362  0014AE  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  5363  0014B0  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5364  0014B2                     l4764:
  5365                           
  5366                           ; BSR set to: 0
  5367                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  5368  0014B2  0E00               	movlw	0
  5369  0014B4  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  5370  0014B6  0E00               	movlw	0
  5371  0014B8  6FAA               	movwf	efgtoa@i& (0+255),b
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 416:     h = g;
  5375  0014BA  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
  5376  0014BE  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
  5377  0014C2  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
  5378  0014C6  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  5382  0014CA  C0B4  F080         	movff	efgtoa@u,efgtoa@ou
  5383  0014CE  C0B5  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  5384  0014D2  C0B6  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  5385  0014D6  C0B7  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  5386                           
  5387                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < 
      +                          m) {
  5388  0014DA  D07B               	goto	l4778
  5389  0014DC                     l4770:
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 419:         l = flo
      +                          orf(h/u);
  5393  0014DC  C0A2  F011         	movff	efgtoa@h,___fldiv@b
  5394  0014E0  C0A3  F012         	movff	efgtoa@h+1,___fldiv@b+1
  5395  0014E4  C0A4  F013         	movff	efgtoa@h+2,___fldiv@b+2
  5396  0014E8  C0A5  F014         	movff	efgtoa@h+3,___fldiv@b+3
  5397  0014EC  C0B4  F015         	movff	efgtoa@u,___fldiv@a
  5398  0014F0  C0B5  F016         	movff	efgtoa@u+1,___fldiv@a+1
  5399  0014F4  C0B6  F017         	movff	efgtoa@u+2,___fldiv@a+2
  5400  0014F8  C0B7  F018         	movff	efgtoa@u+3,___fldiv@a+3
  5401  0014FC  EC96  F018         	call	___fldiv	;wreg free
  5402  001500  C011  F02A         	movff	?___fldiv,floorf@x
  5403  001504  C012  F02B         	movff	?___fldiv+1,floorf@x+1
  5404  001508  C013  F02C         	movff	?___fldiv+2,floorf@x+2
  5405  00150C  C014  F02D         	movff	?___fldiv+3,floorf@x+3
  5406  001510  EC11  F01C         	call	_floorf	;wreg free
  5407  001514  C02A  F0A6         	movff	?_floorf,efgtoa@l
  5408  001518  C02B  F0A7         	movff	?_floorf+1,efgtoa@l+1
  5409  00151C  C02C  F0A8         	movff	?_floorf+2,efgtoa@l+2
  5410  001520  C02D  F0A9         	movff	?_floorf+3,efgtoa@l+3
  5411                           
  5412                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 420:         d = (in
      +                          t)l;
  5413  001524  C0A6  F011         	movff	efgtoa@l,___fltol@f1
  5414  001528  C0A7  F012         	movff	efgtoa@l+1,___fltol@f1+1
  5415  00152C  C0A8  F013         	movff	efgtoa@l+2,___fltol@f1+2
  5416  001530  C0A9  F014         	movff	efgtoa@l+3,___fltol@f1+3
  5417  001534  EC30  F021         	call	___fltol	;wreg free
  5418  001538  C011  F098         	movff	?___fltol,efgtoa@d
  5419  00153C  C012  F099         	movff	?___fltol+1,efgtoa@d+1
  5420                           
  5421                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 421:         h -= l*
      +                          u;
  5422  001540  C0A2  F02A         	movff	efgtoa@h,___flsub@b
  5423  001544  C0A3  F02B         	movff	efgtoa@h+1,___flsub@b+1
  5424  001548  C0A4  F02C         	movff	efgtoa@h+2,___flsub@b+2
  5425  00154C  C0A5  F02D         	movff	efgtoa@h+3,___flsub@b+3
  5426  001550  C0B4  F015         	movff	efgtoa@u,___flmul@a
  5427  001554  C0B5  F016         	movff	efgtoa@u+1,___flmul@a+1
  5428  001558  C0B6  F017         	movff	efgtoa@u+2,___flmul@a+2
  5429  00155C  C0B7  F018         	movff	efgtoa@u+3,___flmul@a+3
  5430  001560  C0A6  F011         	movff	efgtoa@l,___flmul@b
  5431  001564  C0A7  F012         	movff	efgtoa@l+1,___flmul@b+1
  5432  001568  C0A8  F013         	movff	efgtoa@l+2,___flmul@b+2
  5433  00156C  C0A9  F014         	movff	efgtoa@l+3,___flmul@b+3
  5434  001570  ECE1  F013         	call	___flmul	;wreg free
  5435  001574  C011  F02E         	movff	?___flmul,___flsub@a
  5436  001578  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  5437  00157C  C013  F030         	movff	?___flmul+2,___flsub@a+2
  5438  001580  C014  F031         	movff	?___flmul+3,___flsub@a+3
  5439  001584  ECC6  F024         	call	___flsub	;wreg free
  5440  001588  C02A  F0A2         	movff	?___flsub,efgtoa@h
  5441  00158C  C02B  F0A3         	movff	?___flsub+1,efgtoa@h+1
  5442  001590  C02C  F0A4         	movff	?___flsub+2,efgtoa@h+2
  5443  001594  C02D  F0A5         	movff	?___flsub+3,efgtoa@h+3
  5444                           
  5445                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 422:         u = u/1
      +                          0.0;
  5446  001598  C0B4  F011         	movff	efgtoa@u,___fldiv@b
  5447  00159C  C0B5  F012         	movff	efgtoa@u+1,___fldiv@b+1
  5448  0015A0  C0B6  F013         	movff	efgtoa@u+2,___fldiv@b+2
  5449  0015A4  C0B7  F014         	movff	efgtoa@u+3,___fldiv@b+3
  5450  0015A8  0E00               	movlw	0
  5451  0015AA  6E15               	movwf	___fldiv@a,c
  5452  0015AC  0E00               	movlw	0
  5453  0015AE  6E16               	movwf	___fldiv@a+1,c
  5454  0015B0  0E20               	movlw	32
  5455  0015B2  6E17               	movwf	___fldiv@a+2,c
  5456  0015B4  0E41               	movlw	65
  5457  0015B6  6E18               	movwf	___fldiv@a+3,c
  5458  0015B8  EC96  F018         	call	___fldiv	;wreg free
  5459  0015BC  C011  F0B4         	movff	?___fldiv,efgtoa@u
  5460  0015C0  C012  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  5461  0015C4  C013  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  5462  0015C8  C014  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  5463                           
  5464                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 423:         ++i;
  5465  0015CC  0100               	movlb	0	; () banked
  5466  0015CE  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  5467  0015D0  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  5468  0015D2                     l4778:
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < 
      +                          m) {
  5472  0015D2  5194               	movf	efgtoa@m& (0+255),w,b
  5473  0015D4  5DAA               	subwf	efgtoa@i& (0+255),w,b
  5474  0015D6  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  5475  0015D8  0A80               	xorlw	128
  5476  0015DA  6E45               	movwf	??_efgtoa& (0+255),c
  5477  0015DC  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  5478  0015DE  0A80               	xorlw	128
  5479  0015E0  5845               	subwfb	??_efgtoa& (0+255),w,c
  5480  0015E2  A0D8               	btfss	status,0,c
  5481  0015E4  D77B               	goto	l4770
  5482                           
  5483                           ; BSR set to: 0
  5484                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  5485  0015E6  C0B4  F011         	movff	efgtoa@u,___flmul@b
  5486  0015EA  C0B5  F012         	movff	efgtoa@u+1,___flmul@b+1
  5487  0015EE  C0B6  F013         	movff	efgtoa@u+2,___flmul@b+2
  5488  0015F2  C0B7  F014         	movff	efgtoa@u+3,___flmul@b+3
  5489  0015F6  0E00               	movlw	0
  5490  0015F8  6E15               	movwf	___flmul@a,c
  5491  0015FA  0E00               	movlw	0
  5492  0015FC  6E16               	movwf	___flmul@a+1,c
  5493  0015FE  0EA0               	movlw	160
  5494  001600  6E17               	movwf	___flmul@a+2,c
  5495  001602  0E40               	movlw	64
  5496  001604  6E18               	movwf	___flmul@a+3,c
  5497  001606  ECE1  F013         	call	___flmul	;wreg free
  5498  00160A  C011  F0A6         	movff	?___flmul,efgtoa@l
  5499  00160E  C012  F0A7         	movff	?___flmul+1,efgtoa@l+1
  5500  001612  C013  F0A8         	movff	?___flmul+2,efgtoa@l+2
  5501  001616  C014  F0A9         	movff	?___flmul+3,efgtoa@l+3
  5502                           
  5503                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 428:     if (h < l) 
      +                          {
  5504  00161A  C0A2  F02A         	movff	efgtoa@h,___flge@ff1
  5505  00161E  C0A3  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  5506  001622  C0A4  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  5507  001626  C0A5  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  5508  00162A  C0A6  F02E         	movff	efgtoa@l,___flge@ff2
  5509  00162E  C0A7  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  5510  001632  C0A8  F030         	movff	efgtoa@l+2,___flge@ff2+2
  5511  001636  C0A9  F031         	movff	efgtoa@l+3,___flge@ff2+3
  5512  00163A  EC62  F020         	call	___flge	;wreg free
  5513  00163E  B0D8               	btfsc	status,0,c
  5514  001640  D003               	goto	l4786
  5515                           
  5516                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 429:         l = 0.0
      +                          ;
  5517  001642  0E00               	movlw	0
  5518  001644  0100               	movlb	0	; () banked
  5519  001646  D018               	goto	L6
  5520  001648                     l4786:
  5521                           
  5522                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 432:         if ((h 
      +                          == l) && !(d % 2)) {
  5523  001648  C0A2  F011         	movff	efgtoa@h,___fleq@ff1
  5524  00164C  C0A3  F012         	movff	efgtoa@h+1,___fleq@ff1+1
  5525  001650  C0A4  F013         	movff	efgtoa@h+2,___fleq@ff1+2
  5526  001654  C0A5  F014         	movff	efgtoa@h+3,___fleq@ff1+3
  5527  001658  C0A6  F015         	movff	efgtoa@l,___fleq@ff2
  5528  00165C  C0A7  F016         	movff	efgtoa@l+1,___fleq@ff2+1
  5529  001660  C0A8  F017         	movff	efgtoa@l+2,___fleq@ff2+2
  5530  001664  C0A9  F018         	movff	efgtoa@l+3,___fleq@ff2+3
  5531  001668  ECC5  F022         	call	___fleq	;wreg free
  5532  00166C  A0D8               	btfss	status,0,c
  5533  00166E  D00B               	goto	l4792
  5534  001670  0100               	movlb	0	; () banked
  5535  001672  B198               	btfsc	efgtoa@d& (0+255),0,b
  5536  001674  D008               	goto	l4792
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 433:             l =
      +                           0.0;
  5540  001676  0E00               	movlw	0
  5541  001678                     L6:
  5542  001678  6FA6               	movwf	efgtoa@l& (0+255),b
  5543  00167A  0E00               	movlw	0
  5544  00167C  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  5545  00167E  0E00               	movlw	0
  5546  001680  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  5547  001682  0E00               	movlw	0
  5548  001684  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  5549  001686                     l4792:
  5550                           
  5551                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  5552  001686  C0AC  F011         	movff	efgtoa@g,___fladd@b
  5553  00168A  C0AD  F012         	movff	efgtoa@g+1,___fladd@b+1
  5554  00168E  C0AE  F013         	movff	efgtoa@g+2,___fladd@b+2
  5555  001692  C0AF  F014         	movff	efgtoa@g+3,___fladd@b+3
  5556  001696  C0A6  F015         	movff	efgtoa@l,___fladd@a
  5557  00169A  C0A7  F016         	movff	efgtoa@l+1,___fladd@a+1
  5558  00169E  C0A8  F017         	movff	efgtoa@l+2,___fladd@a+2
  5559  0016A2  C0A9  F018         	movff	efgtoa@l+3,___fladd@a+3
  5560  0016A6  EC8A  F015         	call	___fladd	;wreg free
  5561  0016AA  C011  F0A2         	movff	?___fladd,efgtoa@h
  5562  0016AE  C012  F0A3         	movff	?___fladd+1,efgtoa@h+1
  5563  0016B2  C013  F0A4         	movff	?___fladd+2,efgtoa@h+2
  5564  0016B6  C014  F0A5         	movff	?___fladd+3,efgtoa@h+3
  5565                           
  5566                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  5567  0016BA  C080  F0B4         	movff	efgtoa@ou,efgtoa@u
  5568  0016BE  C081  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
  5569  0016C2  C082  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
  5570  0016C6  C083  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
  5571                           
  5572                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode
      +                           == 'e') ? 0 : e;
  5573  0016CA  0E65               	movlw	101
  5574  0016CC  0100               	movlb	0	; () banked
  5575  0016CE  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  5576  0016D0  B4D8               	btfsc	status,2,c
  5577  0016D2  D005               	goto	l4800
  5578                           
  5579                           ; BSR set to: 0
  5580  0016D4  C0B0  F096         	movff	efgtoa@e,efgtoa@ne
  5581  0016D8  C0B1  F097         	movff	efgtoa@e+1,efgtoa@ne+1
  5582  0016DC  D004               	goto	l356
  5583  0016DE                     l4800:
  5584                           
  5585                           ; BSR set to: 0
  5586  0016DE  0E00               	movlw	0
  5587  0016E0  6F97               	movwf	(efgtoa@ne+1)& (0+255),b
  5588  0016E2  0E00               	movlw	0
  5589  0016E4  6F96               	movwf	efgtoa@ne& (0+255),b
  5590  0016E6                     l356:
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  5594  0016E6  0E00               	movlw	0
  5595  0016E8  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  5596  0016EA  0E00               	movlw	0
  5597  0016EC  6F92               	movwf	efgtoa@pp& (0+255),b
  5598                           
  5599                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  5600  0016EE  0E00               	movlw	0
  5601  0016F0  6F91               	movwf	(efgtoa@t+1)& (0+255),b
  5602  0016F2  0E00               	movlw	0
  5603  0016F4  6F90               	movwf	efgtoa@t& (0+255),b
  5604                           
  5605                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  5606  0016F6  0E00               	movlw	0
  5607  0016F8  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  5608  0016FA  0E00               	movlw	0
  5609  0016FC  6FAA               	movwf	efgtoa@i& (0+255),b
  5610                           
  5611                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i <
      +                           m) && (n < (80 - 5))) {
  5612  0016FE  D0C7               	goto	l4850
  5613  001700                     l4802:
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 447:         l = flo
      +                          orf(h/u);
  5617  001700  C0A2  F011         	movff	efgtoa@h,___fldiv@b
  5618  001704  C0A3  F012         	movff	efgtoa@h+1,___fldiv@b+1
  5619  001708  C0A4  F013         	movff	efgtoa@h+2,___fldiv@b+2
  5620  00170C  C0A5  F014         	movff	efgtoa@h+3,___fldiv@b+3
  5621  001710  C0B4  F015         	movff	efgtoa@u,___fldiv@a
  5622  001714  C0B5  F016         	movff	efgtoa@u+1,___fldiv@a+1
  5623  001718  C0B6  F017         	movff	efgtoa@u+2,___fldiv@a+2
  5624  00171C  C0B7  F018         	movff	efgtoa@u+3,___fldiv@a+3
  5625  001720  EC96  F018         	call	___fldiv	;wreg free
  5626  001724  C011  F02A         	movff	?___fldiv,floorf@x
  5627  001728  C012  F02B         	movff	?___fldiv+1,floorf@x+1
  5628  00172C  C013  F02C         	movff	?___fldiv+2,floorf@x+2
  5629  001730  C014  F02D         	movff	?___fldiv+3,floorf@x+3
  5630  001734  EC11  F01C         	call	_floorf	;wreg free
  5631  001738  C02A  F0A6         	movff	?_floorf,efgtoa@l
  5632  00173C  C02B  F0A7         	movff	?_floorf+1,efgtoa@l+1
  5633  001740  C02C  F0A8         	movff	?_floorf+2,efgtoa@l+2
  5634  001744  C02D  F0A9         	movff	?_floorf+3,efgtoa@l+3
  5635                           
  5636                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 448:         d = (in
      +                          t)l;
  5637  001748  C0A6  F011         	movff	efgtoa@l,___fltol@f1
  5638  00174C  C0A7  F012         	movff	efgtoa@l+1,___fltol@f1+1
  5639  001750  C0A8  F013         	movff	efgtoa@l+2,___fltol@f1+2
  5640  001754  C0A9  F014         	movff	efgtoa@l+3,___fltol@f1+3
  5641  001758  EC30  F021         	call	___fltol	;wreg free
  5642  00175C  C011  F098         	movff	?___fltol,efgtoa@d
  5643  001760  C012  F099         	movff	?___fltol+1,efgtoa@d+1
  5644                           
  5645                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 449:         if (!(f
      +                          lags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5646  001764  B86C               	btfsc	_flags,4,c
  5647  001766  D00D               	goto	l4814
  5648  001768  0100               	movlb	0	; () banked
  5649  00176A  5198               	movf	efgtoa@d& (0+255),w,b
  5650  00176C  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5651  00176E  A4D8               	btfss	status,2,c
  5652  001770  D008               	goto	l4814
  5653                           
  5654                           ; BSR set to: 0
  5655  001772  0E67               	movlw	103
  5656  001774  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5657  001776  B4D8               	btfsc	status,2,c
  5658                           
  5659                           ; BSR set to: 0
  5660  001778  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5661  00177A  D003               	goto	l4814
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 450:             ++t
      +                          ;
  5665  00177C  4B90               	infsnz	efgtoa@t& (0+255),f,b
  5666  00177E  2B91               	incf	(efgtoa@t+1)& (0+255),f,b
  5667                           
  5668                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 451:         } else 
      +                          {
  5669  001780  D03A               	goto	l4842
  5670  001782                     l4814:
  5671                           
  5672                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 452:             if 
      +                          (!pp && (ne < 0)) {
  5673  001782  0100               	movlb	0	; () banked
  5674  001784  5192               	movf	efgtoa@pp& (0+255),w,b
  5675  001786  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5676  001788  B4D8               	btfsc	status,2,c
  5677                           
  5678                           ; BSR set to: 0
  5679  00178A  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5680  00178C  D022               	goto	l4834
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 453:                
      +                           dbuf[n++] = '.';
  5684  00178E  0E0E               	movlw	low _dbuf
  5685  001790  25B2               	addwf	efgtoa@n& (0+255),w,b
  5686  001792  6ED9               	movwf	fsr2l,c
  5687  001794  0E01               	movlw	high _dbuf
  5688  001796  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5689  001798  6EDA               	movwf	fsr2h,c
  5690  00179A  0E2E               	movlw	46
  5691  00179C  6EDF               	movwf	indf2,c
  5692                           
  5693                           ; BSR set to: 0
  5694  00179E  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5695  0017A0  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 454:                
      +                           --w;
  5699  0017A2  079F               	decf	efgtoa@w& (0+255),f,b
  5700  0017A4  A0D8               	btfss	status,0,c
  5701  0017A6  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 455:                
      +                           pp = 1;
  5705  0017A8  0E00               	movlw	0
  5706  0017AA  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  5707  0017AC  0E01               	movlw	1
  5708  0017AE  6F92               	movwf	efgtoa@pp& (0+255),b
  5709  0017B0  D010               	goto	l4834
  5710  0017B2                     l4826:
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 458:                
      +                           dbuf[n++] = '0';
  5714  0017B2  0E0E               	movlw	low _dbuf
  5715  0017B4  25B2               	addwf	efgtoa@n& (0+255),w,b
  5716  0017B6  6ED9               	movwf	fsr2l,c
  5717  0017B8  0E01               	movlw	high _dbuf
  5718  0017BA  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5719  0017BC  6EDA               	movwf	fsr2h,c
  5720  0017BE  0E30               	movlw	48
  5721  0017C0  6EDF               	movwf	indf2,c
  5722                           
  5723                           ; BSR set to: 0
  5724  0017C2  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5725  0017C4  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5726                           
  5727                           ; BSR set to: 0
  5728                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 459:                
      +                           --w;
  5729  0017C6  079F               	decf	efgtoa@w& (0+255),f,b
  5730  0017C8  A0D8               	btfss	status,0,c
  5731  0017CA  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 460:                
      +                           --t;
  5735  0017CC  0790               	decf	efgtoa@t& (0+255),f,b
  5736  0017CE  A0D8               	btfss	status,0,c
  5737  0017D0  0791               	decf	(efgtoa@t+1)& (0+255),f,b
  5738  0017D2                     l4834:
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 457:             whi
      +                          le (t) {
  5742  0017D2  5190               	movf	efgtoa@t& (0+255),w,b
  5743  0017D4  1191               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5744  0017D6  A4D8               	btfss	status,2,c
  5745  0017D8  D7EC               	goto	l4826
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 462:             dbu
      +                          f[n++] = '0' + d;
  5749  0017DA  0E0E               	movlw	low _dbuf
  5750  0017DC  25B2               	addwf	efgtoa@n& (0+255),w,b
  5751  0017DE  6ED9               	movwf	fsr2l,c
  5752  0017E0  0E01               	movlw	high _dbuf
  5753  0017E2  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5754  0017E4  6EDA               	movwf	fsr2h,c
  5755  0017E6  5198               	movf	efgtoa@d& (0+255),w,b
  5756  0017E8  0F30               	addlw	48
  5757  0017EA  6EDF               	movwf	indf2,c
  5758                           
  5759                           ; BSR set to: 0
  5760  0017EC  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5761  0017EE  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 463:             --w
      +                          ;
  5765  0017F0  079F               	decf	efgtoa@w& (0+255),f,b
  5766  0017F2  A0D8               	btfss	status,0,c
  5767  0017F4  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5768  0017F6                     l4842:
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 465:         h -= l*
      +                          u;
  5772  0017F6  C0A2  F02A         	movff	efgtoa@h,___flsub@b
  5773  0017FA  C0A3  F02B         	movff	efgtoa@h+1,___flsub@b+1
  5774  0017FE  C0A4  F02C         	movff	efgtoa@h+2,___flsub@b+2
  5775  001802  C0A5  F02D         	movff	efgtoa@h+3,___flsub@b+3
  5776  001806  C0B4  F015         	movff	efgtoa@u,___flmul@a
  5777  00180A  C0B5  F016         	movff	efgtoa@u+1,___flmul@a+1
  5778  00180E  C0B6  F017         	movff	efgtoa@u+2,___flmul@a+2
  5779  001812  C0B7  F018         	movff	efgtoa@u+3,___flmul@a+3
  5780  001816  C0A6  F011         	movff	efgtoa@l,___flmul@b
  5781  00181A  C0A7  F012         	movff	efgtoa@l+1,___flmul@b+1
  5782  00181E  C0A8  F013         	movff	efgtoa@l+2,___flmul@b+2
  5783  001822  C0A9  F014         	movff	efgtoa@l+3,___flmul@b+3
  5784  001826  ECE1  F013         	call	___flmul	;wreg free
  5785  00182A  C011  F02E         	movff	?___flmul,___flsub@a
  5786  00182E  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  5787  001832  C013  F030         	movff	?___flmul+2,___flsub@a+2
  5788  001836  C014  F031         	movff	?___flmul+3,___flsub@a+3
  5789  00183A  ECC6  F024         	call	___flsub	;wreg free
  5790  00183E  C02A  F0A2         	movff	?___flsub,efgtoa@h
  5791  001842  C02B  F0A3         	movff	?___flsub+1,efgtoa@h+1
  5792  001846  C02C  F0A4         	movff	?___flsub+2,efgtoa@h+2
  5793  00184A  C02D  F0A5         	movff	?___flsub+3,efgtoa@h+3
  5794                           
  5795                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 466:         u = u/1
      +                          0.0;
  5796  00184E  C0B4  F011         	movff	efgtoa@u,___fldiv@b
  5797  001852  C0B5  F012         	movff	efgtoa@u+1,___fldiv@b+1
  5798  001856  C0B6  F013         	movff	efgtoa@u+2,___fldiv@b+2
  5799  00185A  C0B7  F014         	movff	efgtoa@u+3,___fldiv@b+3
  5800  00185E  0E00               	movlw	0
  5801  001860  6E15               	movwf	___fldiv@a,c
  5802  001862  0E00               	movlw	0
  5803  001864  6E16               	movwf	___fldiv@a+1,c
  5804  001866  0E20               	movlw	32
  5805  001868  6E17               	movwf	___fldiv@a+2,c
  5806  00186A  0E41               	movlw	65
  5807  00186C  6E18               	movwf	___fldiv@a+3,c
  5808  00186E  EC96  F018         	call	___fldiv	;wreg free
  5809  001872  C011  F0B4         	movff	?___fldiv,efgtoa@u
  5810  001876  C012  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  5811  00187A  C013  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  5812  00187E  C014  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  5813                           
  5814                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 467:         --ne;
  5815  001882  0100               	movlb	0	; () banked
  5816  001884  0796               	decf	efgtoa@ne& (0+255),f,b
  5817  001886  A0D8               	btfss	status,0,c
  5818  001888  0797               	decf	(efgtoa@ne+1)& (0+255),f,b
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 468:         ++i;
  5822  00188A  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  5823  00188C  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  5824  00188E                     l4850:
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i <
      +                           m) && (n < (80 - 5))) {
  5828  00188E  5194               	movf	efgtoa@m& (0+255),w,b
  5829  001890  5DAA               	subwf	efgtoa@i& (0+255),w,b
  5830  001892  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  5831  001894  0A80               	xorlw	128
  5832  001896  6E45               	movwf	??_efgtoa& (0+255),c
  5833  001898  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  5834  00189A  0A80               	xorlw	128
  5835  00189C  5845               	subwfb	??_efgtoa& (0+255),w,c
  5836  00189E  B0D8               	btfsc	status,0,c
  5837  0018A0  D008               	goto	u6080
  5838                           
  5839                           ; BSR set to: 0
  5840  0018A2  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5841  0018A4  D72D               	goto	l4802
  5842  0018A6  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
  5843  0018A8  E104               	bnz	u6080
  5844  0018AA  0E4B               	movlw	75
  5845  0018AC  5DB2               	subwf	efgtoa@n& (0+255),w,b
  5846  0018AE  A0D8               	btfss	status,0,c
  5847  0018B0  D727               	goto	l4802
  5848  0018B2                     u6080:
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 470:     if (!pp && 
      +                          (flags & (1 << 4))) {
  5852  0018B2  5192               	movf	efgtoa@pp& (0+255),w,b
  5853  0018B4  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5854  0018B6  B4D8               	btfsc	status,2,c
  5855                           
  5856                           ; BSR set to: 0
  5857  0018B8  A86C               	btfss	_flags,4,c
  5858  0018BA  D00A               	goto	l4862
  5859                           
  5860                           ; BSR set to: 0
  5861                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 471:         dbuf[n+
      +                          +] = '.';
  5862  0018BC  0E0E               	movlw	low _dbuf
  5863  0018BE  25B2               	addwf	efgtoa@n& (0+255),w,b
  5864  0018C0  6ED9               	movwf	fsr2l,c
  5865  0018C2  0E01               	movlw	high _dbuf
  5866  0018C4  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5867  0018C6  6EDA               	movwf	fsr2h,c
  5868  0018C8  0E2E               	movlw	46
  5869  0018CA  6EDF               	movwf	indf2,c
  5870                           
  5871                           ; BSR set to: 0
  5872  0018CC  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5873  0018CE  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5874  0018D0                     l4862:
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '
      +                          \0';
  5878  0018D0  0E0E               	movlw	low _dbuf
  5879  0018D2  25B2               	addwf	efgtoa@n& (0+255),w,b
  5880  0018D4  6ED9               	movwf	fsr2l,c
  5881  0018D6  0E01               	movlw	high _dbuf
  5882  0018D8  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5883  0018DA  6EDA               	movwf	fsr2h,c
  5884  0018DC  0E00               	movlw	0
  5885  0018DE  6EDF               	movwf	indf2,c
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 476:     if (nmode =
      +                          = 'e') {
  5889  0018E0  0E65               	movlw	101
  5890  0018E2  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  5891  0018E4  A4D8               	btfss	status,2,c
  5892  0018E6  D0AD               	goto	l4924
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 477:         i = siz
      +                          eof(dbuf) - 1;
  5896  0018E8  0E00               	movlw	0
  5897  0018EA  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  5898  0018EC  0E4F               	movlw	79
  5899  0018EE  6FAA               	movwf	efgtoa@i& (0+255),b
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 478:         dbuf[i]
      +                           = '\0';
  5903  0018F0  0E0E               	movlw	low _dbuf
  5904  0018F2  25AA               	addwf	efgtoa@i& (0+255),w,b
  5905  0018F4  6ED9               	movwf	fsr2l,c
  5906  0018F6  0E01               	movlw	high _dbuf
  5907  0018F8  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5908  0018FA  6EDA               	movwf	fsr2h,c
  5909  0018FC  0E00               	movlw	0
  5910  0018FE  6EDF               	movwf	indf2,c
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 479:         sign = 
      +                          0;
  5914  001900  0E00               	movlw	0
  5915  001902  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  5916  001904  0E00               	movlw	0
  5917  001906  6F9A               	movwf	efgtoa@sign& (0+255),b
  5918                           
  5919                           ; BSR set to: 0
  5920                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 480:         if (e <
      +                           0) {
  5921  001908  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  5922  00190A  D008               	goto	l4878
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 481:             sig
      +                          n = 1;
  5926  00190C  0E00               	movlw	0
  5927  00190E  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  5928  001910  0E01               	movlw	1
  5929  001912  6F9A               	movwf	efgtoa@sign& (0+255),b
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 482:             e =
      +                           -e;
  5933  001914  6DB0               	negf	efgtoa@e& (0+255),b
  5934  001916  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
  5935  001918  B0D8               	btfsc	status,0,c
  5936  00191A  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  5937  00191C                     l4878:
  5938                           
  5939                           ; BSR set to: 0
  5940                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  5941  00191C  0E00               	movlw	0
  5942  00191E  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  5943  001920  0E02               	movlw	2
  5944  001922  6F9C               	movwf	efgtoa@p& (0+255),b
  5945                           
  5946                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (
      +                          e || (0 < p)) {
  5947  001924  D02B               	goto	l4890
  5948  001926                     l4880:
  5949                           
  5950                           ; BSR set to: 0
  5951                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 486:             --i
      +                          ;
  5952  001926  07AA               	decf	efgtoa@i& (0+255),f,b
  5953  001928  A0D8               	btfss	status,0,c
  5954  00192A  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 487:             dbu
      +                          f[i] = '0' + (e % 10);
  5958  00192C  0E0E               	movlw	low _dbuf
  5959  00192E  25AA               	addwf	efgtoa@i& (0+255),w,b
  5960  001930  6ED9               	movwf	fsr2l,c
  5961  001932  0E01               	movlw	high _dbuf
  5962  001934  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5963  001936  6EDA               	movwf	fsr2h,c
  5964  001938  C0B0  F011         	movff	efgtoa@e,___awmod@dividend
  5965  00193C  C0B1  F012         	movff	efgtoa@e+1,___awmod@dividend+1
  5966  001940  0E00               	movlw	0
  5967  001942  6E14               	movwf	___awmod@divisor+1,c
  5968  001944  0E0A               	movlw	10
  5969  001946  6E13               	movwf	___awmod@divisor,c
  5970  001948  EC8D  F023         	call	___awmod	;wreg free
  5971  00194C  5011               	movf	?___awmod,w,c
  5972  00194E  0F30               	addlw	48
  5973  001950  6EDF               	movwf	indf2,c
  5974                           
  5975                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 488:             e =
      +                           e / 10;
  5976  001952  C0B0  F011         	movff	efgtoa@e,___awdiv@dividend
  5977  001956  C0B1  F012         	movff	efgtoa@e+1,___awdiv@dividend+1
  5978  00195A  0E00               	movlw	0
  5979  00195C  6E14               	movwf	___awdiv@divisor+1,c
  5980  00195E  0E0A               	movlw	10
  5981  001960  6E13               	movwf	___awdiv@divisor,c
  5982  001962  EC0A  F023         	call	___awdiv	;wreg free
  5983  001966  C011  F0B0         	movff	?___awdiv,efgtoa@e
  5984  00196A  C012  F0B1         	movff	?___awdiv+1,efgtoa@e+1
  5985                           
  5986                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 489:             --p
      +                          ;
  5987  00196E  0100               	movlb	0	; () banked
  5988  001970  079C               	decf	efgtoa@p& (0+255),f,b
  5989  001972  A0D8               	btfss	status,0,c
  5990  001974  079D               	decf	(efgtoa@p+1)& (0+255),f,b
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 490:             --w
      +                          ;
  5994  001976  079F               	decf	efgtoa@w& (0+255),f,b
  5995  001978  A0D8               	btfss	status,0,c
  5996  00197A  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5997  00197C                     l4890:
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (
      +                          e || (0 < p)) {
  6001  00197C  51B0               	movf	efgtoa@e& (0+255),w,b
  6002  00197E  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6003  001980  A4D8               	btfss	status,2,c
  6004  001982  D7D1               	goto	l4880
  6005                           
  6006                           ; BSR set to: 0
  6007  001984  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6008  001986  D005               	goto	u6140
  6009  001988  519D               	movf	(efgtoa@p+1)& (0+255),w,b
  6010  00198A  E1CD               	bnz	l4880
  6011  00198C  059C               	decf	efgtoa@p& (0+255),w,b
  6012  00198E  B0D8               	btfsc	status,0,c
  6013  001990  D7CA               	goto	l4880
  6014  001992                     u6140:
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 492:         --i;
  6018  001992  07AA               	decf	efgtoa@i& (0+255),f,b
  6019  001994  A0D8               	btfss	status,0,c
  6020  001996  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 493:         dbuf[i]
      +                           = sign ? '-' : '+';
  6024  001998  519A               	movf	efgtoa@sign& (0+255),w,b
  6025  00199A  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6026  00199C  A4D8               	btfss	status,2,c
  6027  00199E  D004               	goto	l4900
  6028                           
  6029                           ; BSR set to: 0
  6030  0019A0  0E00               	movlw	0
  6031  0019A2  6F8B               	movwf	(_efgtoa$686+1)& (0+255),b
  6032  0019A4  0E2B               	movlw	43
  6033  0019A6  D003               	goto	L7
  6034  0019A8                     l4900:
  6035                           
  6036                           ; BSR set to: 0
  6037  0019A8  0E00               	movlw	0
  6038  0019AA  6F8B               	movwf	(_efgtoa$686+1)& (0+255),b
  6039  0019AC  0E2D               	movlw	45
  6040  0019AE                     L7:
  6041  0019AE  6F8A               	movwf	_efgtoa$686& (0+255),b
  6042                           
  6043                           ; BSR set to: 0
  6044  0019B0  0E0E               	movlw	low _dbuf
  6045  0019B2  25AA               	addwf	efgtoa@i& (0+255),w,b
  6046  0019B4  6ED9               	movwf	fsr2l,c
  6047  0019B6  0E01               	movlw	high _dbuf
  6048  0019B8  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6049  0019BA  6EDA               	movwf	fsr2h,c
  6050  0019BC  C08A  FFDF         	movff	_efgtoa$686,indf2
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 494:         --w;
  6054  0019C0  079F               	decf	efgtoa@w& (0+255),f,b
  6055  0019C2  A0D8               	btfss	status,0,c
  6056  0019C4  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  6057                           
  6058                           ; BSR set to: 0
  6059                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 496:         dbuf[i]
      +                           = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6060  0019C6  07AA               	decf	efgtoa@i& (0+255),f,b
  6061  0019C8  A0D8               	btfss	status,0,c
  6062  0019CA  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  6063                           
  6064                           ; BSR set to: 0
  6065  0019CC  0EBF               	movlw	191
  6066  0019CE  6E45               	movwf	??_efgtoa& (0+255),c
  6067  0019D0  0EFF               	movlw	255
  6068  0019D2  6E46               	movwf	(??_efgtoa+1)& (0+255),c
  6069  0019D4  5044               	movf	efgtoa@c,w,c
  6070  0019D6  6E47               	movwf	(??_efgtoa+2)& (0+255),c
  6071  0019D8  6A48               	clrf	(??_efgtoa+3)& (0+255),c
  6072  0019DA  5045               	movf	??_efgtoa,w,c
  6073  0019DC  2647               	addwf	??_efgtoa+2,f,c
  6074  0019DE  5046               	movf	??_efgtoa+1,w,c
  6075  0019E0  2248               	addwfc	??_efgtoa+3,f,c
  6076  0019E2  5048               	movf	??_efgtoa+3,w,c
  6077  0019E4  E106               	bnz	u6160
  6078  0019E6  0E1A               	movlw	26
  6079  0019E8  5C47               	subwf	??_efgtoa+2,w,c
  6080  0019EA  B0D8               	btfsc	status,0,c
  6081  0019EC  D002               	goto	u6160
  6082  0019EE  0E01               	movlw	1
  6083  0019F0  D001               	goto	u6170
  6084  0019F2                     u6160:
  6085  0019F2  0E00               	movlw	0
  6086  0019F4                     u6170:
  6087  0019F4  6F8E               	movwf	_efgtoa$688& (0+255),b
  6088  0019F6  6B8F               	clrf	(_efgtoa$688+1)& (0+255),b
  6089                           
  6090                           ; BSR set to: 0
  6091  0019F8  518E               	movf	_efgtoa$688& (0+255),w,b
  6092  0019FA  118F               	iorwf	(_efgtoa$688+1)& (0+255),w,b
  6093  0019FC  A4D8               	btfss	status,2,c
  6094  0019FE  D004               	goto	l4916
  6095                           
  6096                           ; BSR set to: 0
  6097  001A00  0E00               	movlw	0
  6098  001A02  6F8D               	movwf	(_efgtoa$687+1)& (0+255),b
  6099  001A04  0E65               	movlw	101
  6100  001A06  D003               	goto	L8
  6101  001A08                     l4916:
  6102                           
  6103                           ; BSR set to: 0
  6104  001A08  0E00               	movlw	0
  6105  001A0A  6F8D               	movwf	(_efgtoa$687+1)& (0+255),b
  6106  001A0C  0E45               	movlw	69
  6107  001A0E                     L8:
  6108  001A0E  6F8C               	movwf	_efgtoa$687& (0+255),b
  6109                           
  6110                           ; BSR set to: 0
  6111  001A10  0E0E               	movlw	low _dbuf
  6112  001A12  25AA               	addwf	efgtoa@i& (0+255),w,b
  6113  001A14  6ED9               	movwf	fsr2l,c
  6114  001A16  0E01               	movlw	high _dbuf
  6115  001A18  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6116  001A1A  6EDA               	movwf	fsr2h,c
  6117  001A1C  C08C  FFDF         	movff	_efgtoa$687,indf2
  6118                           
  6119                           ; BSR set to: 0
  6120                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 497:         --w;
  6121  001A20  079F               	decf	efgtoa@w& (0+255),f,b
  6122  001A22  A0D8               	btfss	status,0,c
  6123  001A24  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  6124                           
  6125                           ; BSR set to: 0
  6126                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 498:         strcpy(
      +                          &dbuf[n], &dbuf[i]);
  6127  001A26  0E0E               	movlw	low _dbuf
  6128  001A28  25B2               	addwf	efgtoa@n& (0+255),w,b
  6129  001A2A  6E11               	movwf	strcpy@dest,c
  6130  001A2C  0E01               	movlw	high _dbuf
  6131  001A2E  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6132  001A30  6E12               	movwf	strcpy@dest+1,c
  6133  001A32  0E0E               	movlw	low _dbuf
  6134  001A34  25AA               	addwf	efgtoa@i& (0+255),w,b
  6135  001A36  6E13               	movwf	strcpy@src,c
  6136  001A38  0E01               	movlw	high _dbuf
  6137  001A3A  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6138  001A3C  6E14               	movwf	strcpy@src+1,c
  6139  001A3E  EC51  F024         	call	_strcpy	;wreg free
  6140  001A42                     l4924:
  6141                           
  6142                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 502:     return pad(
      +                          fp, &dbuf[0], w);
  6143  001A42  C03E  F024         	movff	efgtoa@fp,pad@fp
  6144  001A46  C03F  F025         	movff	efgtoa@fp+1,pad@fp+1
  6145  001A4A  0E0E               	movlw	low _dbuf
  6146  001A4C  6E26               	movwf	pad@buf,c
  6147  001A4E  0E01               	movlw	high _dbuf
  6148  001A50  6E27               	movwf	pad@buf+1,c
  6149  001A52  C09F  F028         	movff	efgtoa@w,pad@p
  6150  001A56  C0A0  F029         	movff	efgtoa@w+1,pad@p+1
  6151  001A5A  EC30  F022         	call	_pad	;wreg free
  6152  001A5E  C024  F03E         	movff	?_pad,?_efgtoa
  6153  001A62  C025  F03F         	movff	?_pad+1,?_efgtoa+1
  6154  001A66  0012               	return		;funcret
  6155  001A68                     __end_of_efgtoa:
  6156                           	opt callstack 0
  6157                           
  6158 ;; *************** function _tolower *****************
  6159 ;; Defined at:
  6160 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/tolower.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  c               2   22[COMRAM] int 
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;		None
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  2   22[COMRAM] int 
  6167 ;; Registers used:
  6168 ;;		wreg, status,2, status,0
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6175 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6176 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6177 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6178 ;;Total ram usage:        8 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:    3
  6181 ;; This function calls:
  6182 ;;		_isupper
  6183 ;; This function is called by:
  6184 ;;		_efgtoa
  6185 ;;		_vfpfcnvrt
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           	psect	text12
  6190  0048F6                     __ptext12:
  6191                           	opt callstack 0
  6192  0048F6                     _tolower:
  6193                           	opt callstack 24
  6194                           
  6195                           ;incstack = 0
  6196  0048F6  0EBF               	movlw	191
  6197  0048F8  6E19               	movwf	??_tolower& (0+255),c
  6198  0048FA  0EFF               	movlw	255
  6199  0048FC  6E1A               	movwf	(??_tolower+1)& (0+255),c
  6200  0048FE  C017  F01B         	movff	tolower@c,??_tolower+2
  6201  004902  C018  F01C         	movff	tolower@c+1,??_tolower+3
  6202  004906  5019               	movf	??_tolower,w,c
  6203  004908  261B               	addwf	??_tolower+2,f,c
  6204  00490A  501A               	movf	??_tolower+1,w,c
  6205  00490C  221C               	addwfc	??_tolower+3,f,c
  6206  00490E  501C               	movf	??_tolower+3,w,c
  6207  004910  E106               	bnz	u4470
  6208  004912  0E1A               	movlw	26
  6209  004914  5C1B               	subwf	??_tolower+2,w,c
  6210  004916  B0D8               	btfsc	status,0,c
  6211  004918  D002               	goto	u4470
  6212  00491A  0E01               	movlw	1
  6213  00491C  D001               	goto	u4480
  6214  00491E                     u4470:
  6215  00491E  0E00               	movlw	0
  6216  004920                     u4480:
  6217  004920  6E1D               	movwf	_tolower$1306,c
  6218  004922  6A1E               	clrf	_tolower$1306+1,c
  6219  004924  501D               	movf	_tolower$1306,w,c
  6220  004926  101E               	iorwf	_tolower$1306+1,w,c
  6221  004928  B4D8               	btfsc	status,2,c
  6222  00492A  D006               	goto	l1279
  6223  00492C  0E20               	movlw	32
  6224  00492E  1017               	iorwf	tolower@c,w,c
  6225  004930  6E17               	movwf	?_tolower,c
  6226  004932  5018               	movf	tolower@c+1,w,c
  6227  004934  6E18               	movwf	?_tolower+1,c
  6228  004936  0012               	return	
  6229  004938                     l1279:
  6230  004938  C017  F017         	movff	tolower@c,?_tolower
  6231  00493C  C018  F018         	movff	tolower@c+1,?_tolower+1
  6232  004940  0012               	return		;funcret
  6233  004942                     __end_of_tolower:
  6234                           	opt callstack 0
  6235                           
  6236 ;; *************** function _isupper *****************
  6237 ;; Defined at:
  6238 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  c               2   16[COMRAM] int 
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;		None
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  2   16[COMRAM] int 
  6245 ;; Registers used:
  6246 ;;		wreg, status,2, status,0
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6252 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6254 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6255 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6256 ;;Total ram usage:        6 bytes
  6257 ;; Hardware stack levels used:    1
  6258 ;; Hardware stack levels required when called:    2
  6259 ;; This function calls:
  6260 ;;		Nothing
  6261 ;; This function is called by:
  6262 ;;		_efgtoa
  6263 ;;		_xtoa
  6264 ;;		_vfpfcnvrt
  6265 ;;		_tolower
  6266 ;; This function uses a non-reentrant model
  6267 ;;
  6268                           
  6269                           	psect	text13
  6270  004B68                     __ptext13:
  6271                           	opt callstack 0
  6272  004B68                     _isupper:
  6273                           	opt callstack 24
  6274                           
  6275                           ;incstack = 0
  6276  004B68  0EBF               	movlw	191
  6277  004B6A  6E13               	movwf	??_isupper& (0+255),c
  6278  004B6C  0EFF               	movlw	255
  6279  004B6E  6E14               	movwf	(??_isupper+1)& (0+255),c
  6280  004B70  C011  F015         	movff	isupper@c,??_isupper+2
  6281  004B74  C012  F016         	movff	isupper@c+1,??_isupper+3
  6282  004B78  5013               	movf	??_isupper,w,c
  6283  004B7A  2615               	addwf	??_isupper+2,f,c
  6284  004B7C  5014               	movf	??_isupper+1,w,c
  6285  004B7E  2216               	addwfc	??_isupper+3,f,c
  6286  004B80  5016               	movf	??_isupper+3,w,c
  6287  004B82  E106               	bnz	u3900
  6288  004B84  0E1A               	movlw	26
  6289  004B86  5C15               	subwf	??_isupper+2,w,c
  6290  004B88  B0D8               	btfsc	status,0,c
  6291  004B8A  D002               	goto	u3900
  6292  004B8C  0E01               	movlw	1
  6293  004B8E  D001               	goto	u3910
  6294  004B90                     u3900:
  6295  004B90  0E00               	movlw	0
  6296  004B92                     u3910:
  6297  004B92  6E11               	movwf	?_isupper,c
  6298  004B94  6A12               	clrf	?_isupper+1,c
  6299  004B96  0012               	return		;funcret
  6300  004B98                     __end_of_isupper:
  6301                           	opt callstack 0
  6302                           
  6303 ;; *************** function _strcpy *****************
  6304 ;; Defined at:
  6305 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strcpy.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;  dest            2   16[COMRAM] PTR unsigned char 
  6308 ;;		 -> dbuf(80), 
  6309 ;;  src             2   18[COMRAM] PTR const unsigned char 
  6310 ;;		 -> STR_18(4), STR_17(4), STR_14(4), STR_13(4), 
  6311 ;;		 -> dbuf(80), 
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;  d               2   24[COMRAM] PTR unsigned char 
  6314 ;;		 -> dbuf(80), 
  6315 ;;  s               2   22[COMRAM] PTR const unsigned char 
  6316 ;;		 -> STR_18(4), STR_17(4), STR_14(4), STR_13(4), 
  6317 ;;		 -> dbuf(80), 
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  2   16[COMRAM] PTR unsigned char 
  6320 ;; Registers used:
  6321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6327 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6328 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6330 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;Total ram usage:       10 bytes
  6332 ;; Hardware stack levels used:    1
  6333 ;; Hardware stack levels required when called:    2
  6334 ;; This function calls:
  6335 ;;		Nothing
  6336 ;; This function is called by:
  6337 ;;		_efgtoa
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           	psect	text14
  6342  0048A2                     __ptext14:
  6343                           	opt callstack 0
  6344  0048A2                     _strcpy:
  6345                           	opt callstack 24
  6346                           
  6347                           ;incstack = 0
  6348  0048A2  C013  F017         	movff	strcpy@src,strcpy@s
  6349  0048A6  C014  F018         	movff	strcpy@src+1,strcpy@s+1
  6350  0048AA  C011  F019         	movff	strcpy@dest,strcpy@d
  6351  0048AE  C012  F01A         	movff	strcpy@dest+1,strcpy@d+1
  6352  0048B2                     l3968:
  6353  0048B2  5017               	movf	strcpy@s,w,c
  6354  0048B4  6E15               	movwf	??_strcpy& (0+255),c
  6355  0048B6  5018               	movf	strcpy@s+1,w,c
  6356  0048B8  6E16               	movwf	(??_strcpy+1)& (0+255),c
  6357  0048BA  4A17               	infsnz	strcpy@s,f,c
  6358  0048BC  2A18               	incf	strcpy@s+1,f,c
  6359  0048BE  C015  FFF6         	movff	??_strcpy,tblptrl
  6360  0048C2  C016  FFF7         	movff	??_strcpy+1,tblptrh
  6361  0048C6  0E00               	movlw	low (__smallconst shr (0+16))
  6362  0048C8  6EF8               	movwf	tblptru,c
  6363  0048CA  C019  FFD9         	movff	strcpy@d,fsr2l
  6364  0048CE  C01A  FFDA         	movff	strcpy@d+1,fsr2h
  6365  0048D2  4A19               	infsnz	strcpy@d,f,c
  6366  0048D4  2A1A               	incf	strcpy@d+1,f,c
  6367  0048D6  0E0F               	movlw	(high __ramtop+-1)
  6368  0048D8  64F7               	cpfsgt	tblptrh,c
  6369  0048DA  D003               	bra	u4457
  6370  0048DC  0008               	tblrd		*
  6371  0048DE  50F5               	movf	tablat,w,c
  6372  0048E0  D005               	bra	u4450
  6373  0048E2                     u4457:
  6374  0048E2  CFF6 FFE1          	movff	tblptrl,fsr1l
  6375  0048E6  CFF7 FFE2          	movff	tblptrh,fsr1h
  6376  0048EA  50E7               	movf	indf1,w,c
  6377  0048EC                     u4450:
  6378  0048EC  6EDF               	movwf	indf2,c
  6379  0048EE  50DF               	movf	indf2,w,c
  6380  0048F0  B4D8               	btfsc	status,2,c
  6381  0048F2  0012               	return	
  6382  0048F4  D7DE               	goto	l3968
  6383  0048F6                     __end_of_strcpy:
  6384                           	opt callstack 0
  6385                           
  6386 ;; *************** function _floorf *****************
  6387 ;; Defined at:
  6388 ;;		line 3 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/floorf.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;  x               4   41[COMRAM] float 
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;  u               4   57[COMRAM] struct .
  6393 ;;  m               4   51[COMRAM] unsigned long 
  6394 ;;  e               2   55[COMRAM] int 
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  4   41[COMRAM] float 
  6397 ;; Registers used:
  6398 ;;		wreg, status,2, status,0
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6404 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6407 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6408 ;;Total ram usage:       20 bytes
  6409 ;; Hardware stack levels used:    1
  6410 ;; Hardware stack levels required when called:    2
  6411 ;; This function calls:
  6412 ;;		Nothing
  6413 ;; This function is called by:
  6414 ;;		_efgtoa
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           	psect	text15
  6419  003822                     __ptext15:
  6420                           	opt callstack 0
  6421  003822                     _floorf:
  6422                           	opt callstack 24
  6423                           
  6424                           ;incstack = 0
  6425  003822  C060  F03A         	movff	floorf@F524,floorf@u
  6426  003826  C061  F03B         	movff	floorf@F524+1,floorf@u+1
  6427  00382A  C062  F03C         	movff	floorf@F524+2,floorf@u+2
  6428  00382E  C063  F03D         	movff	floorf@F524+3,floorf@u+3
  6429  003832  C02A  F03A         	movff	floorf@x,floorf@u
  6430  003836  C02B  F03B         	movff	floorf@x+1,floorf@u+1
  6431  00383A  C02C  F03C         	movff	floorf@x+2,floorf@u+2
  6432  00383E  C02D  F03D         	movff	floorf@x+3,floorf@u+3
  6433  003842  0E81               	movlw	129
  6434  003844  6E2E               	movwf	??_floorf& (0+255),c
  6435  003846  0EFF               	movlw	255
  6436  003848  6E2F               	movwf	(??_floorf+1)& (0+255),c
  6437  00384A  C03A  F030         	movff	floorf@u,??_floorf+2
  6438  00384E  C03B  F031         	movff	floorf@u+1,??_floorf+3
  6439  003852  C03C  F032         	movff	floorf@u+2,??_floorf+4
  6440  003856  C03D  F033         	movff	floorf@u+3,??_floorf+5
  6441  00385A  0E18               	movlw	24
  6442  00385C  D005               	goto	u4500
  6443  00385E                     u4505:
  6444  00385E  90D8               	bcf	status,0,c
  6445  003860  3233               	rrcf	??_floorf+5,f,c
  6446  003862  3232               	rrcf	??_floorf+4,f,c
  6447  003864  3231               	rrcf	??_floorf+3,f,c
  6448  003866  3230               	rrcf	??_floorf+2,f,c
  6449  003868                     u4500:
  6450  003868  2EE8               	decfsz	wreg,f,c
  6451  00386A  D7F9               	goto	u4505
  6452  00386C  5030               	movf	??_floorf+2,w,c
  6453  00386E  242E               	addwf	??_floorf,w,c
  6454  003870  6E38               	movwf	floorf@e,c
  6455  003872  0E00               	movlw	0
  6456  003874  202F               	addwfc	??_floorf+1,w,c
  6457  003876  6E39               	movwf	floorf@e+1,c
  6458  003878  BE39               	btfsc	floorf@e+1,7,c
  6459  00387A  D00F               	goto	l3986
  6460  00387C  5039               	movf	floorf@e+1,w,c
  6461  00387E  E104               	bnz	u4510
  6462  003880  0E17               	movlw	23
  6463  003882  5C38               	subwf	floorf@e,w,c
  6464  003884  A0D8               	btfss	status,0,c
  6465  003886  D009               	goto	l3986
  6466  003888                     u4510:
  6467  003888  C02A  F02A         	movff	floorf@x,?_floorf
  6468  00388C  C02B  F02B         	movff	floorf@x+1,?_floorf+1
  6469  003890  C02C  F02C         	movff	floorf@x+2,?_floorf+2
  6470  003894  C02D  F02D         	movff	floorf@x+3,?_floorf+3
  6471  003898  0012               	return	
  6472  00389A                     l3986:
  6473  00389A  BE39               	btfsc	floorf@e+1,7,c
  6474  00389C  D05E               	goto	l3996
  6475  00389E  C038  F02E         	movff	floorf@e,??_floorf
  6476  0038A2  0EFF               	movlw	255
  6477  0038A4  6E2F               	movwf	(??_floorf+1)& (0+255),c
  6478  0038A6  0EFF               	movlw	255
  6479  0038A8  6E30               	movwf	(??_floorf+2)& (0+255),c
  6480  0038AA  0E7F               	movlw	127
  6481  0038AC  6E31               	movwf	(??_floorf+3)& (0+255),c
  6482  0038AE  0E00               	movlw	0
  6483  0038B0  6E32               	movwf	(??_floorf+4)& (0+255),c
  6484  0038B2                     u4535:
  6485  0038B2  662E               	tstfsz	??_floorf,c
  6486  0038B4  D001               	goto	u4536
  6487  0038B6  D007               	goto	u4537
  6488  0038B8                     u4536:
  6489  0038B8  3432               	rlcf	??_floorf+4,w,c
  6490  0038BA  3232               	rrcf	??_floorf+4,f,c
  6491  0038BC  3231               	rrcf	??_floorf+3,f,c
  6492  0038BE  3230               	rrcf	??_floorf+2,f,c
  6493  0038C0  322F               	rrcf	??_floorf+1,f,c
  6494  0038C2  2E2E               	decfsz	??_floorf,f,c
  6495  0038C4  D7F6               	goto	u4535
  6496  0038C6                     u4537:
  6497  0038C6  C02F  F034         	movff	??_floorf+1,floorf@m
  6498  0038CA  C030  F035         	movff	??_floorf+2,floorf@m+1
  6499  0038CE  C031  F036         	movff	??_floorf+3,floorf@m+2
  6500  0038D2  C032  F037         	movff	??_floorf+4,floorf@m+3
  6501  0038D6  5034               	movf	floorf@m,w,c
  6502  0038D8  143A               	andwf	floorf@u,w,c
  6503  0038DA  6E2E               	movwf	??_floorf& (0+255),c
  6504  0038DC  5035               	movf	floorf@m+1,w,c
  6505  0038DE  143B               	andwf	floorf@u+1,w,c
  6506  0038E0  6E2F               	movwf	(??_floorf+1)& (0+255),c
  6507  0038E2  5036               	movf	floorf@m+2,w,c
  6508  0038E4  143C               	andwf	floorf@u+2,w,c
  6509  0038E6  6E30               	movwf	(??_floorf+2)& (0+255),c
  6510  0038E8  5037               	movf	floorf@m+3,w,c
  6511  0038EA  143D               	andwf	floorf@u+3,w,c
  6512  0038EC  6E31               	movwf	(??_floorf+3)& (0+255),c
  6513  0038EE  502E               	movf	??_floorf,w,c
  6514  0038F0  102F               	iorwf	??_floorf+1,w,c
  6515  0038F2  1030               	iorwf	??_floorf+2,w,c
  6516  0038F4  1031               	iorwf	??_floorf+3,w,c
  6517  0038F6  B4D8               	btfsc	status,2,c
  6518  0038F8  D7C7               	goto	u4510
  6519  0038FA  C03A  F02E         	movff	floorf@u,??_floorf
  6520  0038FE  C03B  F02F         	movff	floorf@u+1,??_floorf+1
  6521  003902  C03C  F030         	movff	floorf@u+2,??_floorf+2
  6522  003906  C03D  F031         	movff	floorf@u+3,??_floorf+3
  6523  00390A  0E20               	movlw	32
  6524  00390C  D005               	goto	u4550
  6525  00390E                     u4555:
  6526  00390E  90D8               	bcf	status,0,c
  6527  003910  3231               	rrcf	??_floorf+3,f,c
  6528  003912  3230               	rrcf	??_floorf+2,f,c
  6529  003914  322F               	rrcf	??_floorf+1,f,c
  6530  003916  322E               	rrcf	??_floorf,f,c
  6531  003918                     u4550:
  6532  003918  2EE8               	decfsz	wreg,f,c
  6533  00391A  D7F9               	goto	u4555
  6534  00391C  502E               	movf	??_floorf,w,c
  6535  00391E  102F               	iorwf	??_floorf+1,w,c
  6536  003920  1030               	iorwf	??_floorf+2,w,c
  6537  003922  1031               	iorwf	??_floorf+3,w,c
  6538  003924  B4D8               	btfsc	status,2,c
  6539  003926  D008               	goto	l1196
  6540  003928  5034               	movf	floorf@m,w,c
  6541  00392A  263A               	addwf	floorf@u,f,c
  6542  00392C  5035               	movf	floorf@m+1,w,c
  6543  00392E  223B               	addwfc	floorf@u+1,f,c
  6544  003930  5036               	movf	floorf@m+2,w,c
  6545  003932  223C               	addwfc	floorf@u+2,f,c
  6546  003934  5037               	movf	floorf@m+3,w,c
  6547  003936  223D               	addwfc	floorf@u+3,f,c
  6548  003938                     l1196:
  6549  003938  1C34               	comf	floorf@m,w,c
  6550  00393A  6E2E               	movwf	??_floorf& (0+255),c
  6551  00393C  1C35               	comf	floorf@m+1,w,c
  6552  00393E  6E2F               	movwf	(??_floorf+1)& (0+255),c
  6553  003940  1C36               	comf	floorf@m+2,w,c
  6554  003942  6E30               	movwf	(??_floorf+2)& (0+255),c
  6555  003944  1C37               	comf	floorf@m+3,w,c
  6556  003946  6E31               	movwf	(??_floorf+3)& (0+255),c
  6557  003948  502E               	movf	??_floorf,w,c
  6558  00394A  163A               	andwf	floorf@u,f,c
  6559  00394C  502F               	movf	??_floorf+1,w,c
  6560  00394E  163B               	andwf	floorf@u+1,f,c
  6561  003950  5030               	movf	??_floorf+2,w,c
  6562  003952  163C               	andwf	floorf@u+2,f,c
  6563  003954  5031               	movf	??_floorf+3,w,c
  6564  003956  163D               	andwf	floorf@u+3,f,c
  6565  003958  D036               	goto	l4004
  6566  00395A                     l3996:
  6567  00395A  C03A  F02E         	movff	floorf@u,??_floorf
  6568  00395E  C03B  F02F         	movff	floorf@u+1,??_floorf+1
  6569  003962  C03C  F030         	movff	floorf@u+2,??_floorf+2
  6570  003966  C03D  F031         	movff	floorf@u+3,??_floorf+3
  6571  00396A  0E20               	movlw	32
  6572  00396C  D005               	goto	u4570
  6573  00396E                     u4575:
  6574  00396E  90D8               	bcf	status,0,c
  6575  003970  3231               	rrcf	??_floorf+3,f,c
  6576  003972  3230               	rrcf	??_floorf+2,f,c
  6577  003974  322F               	rrcf	??_floorf+1,f,c
  6578  003976  322E               	rrcf	??_floorf,f,c
  6579  003978                     u4570:
  6580  003978  2EE8               	decfsz	wreg,f,c
  6581  00397A  D7F9               	goto	u4575
  6582  00397C  502E               	movf	??_floorf,w,c
  6583  00397E  102F               	iorwf	??_floorf+1,w,c
  6584  003980  1030               	iorwf	??_floorf+2,w,c
  6585  003982  1031               	iorwf	??_floorf+3,w,c
  6586  003984  A4D8               	btfss	status,2,c
  6587  003986  D008               	goto	l4000
  6588  003988  0E00               	movlw	0
  6589  00398A  6E3A               	movwf	floorf@u,c
  6590  00398C  0E00               	movlw	0
  6591  00398E  6E3B               	movwf	floorf@u+1,c
  6592  003990  0E00               	movlw	0
  6593  003992  6E3C               	movwf	floorf@u+2,c
  6594  003994  0E00               	movlw	0
  6595  003996  D016               	goto	L9
  6596  003998                     l4000:
  6597  003998  90D8               	bcf	status,0,c
  6598  00399A  343A               	rlcf	floorf@u,w,c
  6599  00399C  6E2E               	movwf	??_floorf& (0+255),c
  6600  00399E  343B               	rlcf	floorf@u+1,w,c
  6601  0039A0  6E2F               	movwf	(??_floorf+1)& (0+255),c
  6602  0039A2  343C               	rlcf	floorf@u+2,w,c
  6603  0039A4  6E30               	movwf	(??_floorf+2)& (0+255),c
  6604  0039A6  343D               	rlcf	floorf@u+3,w,c
  6605  0039A8  6E31               	movwf	(??_floorf+3)& (0+255),c
  6606  0039AA  502E               	movf	??_floorf,w,c
  6607  0039AC  102F               	iorwf	??_floorf+1,w,c
  6608  0039AE  1030               	iorwf	??_floorf+2,w,c
  6609  0039B0  1031               	iorwf	??_floorf+3,w,c
  6610  0039B2  B4D8               	btfsc	status,2,c
  6611  0039B4  D008               	goto	l4004
  6612  0039B6  0E00               	movlw	0
  6613  0039B8  6E3A               	movwf	floorf@u,c
  6614  0039BA  0E00               	movlw	0
  6615  0039BC  6E3B               	movwf	floorf@u+1,c
  6616  0039BE  0E80               	movlw	128
  6617  0039C0  6E3C               	movwf	floorf@u+2,c
  6618  0039C2  0EBF               	movlw	191
  6619  0039C4                     L9:
  6620  0039C4  6E3D               	movwf	floorf@u+3,c
  6621  0039C6                     l4004:
  6622  0039C6  C03A  F02A         	movff	floorf@u,?_floorf
  6623  0039CA  C03B  F02B         	movff	floorf@u+1,?_floorf+1
  6624  0039CE  C03C  F02C         	movff	floorf@u+2,?_floorf+2
  6625  0039D2  C03D  F02D         	movff	floorf@u+3,?_floorf+3
  6626  0039D6  0012               	return		;funcret
  6627  0039D8                     __end_of_floorf:
  6628                           	opt callstack 0
  6629                           
  6630 ;; *************** function ___fpclassifyf *****************
  6631 ;; Defined at:
  6632 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/__fpclassifyf.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;  x               4   16[COMRAM] float 
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;  u               4   26[COMRAM] struct .
  6637 ;;  e               2   24[COMRAM] int 
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  2   16[COMRAM] int 
  6640 ;; Registers used:
  6641 ;;		wreg, status,2, status,0
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6647 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6649 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6650 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6651 ;;Total ram usage:       14 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:    2
  6654 ;; This function calls:
  6655 ;;		Nothing
  6656 ;; This function is called by:
  6657 ;;		_efgtoa
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text16
  6662  004194                     __ptext16:
  6663                           	opt callstack 0
  6664  004194                     ___fpclassifyf:
  6665                           	opt callstack 24
  6666                           
  6667                           ;incstack = 0
  6668  004194  C064  F01B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6669  004198  C065  F01C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6670  00419C  C066  F01D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6671  0041A0  C067  F01E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6672  0041A4  C011  F01B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6673  0041A8  C012  F01C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6674  0041AC  C013  F01D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6675  0041B0  C014  F01E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6676  0041B4  C01B  F015         	movff	___fpclassifyf@u,??___fpclassifyf
  6677  0041B8  C01C  F016         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6678  0041BC  C01D  F017         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6679  0041C0  C01E  F018         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6680  0041C4  0E18               	movlw	24
  6681  0041C6  D005               	goto	u4380
  6682  0041C8                     u4385:
  6683  0041C8  90D8               	bcf	status,0,c
  6684  0041CA  3218               	rrcf	??___fpclassifyf+3,f,c
  6685  0041CC  3217               	rrcf	??___fpclassifyf+2,f,c
  6686  0041CE  3216               	rrcf	??___fpclassifyf+1,f,c
  6687  0041D0  3215               	rrcf	??___fpclassifyf,f,c
  6688  0041D2                     u4380:
  6689  0041D2  2EE8               	decfsz	wreg,f,c
  6690  0041D4  D7F9               	goto	u4385
  6691  0041D6  5015               	movf	??___fpclassifyf,w,c
  6692  0041D8  6E19               	movwf	___fpclassifyf@e,c
  6693  0041DA  6A1A               	clrf	___fpclassifyf@e+1,c
  6694  0041DC  5019               	movf	___fpclassifyf@e,w,c
  6695  0041DE  101A               	iorwf	___fpclassifyf@e+1,w,c
  6696  0041E0  A4D8               	btfss	status,2,c
  6697  0041E2  D019               	goto	l3956
  6698  0041E4  90D8               	bcf	status,0,c
  6699  0041E6  341B               	rlcf	___fpclassifyf@u,w,c
  6700  0041E8  6E15               	movwf	??___fpclassifyf& (0+255),c
  6701  0041EA  341C               	rlcf	___fpclassifyf@u+1,w,c
  6702  0041EC  6E16               	movwf	(??___fpclassifyf+1)& (0+255),c
  6703  0041EE  341D               	rlcf	___fpclassifyf@u+2,w,c
  6704  0041F0  6E17               	movwf	(??___fpclassifyf+2)& (0+255),c
  6705  0041F2  341E               	rlcf	___fpclassifyf@u+3,w,c
  6706  0041F4  6E18               	movwf	(??___fpclassifyf+3)& (0+255),c
  6707  0041F6  5015               	movf	??___fpclassifyf,w,c
  6708  0041F8  1016               	iorwf	??___fpclassifyf+1,w,c
  6709  0041FA  1017               	iorwf	??___fpclassifyf+2,w,c
  6710  0041FC  1018               	iorwf	??___fpclassifyf+3,w,c
  6711  0041FE  A4D8               	btfss	status,2,c
  6712  004200  D005               	goto	l3952
  6713  004202  0E00               	movlw	0
  6714  004204  6E12               	movwf	?___fpclassifyf+1,c
  6715  004206  0E02               	movlw	2
  6716  004208  6E11               	movwf	?___fpclassifyf,c
  6717  00420A  0012               	return	
  6718  00420C                     l3952:
  6719  00420C  0E00               	movlw	0
  6720  00420E  6E12               	movwf	?___fpclassifyf+1,c
  6721  004210  0E03               	movlw	3
  6722  004212  6E11               	movwf	?___fpclassifyf,c
  6723  004214  0012               	return	
  6724  004216                     l3956:
  6725  004216  2819               	incf	___fpclassifyf@e,w,c
  6726  004218  101A               	iorwf	___fpclassifyf@e+1,w,c
  6727  00421A  A4D8               	btfss	status,2,c
  6728  00421C  D01C               	goto	l3962
  6729  00421E  C01B  F015         	movff	___fpclassifyf@u,??___fpclassifyf
  6730  004222  C01C  F016         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6731  004226  C01D  F017         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6732  00422A  C01E  F018         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6733  00422E  0E09               	movlw	9
  6734  004230                     u4425:
  6735  004230  90D8               	bcf	status,0,c
  6736  004232  3615               	rlcf	??___fpclassifyf,f,c
  6737  004234  3616               	rlcf	??___fpclassifyf+1,f,c
  6738  004236  3617               	rlcf	??___fpclassifyf+2,f,c
  6739  004238  3618               	rlcf	??___fpclassifyf+3,f,c
  6740  00423A  2EE8               	decfsz	wreg,f,c
  6741  00423C  D7F9               	goto	u4425
  6742  00423E  5015               	movf	??___fpclassifyf,w,c
  6743  004240  1016               	iorwf	??___fpclassifyf+1,w,c
  6744  004242  1017               	iorwf	??___fpclassifyf+2,w,c
  6745  004244  1018               	iorwf	??___fpclassifyf+3,w,c
  6746  004246  A4D8               	btfss	status,2,c
  6747  004248  D002               	goto	u4430
  6748  00424A  0E01               	movlw	1
  6749  00424C  D001               	goto	u4440
  6750  00424E                     u4430:
  6751  00424E  0E00               	movlw	0
  6752  004250                     u4440:
  6753  004250  6E11               	movwf	?___fpclassifyf,c
  6754  004252  6A12               	clrf	?___fpclassifyf+1,c
  6755  004254  0012               	return	
  6756  004256                     l3962:
  6757  004256  0E00               	movlw	0
  6758  004258  6E12               	movwf	?___fpclassifyf+1,c
  6759  00425A  0E04               	movlw	4
  6760  00425C  6E11               	movwf	?___fpclassifyf,c
  6761  00425E  0012               	return		;funcret
  6762  004260                     __end_of___fpclassifyf:
  6763                           	opt callstack 0
  6764                           
  6765 ;; *************** function ___fltol *****************
  6766 ;; Defined at:
  6767 ;;		line 43 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  f1              4   16[COMRAM] int 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;  exp1            1   25[COMRAM] unsigned char 
  6772 ;;  sign1           1   24[COMRAM] unsigned char 
  6773 ;; Return value:  Size  Location     Type
  6774 ;;                  4   16[COMRAM] long 
  6775 ;; Registers used:
  6776 ;;		wreg, status,2, status,0
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6783 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6784 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6785 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6786 ;;Total ram usage:       10 bytes
  6787 ;; Hardware stack levels used:    1
  6788 ;; Hardware stack levels required when called:    2
  6789 ;; This function calls:
  6790 ;;		Nothing
  6791 ;; This function is called by:
  6792 ;;		_main
  6793 ;;		_efgtoa
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           	psect	text17
  6798  004260                     __ptext17:
  6799                           	opt callstack 0
  6800  004260                     ___fltol:
  6801                           	opt callstack 24
  6802                           
  6803                           ;incstack = 0
  6804  004260  3413               	rlcf	___fltol@f1+2,w,c
  6805  004262  3414               	rlcf	___fltol@f1+3,w,c
  6806  004264  6E1A               	movwf	___fltol@exp1,c
  6807  004266  501A               	movf	___fltol@exp1,w,c
  6808  004268  A4D8               	btfss	status,2,c
  6809  00426A  D009               	goto	l4518
  6810  00426C                     u5430:
  6811  00426C  0E00               	movlw	0
  6812  00426E  6E11               	movwf	?___fltol,c
  6813  004270  0E00               	movlw	0
  6814  004272  6E12               	movwf	?___fltol+1,c
  6815  004274  0E00               	movlw	0
  6816  004276  6E13               	movwf	?___fltol+2,c
  6817  004278  0E00               	movlw	0
  6818  00427A  6E14               	movwf	?___fltol+3,c
  6819  00427C  0012               	return	
  6820  00427E                     l4518:
  6821  00427E  C011  F015         	movff	___fltol@f1,??___fltol
  6822  004282  C012  F016         	movff	___fltol@f1+1,??___fltol+1
  6823  004286  C013  F017         	movff	___fltol@f1+2,??___fltol+2
  6824  00428A  C014  F018         	movff	___fltol@f1+3,??___fltol+3
  6825  00428E  0E20               	movlw	32
  6826  004290  D005               	goto	u5440
  6827  004292                     u5445:
  6828  004292  90D8               	bcf	status,0,c
  6829  004294  3218               	rrcf	??___fltol+3,f,c
  6830  004296  3217               	rrcf	??___fltol+2,f,c
  6831  004298  3216               	rrcf	??___fltol+1,f,c
  6832  00429A  3215               	rrcf	??___fltol,f,c
  6833  00429C                     u5440:
  6834  00429C  2EE8               	decfsz	wreg,f,c
  6835  00429E  D7F9               	goto	u5445
  6836  0042A0  5015               	movf	??___fltol,w,c
  6837  0042A2  6E19               	movwf	___fltol@sign1,c
  6838  0042A4  8E13               	bsf	___fltol@f1+2,7,c
  6839  0042A6  0EFF               	movlw	255
  6840  0042A8  1611               	andwf	___fltol@f1,f,c
  6841  0042AA  0EFF               	movlw	255
  6842  0042AC  1612               	andwf	___fltol@f1+1,f,c
  6843  0042AE  0EFF               	movlw	255
  6844  0042B0  1613               	andwf	___fltol@f1+2,f,c
  6845  0042B2  0E00               	movlw	0
  6846  0042B4  1614               	andwf	___fltol@f1+3,f,c
  6847  0042B6  0E96               	movlw	150
  6848  0042B8  5E1A               	subwf	___fltol@exp1,f,c
  6849  0042BA  AE1A               	btfss	___fltol@exp1,7,c
  6850  0042BC  D00D               	goto	l4538
  6851  0042BE  501A               	movf	___fltol@exp1,w,c
  6852  0042C0  0A80               	xorlw	128
  6853  0042C2  0F97               	addlw	151
  6854  0042C4  A0D8               	btfss	status,0,c
  6855  0042C6  D7D2               	goto	u5430
  6856  0042C8                     l4534:
  6857  0042C8  90D8               	bcf	status,0,c
  6858  0042CA  3214               	rrcf	___fltol@f1+3,f,c
  6859  0042CC  3213               	rrcf	___fltol@f1+2,f,c
  6860  0042CE  3212               	rrcf	___fltol@f1+1,f,c
  6861  0042D0  3211               	rrcf	___fltol@f1,f,c
  6862  0042D2  3E1A               	incfsz	___fltol@exp1,f,c
  6863  0042D4  D7F9               	goto	l4534
  6864  0042D6  D00D               	goto	u5480
  6865  0042D8                     l4538:
  6866  0042D8  0E1F               	movlw	31
  6867  0042DA  641A               	cpfsgt	___fltol@exp1,c
  6868  0042DC  D007               	goto	l4546
  6869  0042DE  D7C6               	goto	u5430
  6870  0042E0                     l4544:
  6871  0042E0  90D8               	bcf	status,0,c
  6872  0042E2  3611               	rlcf	___fltol@f1,f,c
  6873  0042E4  3612               	rlcf	___fltol@f1+1,f,c
  6874  0042E6  3613               	rlcf	___fltol@f1+2,f,c
  6875  0042E8  3614               	rlcf	___fltol@f1+3,f,c
  6876  0042EA  061A               	decf	___fltol@exp1,f,c
  6877  0042EC                     l4546:
  6878  0042EC  501A               	movf	___fltol@exp1,w,c
  6879  0042EE  A4D8               	btfss	status,2,c
  6880  0042F0  D7F7               	goto	l4544
  6881  0042F2                     u5480:
  6882  0042F2  5019               	movf	___fltol@sign1,w,c
  6883  0042F4  B4D8               	btfsc	status,2,c
  6884  0042F6  D008               	goto	l4552
  6885  0042F8  1E14               	comf	___fltol@f1+3,f,c
  6886  0042FA  1E13               	comf	___fltol@f1+2,f,c
  6887  0042FC  1E12               	comf	___fltol@f1+1,f,c
  6888  0042FE  6C11               	negf	___fltol@f1,c
  6889  004300  0E00               	movlw	0
  6890  004302  2212               	addwfc	___fltol@f1+1,f,c
  6891  004304  2213               	addwfc	___fltol@f1+2,f,c
  6892  004306  2214               	addwfc	___fltol@f1+3,f,c
  6893  004308                     l4552:
  6894  004308  C011  F011         	movff	___fltol@f1,?___fltol
  6895  00430C  C012  F012         	movff	___fltol@f1+1,?___fltol+1
  6896  004310  C013  F013         	movff	___fltol@f1+2,?___fltol+2
  6897  004314  C014  F014         	movff	___fltol@f1+3,?___fltol+3
  6898  004318  0012               	return		;funcret
  6899  00431A                     __end_of___fltol:
  6900                           	opt callstack 0
  6901                           
  6902 ;; *************** function ___flsub *****************
  6903 ;; Defined at:
  6904 ;;		line 245 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  6905 ;; Parameters:    Size  Location     Type
  6906 ;;  b               4   41[COMRAM] long 
  6907 ;;  a               4   45[COMRAM] long 
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;		None
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  4   41[COMRAM] long 
  6912 ;; Registers used:
  6913 ;;		wreg, status,2, status,0, cstack
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6919 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6922 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6923 ;;Total ram usage:        8 bytes
  6924 ;; Hardware stack levels used:    1
  6925 ;; Hardware stack levels required when called:    3
  6926 ;; This function calls:
  6927 ;;		___fladd
  6928 ;; This function is called by:
  6929 ;;		_efgtoa
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           	psect	text18
  6934  00498C                     __ptext18:
  6935                           	opt callstack 0
  6936  00498C                     ___flsub:
  6937                           	opt callstack 23
  6938                           
  6939                           ;incstack = 0
  6940  00498C  0E00               	movlw	0
  6941  00498E  1A2E               	xorwf	___flsub@a,f,c
  6942  004990  0E00               	movlw	0
  6943  004992  1A2F               	xorwf	___flsub@a+1,f,c
  6944  004994  0E00               	movlw	0
  6945  004996  1A30               	xorwf	___flsub@a+2,f,c
  6946  004998  0E80               	movlw	128
  6947  00499A  1A31               	xorwf	___flsub@a+3,f,c
  6948  00499C  C02A  F011         	movff	___flsub@b,___fladd@b
  6949  0049A0  C02B  F012         	movff	___flsub@b+1,___fladd@b+1
  6950  0049A4  C02C  F013         	movff	___flsub@b+2,___fladd@b+2
  6951  0049A8  C02D  F014         	movff	___flsub@b+3,___fladd@b+3
  6952  0049AC  C02E  F015         	movff	___flsub@a,___fladd@a
  6953  0049B0  C02F  F016         	movff	___flsub@a+1,___fladd@a+1
  6954  0049B4  C030  F017         	movff	___flsub@a+2,___fladd@a+2
  6955  0049B8  C031  F018         	movff	___flsub@a+3,___fladd@a+3
  6956  0049BC  EC8A  F015         	call	___fladd	;wreg free
  6957  0049C0  C011  F02A         	movff	?___fladd,?___flsub
  6958  0049C4  C012  F02B         	movff	?___fladd+1,?___flsub+1
  6959  0049C8  C013  F02C         	movff	?___fladd+2,?___flsub+2
  6960  0049CC  C014  F02D         	movff	?___fladd+3,?___flsub+3
  6961  0049D0  0012               	return		;funcret
  6962  0049D2                     __end_of___flsub:
  6963                           	opt callstack 0
  6964                           
  6965 ;; *************** function ___fladd *****************
  6966 ;; Defined at:
  6967 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;  b               4   16[COMRAM] long 
  6970 ;;  a               4   20[COMRAM] long 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;  grs             1   31[COMRAM] unsigned char 
  6973 ;;  bexp            1   30[COMRAM] unsigned char 
  6974 ;;  aexp            1   29[COMRAM] unsigned char 
  6975 ;;  signs           1   28[COMRAM] unsigned char 
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  4   16[COMRAM] unsigned char 
  6978 ;; Registers used:
  6979 ;;		wreg, status,2, status,0
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6985 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6986 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6987 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;Total ram usage:       16 bytes
  6990 ;; Hardware stack levels used:    1
  6991 ;; Hardware stack levels required when called:    2
  6992 ;; This function calls:
  6993 ;;		Nothing
  6994 ;; This function is called by:
  6995 ;;		_efgtoa
  6996 ;;		___flsub
  6997 ;; This function uses a non-reentrant model
  6998 ;;
  6999                           
  7000                           	psect	text19
  7001  002B14                     __ptext19:
  7002                           	opt callstack 0
  7003  002B14                     ___fladd:
  7004                           	opt callstack 23
  7005                           
  7006                           ;incstack = 0
  7007  002B14  5014               	movf	___fladd@b+3,w,c
  7008  002B16  0B80               	andlw	128
  7009  002B18  6E1D               	movwf	___fladd@signs,c
  7010  002B1A  5014               	movf	___fladd@b+3,w,c
  7011  002B1C  2414               	addwf	___fladd@b+3,w,c
  7012  002B1E  6E1F               	movwf	___fladd@bexp,c
  7013  002B20  BE13               	btfsc	___fladd@b+2,7,c
  7014  002B22  801F               	bsf	___fladd@bexp,0,c
  7015  002B24  501F               	movf	___fladd@bexp,w,c
  7016  002B26  B4D8               	btfsc	status,2,c
  7017  002B28  D00D               	goto	l3728
  7018  002B2A  281F               	incf	___fladd@bexp,w,c
  7019  002B2C  A4D8               	btfss	status,2,c
  7020  002B2E  D008               	goto	l3724
  7021  002B30  0E00               	movlw	0
  7022  002B32  6E11               	movwf	___fladd@b,c
  7023  002B34  0E00               	movlw	0
  7024  002B36  6E12               	movwf	___fladd@b+1,c
  7025  002B38  0E00               	movlw	0
  7026  002B3A  6E13               	movwf	___fladd@b+2,c
  7027  002B3C  0E00               	movlw	0
  7028  002B3E  6E14               	movwf	___fladd@b+3,c
  7029  002B40                     l3724:
  7030  002B40  8E13               	bsf	___fladd@b+2,7,c
  7031  002B42  D006               	goto	L10
  7032  002B44                     l3728:
  7033  002B44  0E00               	movlw	0
  7034  002B46  6E11               	movwf	___fladd@b,c
  7035  002B48  0E00               	movlw	0
  7036  002B4A  6E12               	movwf	___fladd@b+1,c
  7037  002B4C  0E00               	movlw	0
  7038  002B4E  6E13               	movwf	___fladd@b+2,c
  7039  002B50                     L10:
  7040  002B50  0E00               	movlw	0
  7041  002B52  6E14               	movwf	___fladd@b+3,c
  7042  002B54  5018               	movf	___fladd@a+3,w,c
  7043  002B56  0B80               	andlw	128
  7044  002B58  6E1E               	movwf	___fladd@aexp,c
  7045  002B5A  501D               	movf	___fladd@signs,w,c
  7046  002B5C  181E               	xorwf	___fladd@aexp,w,c
  7047  002B5E  A4D8               	btfss	status,2,c
  7048  002B60  8C1D               	bsf	___fladd@signs,6,c
  7049  002B62  5018               	movf	___fladd@a+3,w,c
  7050  002B64  2418               	addwf	___fladd@a+3,w,c
  7051  002B66  6E1E               	movwf	___fladd@aexp,c
  7052  002B68  BE17               	btfsc	___fladd@a+2,7,c
  7053  002B6A  801E               	bsf	___fladd@aexp,0,c
  7054  002B6C  501E               	movf	___fladd@aexp,w,c
  7055  002B6E  B4D8               	btfsc	status,2,c
  7056  002B70  D00D               	goto	l3752
  7057  002B72  281E               	incf	___fladd@aexp,w,c
  7058  002B74  A4D8               	btfss	status,2,c
  7059  002B76  D008               	goto	l3748
  7060  002B78  0E00               	movlw	0
  7061  002B7A  6E15               	movwf	___fladd@a,c
  7062  002B7C  0E00               	movlw	0
  7063  002B7E  6E16               	movwf	___fladd@a+1,c
  7064  002B80  0E00               	movlw	0
  7065  002B82  6E17               	movwf	___fladd@a+2,c
  7066  002B84  0E00               	movlw	0
  7067  002B86  6E18               	movwf	___fladd@a+3,c
  7068  002B88                     l3748:
  7069  002B88  8E17               	bsf	___fladd@a+2,7,c
  7070  002B8A  D006               	goto	L11
  7071  002B8C                     l3752:
  7072  002B8C  0E00               	movlw	0
  7073  002B8E  6E15               	movwf	___fladd@a,c
  7074  002B90  0E00               	movlw	0
  7075  002B92  6E16               	movwf	___fladd@a+1,c
  7076  002B94  0E00               	movlw	0
  7077  002B96  6E17               	movwf	___fladd@a+2,c
  7078  002B98                     L11:
  7079  002B98  0E00               	movlw	0
  7080  002B9A  6E18               	movwf	___fladd@a+3,c
  7081  002B9C  501F               	movf	___fladd@bexp,w,c
  7082  002B9E  5C1E               	subwf	___fladd@aexp,w,c
  7083  002BA0  B0D8               	btfsc	status,0,c
  7084  002BA2  D022               	goto	l3790
  7085  002BA4  AC1D               	btfss	___fladd@signs,6,c
  7086  002BA6  D002               	goto	l3760
  7087  002BA8  0E80               	movlw	128
  7088  002BAA  1A1D               	xorwf	___fladd@signs,f,c
  7089  002BAC                     l3760:
  7090  002BAC  C01F  F020         	movff	___fladd@bexp,___fladd@grs
  7091  002BB0  C01E  F01F         	movff	___fladd@aexp,___fladd@bexp
  7092  002BB4  C020  F01E         	movff	___fladd@grs,___fladd@aexp
  7093  002BB8  C011  F020         	movff	___fladd@b,___fladd@grs
  7094  002BBC  C015  F011         	movff	___fladd@a,___fladd@b
  7095  002BC0  C020  F015         	movff	___fladd@grs,___fladd@a
  7096  002BC4  C012  F020         	movff	___fladd@b+1,___fladd@grs
  7097  002BC8  C016  F012         	movff	___fladd@a+1,___fladd@b+1
  7098  002BCC  C020  F016         	movff	___fladd@grs,___fladd@a+1
  7099  002BD0  C013  F020         	movff	___fladd@b+2,___fladd@grs
  7100  002BD4  C017  F013         	movff	___fladd@a+2,___fladd@b+2
  7101  002BD8  C020  F017         	movff	___fladd@grs,___fladd@a+2
  7102  002BDC  C014  F020         	movff	___fladd@b+3,___fladd@grs
  7103  002BE0  C018  F014         	movff	___fladd@a+3,___fladd@b+3
  7104  002BE4  C020  F018         	movff	___fladd@grs,___fladd@a+3
  7105  002BE8                     l3790:
  7106  002BE8  0E00               	movlw	0
  7107  002BEA  6E20               	movwf	___fladd@grs,c
  7108  002BEC  501F               	movf	___fladd@bexp,w,c
  7109  002BEE  C01E  F019         	movff	___fladd@aexp,??___fladd
  7110  002BF2  6A1A               	clrf	(??___fladd+1)& (0+255),c
  7111  002BF4  5E19               	subwf	??___fladd,f,c
  7112  002BF6  0E00               	movlw	0
  7113  002BF8  5A1A               	subwfb	??___fladd+1,f,c
  7114  002BFA  BE1A               	btfsc	??___fladd+1,7,c
  7115  002BFC  D02C               	goto	l996
  7116  002BFE  501A               	movf	??___fladd+1,w,c
  7117  002C00  E104               	bnz	u4010
  7118  002C02  0E1A               	movlw	26
  7119  002C04  5C19               	subwf	??___fladd,w,c
  7120  002C06  A0D8               	btfss	status,0,c
  7121  002C08  D026               	goto	l996
  7122  002C0A                     u4010:
  7123  002C0A  5011               	movf	___fladd@b,w,c
  7124  002C0C  1012               	iorwf	___fladd@b+1,w,c
  7125  002C0E  1013               	iorwf	___fladd@b+2,w,c
  7126  002C10  1014               	iorwf	___fladd@b+3,w,c
  7127  002C12  B4D8               	btfsc	status,2,c
  7128  002C14  D002               	goto	u4020
  7129  002C16  0E01               	movlw	1
  7130  002C18  D001               	goto	u4030
  7131  002C1A                     u4020:
  7132  002C1A  0E00               	movlw	0
  7133  002C1C                     u4030:
  7134  002C1C  6E20               	movwf	___fladd@grs,c
  7135  002C1E  0E00               	movlw	0
  7136  002C20  6E11               	movwf	___fladd@b,c
  7137  002C22  0E00               	movlw	0
  7138  002C24  6E12               	movwf	___fladd@b+1,c
  7139  002C26  0E00               	movlw	0
  7140  002C28  6E13               	movwf	___fladd@b+2,c
  7141  002C2A  0E00               	movlw	0
  7142  002C2C  6E14               	movwf	___fladd@b+3,c
  7143  002C2E  C01E  F01F         	movff	___fladd@aexp,___fladd@bexp
  7144  002C32  D015               	goto	u4060
  7145  002C34                     l997:
  7146  002C34  A020               	btfss	___fladd@grs,0,c
  7147  002C36  D005               	goto	l3802
  7148  002C38  90D8               	bcf	status,0,c
  7149  002C3A  3020               	rrcf	___fladd@grs,w,c
  7150  002C3C  0901               	iorlw	1
  7151  002C3E  6E20               	movwf	___fladd@grs,c
  7152  002C40  D002               	goto	l3804
  7153  002C42                     l3802:
  7154  002C42  90D8               	bcf	status,0,c
  7155  002C44  3220               	rrcf	___fladd@grs,f,c
  7156  002C46                     l3804:
  7157  002C46  B011               	btfsc	___fladd@b,0,c
  7158  002C48  8E20               	bsf	___fladd@grs,7,c
  7159  002C4A  3414               	rlcf	___fladd@b+3,w,c
  7160  002C4C  3214               	rrcf	___fladd@b+3,f,c
  7161  002C4E  3213               	rrcf	___fladd@b+2,f,c
  7162  002C50  3212               	rrcf	___fladd@b+1,f,c
  7163  002C52  3211               	rrcf	___fladd@b,f,c
  7164  002C54  2A1F               	incf	___fladd@bexp,f,c
  7165  002C56                     l996:
  7166  002C56  501E               	movf	___fladd@aexp,w,c
  7167  002C58  5C1F               	subwf	___fladd@bexp,w,c
  7168  002C5A  A0D8               	btfss	status,0,c
  7169  002C5C  D7EB               	goto	l997
  7170  002C5E                     u4060:
  7171  002C5E  BC1D               	btfsc	___fladd@signs,6,c
  7172  002C60  D028               	goto	l3836
  7173  002C62  501F               	movf	___fladd@bexp,w,c
  7174  002C64  A4D8               	btfss	status,2,c
  7175  002C66  D009               	goto	l3818
  7176  002C68  0E00               	movlw	0
  7177  002C6A  6E11               	movwf	?___fladd,c
  7178  002C6C  0E00               	movlw	0
  7179  002C6E  6E12               	movwf	?___fladd+1,c
  7180  002C70  0E00               	movlw	0
  7181  002C72  6E13               	movwf	?___fladd+2,c
  7182  002C74  0E00               	movlw	0
  7183  002C76  6E14               	movwf	?___fladd+3,c
  7184  002C78  0012               	return	
  7185  002C7A                     l3818:
  7186  002C7A  5015               	movf	___fladd@a,w,c
  7187  002C7C  2611               	addwf	___fladd@b,f,c
  7188  002C7E  5016               	movf	___fladd@a+1,w,c
  7189  002C80  2212               	addwfc	___fladd@b+1,f,c
  7190  002C82  5017               	movf	___fladd@a+2,w,c
  7191  002C84  2213               	addwfc	___fladd@b+2,f,c
  7192  002C86  5018               	movf	___fladd@a+3,w,c
  7193  002C88  2214               	addwfc	___fladd@b+3,f,c
  7194  002C8A  A014               	btfss	___fladd@b+3,0,c
  7195  002C8C  D071               	goto	u4190
  7196  002C8E  A020               	btfss	___fladd@grs,0,c
  7197  002C90  D005               	goto	l3826
  7198  002C92  90D8               	bcf	status,0,c
  7199  002C94  3020               	rrcf	___fladd@grs,w,c
  7200  002C96  0901               	iorlw	1
  7201  002C98  6E20               	movwf	___fladd@grs,c
  7202  002C9A  D002               	goto	l3828
  7203  002C9C                     l3826:
  7204  002C9C  90D8               	bcf	status,0,c
  7205  002C9E  3220               	rrcf	___fladd@grs,f,c
  7206  002CA0                     l3828:
  7207  002CA0  B011               	btfsc	___fladd@b,0,c
  7208  002CA2  8E20               	bsf	___fladd@grs,7,c
  7209  002CA4  3414               	rlcf	___fladd@b+3,w,c
  7210  002CA6  3214               	rrcf	___fladd@b+3,f,c
  7211  002CA8  3213               	rrcf	___fladd@b+2,f,c
  7212  002CAA  3212               	rrcf	___fladd@b+1,f,c
  7213  002CAC  3211               	rrcf	___fladd@b,f,c
  7214  002CAE  2A1F               	incf	___fladd@bexp,f,c
  7215  002CB0  D05F               	goto	u4190
  7216  002CB2                     l3836:
  7217  002CB2  5015               	movf	___fladd@a,w,c
  7218  002CB4  5C11               	subwf	___fladd@b,w,c
  7219  002CB6  5016               	movf	___fladd@a+1,w,c
  7220  002CB8  5812               	subwfb	___fladd@b+1,w,c
  7221  002CBA  5017               	movf	___fladd@a+2,w,c
  7222  002CBC  5813               	subwfb	___fladd@b+2,w,c
  7223  002CBE  5014               	movf	___fladd@b+3,w,c
  7224  002CC0  0A80               	xorlw	128
  7225  002CC2  6E19               	movwf	??___fladd& (0+255),c
  7226  002CC4  5018               	movf	___fladd@a+3,w,c
  7227  002CC6  0A80               	xorlw	128
  7228  002CC8  5819               	subwfb	??___fladd& (0+255),w,c
  7229  002CCA  B0D8               	btfsc	status,0,c
  7230  002CCC  D025               	goto	l3846
  7231  002CCE  5011               	movf	___fladd@b,w,c
  7232  002CD0  5C15               	subwf	___fladd@a,w,c
  7233  002CD2  6E19               	movwf	??___fladd& (0+255),c
  7234  002CD4  5012               	movf	___fladd@b+1,w,c
  7235  002CD6  5816               	subwfb	___fladd@a+1,w,c
  7236  002CD8  6E1A               	movwf	(??___fladd+1)& (0+255),c
  7237  002CDA  5013               	movf	___fladd@b+2,w,c
  7238  002CDC  5817               	subwfb	___fladd@a+2,w,c
  7239  002CDE  6E1B               	movwf	(??___fladd+2)& (0+255),c
  7240  002CE0  5014               	movf	___fladd@b+3,w,c
  7241  002CE2  5818               	subwfb	___fladd@a+3,w,c
  7242  002CE4  6E1C               	movwf	(??___fladd+3)& (0+255),c
  7243  002CE6  0EFF               	movlw	255
  7244  002CE8  2419               	addwf	??___fladd,w,c
  7245  002CEA  6E11               	movwf	___fladd@b,c
  7246  002CEC  0EFF               	movlw	255
  7247  002CEE  201A               	addwfc	??___fladd+1,w,c
  7248  002CF0  6E12               	movwf	___fladd@b+1,c
  7249  002CF2  0EFF               	movlw	255
  7250  002CF4  201B               	addwfc	??___fladd+2,w,c
  7251  002CF6  6E13               	movwf	___fladd@b+2,c
  7252  002CF8  0EFF               	movlw	255
  7253  002CFA  201C               	addwfc	??___fladd+3,w,c
  7254  002CFC  6E14               	movwf	___fladd@b+3,c
  7255  002CFE  0E80               	movlw	128
  7256  002D00  1A1D               	xorwf	___fladd@signs,f,c
  7257  002D02  6C20               	negf	___fladd@grs,c
  7258  002D04  5020               	movf	___fladd@grs,w,c
  7259  002D06  A4D8               	btfss	status,2,c
  7260  002D08  D00F               	goto	l1012
  7261  002D0A  0E01               	movlw	1
  7262  002D0C  2611               	addwf	___fladd@b,f,c
  7263  002D0E  0E00               	movlw	0
  7264  002D10  2212               	addwfc	___fladd@b+1,f,c
  7265  002D12  2213               	addwfc	___fladd@b+2,f,c
  7266  002D14  2214               	addwfc	___fladd@b+3,f,c
  7267  002D16  D008               	goto	l1012
  7268  002D18                     l3846:
  7269  002D18  5015               	movf	___fladd@a,w,c
  7270  002D1A  5E11               	subwf	___fladd@b,f,c
  7271  002D1C  5016               	movf	___fladd@a+1,w,c
  7272  002D1E  5A12               	subwfb	___fladd@b+1,f,c
  7273  002D20  5017               	movf	___fladd@a+2,w,c
  7274  002D22  5A13               	subwfb	___fladd@b+2,f,c
  7275  002D24  5018               	movf	___fladd@a+3,w,c
  7276  002D26  5A14               	subwfb	___fladd@b+3,f,c
  7277  002D28                     l1012:
  7278  002D28  5011               	movf	___fladd@b,w,c
  7279  002D2A  1012               	iorwf	___fladd@b+1,w,c
  7280  002D2C  1013               	iorwf	___fladd@b+2,w,c
  7281  002D2E  1014               	iorwf	___fladd@b+3,w,c
  7282  002D30  A4D8               	btfss	status,2,c
  7283  002D32  D01C               	goto	l3870
  7284  002D34  5020               	movf	___fladd@grs,w,c
  7285  002D36  A4D8               	btfss	status,2,c
  7286  002D38  D019               	goto	l3870
  7287  002D3A  0E00               	movlw	0
  7288  002D3C  6E11               	movwf	?___fladd,c
  7289  002D3E  0E00               	movlw	0
  7290  002D40  6E12               	movwf	?___fladd+1,c
  7291  002D42  0E00               	movlw	0
  7292  002D44  6E13               	movwf	?___fladd+2,c
  7293  002D46  0E00               	movlw	0
  7294  002D48  6E14               	movwf	?___fladd+3,c
  7295  002D4A  0012               	return	
  7296  002D4C                     l3854:
  7297  002D4C  90D8               	bcf	status,0,c
  7298  002D4E  3611               	rlcf	___fladd@b,f,c
  7299  002D50  3612               	rlcf	___fladd@b+1,f,c
  7300  002D52  3613               	rlcf	___fladd@b+2,f,c
  7301  002D54  3614               	rlcf	___fladd@b+3,f,c
  7302  002D56  BE20               	btfsc	___fladd@grs,7,c
  7303  002D58  8011               	bsf	___fladd@b,0,c
  7304  002D5A  A020               	btfss	___fladd@grs,0,c
  7305  002D5C  D002               	goto	l3864
  7306  002D5E  80D8               	bsf	status,0,c
  7307  002D60  D001               	goto	L12
  7308  002D62                     l3864:
  7309  002D62  90D8               	bcf	status,0,c
  7310  002D64                     L12:
  7311  002D64  3620               	rlcf	___fladd@grs,f,c
  7312  002D66  501F               	movf	___fladd@bexp,w,c
  7313  002D68  A4D8               	btfss	status,2,c
  7314  002D6A  061F               	decf	___fladd@bexp,f,c
  7315  002D6C                     l3870:
  7316  002D6C  AE13               	btfss	___fladd@b+2,7,c
  7317  002D6E  D7EE               	goto	l3854
  7318  002D70                     u4190:
  7319  002D70  0E00               	movlw	0
  7320  002D72  6E1E               	movwf	___fladd@aexp,c
  7321  002D74  AE20               	btfss	___fladd@grs,7,c
  7322  002D76  D00B               	goto	l1021
  7323  002D78  C020  F019         	movff	___fladd@grs,??___fladd
  7324  002D7C  0E7F               	movlw	127
  7325  002D7E  1619               	andwf	??___fladd,f,c
  7326  002D80  B4D8               	btfsc	status,2,c
  7327  002D82  D003               	goto	l1022
  7328  002D84                     u4210:
  7329  002D84  0E01               	movlw	1
  7330  002D86  6E1E               	movwf	___fladd@aexp,c
  7331  002D88  D002               	goto	l1021
  7332  002D8A                     l1022:
  7333  002D8A  B011               	btfsc	___fladd@b,0,c
  7334  002D8C  D7FB               	goto	u4210
  7335  002D8E                     l1021:
  7336  002D8E  501E               	movf	___fladd@aexp,w,c
  7337  002D90  B4D8               	btfsc	status,2,c
  7338  002D92  D020               	goto	l3890
  7339  002D94  0E01               	movlw	1
  7340  002D96  2611               	addwf	___fladd@b,f,c
  7341  002D98  0E00               	movlw	0
  7342  002D9A  2212               	addwfc	___fladd@b+1,f,c
  7343  002D9C  2213               	addwfc	___fladd@b+2,f,c
  7344  002D9E  2214               	addwfc	___fladd@b+3,f,c
  7345  002DA0  A014               	btfss	___fladd@b+3,0,c
  7346  002DA2  D018               	goto	l3890
  7347  002DA4  C011  F019         	movff	___fladd@b,??___fladd
  7348  002DA8  C012  F01A         	movff	___fladd@b+1,??___fladd+1
  7349  002DAC  C013  F01B         	movff	___fladd@b+2,??___fladd+2
  7350  002DB0  C014  F01C         	movff	___fladd@b+3,??___fladd+3
  7351  002DB4  341C               	rlcf	??___fladd+3,w,c
  7352  002DB6  321C               	rrcf	??___fladd+3,f,c
  7353  002DB8  321B               	rrcf	??___fladd+2,f,c
  7354  002DBA  321A               	rrcf	??___fladd+1,f,c
  7355  002DBC  3219               	rrcf	??___fladd,f,c
  7356  002DBE  C019  F011         	movff	??___fladd,___fladd@b
  7357  002DC2  C01A  F012         	movff	??___fladd+1,___fladd@b+1
  7358  002DC6  C01B  F013         	movff	??___fladd+2,___fladd@b+2
  7359  002DCA  C01C  F014         	movff	??___fladd+3,___fladd@b+3
  7360  002DCE  281F               	incf	___fladd@bexp,w,c
  7361  002DD0  A4D8               	btfss	status,2,c
  7362  002DD2  2A1F               	incf	___fladd@bexp,f,c
  7363  002DD4                     l3890:
  7364  002DD4  281F               	incf	___fladd@bexp,w,c
  7365  002DD6  B4D8               	btfsc	status,2,c
  7366  002DD8  D003               	goto	u4270
  7367  002DDA  501F               	movf	___fladd@bexp,w,c
  7368  002DDC  A4D8               	btfss	status,2,c
  7369  002DDE  D00D               	goto	l3898
  7370  002DE0                     u4270:
  7371  002DE0  0E00               	movlw	0
  7372  002DE2  6E11               	movwf	___fladd@b,c
  7373  002DE4  0E00               	movlw	0
  7374  002DE6  6E12               	movwf	___fladd@b+1,c
  7375  002DE8  0E00               	movlw	0
  7376  002DEA  6E13               	movwf	___fladd@b+2,c
  7377  002DEC  0E00               	movlw	0
  7378  002DEE  6E14               	movwf	___fladd@b+3,c
  7379  002DF0  501F               	movf	___fladd@bexp,w,c
  7380  002DF2  A4D8               	btfss	status,2,c
  7381  002DF4  D002               	goto	l3898
  7382  002DF6  0E00               	movlw	0
  7383  002DF8  6E1D               	movwf	___fladd@signs,c
  7384  002DFA                     l3898:
  7385  002DFA  A01F               	btfss	___fladd@bexp,0,c
  7386  002DFC  D002               	goto	l3902
  7387  002DFE  8E13               	bsf	___fladd@b+2,7,c
  7388  002E00  D001               	goto	l3904
  7389  002E02                     l3902:
  7390  002E02  9E13               	bcf	___fladd@b+2,7,c
  7391  002E04                     l3904:
  7392  002E04  90D8               	bcf	status,0,c
  7393  002E06  301F               	rrcf	___fladd@bexp,w,c
  7394  002E08  6E14               	movwf	___fladd@b+3,c
  7395  002E0A  BE1D               	btfsc	___fladd@signs,7,c
  7396  002E0C  8E14               	bsf	___fladd@b+3,7,c
  7397  002E0E  C011  F011         	movff	___fladd@b,?___fladd
  7398  002E12  C012  F012         	movff	___fladd@b+1,?___fladd+1
  7399  002E16  C013  F013         	movff	___fladd@b+2,?___fladd+2
  7400  002E1A  C014  F014         	movff	___fladd@b+3,?___fladd+3
  7401  002E1E  0012               	return		;funcret
  7402  002E20                     __end_of___fladd:
  7403                           	opt callstack 0
  7404                           
  7405 ;; *************** function ___flneg *****************
  7406 ;; Defined at:
  7407 ;;		line 15 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/flneg.c"
  7408 ;; Parameters:    Size  Location     Type
  7409 ;;  f1              4   16[COMRAM] unsigned char 
  7410 ;; Auto vars:     Size  Location     Type
  7411 ;;		None
  7412 ;; Return value:  Size  Location     Type
  7413 ;;                  4   16[COMRAM] unsigned char 
  7414 ;; Registers used:
  7415 ;;		wreg, status,2, status,0
  7416 ;; Tracked objects:
  7417 ;;		On entry : 0/0
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7424 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7425 ;;Total ram usage:        4 bytes
  7426 ;; Hardware stack levels used:    1
  7427 ;; Hardware stack levels required when called:    2
  7428 ;; This function calls:
  7429 ;;		Nothing
  7430 ;; This function is called by:
  7431 ;;		_efgtoa
  7432 ;; This function uses a non-reentrant model
  7433 ;;
  7434                           
  7435                           	psect	text20
  7436  004BC8                     __ptext20:
  7437                           	opt callstack 0
  7438  004BC8                     ___flneg:
  7439                           	opt callstack 24
  7440                           
  7441                           ;incstack = 0
  7442  004BC8  5011               	movf	___flneg@f1,w,c
  7443  004BCA  1012               	iorwf	___flneg@f1+1,w,c
  7444  004BCC  1013               	iorwf	___flneg@f1+2,w,c
  7445  004BCE  1014               	iorwf	___flneg@f1+3,w,c
  7446  004BD0  B4D8               	btfsc	status,2,c
  7447  004BD2  D008               	goto	l4508
  7448  004BD4  0E00               	movlw	0
  7449  004BD6  1A11               	xorwf	___flneg@f1,f,c
  7450  004BD8  0E00               	movlw	0
  7451  004BDA  1A12               	xorwf	___flneg@f1+1,f,c
  7452  004BDC  0E00               	movlw	0
  7453  004BDE  1A13               	xorwf	___flneg@f1+2,f,c
  7454  004BE0  0E80               	movlw	128
  7455  004BE2  1A14               	xorwf	___flneg@f1+3,f,c
  7456  004BE4                     l4508:
  7457  004BE4  C011  F011         	movff	___flneg@f1,?___flneg
  7458  004BE8  C012  F012         	movff	___flneg@f1+1,?___flneg+1
  7459  004BEC  C013  F013         	movff	___flneg@f1+2,?___flneg+2
  7460  004BF0  C014  F014         	movff	___flneg@f1+3,?___flneg+3
  7461  004BF4  0012               	return		;funcret
  7462  004BF6                     __end_of___flneg:
  7463                           	opt callstack 0
  7464                           
  7465 ;; *************** function ___flmul *****************
  7466 ;; Defined at:
  7467 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;  b               4   16[COMRAM] unsigned char 
  7470 ;;  a               4   20[COMRAM] unsigned char 
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  prod            4   35[COMRAM] struct .
  7473 ;;  grs             4   29[COMRAM] unsigned long 
  7474 ;;  temp            2   39[COMRAM] struct .
  7475 ;;  bexp            1   34[COMRAM] unsigned char 
  7476 ;;  aexp            1   33[COMRAM] unsigned char 
  7477 ;;  sign            1   28[COMRAM] unsigned char 
  7478 ;; Return value:  Size  Location     Type
  7479 ;;                  4   16[COMRAM] unsigned char 
  7480 ;; Registers used:
  7481 ;;		wreg, status,2, status,0, prodl, prodh
  7482 ;; Tracked objects:
  7483 ;;		On entry : 0/0
  7484 ;;		On exit  : 0/0
  7485 ;;		Unchanged: 0/0
  7486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7487 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7488 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7489 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7490 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7491 ;;Total ram usage:       25 bytes
  7492 ;; Hardware stack levels used:    1
  7493 ;; Hardware stack levels required when called:    2
  7494 ;; This function calls:
  7495 ;;		Nothing
  7496 ;; This function is called by:
  7497 ;;		_efgtoa
  7498 ;; This function uses a non-reentrant model
  7499 ;;
  7500                           
  7501                           	psect	text21
  7502  0027C2                     __ptext21:
  7503                           	opt callstack 0
  7504  0027C2                     ___flmul:
  7505                           	opt callstack 24
  7506                           
  7507                           ;incstack = 0
  7508  0027C2  5014               	movf	___flmul@b+3,w,c
  7509  0027C4  0B80               	andlw	128
  7510  0027C6  6E1D               	movwf	___flmul@sign,c
  7511  0027C8  5014               	movf	___flmul@b+3,w,c
  7512  0027CA  2414               	addwf	___flmul@b+3,w,c
  7513  0027CC  6E23               	movwf	___flmul@bexp,c
  7514  0027CE  BE13               	btfsc	___flmul@b+2,7,c
  7515  0027D0  8023               	bsf	___flmul@bexp,0,c
  7516  0027D2  5023               	movf	___flmul@bexp,w,c
  7517  0027D4  B4D8               	btfsc	status,2,c
  7518  0027D6  D00D               	goto	l4264
  7519  0027D8  2823               	incf	___flmul@bexp,w,c
  7520  0027DA  A4D8               	btfss	status,2,c
  7521  0027DC  D008               	goto	l4262
  7522  0027DE  0E00               	movlw	0
  7523  0027E0  6E11               	movwf	___flmul@b,c
  7524  0027E2  0E00               	movlw	0
  7525  0027E4  6E12               	movwf	___flmul@b+1,c
  7526  0027E6  0E00               	movlw	0
  7527  0027E8  6E13               	movwf	___flmul@b+2,c
  7528  0027EA  0E00               	movlw	0
  7529  0027EC  6E14               	movwf	___flmul@b+3,c
  7530  0027EE                     l4262:
  7531  0027EE  8E13               	bsf	___flmul@b+2,7,c
  7532  0027F0  D008               	goto	l4266
  7533  0027F2                     l4264:
  7534  0027F2  0E00               	movlw	0
  7535  0027F4  6E11               	movwf	___flmul@b,c
  7536  0027F6  0E00               	movlw	0
  7537  0027F8  6E12               	movwf	___flmul@b+1,c
  7538  0027FA  0E00               	movlw	0
  7539  0027FC  6E13               	movwf	___flmul@b+2,c
  7540  0027FE  0E00               	movlw	0
  7541  002800  6E14               	movwf	___flmul@b+3,c
  7542  002802                     l4266:
  7543  002802  5018               	movf	___flmul@a+3,w,c
  7544  002804  0B80               	andlw	128
  7545  002806  1A1D               	xorwf	___flmul@sign,f,c
  7546  002808  5018               	movf	___flmul@a+3,w,c
  7547  00280A  2418               	addwf	___flmul@a+3,w,c
  7548  00280C  6E22               	movwf	___flmul@aexp,c
  7549  00280E  BE17               	btfsc	___flmul@a+2,7,c
  7550  002810  8022               	bsf	___flmul@aexp,0,c
  7551  002812  5022               	movf	___flmul@aexp,w,c
  7552  002814  B4D8               	btfsc	status,2,c
  7553  002816  D00D               	goto	l4282
  7554  002818  2822               	incf	___flmul@aexp,w,c
  7555  00281A  A4D8               	btfss	status,2,c
  7556  00281C  D008               	goto	l4280
  7557  00281E  0E00               	movlw	0
  7558  002820  6E15               	movwf	___flmul@a,c
  7559  002822  0E00               	movlw	0
  7560  002824  6E16               	movwf	___flmul@a+1,c
  7561  002826  0E00               	movlw	0
  7562  002828  6E17               	movwf	___flmul@a+2,c
  7563  00282A  0E00               	movlw	0
  7564  00282C  6E18               	movwf	___flmul@a+3,c
  7565  00282E                     l4280:
  7566  00282E  8E17               	bsf	___flmul@a+2,7,c
  7567  002830  D008               	goto	l1081
  7568  002832                     l4282:
  7569  002832  0E00               	movlw	0
  7570  002834  6E15               	movwf	___flmul@a,c
  7571  002836  0E00               	movlw	0
  7572  002838  6E16               	movwf	___flmul@a+1,c
  7573  00283A  0E00               	movlw	0
  7574  00283C  6E17               	movwf	___flmul@a+2,c
  7575  00283E  0E00               	movlw	0
  7576  002840  6E18               	movwf	___flmul@a+3,c
  7577  002842                     l1081:
  7578  002842  5022               	movf	___flmul@aexp,w,c
  7579  002844  B4D8               	btfsc	status,2,c
  7580  002846  D003               	goto	u5100
  7581  002848  5023               	movf	___flmul@bexp,w,c
  7582  00284A  A4D8               	btfss	status,2,c
  7583  00284C  D009               	goto	l4290
  7584  00284E                     u5100:
  7585  00284E  0E00               	movlw	0
  7586  002850  6E11               	movwf	?___flmul,c
  7587  002852  0E00               	movlw	0
  7588  002854  6E12               	movwf	?___flmul+1,c
  7589  002856  0E00               	movlw	0
  7590  002858  6E13               	movwf	?___flmul+2,c
  7591  00285A  0E00               	movlw	0
  7592  00285C  6E14               	movwf	?___flmul+3,c
  7593  00285E  0012               	return	
  7594  002860                     l4290:
  7595  002860  5017               	movf	___flmul@a+2,w,c
  7596  002862  0211               	mulwf	___flmul@b,c
  7597  002864  CFF3 F028          	movff	prodl,___flmul@temp
  7598  002868  CFF4 F029          	movff	prodh,___flmul@temp+1
  7599  00286C  5028               	movf	___flmul@temp,w,c
  7600  00286E  6E1E               	movwf	___flmul@grs,c
  7601  002870  6A1F               	clrf	___flmul@grs+1,c
  7602  002872  6A20               	clrf	___flmul@grs+2,c
  7603  002874  6A21               	clrf	___flmul@grs+3,c
  7604  002876  5029               	movf	___flmul@temp+1,w,c
  7605  002878  6E24               	movwf	___flmul@prod,c
  7606  00287A  6A25               	clrf	___flmul@prod+1,c
  7607  00287C  6A26               	clrf	___flmul@prod+2,c
  7608  00287E  6A27               	clrf	___flmul@prod+3,c
  7609  002880  5016               	movf	___flmul@a+1,w,c
  7610  002882  0212               	mulwf	___flmul@b+1,c
  7611  002884  CFF3 F028          	movff	prodl,___flmul@temp
  7612  002888  CFF4 F029          	movff	prodh,___flmul@temp+1
  7613  00288C  5028               	movf	___flmul@temp,w,c
  7614  00288E  261E               	addwf	___flmul@grs,f,c
  7615  002890  0E00               	movlw	0
  7616  002892  221F               	addwfc	___flmul@grs+1,f,c
  7617  002894  2220               	addwfc	___flmul@grs+2,f,c
  7618  002896  2221               	addwfc	___flmul@grs+3,f,c
  7619  002898  5029               	movf	___flmul@temp+1,w,c
  7620  00289A  2624               	addwf	___flmul@prod,f,c
  7621  00289C  0E00               	movlw	0
  7622  00289E  2225               	addwfc	___flmul@prod+1,f,c
  7623  0028A0  2226               	addwfc	___flmul@prod+2,f,c
  7624  0028A2  2227               	addwfc	___flmul@prod+3,f,c
  7625  0028A4  5015               	movf	___flmul@a,w,c
  7626  0028A6  0213               	mulwf	___flmul@b+2,c
  7627  0028A8  CFF3 F028          	movff	prodl,___flmul@temp
  7628  0028AC  CFF4 F029          	movff	prodh,___flmul@temp+1
  7629  0028B0  5028               	movf	___flmul@temp,w,c
  7630  0028B2  261E               	addwf	___flmul@grs,f,c
  7631  0028B4  0E00               	movlw	0
  7632  0028B6  221F               	addwfc	___flmul@grs+1,f,c
  7633  0028B8  2220               	addwfc	___flmul@grs+2,f,c
  7634  0028BA  2221               	addwfc	___flmul@grs+3,f,c
  7635  0028BC  5029               	movf	___flmul@temp+1,w,c
  7636  0028BE  2624               	addwf	___flmul@prod,f,c
  7637  0028C0  0E00               	movlw	0
  7638  0028C2  2225               	addwfc	___flmul@prod+1,f,c
  7639  0028C4  2226               	addwfc	___flmul@prod+2,f,c
  7640  0028C6  2227               	addwfc	___flmul@prod+3,f,c
  7641  0028C8  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  7642  0028CC  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  7643  0028D0  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  7644  0028D4  6A1E               	clrf	___flmul@grs,c
  7645  0028D6  5015               	movf	___flmul@a,w,c
  7646  0028D8  0212               	mulwf	___flmul@b+1,c
  7647  0028DA  CFF3 F028          	movff	prodl,___flmul@temp
  7648  0028DE  CFF4 F029          	movff	prodh,___flmul@temp+1
  7649  0028E2  5028               	movf	___flmul@temp,w,c
  7650  0028E4  261E               	addwf	___flmul@grs,f,c
  7651  0028E6  5029               	movf	___flmul@temp+1,w,c
  7652  0028E8  221F               	addwfc	___flmul@grs+1,f,c
  7653  0028EA  0E00               	movlw	0
  7654  0028EC  2220               	addwfc	___flmul@grs+2,f,c
  7655  0028EE  0E00               	movlw	0
  7656  0028F0  2221               	addwfc	___flmul@grs+3,f,c
  7657  0028F2  5016               	movf	___flmul@a+1,w,c
  7658  0028F4  0211               	mulwf	___flmul@b,c
  7659  0028F6  CFF3 F028          	movff	prodl,___flmul@temp
  7660  0028FA  CFF4 F029          	movff	prodh,___flmul@temp+1
  7661  0028FE  5028               	movf	___flmul@temp,w,c
  7662  002900  261E               	addwf	___flmul@grs,f,c
  7663  002902  5029               	movf	___flmul@temp+1,w,c
  7664  002904  221F               	addwfc	___flmul@grs+1,f,c
  7665  002906  0E00               	movlw	0
  7666  002908  2220               	addwfc	___flmul@grs+2,f,c
  7667  00290A  0E00               	movlw	0
  7668  00290C  2221               	addwfc	___flmul@grs+3,f,c
  7669  00290E  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  7670  002912  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  7671  002916  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  7672  00291A  6A1E               	clrf	___flmul@grs,c
  7673  00291C  5015               	movf	___flmul@a,w,c
  7674  00291E  0211               	mulwf	___flmul@b,c
  7675  002920  CFF3 F028          	movff	prodl,___flmul@temp
  7676  002924  CFF4 F029          	movff	prodh,___flmul@temp+1
  7677  002928  5028               	movf	___flmul@temp,w,c
  7678  00292A  261E               	addwf	___flmul@grs,f,c
  7679  00292C  5029               	movf	___flmul@temp+1,w,c
  7680  00292E  221F               	addwfc	___flmul@grs+1,f,c
  7681  002930  0E00               	movlw	0
  7682  002932  2220               	addwfc	___flmul@grs+2,f,c
  7683  002934  0E00               	movlw	0
  7684  002936  2221               	addwfc	___flmul@grs+3,f,c
  7685  002938  5017               	movf	___flmul@a+2,w,c
  7686  00293A  0212               	mulwf	___flmul@b+1,c
  7687  00293C  CFF3 F028          	movff	prodl,___flmul@temp
  7688  002940  CFF4 F029          	movff	prodh,___flmul@temp+1
  7689  002944  5028               	movf	___flmul@temp,w,c
  7690  002946  2624               	addwf	___flmul@prod,f,c
  7691  002948  5029               	movf	___flmul@temp+1,w,c
  7692  00294A  2225               	addwfc	___flmul@prod+1,f,c
  7693  00294C  0E00               	movlw	0
  7694  00294E  2226               	addwfc	___flmul@prod+2,f,c
  7695  002950  0E00               	movlw	0
  7696  002952  2227               	addwfc	___flmul@prod+3,f,c
  7697  002954  5016               	movf	___flmul@a+1,w,c
  7698  002956  0213               	mulwf	___flmul@b+2,c
  7699  002958  CFF3 F028          	movff	prodl,___flmul@temp
  7700  00295C  CFF4 F029          	movff	prodh,___flmul@temp+1
  7701  002960  5028               	movf	___flmul@temp,w,c
  7702  002962  2624               	addwf	___flmul@prod,f,c
  7703  002964  5029               	movf	___flmul@temp+1,w,c
  7704  002966  2225               	addwfc	___flmul@prod+1,f,c
  7705  002968  0E00               	movlw	0
  7706  00296A  2226               	addwfc	___flmul@prod+2,f,c
  7707  00296C  0E00               	movlw	0
  7708  00296E  2227               	addwfc	___flmul@prod+3,f,c
  7709  002970  5017               	movf	___flmul@a+2,w,c
  7710  002972  0213               	mulwf	___flmul@b+2,c
  7711  002974  CFF3 F028          	movff	prodl,___flmul@temp
  7712  002978  CFF4 F029          	movff	prodh,___flmul@temp+1
  7713  00297C  5028               	movf	___flmul@temp,w,c
  7714  00297E  6E19               	movwf	??___flmul& (0+255),c
  7715  002980  5029               	movf	___flmul@temp+1,w,c
  7716  002982  6E1A               	movwf	(??___flmul+1)& (0+255),c
  7717  002984  6A1B               	clrf	(??___flmul+2)& (0+255),c
  7718  002986  6A1C               	clrf	(??___flmul+3)& (0+255),c
  7719  002988  C01B  F01C         	movff	??___flmul+2,??___flmul+3
  7720  00298C  C01A  F01B         	movff	??___flmul+1,??___flmul+2
  7721  002990  C019  F01A         	movff	??___flmul,??___flmul+1
  7722  002994  6A19               	clrf	??___flmul,c
  7723  002996  5019               	movf	??___flmul,w,c
  7724  002998  2624               	addwf	___flmul@prod,f,c
  7725  00299A  501A               	movf	??___flmul+1,w,c
  7726  00299C  2225               	addwfc	___flmul@prod+1,f,c
  7727  00299E  501B               	movf	??___flmul+2,w,c
  7728  0029A0  2226               	addwfc	___flmul@prod+2,f,c
  7729  0029A2  501C               	movf	??___flmul+3,w,c
  7730  0029A4  2227               	addwfc	___flmul@prod+3,f,c
  7731  0029A6  C01E  F019         	movff	___flmul@grs,??___flmul
  7732  0029AA  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
  7733  0029AE  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
  7734  0029B2  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
  7735  0029B6  0E19               	movlw	25
  7736  0029B8  D005               	goto	u5110
  7737  0029BA                     u5115:
  7738  0029BA  90D8               	bcf	status,0,c
  7739  0029BC  321C               	rrcf	??___flmul+3,f,c
  7740  0029BE  321B               	rrcf	??___flmul+2,f,c
  7741  0029C0  321A               	rrcf	??___flmul+1,f,c
  7742  0029C2  3219               	rrcf	??___flmul,f,c
  7743  0029C4                     u5110:
  7744  0029C4  2EE8               	decfsz	wreg,f,c
  7745  0029C6  D7F9               	goto	u5115
  7746  0029C8  5019               	movf	??___flmul,w,c
  7747  0029CA  2624               	addwf	___flmul@prod,f,c
  7748  0029CC  501A               	movf	??___flmul+1,w,c
  7749  0029CE  2225               	addwfc	___flmul@prod+1,f,c
  7750  0029D0  501B               	movf	??___flmul+2,w,c
  7751  0029D2  2226               	addwfc	___flmul@prod+2,f,c
  7752  0029D4  501C               	movf	??___flmul+3,w,c
  7753  0029D6  2227               	addwfc	___flmul@prod+3,f,c
  7754  0029D8  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  7755  0029DC  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  7756  0029E0  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  7757  0029E4  6A1E               	clrf	___flmul@grs,c
  7758  0029E6  5022               	movf	___flmul@aexp,w,c
  7759  0029E8  C023  F019         	movff	___flmul@bexp,??___flmul
  7760  0029EC  6A1A               	clrf	(??___flmul+1)& (0+255),c
  7761  0029EE  2619               	addwf	??___flmul,f,c
  7762  0029F0  0E00               	movlw	0
  7763  0029F2  221A               	addwfc	??___flmul+1,f,c
  7764  0029F4  0E82               	movlw	130
  7765  0029F6  2419               	addwf	??___flmul,w,c
  7766  0029F8  6E28               	movwf	___flmul@temp,c
  7767  0029FA  0EFF               	movlw	255
  7768  0029FC  201A               	addwfc	??___flmul+1,w,c
  7769  0029FE  6E29               	movwf	___flmul@temp+1,c
  7770  002A00  D00F               	goto	l4338
  7771  002A02                     l4332:
  7772  002A02  90D8               	bcf	status,0,c
  7773  002A04  3624               	rlcf	___flmul@prod,f,c
  7774  002A06  3625               	rlcf	___flmul@prod+1,f,c
  7775  002A08  3626               	rlcf	___flmul@prod+2,f,c
  7776  002A0A  3627               	rlcf	___flmul@prod+3,f,c
  7777  002A0C  BE21               	btfsc	___flmul@grs+3,7,c
  7778  002A0E  8024               	bsf	___flmul@prod,0,c
  7779  002A10  90D8               	bcf	status,0,c
  7780  002A12  361E               	rlcf	___flmul@grs,f,c
  7781  002A14  361F               	rlcf	___flmul@grs+1,f,c
  7782  002A16  3620               	rlcf	___flmul@grs+2,f,c
  7783  002A18  3621               	rlcf	___flmul@grs+3,f,c
  7784  002A1A  0628               	decf	___flmul@temp,f,c
  7785  002A1C  A0D8               	btfss	status,0,c
  7786  002A1E  0629               	decf	___flmul@temp+1,f,c
  7787  002A20                     l4338:
  7788  002A20  AE26               	btfss	___flmul@prod+2,7,c
  7789  002A22  D7EF               	goto	l4332
  7790  002A24  0E00               	movlw	0
  7791  002A26  6E22               	movwf	___flmul@aexp,c
  7792  002A28  AE21               	btfss	___flmul@grs+3,7,c
  7793  002A2A  D017               	goto	l1090
  7794  002A2C  0EFF               	movlw	255
  7795  002A2E  141E               	andwf	___flmul@grs,w,c
  7796  002A30  6E19               	movwf	??___flmul& (0+255),c
  7797  002A32  0EFF               	movlw	255
  7798  002A34  141F               	andwf	___flmul@grs+1,w,c
  7799  002A36  6E1A               	movwf	(??___flmul+1)& (0+255),c
  7800  002A38  0EFF               	movlw	255
  7801  002A3A  1420               	andwf	___flmul@grs+2,w,c
  7802  002A3C  6E1B               	movwf	(??___flmul+2)& (0+255),c
  7803  002A3E  0E7F               	movlw	127
  7804  002A40  1421               	andwf	___flmul@grs+3,w,c
  7805  002A42  6E1C               	movwf	(??___flmul+3)& (0+255),c
  7806  002A44  5019               	movf	??___flmul,w,c
  7807  002A46  101A               	iorwf	??___flmul+1,w,c
  7808  002A48  101B               	iorwf	??___flmul+2,w,c
  7809  002A4A  101C               	iorwf	??___flmul+3,w,c
  7810  002A4C  B4D8               	btfsc	status,2,c
  7811  002A4E  D003               	goto	l1091
  7812  002A50                     u5150:
  7813  002A50  0E01               	movlw	1
  7814  002A52  6E22               	movwf	___flmul@aexp,c
  7815  002A54  D002               	goto	l1090
  7816  002A56                     l1091:
  7817  002A56  B024               	btfsc	___flmul@prod,0,c
  7818  002A58  D7FB               	goto	u5150
  7819  002A5A                     l1090:
  7820  002A5A  5022               	movf	___flmul@aexp,w,c
  7821  002A5C  B4D8               	btfsc	status,2,c
  7822  002A5E  D01F               	goto	l4358
  7823  002A60  0E01               	movlw	1
  7824  002A62  2624               	addwf	___flmul@prod,f,c
  7825  002A64  0E00               	movlw	0
  7826  002A66  2225               	addwfc	___flmul@prod+1,f,c
  7827  002A68  2226               	addwfc	___flmul@prod+2,f,c
  7828  002A6A  2227               	addwfc	___flmul@prod+3,f,c
  7829  002A6C  A027               	btfss	___flmul@prod+3,0,c
  7830  002A6E  D017               	goto	l4358
  7831  002A70  C024  F019         	movff	___flmul@prod,??___flmul
  7832  002A74  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
  7833  002A78  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
  7834  002A7C  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
  7835  002A80  341C               	rlcf	??___flmul+3,w,c
  7836  002A82  321C               	rrcf	??___flmul+3,f,c
  7837  002A84  321B               	rrcf	??___flmul+2,f,c
  7838  002A86  321A               	rrcf	??___flmul+1,f,c
  7839  002A88  3219               	rrcf	??___flmul,f,c
  7840  002A8A  C019  F024         	movff	??___flmul,___flmul@prod
  7841  002A8E  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
  7842  002A92  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
  7843  002A96  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
  7844  002A9A  4A28               	infsnz	___flmul@temp,f,c
  7845  002A9C  2A29               	incf	___flmul@temp+1,f,c
  7846  002A9E                     l4358:
  7847  002A9E  BE29               	btfsc	___flmul@temp+1,7,c
  7848  002AA0  D00D               	goto	l4362
  7849  002AA2  5029               	movf	___flmul@temp+1,w,c
  7850  002AA4  E103               	bnz	u5190
  7851  002AA6  2828               	incf	___flmul@temp,w,c
  7852  002AA8  A0D8               	btfss	status,0,c
  7853  002AAA  D008               	goto	l4362
  7854  002AAC                     u5190:
  7855  002AAC  0E00               	movlw	0
  7856  002AAE  6E24               	movwf	___flmul@prod,c
  7857  002AB0  0E00               	movlw	0
  7858  002AB2  6E25               	movwf	___flmul@prod+1,c
  7859  002AB4  0E80               	movlw	128
  7860  002AB6  6E26               	movwf	___flmul@prod+2,c
  7861  002AB8  0E7F               	movlw	127
  7862  002ABA  D020               	goto	L13
  7863  002ABC                     l4362:
  7864  002ABC  BE29               	btfsc	___flmul@temp+1,7,c
  7865  002ABE  D005               	goto	u5200
  7866  002AC0  5029               	movf	___flmul@temp+1,w,c
  7867  002AC2  E10E               	bnz	l1098
  7868  002AC4  0428               	decf	___flmul@temp,w,c
  7869  002AC6  B0D8               	btfsc	status,0,c
  7870  002AC8  D00B               	goto	l1098
  7871  002ACA                     u5200:
  7872  002ACA  0E00               	movlw	0
  7873  002ACC  6E24               	movwf	___flmul@prod,c
  7874  002ACE  0E00               	movlw	0
  7875  002AD0  6E25               	movwf	___flmul@prod+1,c
  7876  002AD2  0E00               	movlw	0
  7877  002AD4  6E26               	movwf	___flmul@prod+2,c
  7878  002AD6  0E00               	movlw	0
  7879  002AD8  6E27               	movwf	___flmul@prod+3,c
  7880  002ADA  0E00               	movlw	0
  7881  002ADC  6E1D               	movwf	___flmul@sign,c
  7882  002ADE  D00F               	goto	l4374
  7883  002AE0                     l1098:
  7884  002AE0  C028  F023         	movff	___flmul@temp,___flmul@bexp
  7885  002AE4  0EFF               	movlw	255
  7886  002AE6  1624               	andwf	___flmul@prod,f,c
  7887  002AE8  0EFF               	movlw	255
  7888  002AEA  1625               	andwf	___flmul@prod+1,f,c
  7889  002AEC  0E7F               	movlw	127
  7890  002AEE  1626               	andwf	___flmul@prod+2,f,c
  7891  002AF0  0E00               	movlw	0
  7892  002AF2  1627               	andwf	___flmul@prod+3,f,c
  7893  002AF4  B023               	btfsc	___flmul@bexp,0,c
  7894  002AF6  8E26               	bsf	___flmul@prod+2,7,c
  7895  002AF8  90D8               	bcf	status,0,c
  7896  002AFA  3023               	rrcf	___flmul@bexp,w,c
  7897  002AFC                     L13:
  7898  002AFC  6E27               	movwf	___flmul@prod+3,c
  7899  002AFE                     l4374:
  7900  002AFE  501D               	movf	___flmul@sign,w,c
  7901  002B00  1227               	iorwf	___flmul@prod+3,f,c
  7902  002B02  C024  F011         	movff	___flmul@prod,?___flmul
  7903  002B06  C025  F012         	movff	___flmul@prod+1,?___flmul+1
  7904  002B0A  C026  F013         	movff	___flmul@prod+2,?___flmul+2
  7905  002B0E  C027  F014         	movff	___flmul@prod+3,?___flmul+3
  7906  002B12  0012               	return		;funcret
  7907  002B14                     __end_of___flmul:
  7908                           	opt callstack 0
  7909                           
  7910 ;; *************** function ___flge *****************
  7911 ;; Defined at:
  7912 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/flge.c"
  7913 ;; Parameters:    Size  Location     Type
  7914 ;;  ff1             4   41[COMRAM] unsigned char 
  7915 ;;  ff2             4   45[COMRAM] unsigned char 
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;		None
  7918 ;; Return value:  Size  Location     Type
  7919 ;;		None               void
  7920 ;; Registers used:
  7921 ;;		wreg, status,2, status,0
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7927 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7929 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7930 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7931 ;;Total ram usage:       12 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; Hardware stack levels required when called:    2
  7934 ;; This function calls:
  7935 ;;		Nothing
  7936 ;; This function is called by:
  7937 ;;		_efgtoa
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           	psect	text22
  7942  0040C4                     __ptext22:
  7943                           	opt callstack 0
  7944  0040C4                     ___flge:
  7945                           	opt callstack 24
  7946                           
  7947                           ;incstack = 0
  7948  0040C4  0E00               	movlw	0
  7949  0040C6  142A               	andwf	___flge@ff1,w,c
  7950  0040C8  6E32               	movwf	??___flge& (0+255),c
  7951  0040CA  0E00               	movlw	0
  7952  0040CC  142B               	andwf	___flge@ff1+1,w,c
  7953  0040CE  6E33               	movwf	(??___flge+1)& (0+255),c
  7954  0040D0  0E80               	movlw	128
  7955  0040D2  142C               	andwf	___flge@ff1+2,w,c
  7956  0040D4  6E34               	movwf	(??___flge+2)& (0+255),c
  7957  0040D6  0E7F               	movlw	127
  7958  0040D8  142D               	andwf	___flge@ff1+3,w,c
  7959  0040DA  6E35               	movwf	(??___flge+3)& (0+255),c
  7960  0040DC  5032               	movf	??___flge,w,c
  7961  0040DE  1033               	iorwf	??___flge+1,w,c
  7962  0040E0  1034               	iorwf	??___flge+2,w,c
  7963  0040E2  1035               	iorwf	??___flge+3,w,c
  7964  0040E4  A4D8               	btfss	status,2,c
  7965  0040E6  D008               	goto	l4486
  7966  0040E8  0E00               	movlw	0
  7967  0040EA  6E2A               	movwf	___flge@ff1,c
  7968  0040EC  0E00               	movlw	0
  7969  0040EE  6E2B               	movwf	___flge@ff1+1,c
  7970  0040F0  0E00               	movlw	0
  7971  0040F2  6E2C               	movwf	___flge@ff1+2,c
  7972  0040F4  0E00               	movlw	0
  7973  0040F6  6E2D               	movwf	___flge@ff1+3,c
  7974  0040F8                     l4486:
  7975  0040F8  0E00               	movlw	0
  7976  0040FA  142E               	andwf	___flge@ff2,w,c
  7977  0040FC  6E32               	movwf	??___flge& (0+255),c
  7978  0040FE  0E00               	movlw	0
  7979  004100  142F               	andwf	___flge@ff2+1,w,c
  7980  004102  6E33               	movwf	(??___flge+1)& (0+255),c
  7981  004104  0E80               	movlw	128
  7982  004106  1430               	andwf	___flge@ff2+2,w,c
  7983  004108  6E34               	movwf	(??___flge+2)& (0+255),c
  7984  00410A  0E7F               	movlw	127
  7985  00410C  1431               	andwf	___flge@ff2+3,w,c
  7986  00410E  6E35               	movwf	(??___flge+3)& (0+255),c
  7987  004110  5032               	movf	??___flge,w,c
  7988  004112  1033               	iorwf	??___flge+1,w,c
  7989  004114  1034               	iorwf	??___flge+2,w,c
  7990  004116  1035               	iorwf	??___flge+3,w,c
  7991  004118  A4D8               	btfss	status,2,c
  7992  00411A  D008               	goto	l4490
  7993  00411C  0E00               	movlw	0
  7994  00411E  6E2E               	movwf	___flge@ff2,c
  7995  004120  0E00               	movlw	0
  7996  004122  6E2F               	movwf	___flge@ff2+1,c
  7997  004124  0E00               	movlw	0
  7998  004126  6E30               	movwf	___flge@ff2+2,c
  7999  004128  0E00               	movlw	0
  8000  00412A  6E31               	movwf	___flge@ff2+3,c
  8001  00412C                     l4490:
  8002  00412C  AE2D               	btfss	___flge@ff1+3,7,c
  8003  00412E  D009               	goto	l4494
  8004  004130  6C2A               	negf	___flge@ff1,c
  8005  004132  1E2B               	comf	___flge@ff1+1,f,c
  8006  004134  B0D8               	btfsc	status,0,c
  8007  004136  2A2B               	incf	___flge@ff1+1,f,c
  8008  004138  1E2C               	comf	___flge@ff1+2,f,c
  8009  00413A  B0D8               	btfsc	status,0,c
  8010  00413C  2A2C               	incf	___flge@ff1+2,f,c
  8011  00413E  0E80               	movlw	128
  8012  004140  562D               	subfwb	___flge@ff1+3,f,c
  8013  004142                     l4494:
  8014  004142  AE31               	btfss	___flge@ff2+3,7,c
  8015  004144  D009               	goto	l732
  8016  004146  6C2E               	negf	___flge@ff2,c
  8017  004148  1E2F               	comf	___flge@ff2+1,f,c
  8018  00414A  B0D8               	btfsc	status,0,c
  8019  00414C  2A2F               	incf	___flge@ff2+1,f,c
  8020  00414E  1E30               	comf	___flge@ff2+2,f,c
  8021  004150  B0D8               	btfsc	status,0,c
  8022  004152  2A30               	incf	___flge@ff2+2,f,c
  8023  004154  0E80               	movlw	128
  8024  004156  5631               	subfwb	___flge@ff2+3,f,c
  8025  004158                     l732:
  8026  004158  0E00               	movlw	0
  8027  00415A  1A2A               	xorwf	___flge@ff1,f,c
  8028  00415C  0E00               	movlw	0
  8029  00415E  1A2B               	xorwf	___flge@ff1+1,f,c
  8030  004160  0E00               	movlw	0
  8031  004162  1A2C               	xorwf	___flge@ff1+2,f,c
  8032  004164  0E80               	movlw	128
  8033  004166  1A2D               	xorwf	___flge@ff1+3,f,c
  8034  004168  0E00               	movlw	0
  8035  00416A  1A2E               	xorwf	___flge@ff2,f,c
  8036  00416C  0E00               	movlw	0
  8037  00416E  1A2F               	xorwf	___flge@ff2+1,f,c
  8038  004170  0E00               	movlw	0
  8039  004172  1A30               	xorwf	___flge@ff2+2,f,c
  8040  004174  0E80               	movlw	128
  8041  004176  1A31               	xorwf	___flge@ff2+3,f,c
  8042  004178  502E               	movf	___flge@ff2,w,c
  8043  00417A  5C2A               	subwf	___flge@ff1,w,c
  8044  00417C  502F               	movf	___flge@ff2+1,w,c
  8045  00417E  582B               	subwfb	___flge@ff1+1,w,c
  8046  004180  5030               	movf	___flge@ff2+2,w,c
  8047  004182  582C               	subwfb	___flge@ff1+2,w,c
  8048  004184  5031               	movf	___flge@ff2+3,w,c
  8049  004186  582D               	subwfb	___flge@ff1+3,w,c
  8050  004188  B0D8               	btfsc	status,0,c
  8051  00418A  D002               	goto	l4500
  8052  00418C  90D8               	bcf	status,0,c
  8053  00418E  0012               	return	
  8054  004190                     l4500:
  8055  004190  80D8               	bsf	status,0,c
  8056  004192  0012               	return		;funcret
  8057  004194                     __end_of___flge:
  8058                           	opt callstack 0
  8059                           
  8060 ;; *************** function ___fleq *****************
  8061 ;; Defined at:
  8062 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/fleq.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;  ff1             4   16[COMRAM] unsigned char 
  8065 ;;  ff2             4   20[COMRAM] unsigned char 
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;		None
  8068 ;; Return value:  Size  Location     Type
  8069 ;;		None               void
  8070 ;; Registers used:
  8071 ;;		wreg, status,2, status,0
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8077 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8079 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8080 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8081 ;;Total ram usage:       12 bytes
  8082 ;; Hardware stack levels used:    1
  8083 ;; Hardware stack levels required when called:    2
  8084 ;; This function calls:
  8085 ;;		Nothing
  8086 ;; This function is called by:
  8087 ;;		_efgtoa
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091                           	psect	text23
  8092  00458A                     __ptext23:
  8093                           	opt callstack 0
  8094  00458A                     ___fleq:
  8095                           	opt callstack 24
  8096                           
  8097                           ;incstack = 0
  8098  00458A  0E00               	movlw	0
  8099  00458C  1411               	andwf	___fleq@ff1,w,c
  8100  00458E  6E19               	movwf	??___fleq& (0+255),c
  8101  004590  0E00               	movlw	0
  8102  004592  1412               	andwf	___fleq@ff1+1,w,c
  8103  004594  6E1A               	movwf	(??___fleq+1)& (0+255),c
  8104  004596  0E80               	movlw	128
  8105  004598  1413               	andwf	___fleq@ff1+2,w,c
  8106  00459A  6E1B               	movwf	(??___fleq+2)& (0+255),c
  8107  00459C  0E7F               	movlw	127
  8108  00459E  1414               	andwf	___fleq@ff1+3,w,c
  8109  0045A0  6E1C               	movwf	(??___fleq+3)& (0+255),c
  8110  0045A2  5019               	movf	??___fleq,w,c
  8111  0045A4  101A               	iorwf	??___fleq+1,w,c
  8112  0045A6  101B               	iorwf	??___fleq+2,w,c
  8113  0045A8  101C               	iorwf	??___fleq+3,w,c
  8114  0045AA  A4D8               	btfss	status,2,c
  8115  0045AC  D008               	goto	l4470
  8116  0045AE  0E00               	movlw	0
  8117  0045B0  6E11               	movwf	___fleq@ff1,c
  8118  0045B2  0E00               	movlw	0
  8119  0045B4  6E12               	movwf	___fleq@ff1+1,c
  8120  0045B6  0E00               	movlw	0
  8121  0045B8  6E13               	movwf	___fleq@ff1+2,c
  8122  0045BA  0E00               	movlw	0
  8123  0045BC  6E14               	movwf	___fleq@ff1+3,c
  8124  0045BE                     l4470:
  8125  0045BE  0E00               	movlw	0
  8126  0045C0  1415               	andwf	___fleq@ff2,w,c
  8127  0045C2  6E19               	movwf	??___fleq& (0+255),c
  8128  0045C4  0E00               	movlw	0
  8129  0045C6  1416               	andwf	___fleq@ff2+1,w,c
  8130  0045C8  6E1A               	movwf	(??___fleq+1)& (0+255),c
  8131  0045CA  0E80               	movlw	128
  8132  0045CC  1417               	andwf	___fleq@ff2+2,w,c
  8133  0045CE  6E1B               	movwf	(??___fleq+2)& (0+255),c
  8134  0045D0  0E7F               	movlw	127
  8135  0045D2  1418               	andwf	___fleq@ff2+3,w,c
  8136  0045D4  6E1C               	movwf	(??___fleq+3)& (0+255),c
  8137  0045D6  5019               	movf	??___fleq,w,c
  8138  0045D8  101A               	iorwf	??___fleq+1,w,c
  8139  0045DA  101B               	iorwf	??___fleq+2,w,c
  8140  0045DC  101C               	iorwf	??___fleq+3,w,c
  8141  0045DE  A4D8               	btfss	status,2,c
  8142  0045E0  D008               	goto	l4474
  8143  0045E2  0E00               	movlw	0
  8144  0045E4  6E15               	movwf	___fleq@ff2,c
  8145  0045E6  0E00               	movlw	0
  8146  0045E8  6E16               	movwf	___fleq@ff2+1,c
  8147  0045EA  0E00               	movlw	0
  8148  0045EC  6E17               	movwf	___fleq@ff2+2,c
  8149  0045EE  0E00               	movlw	0
  8150  0045F0  6E18               	movwf	___fleq@ff2+3,c
  8151  0045F2                     l4474:
  8152  0045F2  5015               	movf	___fleq@ff2,w,c
  8153  0045F4  1811               	xorwf	___fleq@ff1,w,c
  8154  0045F6  E10A               	bnz	u5360
  8155  0045F8  5016               	movf	___fleq@ff2+1,w,c
  8156  0045FA  1812               	xorwf	___fleq@ff1+1,w,c
  8157  0045FC  E107               	bnz	u5360
  8158  0045FE  5017               	movf	___fleq@ff2+2,w,c
  8159  004600  1813               	xorwf	___fleq@ff1+2,w,c
  8160  004602  E104               	bnz	u5360
  8161  004604  5018               	movf	___fleq@ff2+3,w,c
  8162  004606  1814               	xorwf	___fleq@ff1+3,w,c
  8163  004608  B4D8               	btfsc	status,2,c
  8164  00460A  D002               	goto	l4478
  8165  00460C                     u5360:
  8166  00460C  90D8               	bcf	status,0,c
  8167  00460E  0012               	return	
  8168  004610                     l4478:
  8169  004610  80D8               	bsf	status,0,c
  8170  004612  0012               	return		;funcret
  8171  004614                     __end_of___fleq:
  8172                           	opt callstack 0
  8173                           
  8174 ;; *************** function ___fldiv *****************
  8175 ;; Defined at:
  8176 ;;		line 11 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;  b               4   16[COMRAM] unsigned char 
  8179 ;;  a               4   20[COMRAM] unsigned char 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;  grs             4   35[COMRAM] unsigned long 
  8182 ;;  rem             4   28[COMRAM] unsigned long 
  8183 ;;  new_exp         2   33[COMRAM] short 
  8184 ;;  aexp            1   40[COMRAM] unsigned char 
  8185 ;;  bexp            1   39[COMRAM] unsigned char 
  8186 ;;  sign            1   32[COMRAM] unsigned char 
  8187 ;; Return value:  Size  Location     Type
  8188 ;;                  4   16[COMRAM] unsigned char 
  8189 ;; Registers used:
  8190 ;;		wreg, status,2, status,0
  8191 ;; Tracked objects:
  8192 ;;		On entry : 0/0
  8193 ;;		On exit  : 0/0
  8194 ;;		Unchanged: 0/0
  8195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8196 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8197 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8198 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8199 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8200 ;;Total ram usage:       25 bytes
  8201 ;; Hardware stack levels used:    1
  8202 ;; Hardware stack levels required when called:    2
  8203 ;; This function calls:
  8204 ;;		Nothing
  8205 ;; This function is called by:
  8206 ;;		_efgtoa
  8207 ;; This function uses a non-reentrant model
  8208 ;;
  8209                           
  8210                           	psect	text24
  8211  00312C                     __ptext24:
  8212                           	opt callstack 0
  8213  00312C                     ___fldiv:
  8214                           	opt callstack 24
  8215                           
  8216                           ;incstack = 0
  8217  00312C  5014               	movf	___fldiv@b+3,w,c
  8218  00312E  0B80               	andlw	128
  8219  003130  6E21               	movwf	___fldiv@sign,c
  8220  003132  5014               	movf	___fldiv@b+3,w,c
  8221  003134  2414               	addwf	___fldiv@b+3,w,c
  8222  003136  6E28               	movwf	___fldiv@bexp,c
  8223  003138  BE13               	btfsc	___fldiv@b+2,7,c
  8224  00313A  8028               	bsf	___fldiv@bexp,0,c
  8225  00313C  5028               	movf	___fldiv@bexp,w,c
  8226  00313E  B4D8               	btfsc	status,2,c
  8227  003140  D00D               	goto	l4128
  8228  003142  2828               	incf	___fldiv@bexp,w,c
  8229  003144  A4D8               	btfss	status,2,c
  8230  003146  D008               	goto	l4124
  8231  003148  0E00               	movlw	0
  8232  00314A  6E11               	movwf	___fldiv@b,c
  8233  00314C  0E00               	movlw	0
  8234  00314E  6E12               	movwf	___fldiv@b+1,c
  8235  003150  0E00               	movlw	0
  8236  003152  6E13               	movwf	___fldiv@b+2,c
  8237  003154  0E00               	movlw	0
  8238  003156  6E14               	movwf	___fldiv@b+3,c
  8239  003158                     l4124:
  8240  003158  8E13               	bsf	___fldiv@b+2,7,c
  8241  00315A  D006               	goto	L14
  8242  00315C                     l4128:
  8243  00315C  0E00               	movlw	0
  8244  00315E  6E11               	movwf	___fldiv@b,c
  8245  003160  0E00               	movlw	0
  8246  003162  6E12               	movwf	___fldiv@b+1,c
  8247  003164  0E00               	movlw	0
  8248  003166  6E13               	movwf	___fldiv@b+2,c
  8249  003168                     L14:
  8250  003168  0E00               	movlw	0
  8251  00316A  6E14               	movwf	___fldiv@b+3,c
  8252  00316C  5018               	movf	___fldiv@a+3,w,c
  8253  00316E  0B80               	andlw	128
  8254  003170  1A21               	xorwf	___fldiv@sign,f,c
  8255  003172  5018               	movf	___fldiv@a+3,w,c
  8256  003174  2418               	addwf	___fldiv@a+3,w,c
  8257  003176  6E29               	movwf	___fldiv@aexp,c
  8258  003178  BE17               	btfsc	___fldiv@a+2,7,c
  8259  00317A  8029               	bsf	___fldiv@aexp,0,c
  8260  00317C  5029               	movf	___fldiv@aexp,w,c
  8261  00317E  B4D8               	btfsc	status,2,c
  8262  003180  D00D               	goto	l4148
  8263  003182  2829               	incf	___fldiv@aexp,w,c
  8264  003184  A4D8               	btfss	status,2,c
  8265  003186  D008               	goto	l4144
  8266  003188  0E00               	movlw	0
  8267  00318A  6E15               	movwf	___fldiv@a,c
  8268  00318C  0E00               	movlw	0
  8269  00318E  6E16               	movwf	___fldiv@a+1,c
  8270  003190  0E00               	movlw	0
  8271  003192  6E17               	movwf	___fldiv@a+2,c
  8272  003194  0E00               	movlw	0
  8273  003196  6E18               	movwf	___fldiv@a+3,c
  8274  003198                     l4144:
  8275  003198  8E17               	bsf	___fldiv@a+2,7,c
  8276  00319A  D006               	goto	L15
  8277  00319C                     l4148:
  8278  00319C  0E00               	movlw	0
  8279  00319E  6E15               	movwf	___fldiv@a,c
  8280  0031A0  0E00               	movlw	0
  8281  0031A2  6E16               	movwf	___fldiv@a+1,c
  8282  0031A4  0E00               	movlw	0
  8283  0031A6  6E17               	movwf	___fldiv@a+2,c
  8284  0031A8                     L15:
  8285  0031A8  0E00               	movlw	0
  8286  0031AA  6E18               	movwf	___fldiv@a+3,c
  8287  0031AC  5015               	movf	___fldiv@a,w,c
  8288  0031AE  1016               	iorwf	___fldiv@a+1,w,c
  8289  0031B0  1017               	iorwf	___fldiv@a+2,w,c
  8290  0031B2  1018               	iorwf	___fldiv@a+3,w,c
  8291  0031B4  A4D8               	btfss	status,2,c
  8292  0031B6  D017               	goto	l4162
  8293  0031B8  0E00               	movlw	0
  8294  0031BA  6E11               	movwf	___fldiv@b,c
  8295  0031BC  0E00               	movlw	0
  8296  0031BE  6E12               	movwf	___fldiv@b+1,c
  8297  0031C0  0E00               	movlw	0
  8298  0031C2  6E13               	movwf	___fldiv@b+2,c
  8299  0031C4  0E00               	movlw	0
  8300  0031C6  6E14               	movwf	___fldiv@b+3,c
  8301  0031C8  0E80               	movlw	128
  8302  0031CA  1213               	iorwf	___fldiv@b+2,f,c
  8303  0031CC  0E7F               	movlw	127
  8304  0031CE  1214               	iorwf	___fldiv@b+3,f,c
  8305  0031D0                     l4156:
  8306  0031D0  5021               	movf	___fldiv@sign,w,c
  8307  0031D2  1214               	iorwf	___fldiv@b+3,f,c
  8308  0031D4  C011  F011         	movff	___fldiv@b,?___fldiv
  8309  0031D8  C012  F012         	movff	___fldiv@b+1,?___fldiv+1
  8310  0031DC  C013  F013         	movff	___fldiv@b+2,?___fldiv+2
  8311  0031E0  C014  F014         	movff	___fldiv@b+3,?___fldiv+3
  8312  0031E4  0012               	return	
  8313  0031E6                     l4162:
  8314  0031E6  5028               	movf	___fldiv@bexp,w,c
  8315  0031E8  A4D8               	btfss	status,2,c
  8316  0031EA  D009               	goto	l4170
  8317  0031EC  0E00               	movlw	0
  8318  0031EE  6E11               	movwf	?___fldiv,c
  8319  0031F0  0E00               	movlw	0
  8320  0031F2  6E12               	movwf	?___fldiv+1,c
  8321  0031F4  0E00               	movlw	0
  8322  0031F6  6E13               	movwf	?___fldiv+2,c
  8323  0031F8  0E00               	movlw	0
  8324  0031FA  6E14               	movwf	?___fldiv+3,c
  8325  0031FC  0012               	return	
  8326  0031FE                     l4170:
  8327  0031FE  5029               	movf	___fldiv@aexp,w,c
  8328  003200  C028  F019         	movff	___fldiv@bexp,??___fldiv
  8329  003204  6A1A               	clrf	(??___fldiv+1)& (0+255),c
  8330  003206  5E19               	subwf	??___fldiv,f,c
  8331  003208  0E00               	movlw	0
  8332  00320A  5A1A               	subwfb	??___fldiv+1,f,c
  8333  00320C  0E7F               	movlw	127
  8334  00320E  2419               	addwf	??___fldiv,w,c
  8335  003210  6E22               	movwf	___fldiv@new_exp,c
  8336  003212  0E00               	movlw	0
  8337  003214  201A               	addwfc	??___fldiv+1,w,c
  8338  003216  6E23               	movwf	___fldiv@new_exp+1,c
  8339  003218  C011  F01D         	movff	___fldiv@b,___fldiv@rem
  8340  00321C  C012  F01E         	movff	___fldiv@b+1,___fldiv@rem+1
  8341  003220  C013  F01F         	movff	___fldiv@b+2,___fldiv@rem+2
  8342  003224  C014  F020         	movff	___fldiv@b+3,___fldiv@rem+3
  8343  003228  0E00               	movlw	0
  8344  00322A  6E11               	movwf	___fldiv@b,c
  8345  00322C  0E00               	movlw	0
  8346  00322E  6E12               	movwf	___fldiv@b+1,c
  8347  003230  0E00               	movlw	0
  8348  003232  6E13               	movwf	___fldiv@b+2,c
  8349  003234  0E00               	movlw	0
  8350  003236  6E14               	movwf	___fldiv@b+3,c
  8351  003238  0E00               	movlw	0
  8352  00323A  6E24               	movwf	___fldiv@grs,c
  8353  00323C  0E00               	movlw	0
  8354  00323E  6E25               	movwf	___fldiv@grs+1,c
  8355  003240  0E00               	movlw	0
  8356  003242  6E26               	movwf	___fldiv@grs+2,c
  8357  003244  0E00               	movlw	0
  8358  003246  6E27               	movwf	___fldiv@grs+3,c
  8359  003248  0E00               	movlw	0
  8360  00324A  6E29               	movwf	___fldiv@aexp,c
  8361  00324C  D028               	goto	l1051
  8362  00324E                     l4180:
  8363  00324E  5029               	movf	___fldiv@aexp,w,c
  8364  003250  B4D8               	btfsc	status,2,c
  8365  003252  D011               	goto	l4188
  8366  003254  90D8               	bcf	status,0,c
  8367  003256  361D               	rlcf	___fldiv@rem,f,c
  8368  003258  361E               	rlcf	___fldiv@rem+1,f,c
  8369  00325A  361F               	rlcf	___fldiv@rem+2,f,c
  8370  00325C  3620               	rlcf	___fldiv@rem+3,f,c
  8371  00325E  90D8               	bcf	status,0,c
  8372  003260  3611               	rlcf	___fldiv@b,f,c
  8373  003262  3612               	rlcf	___fldiv@b+1,f,c
  8374  003264  3613               	rlcf	___fldiv@b+2,f,c
  8375  003266  3614               	rlcf	___fldiv@b+3,f,c
  8376  003268  BE27               	btfsc	___fldiv@grs+3,7,c
  8377  00326A  8011               	bsf	___fldiv@b,0,c
  8378  00326C  90D8               	bcf	status,0,c
  8379  00326E  3624               	rlcf	___fldiv@grs,f,c
  8380  003270  3625               	rlcf	___fldiv@grs+1,f,c
  8381  003272  3626               	rlcf	___fldiv@grs+2,f,c
  8382  003274  3627               	rlcf	___fldiv@grs+3,f,c
  8383  003276                     l4188:
  8384  003276  5015               	movf	___fldiv@a,w,c
  8385  003278  5C1D               	subwf	___fldiv@rem,w,c
  8386  00327A  5016               	movf	___fldiv@a+1,w,c
  8387  00327C  581E               	subwfb	___fldiv@rem+1,w,c
  8388  00327E  5017               	movf	___fldiv@a+2,w,c
  8389  003280  581F               	subwfb	___fldiv@rem+2,w,c
  8390  003282  5018               	movf	___fldiv@a+3,w,c
  8391  003284  5820               	subwfb	___fldiv@rem+3,w,c
  8392  003286  A0D8               	btfss	status,0,c
  8393  003288  D009               	goto	l4194
  8394  00328A  8C27               	bsf	___fldiv@grs+3,6,c
  8395  00328C  5015               	movf	___fldiv@a,w,c
  8396  00328E  5E1D               	subwf	___fldiv@rem,f,c
  8397  003290  5016               	movf	___fldiv@a+1,w,c
  8398  003292  5A1E               	subwfb	___fldiv@rem+1,f,c
  8399  003294  5017               	movf	___fldiv@a+2,w,c
  8400  003296  5A1F               	subwfb	___fldiv@rem+2,f,c
  8401  003298  5018               	movf	___fldiv@a+3,w,c
  8402  00329A  5A20               	subwfb	___fldiv@rem+3,f,c
  8403  00329C                     l4194:
  8404  00329C  2A29               	incf	___fldiv@aexp,f,c
  8405  00329E                     l1051:
  8406  00329E  0E19               	movlw	25
  8407  0032A0  6429               	cpfsgt	___fldiv@aexp,c
  8408  0032A2  D7D5               	goto	l4180
  8409  0032A4  501D               	movf	___fldiv@rem,w,c
  8410  0032A6  101E               	iorwf	___fldiv@rem+1,w,c
  8411  0032A8  101F               	iorwf	___fldiv@rem+2,w,c
  8412  0032AA  1020               	iorwf	___fldiv@rem+3,w,c
  8413  0032AC  B4D8               	btfsc	status,2,c
  8414  0032AE  D011               	goto	l4206
  8415  0032B0  8024               	bsf	___fldiv@grs,0,c
  8416  0032B2  D00F               	goto	l4206
  8417  0032B4                     l4200:
  8418  0032B4  90D8               	bcf	status,0,c
  8419  0032B6  3611               	rlcf	___fldiv@b,f,c
  8420  0032B8  3612               	rlcf	___fldiv@b+1,f,c
  8421  0032BA  3613               	rlcf	___fldiv@b+2,f,c
  8422  0032BC  3614               	rlcf	___fldiv@b+3,f,c
  8423  0032BE  BE27               	btfsc	___fldiv@grs+3,7,c
  8424  0032C0  8011               	bsf	___fldiv@b,0,c
  8425  0032C2  90D8               	bcf	status,0,c
  8426  0032C4  3624               	rlcf	___fldiv@grs,f,c
  8427  0032C6  3625               	rlcf	___fldiv@grs+1,f,c
  8428  0032C8  3626               	rlcf	___fldiv@grs+2,f,c
  8429  0032CA  3627               	rlcf	___fldiv@grs+3,f,c
  8430  0032CC  0622               	decf	___fldiv@new_exp,f,c
  8431  0032CE  A0D8               	btfss	status,0,c
  8432  0032D0  0623               	decf	___fldiv@new_exp+1,f,c
  8433  0032D2                     l4206:
  8434  0032D2  AE13               	btfss	___fldiv@b+2,7,c
  8435  0032D4  D7EF               	goto	l4200
  8436  0032D6  0E00               	movlw	0
  8437  0032D8  6E29               	movwf	___fldiv@aexp,c
  8438  0032DA  AE27               	btfss	___fldiv@grs+3,7,c
  8439  0032DC  D017               	goto	l1062
  8440  0032DE  0EFF               	movlw	255
  8441  0032E0  1424               	andwf	___fldiv@grs,w,c
  8442  0032E2  6E19               	movwf	??___fldiv& (0+255),c
  8443  0032E4  0EFF               	movlw	255
  8444  0032E6  1425               	andwf	___fldiv@grs+1,w,c
  8445  0032E8  6E1A               	movwf	(??___fldiv+1)& (0+255),c
  8446  0032EA  0EFF               	movlw	255
  8447  0032EC  1426               	andwf	___fldiv@grs+2,w,c
  8448  0032EE  6E1B               	movwf	(??___fldiv+2)& (0+255),c
  8449  0032F0  0E7F               	movlw	127
  8450  0032F2  1427               	andwf	___fldiv@grs+3,w,c
  8451  0032F4  6E1C               	movwf	(??___fldiv+3)& (0+255),c
  8452  0032F6  5019               	movf	??___fldiv,w,c
  8453  0032F8  101A               	iorwf	??___fldiv+1,w,c
  8454  0032FA  101B               	iorwf	??___fldiv+2,w,c
  8455  0032FC  101C               	iorwf	??___fldiv+3,w,c
  8456  0032FE  B4D8               	btfsc	status,2,c
  8457  003300  D003               	goto	l1063
  8458  003302                     u4960:
  8459  003302  0E01               	movlw	1
  8460  003304  6E29               	movwf	___fldiv@aexp,c
  8461  003306  D002               	goto	l1062
  8462  003308                     l1063:
  8463  003308  B011               	btfsc	___fldiv@b,0,c
  8464  00330A  D7FB               	goto	u4960
  8465  00330C                     l1062:
  8466  00330C  5029               	movf	___fldiv@aexp,w,c
  8467  00330E  B4D8               	btfsc	status,2,c
  8468  003310  D01F               	goto	l4226
  8469  003312  0E01               	movlw	1
  8470  003314  2611               	addwf	___fldiv@b,f,c
  8471  003316  0E00               	movlw	0
  8472  003318  2212               	addwfc	___fldiv@b+1,f,c
  8473  00331A  2213               	addwfc	___fldiv@b+2,f,c
  8474  00331C  2214               	addwfc	___fldiv@b+3,f,c
  8475  00331E  A014               	btfss	___fldiv@b+3,0,c
  8476  003320  D017               	goto	l4226
  8477  003322  C011  F019         	movff	___fldiv@b,??___fldiv
  8478  003326  C012  F01A         	movff	___fldiv@b+1,??___fldiv+1
  8479  00332A  C013  F01B         	movff	___fldiv@b+2,??___fldiv+2
  8480  00332E  C014  F01C         	movff	___fldiv@b+3,??___fldiv+3
  8481  003332  341C               	rlcf	??___fldiv+3,w,c
  8482  003334  321C               	rrcf	??___fldiv+3,f,c
  8483  003336  321B               	rrcf	??___fldiv+2,f,c
  8484  003338  321A               	rrcf	??___fldiv+1,f,c
  8485  00333A  3219               	rrcf	??___fldiv,f,c
  8486  00333C  C019  F011         	movff	??___fldiv,___fldiv@b
  8487  003340  C01A  F012         	movff	??___fldiv+1,___fldiv@b+1
  8488  003344  C01B  F013         	movff	??___fldiv+2,___fldiv@b+2
  8489  003348  C01C  F014         	movff	??___fldiv+3,___fldiv@b+3
  8490  00334C  4A22               	infsnz	___fldiv@new_exp,f,c
  8491  00334E  2A23               	incf	___fldiv@new_exp+1,f,c
  8492  003350                     l4226:
  8493  003350  BE23               	btfsc	___fldiv@new_exp+1,7,c
  8494  003352  D010               	goto	l4230
  8495  003354  5023               	movf	___fldiv@new_exp+1,w,c
  8496  003356  E103               	bnz	u5000
  8497  003358  2822               	incf	___fldiv@new_exp,w,c
  8498  00335A  A0D8               	btfss	status,0,c
  8499  00335C  D00B               	goto	l4230
  8500  00335E                     u5000:
  8501  00335E  0E00               	movlw	0
  8502  003360  6E23               	movwf	___fldiv@new_exp+1,c
  8503  003362  6822               	setf	___fldiv@new_exp,c
  8504  003364  0E00               	movlw	0
  8505  003366  6E11               	movwf	___fldiv@b,c
  8506  003368  0E00               	movlw	0
  8507  00336A  6E12               	movwf	___fldiv@b+1,c
  8508  00336C  0E00               	movlw	0
  8509  00336E  6E13               	movwf	___fldiv@b+2,c
  8510  003370  0E00               	movlw	0
  8511  003372  6E14               	movwf	___fldiv@b+3,c
  8512  003374                     l4230:
  8513  003374  BE23               	btfsc	___fldiv@new_exp+1,7,c
  8514  003376  D005               	goto	u5010
  8515  003378  5023               	movf	___fldiv@new_exp+1,w,c
  8516  00337A  E111               	bnz	l4234
  8517  00337C  0422               	decf	___fldiv@new_exp,w,c
  8518  00337E  B0D8               	btfsc	status,0,c
  8519  003380  D00E               	goto	l4234
  8520  003382                     u5010:
  8521  003382  0E00               	movlw	0
  8522  003384  6E23               	movwf	___fldiv@new_exp+1,c
  8523  003386  0E00               	movlw	0
  8524  003388  6E22               	movwf	___fldiv@new_exp,c
  8525  00338A  0E00               	movlw	0
  8526  00338C  6E11               	movwf	___fldiv@b,c
  8527  00338E  0E00               	movlw	0
  8528  003390  6E12               	movwf	___fldiv@b+1,c
  8529  003392  0E00               	movlw	0
  8530  003394  6E13               	movwf	___fldiv@b+2,c
  8531  003396  0E00               	movlw	0
  8532  003398  6E14               	movwf	___fldiv@b+3,c
  8533  00339A  0E00               	movlw	0
  8534  00339C  6E21               	movwf	___fldiv@sign,c
  8535  00339E                     l4234:
  8536  00339E  C022  F028         	movff	___fldiv@new_exp,___fldiv@bexp
  8537  0033A2  A028               	btfss	___fldiv@bexp,0,c
  8538  0033A4  D002               	goto	l4240
  8539  0033A6  8E13               	bsf	___fldiv@b+2,7,c
  8540  0033A8  D001               	goto	l4242
  8541  0033AA                     l4240:
  8542  0033AA  9E13               	bcf	___fldiv@b+2,7,c
  8543  0033AC                     l4242:
  8544  0033AC  90D8               	bcf	status,0,c
  8545  0033AE  3028               	rrcf	___fldiv@bexp,w,c
  8546  0033B0  6E14               	movwf	___fldiv@b+3,c
  8547  0033B2  D70E               	goto	l4156
  8548  0033B4                     __end_of___fldiv:
  8549                           	opt callstack 0
  8550                           
  8551 ;; *************** function ___awmod *****************
  8552 ;; Defined at:
  8553 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  8554 ;; Parameters:    Size  Location     Type
  8555 ;;  dividend        2   16[COMRAM] int 
  8556 ;;  divisor         2   18[COMRAM] int 
  8557 ;; Auto vars:     Size  Location     Type
  8558 ;;  sign            1   21[COMRAM] unsigned char 
  8559 ;;  counter         1   20[COMRAM] unsigned char 
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  2   16[COMRAM] int 
  8562 ;; Registers used:
  8563 ;;		wreg, status,2, status,0
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8569 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8570 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8572 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8573 ;;Total ram usage:        6 bytes
  8574 ;; Hardware stack levels used:    1
  8575 ;; Hardware stack levels required when called:    2
  8576 ;; This function calls:
  8577 ;;		Nothing
  8578 ;; This function is called by:
  8579 ;;		_time_elapsed
  8580 ;;		_efgtoa
  8581 ;; This function uses a non-reentrant model
  8582 ;;
  8583                           
  8584                           	psect	text25
  8585  00471A                     __ptext25:
  8586                           	opt callstack 0
  8587  00471A                     ___awmod:
  8588                           	opt callstack 27
  8589                           
  8590                           ;incstack = 0
  8591  00471A  0E00               	movlw	0
  8592  00471C  6E16               	movwf	___awmod@sign,c
  8593  00471E  AE12               	btfss	___awmod@dividend+1,7,c
  8594  004720  D006               	goto	l4438
  8595  004722  6C11               	negf	___awmod@dividend,c
  8596  004724  1E12               	comf	___awmod@dividend+1,f,c
  8597  004726  B0D8               	btfsc	status,0,c
  8598  004728  2A12               	incf	___awmod@dividend+1,f,c
  8599  00472A  0E01               	movlw	1
  8600  00472C  6E16               	movwf	___awmod@sign,c
  8601  00472E                     l4438:
  8602  00472E  AE14               	btfss	___awmod@divisor+1,7,c
  8603  004730  D004               	goto	l4442
  8604  004732  6C13               	negf	___awmod@divisor,c
  8605  004734  1E14               	comf	___awmod@divisor+1,f,c
  8606  004736  B0D8               	btfsc	status,0,c
  8607  004738  2A14               	incf	___awmod@divisor+1,f,c
  8608  00473A                     l4442:
  8609  00473A  5013               	movf	___awmod@divisor,w,c
  8610  00473C  1014               	iorwf	___awmod@divisor+1,w,c
  8611  00473E  B4D8               	btfsc	status,2,c
  8612  004740  D018               	goto	l4458
  8613  004742  0E01               	movlw	1
  8614  004744  6E15               	movwf	___awmod@counter,c
  8615  004746  D004               	goto	l4448
  8616  004748                     l4446:
  8617  004748  90D8               	bcf	status,0,c
  8618  00474A  3613               	rlcf	___awmod@divisor,f,c
  8619  00474C  3614               	rlcf	___awmod@divisor+1,f,c
  8620  00474E  2A15               	incf	___awmod@counter,f,c
  8621  004750                     l4448:
  8622  004750  AE14               	btfss	___awmod@divisor+1,7,c
  8623  004752  D7FA               	goto	l4446
  8624  004754                     u5310:
  8625  004754  5013               	movf	___awmod@divisor,w,c
  8626  004756  5C11               	subwf	___awmod@dividend,w,c
  8627  004758  5014               	movf	___awmod@divisor+1,w,c
  8628  00475A  5812               	subwfb	___awmod@dividend+1,w,c
  8629  00475C  A0D8               	btfss	status,0,c
  8630  00475E  D004               	goto	l4454
  8631  004760  5013               	movf	___awmod@divisor,w,c
  8632  004762  5E11               	subwf	___awmod@dividend,f,c
  8633  004764  5014               	movf	___awmod@divisor+1,w,c
  8634  004766  5A12               	subwfb	___awmod@dividend+1,f,c
  8635  004768                     l4454:
  8636  004768  90D8               	bcf	status,0,c
  8637  00476A  3214               	rrcf	___awmod@divisor+1,f,c
  8638  00476C  3213               	rrcf	___awmod@divisor,f,c
  8639  00476E  2E15               	decfsz	___awmod@counter,f,c
  8640  004770  D7F1               	goto	u5310
  8641  004772                     l4458:
  8642  004772  5016               	movf	___awmod@sign,w,c
  8643  004774  B4D8               	btfsc	status,2,c
  8644  004776  D004               	goto	l4462
  8645  004778  6C11               	negf	___awmod@dividend,c
  8646  00477A  1E12               	comf	___awmod@dividend+1,f,c
  8647  00477C  B0D8               	btfsc	status,0,c
  8648  00477E  2A12               	incf	___awmod@dividend+1,f,c
  8649  004780                     l4462:
  8650  004780  C011  F011         	movff	___awmod@dividend,?___awmod
  8651  004784  C012  F012         	movff	___awmod@dividend+1,?___awmod+1
  8652  004788  0012               	return		;funcret
  8653  00478A                     __end_of___awmod:
  8654                           	opt callstack 0
  8655                           
  8656 ;; *************** function ___awdiv *****************
  8657 ;; Defined at:
  8658 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  8659 ;; Parameters:    Size  Location     Type
  8660 ;;  dividend        2   16[COMRAM] int 
  8661 ;;  divisor         2   18[COMRAM] int 
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;  quotient        2   22[COMRAM] int 
  8664 ;;  sign            1   21[COMRAM] unsigned char 
  8665 ;;  counter         1   20[COMRAM] unsigned char 
  8666 ;; Return value:  Size  Location     Type
  8667 ;;                  2   16[COMRAM] int 
  8668 ;; Registers used:
  8669 ;;		wreg, status,2, status,0
  8670 ;; Tracked objects:
  8671 ;;		On entry : 0/0
  8672 ;;		On exit  : 0/0
  8673 ;;		Unchanged: 0/0
  8674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8675 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8676 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8678 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8679 ;;Total ram usage:        8 bytes
  8680 ;; Hardware stack levels used:    1
  8681 ;; Hardware stack levels required when called:    2
  8682 ;; This function calls:
  8683 ;;		Nothing
  8684 ;; This function is called by:
  8685 ;;		_time_elapsed
  8686 ;;		_efgtoa
  8687 ;; This function uses a non-reentrant model
  8688 ;;
  8689                           
  8690                           	psect	text26
  8691  004614                     __ptext26:
  8692                           	opt callstack 0
  8693  004614                     ___awdiv:
  8694                           	opt callstack 27
  8695                           
  8696                           ;incstack = 0
  8697  004614  0E00               	movlw	0
  8698  004616  6E16               	movwf	___awdiv@sign,c
  8699  004618  AE14               	btfss	___awdiv@divisor+1,7,c
  8700  00461A  D006               	goto	l4394
  8701  00461C  6C13               	negf	___awdiv@divisor,c
  8702  00461E  1E14               	comf	___awdiv@divisor+1,f,c
  8703  004620  B0D8               	btfsc	status,0,c
  8704  004622  2A14               	incf	___awdiv@divisor+1,f,c
  8705  004624  0E01               	movlw	1
  8706  004626  6E16               	movwf	___awdiv@sign,c
  8707  004628                     l4394:
  8708  004628  AE12               	btfss	___awdiv@dividend+1,7,c
  8709  00462A  D006               	goto	l4400
  8710  00462C  6C11               	negf	___awdiv@dividend,c
  8711  00462E  1E12               	comf	___awdiv@dividend+1,f,c
  8712  004630  B0D8               	btfsc	status,0,c
  8713  004632  2A12               	incf	___awdiv@dividend+1,f,c
  8714  004634  0E01               	movlw	1
  8715  004636  1A16               	xorwf	___awdiv@sign,f,c
  8716  004638                     l4400:
  8717  004638  0E00               	movlw	0
  8718  00463A  6E18               	movwf	___awdiv@quotient+1,c
  8719  00463C  0E00               	movlw	0
  8720  00463E  6E17               	movwf	___awdiv@quotient,c
  8721  004640  5013               	movf	___awdiv@divisor,w,c
  8722  004642  1014               	iorwf	___awdiv@divisor+1,w,c
  8723  004644  B4D8               	btfsc	status,2,c
  8724  004646  D01C               	goto	l4422
  8725  004648  0E01               	movlw	1
  8726  00464A  6E15               	movwf	___awdiv@counter,c
  8727  00464C  D004               	goto	l4408
  8728  00464E                     l4406:
  8729  00464E  90D8               	bcf	status,0,c
  8730  004650  3613               	rlcf	___awdiv@divisor,f,c
  8731  004652  3614               	rlcf	___awdiv@divisor+1,f,c
  8732  004654  2A15               	incf	___awdiv@counter,f,c
  8733  004656                     l4408:
  8734  004656  AE14               	btfss	___awdiv@divisor+1,7,c
  8735  004658  D7FA               	goto	l4406
  8736  00465A                     u5250:
  8737  00465A  90D8               	bcf	status,0,c
  8738  00465C  3617               	rlcf	___awdiv@quotient,f,c
  8739  00465E  3618               	rlcf	___awdiv@quotient+1,f,c
  8740  004660  5013               	movf	___awdiv@divisor,w,c
  8741  004662  5C11               	subwf	___awdiv@dividend,w,c
  8742  004664  5014               	movf	___awdiv@divisor+1,w,c
  8743  004666  5812               	subwfb	___awdiv@dividend+1,w,c
  8744  004668  A0D8               	btfss	status,0,c
  8745  00466A  D005               	goto	l4418
  8746  00466C  5013               	movf	___awdiv@divisor,w,c
  8747  00466E  5E11               	subwf	___awdiv@dividend,f,c
  8748  004670  5014               	movf	___awdiv@divisor+1,w,c
  8749  004672  5A12               	subwfb	___awdiv@dividend+1,f,c
  8750  004674  8017               	bsf	___awdiv@quotient,0,c
  8751  004676                     l4418:
  8752  004676  90D8               	bcf	status,0,c
  8753  004678  3214               	rrcf	___awdiv@divisor+1,f,c
  8754  00467A  3213               	rrcf	___awdiv@divisor,f,c
  8755  00467C  2E15               	decfsz	___awdiv@counter,f,c
  8756  00467E  D7ED               	goto	u5250
  8757  004680                     l4422:
  8758  004680  5016               	movf	___awdiv@sign,w,c
  8759  004682  B4D8               	btfsc	status,2,c
  8760  004684  D004               	goto	l4426
  8761  004686  6C17               	negf	___awdiv@quotient,c
  8762  004688  1E18               	comf	___awdiv@quotient+1,f,c
  8763  00468A  B0D8               	btfsc	status,0,c
  8764  00468C  2A18               	incf	___awdiv@quotient+1,f,c
  8765  00468E                     l4426:
  8766  00468E  C017  F011         	movff	___awdiv@quotient,?___awdiv
  8767  004692  C018  F012         	movff	___awdiv@quotient+1,?___awdiv+1
  8768  004696  0012               	return		;funcret
  8769  004698                     __end_of___awdiv:
  8770                           	opt callstack 0
  8771                           
  8772 ;; *************** function _dtoa *****************
  8773 ;; Defined at:
  8774 ;;		line 274 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8775 ;; Parameters:    Size  Location     Type
  8776 ;;  fp              2   46[COMRAM] PTR struct _IO_FILE
  8777 ;;		 -> NULL(0), 
  8778 ;;  d               8   48[COMRAM] long long 
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;  n               8   72[COMRAM] long long 
  8781 ;;  i               2   80[COMRAM] int 
  8782 ;;  s               2   70[COMRAM] int 
  8783 ;;  w               2   68[COMRAM] int 
  8784 ;;  p               2   66[COMRAM] int 
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  2   46[COMRAM] int 
  8787 ;; Registers used:
  8788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/0
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8794 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8795 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8796 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8797 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8798 ;;Total ram usage:       36 bytes
  8799 ;; Hardware stack levels used:    1
  8800 ;; Hardware stack levels required when called:    7
  8801 ;; This function calls:
  8802 ;;		___aodiv
  8803 ;;		___aomod
  8804 ;;		_abs
  8805 ;;		_pad
  8806 ;; This function is called by:
  8807 ;;		_vfpfcnvrt
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810                           
  8811                           	psect	text27
  8812  0033B4                     __ptext27:
  8813                           	opt callstack 0
  8814  0033B4                     _dtoa:
  8815                           	opt callstack 20
  8816                           
  8817                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
  8818                           
  8819                           ;incstack = 0
  8820  0033B4  C031  F049         	movff	dtoa@d,dtoa@n
  8821  0033B8  C032  F04A         	movff	dtoa@d+1,dtoa@n+1
  8822  0033BC  C033  F04B         	movff	dtoa@d+2,dtoa@n+2
  8823  0033C0  C034  F04C         	movff	dtoa@d+3,dtoa@n+3
  8824  0033C4  C035  F04D         	movff	dtoa@d+4,dtoa@n+4
  8825  0033C8  C036  F04E         	movff	dtoa@d+5,dtoa@n+5
  8826  0033CC  C037  F04F         	movff	dtoa@d+6,dtoa@n+6
  8827  0033D0  C038  F050         	movff	dtoa@d+7,dtoa@n+7
  8828                           
  8829                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
  8830  0033D4  AE50               	btfss	dtoa@n+7,7,c
  8831  0033D6  D002               	goto	u5520
  8832  0033D8  0E01               	movlw	1
  8833  0033DA  D001               	goto	u5530
  8834  0033DC                     u5520:
  8835  0033DC  0E00               	movlw	0
  8836  0033DE                     u5530:
  8837  0033DE  6E47               	movwf	dtoa@s,c
  8838  0033E0  6A48               	clrf	dtoa@s+1,c
  8839                           
  8840                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  8841  0033E2  5047               	movf	dtoa@s,w,c
  8842  0033E4  1048               	iorwf	dtoa@s+1,w,c
  8843  0033E6  B4D8               	btfsc	status,2,c
  8844  0033E8  D010               	goto	l4574
  8845                           
  8846                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  8847  0033EA  1E50               	comf	dtoa@n+7,f,c
  8848  0033EC  1E4F               	comf	dtoa@n+6,f,c
  8849  0033EE  1E4E               	comf	dtoa@n+5,f,c
  8850  0033F0  1E4D               	comf	dtoa@n+4,f,c
  8851  0033F2  1E4C               	comf	dtoa@n+3,f,c
  8852  0033F4  1E4B               	comf	dtoa@n+2,f,c
  8853  0033F6  1E4A               	comf	dtoa@n+1,f,c
  8854  0033F8  6C49               	negf	dtoa@n,c
  8855  0033FA  0E00               	movlw	0
  8856  0033FC  224A               	addwfc	dtoa@n+1,f,c
  8857  0033FE  224B               	addwfc	dtoa@n+2,f,c
  8858  003400  224C               	addwfc	dtoa@n+3,f,c
  8859  003402  224D               	addwfc	dtoa@n+4,f,c
  8860  003404  224E               	addwfc	dtoa@n+5,f,c
  8861  003406  224F               	addwfc	dtoa@n+6,f,c
  8862  003408  2250               	addwfc	dtoa@n+7,f,c
  8863  00340A                     l4574:
  8864                           
  8865                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
  8866  00340A  AE6B               	btfss	_prec+1,7,c
  8867                           
  8868                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
  8869  00340C  926C               	bcf	_flags,1,c
  8870                           
  8871                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
  8872  00340E  BE6B               	btfsc	_prec+1,7,c
  8873  003410  D005               	goto	u5560
  8874  003412  506B               	movf	_prec+1,w,c
  8875  003414  E108               	bnz	l274
  8876  003416  046A               	decf	_prec,w,c
  8877  003418  B0D8               	btfsc	status,0,c
  8878  00341A  D005               	goto	l274
  8879  00341C                     u5560:
  8880  00341C  0E00               	movlw	0
  8881  00341E  6E44               	movwf	dtoa@p+1,c
  8882  003420  0E01               	movlw	1
  8883  003422  6E43               	movwf	dtoa@p,c
  8884  003424  D004               	goto	l276
  8885  003426                     l274:
  8886  003426  C06A  F043         	movff	_prec,dtoa@p
  8887  00342A  C06B  F044         	movff	_prec+1,dtoa@p+1
  8888  00342E                     l276:
  8889                           
  8890                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  8891  00342E  C068  F045         	movff	_width,dtoa@w
  8892  003432  C069  F046         	movff	_width+1,dtoa@w+1
  8893                           
  8894                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
  8895  003436  5047               	movf	dtoa@s,w,c
  8896  003438  1048               	iorwf	dtoa@s+1,w,c
  8897  00343A  A4D8               	btfss	status,2,c
  8898  00343C  D002               	goto	u5580
  8899  00343E  A46C               	btfss	_flags,2,c
  8900  003440  D003               	goto	l4588
  8901  003442                     u5580:
  8902                           
  8903                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  8904  003442  0645               	decf	dtoa@w,f,c
  8905  003444  A0D8               	btfss	status,0,c
  8906  003446  0646               	decf	dtoa@w+1,f,c
  8907  003448                     l4588:
  8908                           
  8909                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
  8910  003448  0E00               	movlw	0
  8911  00344A  6E52               	movwf	dtoa@i+1,c
  8912  00344C  0E4F               	movlw	79
  8913  00344E  6E51               	movwf	dtoa@i,c
  8914                           
  8915                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
  8916  003450  0E00               	movlw	0
  8917  003452  0101               	movlb	1	; () banked
  8918  003454  6F5D               	movwf	(_dbuf+79)& (0+255),b
  8919                           
  8920                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8921  003456  D07C               	goto	l4602
  8922  003458                     l4592:
  8923                           
  8924                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  8925  003458  0651               	decf	dtoa@i,f,c
  8926  00345A  A0D8               	btfss	status,0,c
  8927  00345C  0652               	decf	dtoa@i+1,f,c
  8928                           
  8929                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
  8930  00345E  0E0E               	movlw	low _dbuf
  8931  003460  2451               	addwf	dtoa@i,w,c
  8932  003462  6ED9               	movwf	fsr2l,c
  8933  003464  0E01               	movlw	high _dbuf
  8934  003466  2052               	addwfc	dtoa@i+1,w,c
  8935  003468  6EDA               	movwf	fsr2h,c
  8936  00346A  C049  F011         	movff	dtoa@n,___aomod@dividend
  8937  00346E  C04A  F012         	movff	dtoa@n+1,___aomod@dividend+1
  8938  003472  C04B  F013         	movff	dtoa@n+2,___aomod@dividend+2
  8939  003476  C04C  F014         	movff	dtoa@n+3,___aomod@dividend+3
  8940  00347A  C04D  F015         	movff	dtoa@n+4,___aomod@dividend+4
  8941  00347E  C04E  F016         	movff	dtoa@n+5,___aomod@dividend+5
  8942  003482  C04F  F017         	movff	dtoa@n+6,___aomod@dividend+6
  8943  003486  C050  F018         	movff	dtoa@n+7,___aomod@dividend+7
  8944  00348A  0E0A               	movlw	10
  8945  00348C  6E19               	movwf	___aomod@divisor,c
  8946  00348E  0E00               	movlw	0
  8947  003490  6E1A               	movwf	___aomod@divisor+1,c
  8948  003492  0E00               	movlw	0
  8949  003494  6E1B               	movwf	___aomod@divisor+2,c
  8950  003496  0E00               	movlw	0
  8951  003498  6E1C               	movwf	___aomod@divisor+3,c
  8952  00349A  0E00               	movlw	0
  8953  00349C  6E1D               	movwf	___aomod@divisor+4,c
  8954  00349E  0E00               	movlw	0
  8955  0034A0  6E1E               	movwf	___aomod@divisor+5,c
  8956  0034A2  0E00               	movlw	0
  8957  0034A4  6E1F               	movwf	___aomod@divisor+6,c
  8958  0034A6  0E00               	movlw	0
  8959  0034A8  6E20               	movwf	___aomod@divisor+7,c
  8960  0034AA  ECD0  F01E         	call	___aomod	;wreg free
  8961  0034AE  C011  F039         	movff	?___aomod,??_dtoa
  8962  0034B2  C012  F03A         	movff	?___aomod+1,??_dtoa+1
  8963  0034B6  C013  F03B         	movff	?___aomod+2,??_dtoa+2
  8964  0034BA  C014  F03C         	movff	?___aomod+3,??_dtoa+3
  8965  0034BE  C015  F03D         	movff	?___aomod+4,??_dtoa+4
  8966  0034C2  C016  F03E         	movff	?___aomod+5,??_dtoa+5
  8967  0034C6  C017  F03F         	movff	?___aomod+6,??_dtoa+6
  8968  0034CA  C018  F040         	movff	?___aomod+7,??_dtoa+7
  8969  0034CE  C039  F023         	movff	??_dtoa,abs@a
  8970  0034D2  C03B  F024         	movff	??_dtoa+2,abs@a+1
  8971  0034D6  EC83  F025         	call	_abs	;wreg free
  8972  0034DA  5023               	movf	?_abs,w,c
  8973  0034DC  0F30               	addlw	48
  8974  0034DE  6EDF               	movwf	indf2,c
  8975                           
  8976                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  8977  0034E0  0643               	decf	dtoa@p,f,c
  8978  0034E2  A0D8               	btfss	status,0,c
  8979  0034E4  0644               	decf	dtoa@p+1,f,c
  8980                           
  8981                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  8982  0034E6  0645               	decf	dtoa@w,f,c
  8983  0034E8  A0D8               	btfss	status,0,c
  8984  0034EA  0646               	decf	dtoa@w+1,f,c
  8985                           
  8986                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
  8987  0034EC  C049  F011         	movff	dtoa@n,___aodiv@dividend
  8988  0034F0  C04A  F012         	movff	dtoa@n+1,___aodiv@dividend+1
  8989  0034F4  C04B  F013         	movff	dtoa@n+2,___aodiv@dividend+2
  8990  0034F8  C04C  F014         	movff	dtoa@n+3,___aodiv@dividend+3
  8991  0034FC  C04D  F015         	movff	dtoa@n+4,___aodiv@dividend+4
  8992  003500  C04E  F016         	movff	dtoa@n+5,___aodiv@dividend+5
  8993  003504  C04F  F017         	movff	dtoa@n+6,___aodiv@dividend+6
  8994  003508  C050  F018         	movff	dtoa@n+7,___aodiv@dividend+7
  8995  00350C  0E0A               	movlw	10
  8996  00350E  6E19               	movwf	___aodiv@divisor,c
  8997  003510  0E00               	movlw	0
  8998  003512  6E1A               	movwf	___aodiv@divisor+1,c
  8999  003514  0E00               	movlw	0
  9000  003516  6E1B               	movwf	___aodiv@divisor+2,c
  9001  003518  0E00               	movlw	0
  9002  00351A  6E1C               	movwf	___aodiv@divisor+3,c
  9003  00351C  0E00               	movlw	0
  9004  00351E  6E1D               	movwf	___aodiv@divisor+4,c
  9005  003520  0E00               	movlw	0
  9006  003522  6E1E               	movwf	___aodiv@divisor+5,c
  9007  003524  0E00               	movlw	0
  9008  003526  6E1F               	movwf	___aodiv@divisor+6,c
  9009  003528  0E00               	movlw	0
  9010  00352A  6E20               	movwf	___aodiv@divisor+7,c
  9011  00352C  ECEC  F01C         	call	___aodiv	;wreg free
  9012  003530  C011  F049         	movff	?___aodiv,dtoa@n
  9013  003534  C012  F04A         	movff	?___aodiv+1,dtoa@n+1
  9014  003538  C013  F04B         	movff	?___aodiv+2,dtoa@n+2
  9015  00353C  C014  F04C         	movff	?___aodiv+3,dtoa@n+3
  9016  003540  C015  F04D         	movff	?___aodiv+4,dtoa@n+4
  9017  003544  C016  F04E         	movff	?___aodiv+5,dtoa@n+5
  9018  003548  C017  F04F         	movff	?___aodiv+6,dtoa@n+6
  9019  00354C  C018  F050         	movff	?___aodiv+7,dtoa@n+7
  9020  003550                     l4602:
  9021                           
  9022                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9023  003550  BE52               	btfsc	dtoa@i+1,7,c
  9024  003552  D01F               	goto	u5630
  9025  003554  5052               	movf	dtoa@i+1,w,c
  9026  003556  E103               	bnz	u5590
  9027  003558  0451               	decf	dtoa@i,w,c
  9028  00355A  A0D8               	btfss	status,0,c
  9029  00355C  D01A               	goto	u5630
  9030  00355E                     u5590:
  9031  00355E  5049               	movf	dtoa@n,w,c
  9032  003560  104A               	iorwf	dtoa@n+1,w,c
  9033  003562  104B               	iorwf	dtoa@n+2,w,c
  9034  003564  104C               	iorwf	dtoa@n+3,w,c
  9035  003566  104D               	iorwf	dtoa@n+4,w,c
  9036  003568  104E               	iorwf	dtoa@n+5,w,c
  9037  00356A  104F               	iorwf	dtoa@n+6,w,c
  9038  00356C  1050               	iorwf	dtoa@n+7,w,c
  9039  00356E  A4D8               	btfss	status,2,c
  9040  003570  D773               	goto	l4592
  9041  003572  BE44               	btfsc	dtoa@p+1,7,c
  9042  003574  D005               	goto	u5610
  9043  003576  5044               	movf	dtoa@p+1,w,c
  9044  003578  E102               	bnz	u5611
  9045  00357A  0443               	decf	dtoa@p,w,c
  9046  00357C  B0D8               	btfsc	status,0,c
  9047  00357E                     u5611:
  9048  00357E  D76C               	goto	l4592
  9049  003580                     u5610:
  9050  003580  BE46               	btfsc	dtoa@w+1,7,c
  9051  003582  D007               	goto	u5630
  9052  003584  5046               	movf	dtoa@w+1,w,c
  9053  003586  E103               	bnz	u5620
  9054  003588  0445               	decf	dtoa@w,w,c
  9055  00358A  A0D8               	btfss	status,0,c
  9056  00358C  D002               	goto	u5630
  9057  00358E                     u5620:
  9058  00358E  B26C               	btfsc	_flags,1,c
  9059  003590  D763               	goto	l4592
  9060  003592                     u5630:
  9061                           
  9062                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
  9063  003592  5047               	movf	dtoa@s,w,c
  9064  003594  1048               	iorwf	dtoa@s+1,w,c
  9065  003596  A4D8               	btfss	status,2,c
  9066  003598  D002               	goto	u5650
  9067  00359A  A46C               	btfss	_flags,2,c
  9068  00359C  D017               	goto	l4626
  9069  00359E                     u5650:
  9070                           
  9071                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  9072  00359E  0651               	decf	dtoa@i,f,c
  9073  0035A0  A0D8               	btfss	status,0,c
  9074  0035A2  0652               	decf	dtoa@i+1,f,c
  9075                           
  9076                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
  9077  0035A4  5047               	movf	dtoa@s,w,c
  9078  0035A6  1048               	iorwf	dtoa@s+1,w,c
  9079  0035A8  A4D8               	btfss	status,2,c
  9080  0035AA  D004               	goto	l4622
  9081  0035AC  0E00               	movlw	0
  9082  0035AE  6E42               	movwf	_dtoa$653+1,c
  9083  0035B0  0E2B               	movlw	43
  9084  0035B2  D003               	goto	L16
  9085  0035B4                     l4622:
  9086  0035B4  0E00               	movlw	0
  9087  0035B6  6E42               	movwf	_dtoa$653+1,c
  9088  0035B8  0E2D               	movlw	45
  9089  0035BA                     L16:
  9090  0035BA  6E41               	movwf	_dtoa$653,c
  9091  0035BC  0E0E               	movlw	low _dbuf
  9092  0035BE  2451               	addwf	dtoa@i,w,c
  9093  0035C0  6ED9               	movwf	fsr2l,c
  9094  0035C2  0E01               	movlw	high _dbuf
  9095  0035C4  2052               	addwfc	dtoa@i+1,w,c
  9096  0035C6  6EDA               	movwf	fsr2h,c
  9097  0035C8  C041  FFDF         	movff	_dtoa$653,indf2
  9098  0035CC                     l4626:
  9099                           
  9100                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
  9101  0035CC  C02F  F024         	movff	dtoa@fp,pad@fp
  9102  0035D0  C030  F025         	movff	dtoa@fp+1,pad@fp+1
  9103  0035D4  0E0E               	movlw	low _dbuf
  9104  0035D6  2451               	addwf	dtoa@i,w,c
  9105  0035D8  6E26               	movwf	pad@buf,c
  9106  0035DA  0E01               	movlw	high _dbuf
  9107  0035DC  2052               	addwfc	dtoa@i+1,w,c
  9108  0035DE  6E27               	movwf	pad@buf+1,c
  9109  0035E0  C045  F028         	movff	dtoa@w,pad@p
  9110  0035E4  C046  F029         	movff	dtoa@w+1,pad@p+1
  9111  0035E8  EC30  F022         	call	_pad	;wreg free
  9112  0035EC  C024  F02F         	movff	?_pad,?_dtoa
  9113  0035F0  C025  F030         	movff	?_pad+1,?_dtoa+1
  9114  0035F4  0012               	return		;funcret
  9115  0035F6                     __end_of_dtoa:
  9116                           	opt callstack 0
  9117                           
  9118 ;; *************** function _pad *****************
  9119 ;; Defined at:
  9120 ;;		line 72 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9121 ;; Parameters:    Size  Location     Type
  9122 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  9123 ;;		 -> NULL(0), 
  9124 ;;  buf             2   37[COMRAM] PTR unsigned char 
  9125 ;;		 -> dbuf(80), 
  9126 ;;  p               2   39[COMRAM] int 
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;  w               2   44[COMRAM] int 
  9129 ;;  i               2   42[COMRAM] int 
  9130 ;; Return value:  Size  Location     Type
  9131 ;;                  2   35[COMRAM] int 
  9132 ;; Registers used:
  9133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9134 ;; Tracked objects:
  9135 ;;		On entry : 0/0
  9136 ;;		On exit  : 0/0
  9137 ;;		Unchanged: 0/0
  9138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9139 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9140 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9141 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9142 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9143 ;;Total ram usage:       11 bytes
  9144 ;; Hardware stack levels used:    1
  9145 ;; Hardware stack levels required when called:    6
  9146 ;; This function calls:
  9147 ;;		_fputc
  9148 ;;		_fputs
  9149 ;;		_strlen
  9150 ;; This function is called by:
  9151 ;;		_dtoa
  9152 ;;		_efgtoa
  9153 ;;		_xtoa
  9154 ;; This function uses a non-reentrant model
  9155 ;;
  9156                           
  9157                           	psect	text28
  9158  004460                     __ptext28:
  9159                           	opt callstack 0
  9160  004460                     _pad:
  9161                           	opt callstack 20
  9162                           
  9163                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  9164                           
  9165                           ;incstack = 0
  9166  004460  A06C               	btfss	_flags,0,c
  9167  004462  D00A               	goto	l3922
  9168                           
  9169                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  9170  004464  C026  F01D         	movff	pad@buf,fputs@s
  9171  004468  C027  F01E         	movff	pad@buf+1,fputs@s+1
  9172  00446C  C024  F01F         	movff	pad@fp,fputs@fp
  9173  004470  C025  F020         	movff	pad@fp+1,fputs@fp+1
  9174  004474  EC4D  F025         	call	_fputs	;wreg free
  9175  004478                     l3922:
  9176                           
  9177                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  9178  004478  BE29               	btfsc	pad@p+1,7,c
  9179  00447A  D005               	goto	l3926
  9180  00447C  C028  F02D         	movff	pad@p,pad@w
  9181  004480  C029  F02E         	movff	pad@p+1,pad@w+1
  9182  004484  D004               	goto	l263
  9183  004486                     l3926:
  9184  004486  0E00               	movlw	0
  9185  004488  6E2E               	movwf	pad@w+1,c
  9186  00448A  0E00               	movlw	0
  9187  00448C  6E2D               	movwf	pad@w,c
  9188  00448E                     l263:
  9189                           
  9190                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  9191  00448E  0E00               	movlw	0
  9192  004490  6E2C               	movwf	pad@i+1,c
  9193  004492  0E00               	movlw	0
  9194  004494  6E2B               	movwf	pad@i,c
  9195                           
  9196                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  9197  004496  D00C               	goto	l3932
  9198  004498                     l3928:
  9199                           
  9200                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  9201  004498  0E00               	movlw	0
  9202  00449A  6E15               	movwf	fputc@c+1,c
  9203  00449C  0E20               	movlw	32
  9204  00449E  6E14               	movwf	fputc@c,c
  9205  0044A0  C024  F016         	movff	pad@fp,fputc@fp
  9206  0044A4  C025  F017         	movff	pad@fp+1,fputc@fp+1
  9207  0044A8  ECC5  F023         	call	_fputc	;wreg free
  9208                           
  9209                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  9210  0044AC  4A2B               	infsnz	pad@i,f,c
  9211  0044AE  2A2C               	incf	pad@i+1,f,c
  9212  0044B0                     l3932:
  9213                           
  9214                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  9215  0044B0  502D               	movf	pad@w,w,c
  9216  0044B2  5C2B               	subwf	pad@i,w,c
  9217  0044B4  502C               	movf	pad@i+1,w,c
  9218  0044B6  0A80               	xorlw	128
  9219  0044B8  6E2A               	movwf	??_pad& (0+255),c
  9220  0044BA  502E               	movf	pad@w+1,w,c
  9221  0044BC  0A80               	xorlw	128
  9222  0044BE  582A               	subwfb	??_pad& (0+255),w,c
  9223  0044C0  A0D8               	btfss	status,0,c
  9224  0044C2  D7EA               	goto	l3928
  9225                           
  9226                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  9227  0044C4  B06C               	btfsc	_flags,0,c
  9228  0044C6  D00A               	goto	l3936
  9229                           
  9230                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  9231  0044C8  C026  F01D         	movff	pad@buf,fputs@s
  9232  0044CC  C027  F01E         	movff	pad@buf+1,fputs@s+1
  9233  0044D0  C024  F01F         	movff	pad@fp,fputs@fp
  9234  0044D4  C025  F020         	movff	pad@fp+1,fputs@fp+1
  9235  0044D8  EC4D  F025         	call	_fputs	;wreg free
  9236  0044DC                     l3936:
  9237                           
  9238                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
  9239  0044DC  C026  F011         	movff	pad@buf,strlen@s
  9240  0044E0  C027  F012         	movff	pad@buf+1,strlen@s+1
  9241  0044E4  ECFB  F025         	call	_strlen	;wreg free
  9242  0044E8  502D               	movf	pad@w,w,c
  9243  0044EA  2411               	addwf	?_strlen,w,c
  9244  0044EC  6E24               	movwf	?_pad,c
  9245  0044EE  502E               	movf	pad@w+1,w,c
  9246  0044F0  2012               	addwfc	?_strlen+1,w,c
  9247  0044F2  6E25               	movwf	?_pad+1,c
  9248  0044F4  0012               	return		;funcret
  9249  0044F6                     __end_of_pad:
  9250                           	opt callstack 0
  9251                           
  9252 ;; *************** function _strlen *****************
  9253 ;; Defined at:
  9254 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  9255 ;; Parameters:    Size  Location     Type
  9256 ;;  s               2   16[COMRAM] PTR const unsigned char 
  9257 ;;		 -> dbuf(80), 
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;  a               2   18[COMRAM] PTR const unsigned char 
  9260 ;;		 -> dbuf(80), 
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  2   16[COMRAM] unsigned int 
  9263 ;; Registers used:
  9264 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9273 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9274 ;;Total ram usage:        4 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; Hardware stack levels required when called:    2
  9277 ;; This function calls:
  9278 ;;		Nothing
  9279 ;; This function is called by:
  9280 ;;		_pad
  9281 ;; This function uses a non-reentrant model
  9282 ;;
  9283                           
  9284                           	psect	text29
  9285  004BF6                     __ptext29:
  9286                           	opt callstack 0
  9287  004BF6                     _strlen:
  9288                           	opt callstack 23
  9289                           
  9290                           ;incstack = 0
  9291  004BF6  C011  F013         	movff	strlen@s,strlen@a
  9292  004BFA  C012  F014         	movff	strlen@s+1,strlen@a+1
  9293  004BFE  D002               	goto	l3702
  9294  004C00                     l3700:
  9295  004C00  4A11               	infsnz	strlen@s,f,c
  9296  004C02  2A12               	incf	strlen@s+1,f,c
  9297  004C04                     l3702:
  9298  004C04  C011  FFD9         	movff	strlen@s,fsr2l
  9299  004C08  C012  FFDA         	movff	strlen@s+1,fsr2h
  9300  004C0C  50DF               	movf	indf2,w,c
  9301  004C0E  A4D8               	btfss	status,2,c
  9302  004C10  D7F7               	goto	l3700
  9303  004C12  5013               	movf	strlen@a,w,c
  9304  004C14  5C11               	subwf	strlen@s,w,c
  9305  004C16  6E11               	movwf	?_strlen,c
  9306  004C18  5014               	movf	strlen@a+1,w,c
  9307  004C1A  5812               	subwfb	strlen@s+1,w,c
  9308  004C1C  6E12               	movwf	?_strlen+1,c
  9309  004C1E  0012               	return		;funcret
  9310  004C20                     __end_of_strlen:
  9311                           	opt callstack 0
  9312                           
  9313 ;; *************** function _fputs *****************
  9314 ;; Defined at:
  9315 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  9316 ;; Parameters:    Size  Location     Type
  9317 ;;  s               2   28[COMRAM] PTR const unsigned char 
  9318 ;;		 -> dbuf(80), 
  9319 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  9320 ;;		 -> NULL(0), 
  9321 ;; Auto vars:     Size  Location     Type
  9322 ;;  i               2   33[COMRAM] int 
  9323 ;;  c               1   32[COMRAM] unsigned char 
  9324 ;; Return value:  Size  Location     Type
  9325 ;;                  2   28[COMRAM] int 
  9326 ;; Registers used:
  9327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9328 ;; Tracked objects:
  9329 ;;		On entry : 0/0
  9330 ;;		On exit  : 0/0
  9331 ;;		Unchanged: 0/0
  9332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9333 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9334 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9336 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9337 ;;Total ram usage:        7 bytes
  9338 ;; Hardware stack levels used:    1
  9339 ;; Hardware stack levels required when called:    5
  9340 ;; This function calls:
  9341 ;;		_fputc
  9342 ;; This function is called by:
  9343 ;;		_pad
  9344 ;; This function uses a non-reentrant model
  9345 ;;
  9346                           
  9347                           	psect	text30
  9348  004A9A                     __ptext30:
  9349                           	opt callstack 0
  9350  004A9A                     _fputs:
  9351                           	opt callstack 20
  9352                           
  9353                           ;incstack = 0
  9354  004A9A  0E00               	movlw	0
  9355  004A9C  6E23               	movwf	fputs@i+1,c
  9356  004A9E  0E00               	movlw	0
  9357  004AA0  6E22               	movwf	fputs@i,c
  9358  004AA2  D00B               	goto	l3696
  9359  004AA4                     l3692:
  9360  004AA4  C021  F014         	movff	fputs@c,fputc@c
  9361  004AA8  6A15               	clrf	fputc@c+1,c
  9362  004AAA  C01F  F016         	movff	fputs@fp,fputc@fp
  9363  004AAE  C020  F017         	movff	fputs@fp+1,fputc@fp+1
  9364  004AB2  ECC5  F023         	call	_fputc	;wreg free
  9365  004AB6  4A22               	infsnz	fputs@i,f,c
  9366  004AB8  2A23               	incf	fputs@i+1,f,c
  9367  004ABA                     l3696:
  9368  004ABA  5022               	movf	fputs@i,w,c
  9369  004ABC  241D               	addwf	fputs@s,w,c
  9370  004ABE  6ED9               	movwf	fsr2l,c
  9371  004AC0  5023               	movf	fputs@i+1,w,c
  9372  004AC2  201E               	addwfc	fputs@s+1,w,c
  9373  004AC4  6EDA               	movwf	fsr2h,c
  9374  004AC6  50DF               	movf	indf2,w,c
  9375  004AC8  6E21               	movwf	fputs@c,c
  9376  004ACA  5021               	movf	fputs@c,w,c
  9377  004ACC  B4D8               	btfsc	status,2,c
  9378  004ACE  0012               	return	
  9379  004AD0  D7E9               	goto	l3692
  9380  004AD2                     __end_of_fputs:
  9381                           	opt callstack 0
  9382                           
  9383 ;; *************** function _fputc *****************
  9384 ;; Defined at:
  9385 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  9386 ;; Parameters:    Size  Location     Type
  9387 ;;  c               2   19[COMRAM] int 
  9388 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  9389 ;;		 -> NULL(0), 
  9390 ;; Auto vars:     Size  Location     Type
  9391 ;;		None
  9392 ;; Return value:  Size  Location     Type
  9393 ;;                  2   19[COMRAM] int 
  9394 ;; Registers used:
  9395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9396 ;; Tracked objects:
  9397 ;;		On entry : 0/0
  9398 ;;		On exit  : 0/0
  9399 ;;		Unchanged: 0/0
  9400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9401 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9403 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9404 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9405 ;;Total ram usage:        9 bytes
  9406 ;; Hardware stack levels used:    1
  9407 ;; Hardware stack levels required when called:    4
  9408 ;; This function calls:
  9409 ;;		_putch
  9410 ;; This function is called by:
  9411 ;;		_pad
  9412 ;;		_vfpfcnvrt
  9413 ;;		_fputs
  9414 ;; This function uses a non-reentrant model
  9415 ;;
  9416                           
  9417                           	psect	text31
  9418  00478A                     __ptext31:
  9419                           	opt callstack 0
  9420  00478A                     _fputc:
  9421                           	opt callstack 20
  9422                           
  9423                           ;incstack = 0
  9424  00478A  5016               	movf	fputc@fp,w,c
  9425  00478C  1017               	iorwf	fputc@fp+1,w,c
  9426  00478E  B4D8               	btfsc	status,2,c
  9427  004790  D004               	goto	u3850
  9428  004792  5016               	movf	fputc@fp,w,c
  9429  004794  1017               	iorwf	fputc@fp+1,w,c
  9430  004796  A4D8               	btfss	status,2,c
  9431  004798  D004               	goto	l3682
  9432  00479A                     u3850:
  9433  00479A  5014               	movf	fputc@c,w,c
  9434  00479C  EC55  F026         	call	_putch
  9435  0047A0  0012               	return	
  9436  0047A2                     l3682:
  9437  0047A2  EE20 F004          	lfsr	2,4
  9438  0047A6  5016               	movf	fputc@fp,w,c
  9439  0047A8  26D9               	addwf	fsr2l,f,c
  9440  0047AA  5017               	movf	fputc@fp+1,w,c
  9441  0047AC  22DA               	addwfc	fsr2h,f,c
  9442  0047AE  50DE               	movf	postinc2,w,c
  9443  0047B0  10DE               	iorwf	postinc2,w,c
  9444  0047B2  B4D8               	btfsc	status,2,c
  9445  0047B4  D016               	goto	u3870
  9446  0047B6  EE20 F004          	lfsr	2,4
  9447  0047BA  5016               	movf	fputc@fp,w,c
  9448  0047BC  26D9               	addwf	fsr2l,f,c
  9449  0047BE  5017               	movf	fputc@fp+1,w,c
  9450  0047C0  22DA               	addwfc	fsr2h,f,c
  9451  0047C2  EE10 F002          	lfsr	1,2
  9452  0047C6  5016               	movf	fputc@fp,w,c
  9453  0047C8  26E1               	addwf	fsr1l,f,c
  9454  0047CA  5017               	movf	fputc@fp+1,w,c
  9455  0047CC  22E2               	addwfc	fsr1h,f,c
  9456  0047CE  50DE               	movf	postinc2,w,c
  9457  0047D0  5CE6               	subwf	postinc1,w,c
  9458  0047D2  50E6               	movf	postinc1,w,c
  9459  0047D4  0A80               	xorlw	128
  9460  0047D6  6E1C               	movwf	(??_fputc+4)& (0+255),c
  9461  0047D8  50DE               	movf	postinc2,w,c
  9462  0047DA  0A80               	xorlw	128
  9463  0047DC  581C               	subwfb	(??_fputc+4)& (0+255),w,c
  9464  0047DE  B0D8               	btfsc	status,0,c
  9465  0047E0  0012               	return	
  9466  0047E2                     u3870:
  9467  0047E2  EE20 F002          	lfsr	2,2
  9468  0047E6  5016               	movf	fputc@fp,w,c
  9469  0047E8  26D9               	addwf	fsr2l,f,c
  9470  0047EA  5017               	movf	fputc@fp+1,w,c
  9471  0047EC  22DA               	addwfc	fsr2h,f,c
  9472  0047EE  2ADE               	incf	postinc2,f,c
  9473  0047F0  0E00               	movlw	0
  9474  0047F2  22DD               	addwfc	postdec2,f,c
  9475  0047F4  0012               	return		;funcret
  9476  0047F6                     __end_of_fputc:
  9477                           	opt callstack 0
  9478                           
  9479 ;; *************** function _putch *****************
  9480 ;; Defined at:
  9481 ;;		line 93 in file "LCD_F.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;  data            1    wreg     unsigned char 
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;  data            1   18[COMRAM] unsigned char 
  9486 ;; Return value:  Size  Location     Type
  9487 ;;                  1    wreg      void 
  9488 ;; Registers used:
  9489 ;;		wreg, status,2, status,0, cstack
  9490 ;; Tracked objects:
  9491 ;;		On entry : 0/0
  9492 ;;		On exit  : 0/0
  9493 ;;		Unchanged: 0/0
  9494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9498 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9499 ;;Total ram usage:        1 bytes
  9500 ;; Hardware stack levels used:    1
  9501 ;; Hardware stack levels required when called:    3
  9502 ;; This function calls:
  9503 ;;		_lcd_byte
  9504 ;; This function is called by:
  9505 ;;		_fputc
  9506 ;; This function uses a non-reentrant model
  9507 ;;
  9508                           
  9509                           	psect	text32
  9510  004CAA                     __ptext32:
  9511                           	opt callstack 0
  9512  004CAA                     _putch:
  9513                           	opt callstack 20
  9514                           
  9515                           ;incstack = 0
  9516                           ;putch@data stored from wreg
  9517  004CAA  6E13               	movwf	putch@data,c
  9518                           
  9519                           ;LCD_F.c: 94:     LATDbits.LATD2 = 1;
  9520  004CAC  848C               	bsf	3980,2,c	;volatile
  9521                           
  9522                           ;LCD_F.c: 95:     lcd_byte(data);
  9523  004CAE  5013               	movf	putch@data,w,c
  9524  004CB0  EC26  F024         	call	_lcd_byte
  9525                           
  9526                           ;LCD_F.c: 96:     _delay((unsigned long)((100)*(40000000/4000000.0)));
  9527  004CB4  0EC8               	movlw	200
  9528  004CB6                     u7977:
  9529  004CB6  D000               	nop2	
  9530  004CB8  2EE8               	decfsz	wreg,f,c
  9531  004CBA  D7FD               	bra	u7977
  9532  004CBC  0012               	return		;funcret
  9533  004CBE                     __end_of_putch:
  9534                           	opt callstack 0
  9535                           
  9536 ;; *************** function _abs *****************
  9537 ;; Defined at:
  9538 ;;		line 1 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  9539 ;; Parameters:    Size  Location     Type
  9540 ;;  a               2   34[COMRAM] int 
  9541 ;; Auto vars:     Size  Location     Type
  9542 ;;		None
  9543 ;; Return value:  Size  Location     Type
  9544 ;;                  2   34[COMRAM] int 
  9545 ;; Registers used:
  9546 ;;		wreg, status,2, status,0
  9547 ;; Tracked objects:
  9548 ;;		On entry : 0/0
  9549 ;;		On exit  : 0/0
  9550 ;;		Unchanged: 0/0
  9551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9552 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9554 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9555 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9556 ;;Total ram usage:        4 bytes
  9557 ;; Hardware stack levels used:    1
  9558 ;; Hardware stack levels required when called:    2
  9559 ;; This function calls:
  9560 ;;		Nothing
  9561 ;; This function is called by:
  9562 ;;		_dtoa
  9563 ;; This function uses a non-reentrant model
  9564 ;;
  9565                           
  9566                           	psect	text33
  9567  004B06                     __ptext33:
  9568                           	opt callstack 0
  9569  004B06                     _abs:
  9570                           	opt callstack 24
  9571                           
  9572                           ;incstack = 0
  9573  004B06  BE24               	btfsc	abs@a+1,7,c
  9574  004B08  D005               	goto	u4370
  9575  004B0A  5024               	movf	abs@a+1,w,c
  9576  004B0C  E110               	bnz	l1153
  9577  004B0E  0423               	decf	abs@a,w,c
  9578  004B10  B0D8               	btfsc	status,0,c
  9579  004B12  D00D               	goto	l1153
  9580  004B14                     u4370:
  9581  004B14  C023  F025         	movff	abs@a,??_abs
  9582  004B18  C024  F026         	movff	abs@a+1,??_abs+1
  9583  004B1C  1E25               	comf	??_abs,f,c
  9584  004B1E  1E26               	comf	??_abs+1,f,c
  9585  004B20  4A25               	infsnz	??_abs,f,c
  9586  004B22  2A26               	incf	??_abs+1,f,c
  9587  004B24  C025  F023         	movff	??_abs,?_abs
  9588  004B28  C026  F024         	movff	??_abs+1,?_abs+1
  9589  004B2C  0012               	return	
  9590  004B2E                     l1153:
  9591  004B2E  C023  F023         	movff	abs@a,?_abs
  9592  004B32  C024  F024         	movff	abs@a+1,?_abs+1
  9593  004B36  0012               	return		;funcret
  9594  004B38                     __end_of_abs:
  9595                           	opt callstack 0
  9596                           
  9597 ;; *************** function ___aomod *****************
  9598 ;; Defined at:
  9599 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;  dividend        8   16[COMRAM] long long 
  9602 ;;  divisor         8   24[COMRAM] long long 
  9603 ;; Auto vars:     Size  Location     Type
  9604 ;;  sign            1   33[COMRAM] unsigned char 
  9605 ;;  counter         1   32[COMRAM] unsigned char 
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  8   16[COMRAM] long long 
  9608 ;; Registers used:
  9609 ;;		wreg, status,2, status,0
  9610 ;; Tracked objects:
  9611 ;;		On entry : 0/0
  9612 ;;		On exit  : 0/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9615 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9616 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9618 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9619 ;;Total ram usage:       18 bytes
  9620 ;; Hardware stack levels used:    1
  9621 ;; Hardware stack levels required when called:    2
  9622 ;; This function calls:
  9623 ;;		Nothing
  9624 ;; This function is called by:
  9625 ;;		_dtoa
  9626 ;; This function uses a non-reentrant model
  9627 ;;
  9628                           
  9629                           	psect	text34
  9630  003DA0                     __ptext34:
  9631                           	opt callstack 0
  9632  003DA0                     ___aomod:
  9633                           	opt callstack 24
  9634                           
  9635                           ;incstack = 0
  9636  003DA0  0E00               	movlw	0
  9637  003DA2  6E22               	movwf	___aomod@sign,c
  9638  003DA4  AE18               	btfss	___aomod@dividend+7,7,c
  9639  003DA6  D012               	goto	l4084
  9640  003DA8  1E18               	comf	___aomod@dividend+7,f,c
  9641  003DAA  1E17               	comf	___aomod@dividend+6,f,c
  9642  003DAC  1E16               	comf	___aomod@dividend+5,f,c
  9643  003DAE  1E15               	comf	___aomod@dividend+4,f,c
  9644  003DB0  1E14               	comf	___aomod@dividend+3,f,c
  9645  003DB2  1E13               	comf	___aomod@dividend+2,f,c
  9646  003DB4  1E12               	comf	___aomod@dividend+1,f,c
  9647  003DB6  6C11               	negf	___aomod@dividend,c
  9648  003DB8  0E00               	movlw	0
  9649  003DBA  2212               	addwfc	___aomod@dividend+1,f,c
  9650  003DBC  2213               	addwfc	___aomod@dividend+2,f,c
  9651  003DBE  2214               	addwfc	___aomod@dividend+3,f,c
  9652  003DC0  2215               	addwfc	___aomod@dividend+4,f,c
  9653  003DC2  2216               	addwfc	___aomod@dividend+5,f,c
  9654  003DC4  2217               	addwfc	___aomod@dividend+6,f,c
  9655  003DC6  2218               	addwfc	___aomod@dividend+7,f,c
  9656  003DC8  0E01               	movlw	1
  9657  003DCA  6E22               	movwf	___aomod@sign,c
  9658  003DCC                     l4084:
  9659  003DCC  AE20               	btfss	___aomod@divisor+7,7,c
  9660  003DCE  D010               	goto	l4088
  9661  003DD0  1E20               	comf	___aomod@divisor+7,f,c
  9662  003DD2  1E1F               	comf	___aomod@divisor+6,f,c
  9663  003DD4  1E1E               	comf	___aomod@divisor+5,f,c
  9664  003DD6  1E1D               	comf	___aomod@divisor+4,f,c
  9665  003DD8  1E1C               	comf	___aomod@divisor+3,f,c
  9666  003DDA  1E1B               	comf	___aomod@divisor+2,f,c
  9667  003DDC  1E1A               	comf	___aomod@divisor+1,f,c
  9668  003DDE  6C19               	negf	___aomod@divisor,c
  9669  003DE0  0E00               	movlw	0
  9670  003DE2  221A               	addwfc	___aomod@divisor+1,f,c
  9671  003DE4  221B               	addwfc	___aomod@divisor+2,f,c
  9672  003DE6  221C               	addwfc	___aomod@divisor+3,f,c
  9673  003DE8  221D               	addwfc	___aomod@divisor+4,f,c
  9674  003DEA  221E               	addwfc	___aomod@divisor+5,f,c
  9675  003DEC  221F               	addwfc	___aomod@divisor+6,f,c
  9676  003DEE  2220               	addwfc	___aomod@divisor+7,f,c
  9677  003DF0                     l4088:
  9678  003DF0  5019               	movf	___aomod@divisor,w,c
  9679  003DF2  101A               	iorwf	___aomod@divisor+1,w,c
  9680  003DF4  101B               	iorwf	___aomod@divisor+2,w,c
  9681  003DF6  101C               	iorwf	___aomod@divisor+3,w,c
  9682  003DF8  101D               	iorwf	___aomod@divisor+4,w,c
  9683  003DFA  101E               	iorwf	___aomod@divisor+5,w,c
  9684  003DFC  101F               	iorwf	___aomod@divisor+6,w,c
  9685  003DFE  1020               	iorwf	___aomod@divisor+7,w,c
  9686  003E00  B4D8               	btfsc	status,2,c
  9687  003E02  D03C               	goto	l4104
  9688  003E04  0E01               	movlw	1
  9689  003E06  6E21               	movwf	___aomod@counter,c
  9690  003E08  D00A               	goto	l4094
  9691  003E0A                     l4092:
  9692  003E0A  90D8               	bcf	status,0,c
  9693  003E0C  3619               	rlcf	___aomod@divisor,f,c
  9694  003E0E  361A               	rlcf	___aomod@divisor+1,f,c
  9695  003E10  361B               	rlcf	___aomod@divisor+2,f,c
  9696  003E12  361C               	rlcf	___aomod@divisor+3,f,c
  9697  003E14  361D               	rlcf	___aomod@divisor+4,f,c
  9698  003E16  361E               	rlcf	___aomod@divisor+5,f,c
  9699  003E18  361F               	rlcf	___aomod@divisor+6,f,c
  9700  003E1A  3620               	rlcf	___aomod@divisor+7,f,c
  9701  003E1C  2A21               	incf	___aomod@counter,f,c
  9702  003E1E                     l4094:
  9703  003E1E  AE20               	btfss	___aomod@divisor+7,7,c
  9704  003E20  D7F4               	goto	l4092
  9705  003E22                     u4770:
  9706  003E22  5019               	movf	___aomod@divisor,w,c
  9707  003E24  5C11               	subwf	___aomod@dividend,w,c
  9708  003E26  501A               	movf	___aomod@divisor+1,w,c
  9709  003E28  5812               	subwfb	___aomod@dividend+1,w,c
  9710  003E2A  501B               	movf	___aomod@divisor+2,w,c
  9711  003E2C  5813               	subwfb	___aomod@dividend+2,w,c
  9712  003E2E  501C               	movf	___aomod@divisor+3,w,c
  9713  003E30  5814               	subwfb	___aomod@dividend+3,w,c
  9714  003E32  501D               	movf	___aomod@divisor+4,w,c
  9715  003E34  5815               	subwfb	___aomod@dividend+4,w,c
  9716  003E36  501E               	movf	___aomod@divisor+5,w,c
  9717  003E38  5816               	subwfb	___aomod@dividend+5,w,c
  9718  003E3A  501F               	movf	___aomod@divisor+6,w,c
  9719  003E3C  5817               	subwfb	___aomod@dividend+6,w,c
  9720  003E3E  5020               	movf	___aomod@divisor+7,w,c
  9721  003E40  5818               	subwfb	___aomod@dividend+7,w,c
  9722  003E42  A0D8               	btfss	status,0,c
  9723  003E44  D010               	goto	l4100
  9724  003E46  5019               	movf	___aomod@divisor,w,c
  9725  003E48  5E11               	subwf	___aomod@dividend,f,c
  9726  003E4A  501A               	movf	___aomod@divisor+1,w,c
  9727  003E4C  5A12               	subwfb	___aomod@dividend+1,f,c
  9728  003E4E  501B               	movf	___aomod@divisor+2,w,c
  9729  003E50  5A13               	subwfb	___aomod@dividend+2,f,c
  9730  003E52  501C               	movf	___aomod@divisor+3,w,c
  9731  003E54  5A14               	subwfb	___aomod@dividend+3,f,c
  9732  003E56  501D               	movf	___aomod@divisor+4,w,c
  9733  003E58  5A15               	subwfb	___aomod@dividend+4,f,c
  9734  003E5A  501E               	movf	___aomod@divisor+5,w,c
  9735  003E5C  5A16               	subwfb	___aomod@dividend+5,f,c
  9736  003E5E  501F               	movf	___aomod@divisor+6,w,c
  9737  003E60  5A17               	subwfb	___aomod@dividend+6,f,c
  9738  003E62  5020               	movf	___aomod@divisor+7,w,c
  9739  003E64  5A18               	subwfb	___aomod@dividend+7,f,c
  9740  003E66                     l4100:
  9741  003E66  90D8               	bcf	status,0,c
  9742  003E68  3220               	rrcf	___aomod@divisor+7,f,c
  9743  003E6A  321F               	rrcf	___aomod@divisor+6,f,c
  9744  003E6C  321E               	rrcf	___aomod@divisor+5,f,c
  9745  003E6E  321D               	rrcf	___aomod@divisor+4,f,c
  9746  003E70  321C               	rrcf	___aomod@divisor+3,f,c
  9747  003E72  321B               	rrcf	___aomod@divisor+2,f,c
  9748  003E74  321A               	rrcf	___aomod@divisor+1,f,c
  9749  003E76  3219               	rrcf	___aomod@divisor,f,c
  9750  003E78  2E21               	decfsz	___aomod@counter,f,c
  9751  003E7A  D7D3               	goto	u4770
  9752  003E7C                     l4104:
  9753  003E7C  5022               	movf	___aomod@sign,w,c
  9754  003E7E  B4D8               	btfsc	status,2,c
  9755  003E80  D010               	goto	l4108
  9756  003E82  1E18               	comf	___aomod@dividend+7,f,c
  9757  003E84  1E17               	comf	___aomod@dividend+6,f,c
  9758  003E86  1E16               	comf	___aomod@dividend+5,f,c
  9759  003E88  1E15               	comf	___aomod@dividend+4,f,c
  9760  003E8A  1E14               	comf	___aomod@dividend+3,f,c
  9761  003E8C  1E13               	comf	___aomod@dividend+2,f,c
  9762  003E8E  1E12               	comf	___aomod@dividend+1,f,c
  9763  003E90  6C11               	negf	___aomod@dividend,c
  9764  003E92  0E00               	movlw	0
  9765  003E94  2212               	addwfc	___aomod@dividend+1,f,c
  9766  003E96  2213               	addwfc	___aomod@dividend+2,f,c
  9767  003E98  2214               	addwfc	___aomod@dividend+3,f,c
  9768  003E9A  2215               	addwfc	___aomod@dividend+4,f,c
  9769  003E9C  2216               	addwfc	___aomod@dividend+5,f,c
  9770  003E9E  2217               	addwfc	___aomod@dividend+6,f,c
  9771  003EA0  2218               	addwfc	___aomod@dividend+7,f,c
  9772  003EA2                     l4108:
  9773  003EA2  C011  F011         	movff	___aomod@dividend,?___aomod
  9774  003EA6  C012  F012         	movff	___aomod@dividend+1,?___aomod+1
  9775  003EAA  C013  F013         	movff	___aomod@dividend+2,?___aomod+2
  9776  003EAE  C014  F014         	movff	___aomod@dividend+3,?___aomod+3
  9777  003EB2  C015  F015         	movff	___aomod@dividend+4,?___aomod+4
  9778  003EB6  C016  F016         	movff	___aomod@dividend+5,?___aomod+5
  9779  003EBA  C017  F017         	movff	___aomod@dividend+6,?___aomod+6
  9780  003EBE  C018  F018         	movff	___aomod@dividend+7,?___aomod+7
  9781  003EC2  0012               	return		;funcret
  9782  003EC4                     __end_of___aomod:
  9783                           	opt callstack 0
  9784                           
  9785 ;; *************** function ___aodiv *****************
  9786 ;; Defined at:
  9787 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  9788 ;; Parameters:    Size  Location     Type
  9789 ;;  dividend        8   16[COMRAM] long long 
  9790 ;;  divisor         8   24[COMRAM] long long 
  9791 ;; Auto vars:     Size  Location     Type
  9792 ;;  quotient        8   34[COMRAM] long long 
  9793 ;;  sign            1   33[COMRAM] unsigned char 
  9794 ;;  counter         1   32[COMRAM] unsigned char 
  9795 ;; Return value:  Size  Location     Type
  9796 ;;                  8   16[COMRAM] long long 
  9797 ;; Registers used:
  9798 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9799 ;; Tracked objects:
  9800 ;;		On entry : 0/0
  9801 ;;		On exit  : 0/0
  9802 ;;		Unchanged: 0/0
  9803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9804 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9805 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9807 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9808 ;;Total ram usage:       26 bytes
  9809 ;; Hardware stack levels used:    1
  9810 ;; Hardware stack levels required when called:    2
  9811 ;; This function calls:
  9812 ;;		Nothing
  9813 ;; This function is called by:
  9814 ;;		_dtoa
  9815 ;; This function uses a non-reentrant model
  9816 ;;
  9817                           
  9818                           	psect	text35
  9819  0039D8                     __ptext35:
  9820                           	opt callstack 0
  9821  0039D8                     ___aodiv:
  9822                           	opt callstack 24
  9823                           
  9824                           ;incstack = 0
  9825  0039D8  0E00               	movlw	0
  9826  0039DA  6E22               	movwf	___aodiv@sign,c
  9827  0039DC  AE20               	btfss	___aodiv@divisor+7,7,c
  9828  0039DE  D012               	goto	l4040
  9829  0039E0  1E20               	comf	___aodiv@divisor+7,f,c
  9830  0039E2  1E1F               	comf	___aodiv@divisor+6,f,c
  9831  0039E4  1E1E               	comf	___aodiv@divisor+5,f,c
  9832  0039E6  1E1D               	comf	___aodiv@divisor+4,f,c
  9833  0039E8  1E1C               	comf	___aodiv@divisor+3,f,c
  9834  0039EA  1E1B               	comf	___aodiv@divisor+2,f,c
  9835  0039EC  1E1A               	comf	___aodiv@divisor+1,f,c
  9836  0039EE  6C19               	negf	___aodiv@divisor,c
  9837  0039F0  0E00               	movlw	0
  9838  0039F2  221A               	addwfc	___aodiv@divisor+1,f,c
  9839  0039F4  221B               	addwfc	___aodiv@divisor+2,f,c
  9840  0039F6  221C               	addwfc	___aodiv@divisor+3,f,c
  9841  0039F8  221D               	addwfc	___aodiv@divisor+4,f,c
  9842  0039FA  221E               	addwfc	___aodiv@divisor+5,f,c
  9843  0039FC  221F               	addwfc	___aodiv@divisor+6,f,c
  9844  0039FE  2220               	addwfc	___aodiv@divisor+7,f,c
  9845  003A00  0E01               	movlw	1
  9846  003A02  6E22               	movwf	___aodiv@sign,c
  9847  003A04                     l4040:
  9848  003A04  AE18               	btfss	___aodiv@dividend+7,7,c
  9849  003A06  D012               	goto	l4046
  9850  003A08  1E18               	comf	___aodiv@dividend+7,f,c
  9851  003A0A  1E17               	comf	___aodiv@dividend+6,f,c
  9852  003A0C  1E16               	comf	___aodiv@dividend+5,f,c
  9853  003A0E  1E15               	comf	___aodiv@dividend+4,f,c
  9854  003A10  1E14               	comf	___aodiv@dividend+3,f,c
  9855  003A12  1E13               	comf	___aodiv@dividend+2,f,c
  9856  003A14  1E12               	comf	___aodiv@dividend+1,f,c
  9857  003A16  6C11               	negf	___aodiv@dividend,c
  9858  003A18  0E00               	movlw	0
  9859  003A1A  2212               	addwfc	___aodiv@dividend+1,f,c
  9860  003A1C  2213               	addwfc	___aodiv@dividend+2,f,c
  9861  003A1E  2214               	addwfc	___aodiv@dividend+3,f,c
  9862  003A20  2215               	addwfc	___aodiv@dividend+4,f,c
  9863  003A22  2216               	addwfc	___aodiv@dividend+5,f,c
  9864  003A24  2217               	addwfc	___aodiv@dividend+6,f,c
  9865  003A26  2218               	addwfc	___aodiv@dividend+7,f,c
  9866  003A28  0E01               	movlw	1
  9867  003A2A  1A22               	xorwf	___aodiv@sign,f,c
  9868  003A2C                     l4046:
  9869  003A2C  EE20  F023         	lfsr	2,___aodiv@quotient
  9870  003A30  0E07               	movlw	7
  9871  003A32                     u4691:
  9872  003A32  6ADE               	clrf	postinc2,c
  9873  003A34  06E8               	decf	wreg,f,c
  9874  003A36  E2FD               	bc	u4691
  9875  003A38  5019               	movf	___aodiv@divisor,w,c
  9876  003A3A  101A               	iorwf	___aodiv@divisor+1,w,c
  9877  003A3C  101B               	iorwf	___aodiv@divisor+2,w,c
  9878  003A3E  101C               	iorwf	___aodiv@divisor+3,w,c
  9879  003A40  101D               	iorwf	___aodiv@divisor+4,w,c
  9880  003A42  101E               	iorwf	___aodiv@divisor+5,w,c
  9881  003A44  101F               	iorwf	___aodiv@divisor+6,w,c
  9882  003A46  1020               	iorwf	___aodiv@divisor+7,w,c
  9883  003A48  B4D8               	btfsc	status,2,c
  9884  003A4A  D046               	goto	l4068
  9885  003A4C  0E01               	movlw	1
  9886  003A4E  6E21               	movwf	___aodiv@counter,c
  9887  003A50  D00A               	goto	l4054
  9888  003A52                     l4052:
  9889  003A52  90D8               	bcf	status,0,c
  9890  003A54  3619               	rlcf	___aodiv@divisor,f,c
  9891  003A56  361A               	rlcf	___aodiv@divisor+1,f,c
  9892  003A58  361B               	rlcf	___aodiv@divisor+2,f,c
  9893  003A5A  361C               	rlcf	___aodiv@divisor+3,f,c
  9894  003A5C  361D               	rlcf	___aodiv@divisor+4,f,c
  9895  003A5E  361E               	rlcf	___aodiv@divisor+5,f,c
  9896  003A60  361F               	rlcf	___aodiv@divisor+6,f,c
  9897  003A62  3620               	rlcf	___aodiv@divisor+7,f,c
  9898  003A64  2A21               	incf	___aodiv@counter,f,c
  9899  003A66                     l4054:
  9900  003A66  AE20               	btfss	___aodiv@divisor+7,7,c
  9901  003A68  D7F4               	goto	l4052
  9902  003A6A                     u4710:
  9903  003A6A  90D8               	bcf	status,0,c
  9904  003A6C  3623               	rlcf	___aodiv@quotient,f,c
  9905  003A6E  3624               	rlcf	___aodiv@quotient+1,f,c
  9906  003A70  3625               	rlcf	___aodiv@quotient+2,f,c
  9907  003A72  3626               	rlcf	___aodiv@quotient+3,f,c
  9908  003A74  3627               	rlcf	___aodiv@quotient+4,f,c
  9909  003A76  3628               	rlcf	___aodiv@quotient+5,f,c
  9910  003A78  3629               	rlcf	___aodiv@quotient+6,f,c
  9911  003A7A  362A               	rlcf	___aodiv@quotient+7,f,c
  9912  003A7C  5019               	movf	___aodiv@divisor,w,c
  9913  003A7E  5C11               	subwf	___aodiv@dividend,w,c
  9914  003A80  501A               	movf	___aodiv@divisor+1,w,c
  9915  003A82  5812               	subwfb	___aodiv@dividend+1,w,c
  9916  003A84  501B               	movf	___aodiv@divisor+2,w,c
  9917  003A86  5813               	subwfb	___aodiv@dividend+2,w,c
  9918  003A88  501C               	movf	___aodiv@divisor+3,w,c
  9919  003A8A  5814               	subwfb	___aodiv@dividend+3,w,c
  9920  003A8C  501D               	movf	___aodiv@divisor+4,w,c
  9921  003A8E  5815               	subwfb	___aodiv@dividend+4,w,c
  9922  003A90  501E               	movf	___aodiv@divisor+5,w,c
  9923  003A92  5816               	subwfb	___aodiv@dividend+5,w,c
  9924  003A94  501F               	movf	___aodiv@divisor+6,w,c
  9925  003A96  5817               	subwfb	___aodiv@dividend+6,w,c
  9926  003A98  5020               	movf	___aodiv@divisor+7,w,c
  9927  003A9A  5818               	subwfb	___aodiv@dividend+7,w,c
  9928  003A9C  A0D8               	btfss	status,0,c
  9929  003A9E  D011               	goto	l4064
  9930  003AA0  5019               	movf	___aodiv@divisor,w,c
  9931  003AA2  5E11               	subwf	___aodiv@dividend,f,c
  9932  003AA4  501A               	movf	___aodiv@divisor+1,w,c
  9933  003AA6  5A12               	subwfb	___aodiv@dividend+1,f,c
  9934  003AA8  501B               	movf	___aodiv@divisor+2,w,c
  9935  003AAA  5A13               	subwfb	___aodiv@dividend+2,f,c
  9936  003AAC  501C               	movf	___aodiv@divisor+3,w,c
  9937  003AAE  5A14               	subwfb	___aodiv@dividend+3,f,c
  9938  003AB0  501D               	movf	___aodiv@divisor+4,w,c
  9939  003AB2  5A15               	subwfb	___aodiv@dividend+4,f,c
  9940  003AB4  501E               	movf	___aodiv@divisor+5,w,c
  9941  003AB6  5A16               	subwfb	___aodiv@dividend+5,f,c
  9942  003AB8  501F               	movf	___aodiv@divisor+6,w,c
  9943  003ABA  5A17               	subwfb	___aodiv@dividend+6,f,c
  9944  003ABC  5020               	movf	___aodiv@divisor+7,w,c
  9945  003ABE  5A18               	subwfb	___aodiv@dividend+7,f,c
  9946  003AC0  8023               	bsf	___aodiv@quotient,0,c
  9947  003AC2                     l4064:
  9948  003AC2  90D8               	bcf	status,0,c
  9949  003AC4  3220               	rrcf	___aodiv@divisor+7,f,c
  9950  003AC6  321F               	rrcf	___aodiv@divisor+6,f,c
  9951  003AC8  321E               	rrcf	___aodiv@divisor+5,f,c
  9952  003ACA  321D               	rrcf	___aodiv@divisor+4,f,c
  9953  003ACC  321C               	rrcf	___aodiv@divisor+3,f,c
  9954  003ACE  321B               	rrcf	___aodiv@divisor+2,f,c
  9955  003AD0  321A               	rrcf	___aodiv@divisor+1,f,c
  9956  003AD2  3219               	rrcf	___aodiv@divisor,f,c
  9957  003AD4  2E21               	decfsz	___aodiv@counter,f,c
  9958  003AD6  D7C9               	goto	u4710
  9959  003AD8                     l4068:
  9960  003AD8  5022               	movf	___aodiv@sign,w,c
  9961  003ADA  B4D8               	btfsc	status,2,c
  9962  003ADC  D010               	goto	l4072
  9963  003ADE  1E2A               	comf	___aodiv@quotient+7,f,c
  9964  003AE0  1E29               	comf	___aodiv@quotient+6,f,c
  9965  003AE2  1E28               	comf	___aodiv@quotient+5,f,c
  9966  003AE4  1E27               	comf	___aodiv@quotient+4,f,c
  9967  003AE6  1E26               	comf	___aodiv@quotient+3,f,c
  9968  003AE8  1E25               	comf	___aodiv@quotient+2,f,c
  9969  003AEA  1E24               	comf	___aodiv@quotient+1,f,c
  9970  003AEC  6C23               	negf	___aodiv@quotient,c
  9971  003AEE  0E00               	movlw	0
  9972  003AF0  2224               	addwfc	___aodiv@quotient+1,f,c
  9973  003AF2  2225               	addwfc	___aodiv@quotient+2,f,c
  9974  003AF4  2226               	addwfc	___aodiv@quotient+3,f,c
  9975  003AF6  2227               	addwfc	___aodiv@quotient+4,f,c
  9976  003AF8  2228               	addwfc	___aodiv@quotient+5,f,c
  9977  003AFA  2229               	addwfc	___aodiv@quotient+6,f,c
  9978  003AFC  222A               	addwfc	___aodiv@quotient+7,f,c
  9979  003AFE                     l4072:
  9980  003AFE  C023  F011         	movff	___aodiv@quotient,?___aodiv
  9981  003B02  C024  F012         	movff	___aodiv@quotient+1,?___aodiv+1
  9982  003B06  C025  F013         	movff	___aodiv@quotient+2,?___aodiv+2
  9983  003B0A  C026  F014         	movff	___aodiv@quotient+3,?___aodiv+3
  9984  003B0E  C027  F015         	movff	___aodiv@quotient+4,?___aodiv+4
  9985  003B12  C028  F016         	movff	___aodiv@quotient+5,?___aodiv+5
  9986  003B16  C029  F017         	movff	___aodiv@quotient+6,?___aodiv+6
  9987  003B1A  C02A  F018         	movff	___aodiv@quotient+7,?___aodiv+7
  9988  003B1E  0012               	return		;funcret
  9989  003B20                     __end_of___aodiv:
  9990                           	opt callstack 0
  9991                           
  9992 ;; *************** function _atoi *****************
  9993 ;; Defined at:
  9994 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  9995 ;; Parameters:    Size  Location     Type
  9996 ;;  s               2   23[COMRAM] PTR const unsigned char 
  9997 ;;		 -> STR_12(14), STR_11(14), STR_10(15), STR_9(15), 
  9998 ;;		 -> STR_8(10), STR_7(11), STR_6(10), STR_5(16), 
  9999 ;;		 -> STR_4(9), STR_3(10), STR_2(15), STR_1(15), 
 10000 ;; Auto vars:     Size  Location     Type
 10001 ;;  n               2   36[COMRAM] int 
 10002 ;;  neg             2   29[COMRAM] int 
 10003 ;; Return value:  Size  Location     Type
 10004 ;;                  2   23[COMRAM] int 
 10005 ;; Registers used:
 10006 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10007 ;; Tracked objects:
 10008 ;;		On entry : 0/0
 10009 ;;		On exit  : 0/0
 10010 ;;		Unchanged: 0/0
 10011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10012 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10013 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10014 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10015 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10016 ;;Total ram usage:       15 bytes
 10017 ;; Hardware stack levels used:    1
 10018 ;; Hardware stack levels required when called:    3
 10019 ;; This function calls:
 10020 ;;		___wmul
 10021 ;;		_isdigit
 10022 ;;		_isspace
 10023 ;; This function is called by:
 10024 ;;		_vfpfcnvrt
 10025 ;; This function uses a non-reentrant model
 10026 ;;
 10027                           
 10028                           	psect	text36
 10029  003B20                     __ptext36:
 10030                           	opt callstack 0
 10031  003B20                     _atoi:
 10032                           	opt callstack 24
 10033                           
 10034                           ;incstack = 0
 10035  003B20  0E00               	movlw	0
 10036  003B22  6E26               	movwf	atoi@n+1,c
 10037  003B24  0E00               	movlw	0
 10038  003B26  6E25               	movwf	atoi@n,c
 10039  003B28  0E00               	movlw	0
 10040  003B2A  6E1F               	movwf	atoi@neg+1,c
 10041  003B2C  0E00               	movlw	0
 10042  003B2E  6E1E               	movwf	atoi@neg,c
 10043  003B30  D002               	goto	l4998
 10044  003B32                     l4996:
 10045  003B32  4A18               	infsnz	atoi@s,f,c
 10046  003B34  2A19               	incf	atoi@s+1,f,c
 10047  003B36                     l4998:
 10048  003B36  0E01               	movlw	1
 10049  003B38  6E24               	movwf	_atoi$1193,c
 10050  003B3A  C018  FFF6         	movff	atoi@s,tblptrl
 10051  003B3E  C019  FFF7         	movff	atoi@s+1,tblptrh
 10052  003B42                     	if	0	;tblptru may be non-zero
 10053  003B42                     	endif
 10054  003B42                     	if	0	;tblptru may be non-zero
 10055  003B42                     	endif
 10056  003B42  0008               	tblrd		*
 10057  003B44  50F5               	movf	tablat,w,c
 10058  003B46  0A20               	xorlw	32
 10059  003B48  B4D8               	btfsc	status,2,c
 10060  003B4A  D018               	goto	l5006
 10061  003B4C  0EF7               	movlw	247
 10062  003B4E  6E1A               	movwf	??_atoi& (0+255),c
 10063  003B50  0EFF               	movlw	255
 10064  003B52  6E1B               	movwf	(??_atoi+1)& (0+255),c
 10065  003B54  C018  FFF6         	movff	atoi@s,tblptrl
 10066  003B58  C019  FFF7         	movff	atoi@s+1,tblptrh
 10067  003B5C                     	if	0	;tblptru may be non-zero
 10068  003B5C                     	endif
 10069  003B5C                     	if	0	;tblptru may be non-zero
 10070  003B5C                     	endif
 10071  003B5C  0008               	tblrd		*
 10072  003B5E  50F5               	movf	tablat,w,c
 10073  003B60  6E1C               	movwf	(??_atoi+2)& (0+255),c
 10074  003B62  6A1D               	clrf	(??_atoi+3)& (0+255),c
 10075  003B64  501A               	movf	??_atoi,w,c
 10076  003B66  261C               	addwf	??_atoi+2,f,c
 10077  003B68  501B               	movf	??_atoi+1,w,c
 10078  003B6A  221D               	addwfc	??_atoi+3,f,c
 10079  003B6C  501D               	movf	??_atoi+3,w,c
 10080  003B6E  E104               	bnz	u6370
 10081  003B70  0E05               	movlw	5
 10082  003B72  5C1C               	subwf	??_atoi+2,w,c
 10083  003B74  A0D8               	btfss	status,0,c
 10084  003B76  D002               	goto	l5006
 10085  003B78                     u6370:
 10086  003B78  0E00               	movlw	0
 10087  003B7A  6E24               	movwf	_atoi$1193,c
 10088  003B7C                     l5006:
 10089  003B7C  C024  F020         	movff	_atoi$1193,_atoi$1192
 10090  003B80  6A21               	clrf	_atoi$1192+1,c
 10091  003B82  5020               	movf	_atoi$1192,w,c
 10092  003B84  1021               	iorwf	_atoi$1192+1,w,c
 10093  003B86  B4D8               	btfsc	status,2,c
 10094  003B88  D008               	goto	l5016
 10095  003B8A  D7D3               	goto	l4996
 10096  003B8C                     l5012:
 10097  003B8C  0E00               	movlw	0
 10098  003B8E  6E1F               	movwf	atoi@neg+1,c
 10099  003B90  0E01               	movlw	1
 10100  003B92  6E1E               	movwf	atoi@neg,c
 10101  003B94                     l5014:
 10102  003B94  4A18               	infsnz	atoi@s,f,c
 10103  003B96  2A19               	incf	atoi@s+1,f,c
 10104  003B98  D02E               	goto	l5022
 10105  003B9A                     l5016:
 10106  003B9A  C018  FFF6         	movff	atoi@s,tblptrl
 10107  003B9E  C019  FFF7         	movff	atoi@s+1,tblptrh
 10108  003BA2                     	if	0	;tblptru may be non-zero
 10109  003BA2                     	endif
 10110  003BA2                     	if	0	;tblptru may be non-zero
 10111  003BA2                     	endif
 10112  003BA2  0008               	tblrd		*
 10113  003BA4  50F5               	movf	tablat,w,c
 10114  003BA6  6E1A               	movwf	??_atoi& (0+255),c
 10115  003BA8  6A1B               	clrf	(??_atoi+1)& (0+255),c
 10116                           
 10117                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10118                           ; Switch size 1, requested type "simple"
 10119                           ; Number of cases is 1, Range of values is 0 to 0
 10120                           ; switch strategies available:
 10121                           ; Name         Instructions Cycles
 10122                           ; simple_byte            4     3 (average)
 10123                           ;	Chosen strategy is simple_byte
 10124  003BAA  501B               	movf	??_atoi+1,w,c
 10125  003BAC  0A00               	xorlw	0	; case 0
 10126  003BAE  A4D8               	btfss	status,2,c
 10127  003BB0  D022               	goto	l5022
 10128                           
 10129                           ; Switch size 1, requested type "simple"
 10130                           ; Number of cases is 2, Range of values is 43 to 45
 10131                           ; switch strategies available:
 10132                           ; Name         Instructions Cycles
 10133                           ; simple_byte            7     4 (average)
 10134                           ;	Chosen strategy is simple_byte
 10135  003BB2  501A               	movf	??_atoi,w,c
 10136  003BB4  0A2B               	xorlw	43	; case 43
 10137  003BB6  B4D8               	btfsc	status,2,c
 10138  003BB8  D7ED               	goto	l5014
 10139  003BBA  0A06               	xorlw	6	; case 45
 10140  003BBC  B4D8               	btfsc	status,2,c
 10141  003BBE  D7E6               	goto	l5012
 10142  003BC0  D01A               	goto	l5022
 10143  003BC2                     l5018:
 10144  003BC2  C025  F011         	movff	atoi@n,___wmul@multiplier
 10145  003BC6  C026  F012         	movff	atoi@n+1,___wmul@multiplier+1
 10146  003BCA  0E00               	movlw	0
 10147  003BCC  6E14               	movwf	___wmul@multiplicand+1,c
 10148  003BCE  0E0A               	movlw	10
 10149  003BD0  6E13               	movwf	___wmul@multiplicand,c
 10150  003BD2  EC24  F026         	call	___wmul	;wreg free
 10151  003BD6  C018  FFF6         	movff	atoi@s,tblptrl
 10152  003BDA  C019  FFF7         	movff	atoi@s+1,tblptrh
 10153  003BDE                     	if	0	;tblptru may be non-zero
 10154  003BDE                     	endif
 10155  003BDE                     	if	0	;tblptru may be non-zero
 10156  003BDE                     	endif
 10157  003BDE  0008               	tblrd		*
 10158  003BE0  50F5               	movf	tablat,w,c
 10159  003BE2  5E11               	subwf	?___wmul,f,c
 10160  003BE4  0E00               	movlw	0
 10161  003BE6  5A12               	subwfb	?___wmul+1,f,c
 10162  003BE8  0E30               	movlw	48
 10163  003BEA  2411               	addwf	?___wmul,w,c
 10164  003BEC  6E25               	movwf	atoi@n,c
 10165  003BEE  0E00               	movlw	0
 10166  003BF0  2012               	addwfc	?___wmul+1,w,c
 10167  003BF2  6E26               	movwf	atoi@n+1,c
 10168  003BF4  D7CF               	goto	l5014
 10169  003BF6                     l5022:
 10170  003BF6  0ED0               	movlw	208
 10171  003BF8  6E1A               	movwf	??_atoi& (0+255),c
 10172  003BFA  0EFF               	movlw	255
 10173  003BFC  6E1B               	movwf	(??_atoi+1)& (0+255),c
 10174  003BFE  C018  FFF6         	movff	atoi@s,tblptrl
 10175  003C02  C019  FFF7         	movff	atoi@s+1,tblptrh
 10176  003C06                     	if	0	;tblptru may be non-zero
 10177  003C06                     	endif
 10178  003C06                     	if	0	;tblptru may be non-zero
 10179  003C06                     	endif
 10180  003C06  0008               	tblrd		*
 10181  003C08  50F5               	movf	tablat,w,c
 10182  003C0A  6E1C               	movwf	(??_atoi+2)& (0+255),c
 10183  003C0C  6A1D               	clrf	(??_atoi+3)& (0+255),c
 10184  003C0E  501A               	movf	??_atoi,w,c
 10185  003C10  261C               	addwf	??_atoi+2,f,c
 10186  003C12  501B               	movf	??_atoi+1,w,c
 10187  003C14  221D               	addwfc	??_atoi+3,f,c
 10188  003C16  501D               	movf	??_atoi+3,w,c
 10189  003C18  E106               	bnz	u6390
 10190  003C1A  0E0A               	movlw	10
 10191  003C1C  5C1C               	subwf	??_atoi+2,w,c
 10192  003C1E  B0D8               	btfsc	status,0,c
 10193  003C20  D002               	goto	u6390
 10194  003C22  0E01               	movlw	1
 10195  003C24  D001               	goto	u6400
 10196  003C26                     u6390:
 10197  003C26  0E00               	movlw	0
 10198  003C28                     u6400:
 10199  003C28  6E22               	movwf	_atoi$1194,c
 10200  003C2A  6A23               	clrf	_atoi$1194+1,c
 10201  003C2C  5022               	movf	_atoi$1194,w,c
 10202  003C2E  1023               	iorwf	_atoi$1194+1,w,c
 10203  003C30  A4D8               	btfss	status,2,c
 10204  003C32  D7C7               	goto	l5018
 10205  003C34  501E               	movf	atoi@neg,w,c
 10206  003C36  101F               	iorwf	atoi@neg+1,w,c
 10207  003C38  A4D8               	btfss	status,2,c
 10208  003C3A  D00D               	goto	l1184
 10209  003C3C  C025  F01A         	movff	atoi@n,??_atoi
 10210  003C40  C026  F01B         	movff	atoi@n+1,??_atoi+1
 10211  003C44  1E1A               	comf	??_atoi,f,c
 10212  003C46  1E1B               	comf	??_atoi+1,f,c
 10213  003C48  4A1A               	infsnz	??_atoi,f,c
 10214  003C4A  2A1B               	incf	??_atoi+1,f,c
 10215  003C4C  C01A  F018         	movff	??_atoi,?_atoi
 10216  003C50  C01B  F019         	movff	??_atoi+1,?_atoi+1
 10217  003C54  0012               	return	
 10218  003C56                     l1184:
 10219  003C56  C025  F018         	movff	atoi@n,?_atoi
 10220  003C5A  C026  F019         	movff	atoi@n+1,?_atoi+1
 10221  003C5E  0012               	return		;funcret
 10222  003C60                     __end_of_atoi:
 10223                           	opt callstack 0
 10224                           
 10225 ;; *************** function _isspace *****************
 10226 ;; Defined at:
 10227 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
 10228 ;; Parameters:    Size  Location     Type
 10229 ;;  c               2   16[COMRAM] int 
 10230 ;; Auto vars:     Size  Location     Type
 10231 ;;		None
 10232 ;; Return value:  Size  Location     Type
 10233 ;;                  2   16[COMRAM] int 
 10234 ;; Registers used:
 10235 ;;		wreg, status,2, status,0
 10236 ;; Tracked objects:
 10237 ;;		On entry : 0/0
 10238 ;;		On exit  : 0/0
 10239 ;;		Unchanged: 0/0
 10240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10243 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10244 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10245 ;;Total ram usage:        7 bytes
 10246 ;; Hardware stack levels used:    1
 10247 ;; Hardware stack levels required when called:    2
 10248 ;; This function calls:
 10249 ;;		Nothing
 10250 ;; This function is called by:
 10251 ;;		_atoi
 10252 ;; This function uses a non-reentrant model
 10253 ;;
 10254                           
 10255                           	psect	text37
 10256  004A5C                     __ptext37:
 10257                           	opt callstack 0
 10258  004A5C                     _isspace:
 10259                           	opt callstack 24
 10260                           
 10261                           ;incstack = 0
 10262  004A5C  0E01               	movlw	1
 10263  004A5E  6E17               	movwf	_isspace$1232,c
 10264  004A60  0E20               	movlw	32
 10265  004A62  1811               	xorwf	isspace@c,w,c
 10266  004A64  1012               	iorwf	isspace@c+1,w,c
 10267  004A66  B4D8               	btfsc	status,2,c
 10268  004A68  D014               	goto	l4564
 10269  004A6A  0EF7               	movlw	247
 10270  004A6C  6E13               	movwf	??_isspace& (0+255),c
 10271  004A6E  0EFF               	movlw	255
 10272  004A70  6E14               	movwf	(??_isspace+1)& (0+255),c
 10273  004A72  C011  F015         	movff	isspace@c,??_isspace+2
 10274  004A76  C012  F016         	movff	isspace@c+1,??_isspace+3
 10275  004A7A  5013               	movf	??_isspace,w,c
 10276  004A7C  2615               	addwf	??_isspace+2,f,c
 10277  004A7E  5014               	movf	??_isspace+1,w,c
 10278  004A80  2216               	addwfc	??_isspace+3,f,c
 10279  004A82  5016               	movf	??_isspace+3,w,c
 10280  004A84  E104               	bnz	u5510
 10281  004A86  0E05               	movlw	5
 10282  004A88  5C15               	subwf	??_isspace+2,w,c
 10283  004A8A  A0D8               	btfss	status,0,c
 10284  004A8C  D002               	goto	l4564
 10285  004A8E                     u5510:
 10286  004A8E  0E00               	movlw	0
 10287  004A90  6E17               	movwf	_isspace$1232,c
 10288  004A92                     l4564:
 10289  004A92  C017  F011         	movff	_isspace$1232,?_isspace
 10290  004A96  6A12               	clrf	?_isspace+1,c
 10291  004A98  0012               	return		;funcret
 10292  004A9A                     __end_of_isspace:
 10293                           	opt callstack 0
 10294                           
 10295 ;; *************** function _isdigit *****************
 10296 ;; Defined at:
 10297 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
 10298 ;; Parameters:    Size  Location     Type
 10299 ;;  c               2   16[COMRAM] int 
 10300 ;; Auto vars:     Size  Location     Type
 10301 ;;		None
 10302 ;; Return value:  Size  Location     Type
 10303 ;;                  2   16[COMRAM] int 
 10304 ;; Registers used:
 10305 ;;		wreg, status,2, status,0
 10306 ;; Tracked objects:
 10307 ;;		On entry : 0/0
 10308 ;;		On exit  : 0/0
 10309 ;;		Unchanged: 0/0
 10310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10311 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10313 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10314 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10315 ;;Total ram usage:        6 bytes
 10316 ;; Hardware stack levels used:    1
 10317 ;; Hardware stack levels required when called:    2
 10318 ;; This function calls:
 10319 ;;		Nothing
 10320 ;; This function is called by:
 10321 ;;		_vfpfcnvrt
 10322 ;;		_atoi
 10323 ;; This function uses a non-reentrant model
 10324 ;;
 10325                           
 10326                           	psect	text38
 10327  004B98                     __ptext38:
 10328                           	opt callstack 0
 10329  004B98                     _isdigit:
 10330                           	opt callstack 25
 10331                           
 10332                           ;incstack = 0
 10333  004B98  0ED0               	movlw	208
 10334  004B9A  6E13               	movwf	??_isdigit& (0+255),c
 10335  004B9C  0EFF               	movlw	255
 10336  004B9E  6E14               	movwf	(??_isdigit+1)& (0+255),c
 10337  004BA0  C011  F015         	movff	isdigit@c,??_isdigit+2
 10338  004BA4  C012  F016         	movff	isdigit@c+1,??_isdigit+3
 10339  004BA8  5013               	movf	??_isdigit,w,c
 10340  004BAA  2615               	addwf	??_isdigit+2,f,c
 10341  004BAC  5014               	movf	??_isdigit+1,w,c
 10342  004BAE  2216               	addwfc	??_isdigit+3,f,c
 10343  004BB0  5016               	movf	??_isdigit+3,w,c
 10344  004BB2  E106               	bnz	u4650
 10345  004BB4  0E0A               	movlw	10
 10346  004BB6  5C15               	subwf	??_isdigit+2,w,c
 10347  004BB8  B0D8               	btfsc	status,0,c
 10348  004BBA  D002               	goto	u4650
 10349  004BBC  0E01               	movlw	1
 10350  004BBE  D001               	goto	u4660
 10351  004BC0                     u4650:
 10352  004BC0  0E00               	movlw	0
 10353  004BC2                     u4660:
 10354  004BC2  6E11               	movwf	?_isdigit,c
 10355  004BC4  6A12               	clrf	?_isdigit+1,c
 10356  004BC6  0012               	return		;funcret
 10357  004BC8                     __end_of_isdigit:
 10358                           	opt callstack 0
 10359                           
 10360 ;; *************** function ___wmul *****************
 10361 ;; Defined at:
 10362 ;;		line 15 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
 10363 ;; Parameters:    Size  Location     Type
 10364 ;;  multiplier      2   16[COMRAM] unsigned int 
 10365 ;;  multiplicand    2   18[COMRAM] unsigned int 
 10366 ;; Auto vars:     Size  Location     Type
 10367 ;;  product         2   20[COMRAM] unsigned int 
 10368 ;; Return value:  Size  Location     Type
 10369 ;;                  2   16[COMRAM] unsigned int 
 10370 ;; Registers used:
 10371 ;;		wreg, status,2, status,0, prodl, prodh
 10372 ;; Tracked objects:
 10373 ;;		On entry : 0/0
 10374 ;;		On exit  : 0/0
 10375 ;;		Unchanged: 0/0
 10376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10378 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10380 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10381 ;;Total ram usage:        6 bytes
 10382 ;; Hardware stack levels used:    1
 10383 ;; Hardware stack levels required when called:    2
 10384 ;; This function calls:
 10385 ;;		Nothing
 10386 ;; This function is called by:
 10387 ;;		_time_elapsed
 10388 ;;		_atoi
 10389 ;; This function uses a non-reentrant model
 10390 ;;
 10391                           
 10392                           	psect	text39
 10393  004C48                     __ptext39:
 10394                           	opt callstack 0
 10395  004C48                     ___wmul:
 10396                           	opt callstack 27
 10397                           
 10398                           ;incstack = 0
 10399  004C48  5011               	movf	___wmul@multiplier,w,c
 10400  004C4A  0213               	mulwf	___wmul@multiplicand,c
 10401  004C4C  CFF3 F015          	movff	prodl,___wmul@product
 10402  004C50  CFF4 F016          	movff	prodh,___wmul@product+1
 10403  004C54  5011               	movf	___wmul@multiplier,w,c
 10404  004C56  0214               	mulwf	___wmul@multiplicand+1,c
 10405  004C58  50F3               	movf	prodl,w,c
 10406  004C5A  2616               	addwf	___wmul@product+1,f,c
 10407  004C5C  5012               	movf	___wmul@multiplier+1,w,c
 10408  004C5E  0213               	mulwf	___wmul@multiplicand,c
 10409  004C60  50F3               	movf	prodl,w,c
 10410  004C62  2616               	addwf	___wmul@product+1,f,c
 10411  004C64  C015  F011         	movff	___wmul@product,?___wmul
 10412  004C68  C016  F012         	movff	___wmul@product+1,?___wmul+1
 10413  004C6C  0012               	return		;funcret
 10414  004C6E                     __end_of___wmul:
 10415                           	opt callstack 0
 10416                           
 10417 ;; *************** function _line_2 *****************
 10418 ;; Defined at:
 10419 ;;		line 53 in file "LCD_F.c"
 10420 ;; Parameters:    Size  Location     Type
 10421 ;;		None
 10422 ;; Auto vars:     Size  Location     Type
 10423 ;;		None
 10424 ;; Return value:  Size  Location     Type
 10425 ;;                  1    wreg      void 
 10426 ;; Registers used:
 10427 ;;		wreg, status,2, status,0, cstack
 10428 ;; Tracked objects:
 10429 ;;		On entry : 0/0
 10430 ;;		On exit  : 0/0
 10431 ;;		Unchanged: 0/0
 10432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10437 ;;Total ram usage:        0 bytes
 10438 ;; Hardware stack levels used:    1
 10439 ;; Hardware stack levels required when called:    4
 10440 ;; This function calls:
 10441 ;;		_lcd_Instructions
 10442 ;; This function is called by:
 10443 ;;		_main
 10444 ;; This function uses a non-reentrant model
 10445 ;;
 10446                           
 10447                           	psect	text40
 10448  004CE6                     __ptext40:
 10449                           	opt callstack 0
 10450  004CE6                     _line_2:
 10451                           	opt callstack 26
 10452                           
 10453                           ;LCD_F.c: 54:     lcd_Instructions(0x80 | 64);
 10454                           
 10455                           ;incstack = 0
 10456  004CE6  0EC0               	movlw	192
 10457  004CE8  EC68  F026         	call	_lcd_Instructions
 10458  004CEC  0012               	return		;funcret
 10459  004CEE                     __end_of_line_2:
 10460                           	opt callstack 0
 10461                           
 10462 ;; *************** function _initialize_LCD *****************
 10463 ;; Defined at:
 10464 ;;		line 75 in file "LCD_F.c"
 10465 ;; Parameters:    Size  Location     Type
 10466 ;;		None
 10467 ;; Auto vars:     Size  Location     Type
 10468 ;;		None
 10469 ;; Return value:  Size  Location     Type
 10470 ;;                  1    wreg      void 
 10471 ;; Registers used:
 10472 ;;		wreg, status,2, status,0, cstack
 10473 ;; Tracked objects:
 10474 ;;		On entry : 0/0
 10475 ;;		On exit  : 0/0
 10476 ;;		Unchanged: 0/0
 10477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10480 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10481 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10482 ;;Total ram usage:        1 bytes
 10483 ;; Hardware stack levels used:    1
 10484 ;; Hardware stack levels required when called:    4
 10485 ;; This function calls:
 10486 ;;		_lcd_Instructions
 10487 ;; This function is called by:
 10488 ;;		_main
 10489 ;; This function uses a non-reentrant model
 10490 ;;
 10491                           
 10492                           	psect	text41
 10493  0049D2                     __ptext41:
 10494                           	opt callstack 0
 10495  0049D2                     _initialize_LCD:
 10496                           	opt callstack 26
 10497                           
 10498                           ;LCD_F.c: 76:     _delay((unsigned long)((15)*(40000000/4000.0)));
 10499                           
 10500                           ;incstack = 0
 10501  0049D2  0EC3               	movlw	195
 10502  0049D4  6E14               	movwf	??_initialize_LCD& (0+255),c
 10503  0049D6  0ECD               	movlw	205
 10504  0049D8                     u7987:
 10505  0049D8  2EE8               	decfsz	wreg,f,c
 10506  0049DA  D7FE               	bra	u7987
 10507  0049DC  2E14               	decfsz	??_initialize_LCD& (0+255),f,c
 10508  0049DE  D7FC               	bra	u7987
 10509  0049E0  F000               	nop	
 10510                           
 10511                           ;LCD_F.c: 80:     lcd_Instructions(0b00110011);
 10512  0049E2  0E33               	movlw	51
 10513  0049E4  EC68  F026         	call	_lcd_Instructions
 10514                           
 10515                           ;LCD_F.c: 81:     lcd_Instructions(0b00110010);
 10516  0049E8  0E32               	movlw	50
 10517  0049EA  EC68  F026         	call	_lcd_Instructions
 10518                           
 10519                           ;LCD_F.c: 82:     lcd_Instructions(0b00101000);
 10520  0049EE  0E28               	movlw	40
 10521  0049F0  EC68  F026         	call	_lcd_Instructions
 10522                           
 10523                           ;LCD_F.c: 83:     lcd_Instructions(0b00001100);
 10524  0049F4  0E0C               	movlw	12
 10525  0049F6  EC68  F026         	call	_lcd_Instructions
 10526                           
 10527                           ;LCD_F.c: 84:     lcd_Instructions(0b00000110);
 10528  0049FA  0E06               	movlw	6
 10529  0049FC  EC68  F026         	call	_lcd_Instructions
 10530                           
 10531                           ;LCD_F.c: 85:     lcd_Instructions(0b00000001);
 10532  004A00  0E01               	movlw	1
 10533  004A02  EC68  F026         	call	_lcd_Instructions
 10534                           
 10535                           ;LCD_F.c: 86:     _delay((unsigned long)((15)*(40000000/4000.0)));
 10536  004A06  0EC3               	movlw	195
 10537  004A08  6E14               	movwf	??_initialize_LCD& (0+255),c
 10538  004A0A  0ECD               	movlw	205
 10539  004A0C                     u7997:
 10540  004A0C  2EE8               	decfsz	wreg,f,c
 10541  004A0E  D7FE               	bra	u7997
 10542  004A10  2E14               	decfsz	??_initialize_LCD& (0+255),f,c
 10543  004A12  D7FC               	bra	u7997
 10544  004A14  F000               	nop	
 10545  004A16  0012               	return		;funcret
 10546  004A18                     __end_of_initialize_LCD:
 10547                           	opt callstack 0
 10548                           
 10549 ;; *************** function _cursor_reset *****************
 10550 ;; Defined at:
 10551 ;;		line 68 in file "LCD_F.c"
 10552 ;; Parameters:    Size  Location     Type
 10553 ;;		None
 10554 ;; Auto vars:     Size  Location     Type
 10555 ;;		None
 10556 ;; Return value:  Size  Location     Type
 10557 ;;                  1    wreg      void 
 10558 ;; Registers used:
 10559 ;;		wreg, status,2, status,0, cstack
 10560 ;; Tracked objects:
 10561 ;;		On entry : 0/0
 10562 ;;		On exit  : 0/0
 10563 ;;		Unchanged: 0/0
 10564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10569 ;;Total ram usage:        0 bytes
 10570 ;; Hardware stack levels used:    1
 10571 ;; Hardware stack levels required when called:    4
 10572 ;; This function calls:
 10573 ;;		_lcd_Instructions
 10574 ;; This function is called by:
 10575 ;;		_main
 10576 ;; This function uses a non-reentrant model
 10577 ;;
 10578                           
 10579                           	psect	text42
 10580  004CEE                     __ptext42:
 10581                           	opt callstack 0
 10582  004CEE                     _cursor_reset:
 10583                           	opt callstack 26
 10584                           
 10585                           ;LCD_F.c: 69:     lcd_Instructions(0x80);
 10586                           
 10587                           ;incstack = 0
 10588  004CEE  0E80               	movlw	128
 10589  004CF0  EC68  F026         	call	_lcd_Instructions
 10590  004CF4  0012               	return		;funcret
 10591  004CF6                     __end_of_cursor_reset:
 10592                           	opt callstack 0
 10593                           
 10594 ;; *************** function _clear *****************
 10595 ;; Defined at:
 10596 ;;		line 60 in file "LCD_F.c"
 10597 ;; Parameters:    Size  Location     Type
 10598 ;;		None
 10599 ;; Auto vars:     Size  Location     Type
 10600 ;;		None
 10601 ;; Return value:  Size  Location     Type
 10602 ;;                  1    wreg      void 
 10603 ;; Registers used:
 10604 ;;		wreg, status,2, status,0, cstack
 10605 ;; Tracked objects:
 10606 ;;		On entry : 0/0
 10607 ;;		On exit  : 0/0
 10608 ;;		Unchanged: 0/0
 10609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10612 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10613 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10614 ;;Total ram usage:        1 bytes
 10615 ;; Hardware stack levels used:    1
 10616 ;; Hardware stack levels required when called:    4
 10617 ;; This function calls:
 10618 ;;		_lcd_Instructions
 10619 ;; This function is called by:
 10620 ;;		_main
 10621 ;; This function uses a non-reentrant model
 10622 ;;
 10623                           
 10624                           	psect	text43
 10625  004C92                     __ptext43:
 10626                           	opt callstack 0
 10627  004C92                     _clear:
 10628                           	opt callstack 26
 10629                           
 10630                           ;LCD_F.c: 61:     lcd_Instructions(0x01);
 10631                           
 10632                           ;incstack = 0
 10633  004C92  0E01               	movlw	1
 10634  004C94  EC68  F026         	call	_lcd_Instructions
 10635                           
 10636                           ;LCD_F.c: 62:  _delay((unsigned long)((5)*(40000000/4000.0)));
 10637  004C98  0E41               	movlw	65
 10638  004C9A  6E14               	movwf	??_clear& (0+255),c
 10639  004C9C  0EEE               	movlw	238
 10640  004C9E                     u8007:
 10641  004C9E  2EE8               	decfsz	wreg,f,c
 10642  004CA0  D7FE               	bra	u8007
 10643  004CA2  2E14               	decfsz	??_clear& (0+255),f,c
 10644  004CA4  D7FC               	bra	u8007
 10645  004CA6  D000               	nop2	
 10646  004CA8  0012               	return		;funcret
 10647  004CAA                     __end_of_clear:
 10648                           	opt callstack 0
 10649                           
 10650 ;; *************** function _lcd_Instructions *****************
 10651 ;; Defined at:
 10652 ;;		line 44 in file "LCD_F.c"
 10653 ;; Parameters:    Size  Location     Type
 10654 ;;  data            1    wreg     unsigned char 
 10655 ;; Auto vars:     Size  Location     Type
 10656 ;;  data            1   18[COMRAM] unsigned char 
 10657 ;; Return value:  Size  Location     Type
 10658 ;;                  1    wreg      void 
 10659 ;; Registers used:
 10660 ;;		wreg, status,2, status,0, cstack
 10661 ;; Tracked objects:
 10662 ;;		On entry : 0/0
 10663 ;;		On exit  : 0/0
 10664 ;;		Unchanged: 0/0
 10665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10667 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10669 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10670 ;;Total ram usage:        1 bytes
 10671 ;; Hardware stack levels used:    1
 10672 ;; Hardware stack levels required when called:    3
 10673 ;; This function calls:
 10674 ;;		_lcd_byte
 10675 ;; This function is called by:
 10676 ;;		_line_2
 10677 ;;		_clear
 10678 ;;		_cursor_reset
 10679 ;;		_initialize_LCD
 10680 ;; This function uses a non-reentrant model
 10681 ;;
 10682                           
 10683                           	psect	text44
 10684  004CD0                     __ptext44:
 10685                           	opt callstack 0
 10686  004CD0                     _lcd_Instructions:
 10687                           	opt callstack 26
 10688                           
 10689                           ;incstack = 0
 10690                           ;lcd_Instructions@data stored from wreg
 10691  004CD0  6E13               	movwf	lcd_Instructions@data,c
 10692                           
 10693                           ;LCD_F.c: 45:     LATDbits.LATD2 = 0;
 10694  004CD2  948C               	bcf	3980,2,c	;volatile
 10695                           
 10696                           ;LCD_F.c: 46:     lcd_byte(data);
 10697  004CD4  5013               	movf	lcd_Instructions@data,w,c
 10698  004CD6  EC26  F024         	call	_lcd_byte
 10699  004CDA  0012               	return		;funcret
 10700  004CDC                     __end_of_lcd_Instructions:
 10701                           	opt callstack 0
 10702                           
 10703 ;; *************** function _lcd_byte *****************
 10704 ;; Defined at:
 10705 ;;		line 16 in file "LCD_F.c"
 10706 ;; Parameters:    Size  Location     Type
 10707 ;;  data            1    wreg     unsigned char 
 10708 ;; Auto vars:     Size  Location     Type
 10709 ;;  data            1   17[COMRAM] unsigned char 
 10710 ;;  temp            1   16[COMRAM] unsigned char 
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      void 
 10713 ;; Registers used:
 10714 ;;		wreg, status,2, status,0
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10724 ;;Total ram usage:        2 bytes
 10725 ;; Hardware stack levels used:    1
 10726 ;; Hardware stack levels required when called:    2
 10727 ;; This function calls:
 10728 ;;		Nothing
 10729 ;; This function is called by:
 10730 ;;		_lcd_Instructions
 10731 ;;		_putch
 10732 ;; This function uses a non-reentrant model
 10733 ;;
 10734                           
 10735                           	psect	text45
 10736  00484C                     __ptext45:
 10737                           	opt callstack 0
 10738  00484C                     _lcd_byte:
 10739                           	opt callstack 20
 10740                           
 10741                           ;incstack = 0
 10742                           ;lcd_byte@data stored from wreg
 10743  00484C  6E12               	movwf	lcd_byte@data,c
 10744                           
 10745                           ;LCD_F.c: 18:     char temp = data & 0xF0;
 10746  00484E  5012               	movf	lcd_byte@data,w,c
 10747  004850  0BF0               	andlw	240
 10748  004852  6E11               	movwf	lcd_byte@temp,c
 10749                           
 10750                           ;LCD_F.c: 19:     LATD = LATD & 0x0F;
 10751  004854  508C               	movf	3980,w,c	;volatile
 10752  004856  0B0F               	andlw	15
 10753  004858  6E8C               	movwf	3980,c	;volatile
 10754                           
 10755                           ;LCD_F.c: 20:     LATD = temp | LATD;
 10756  00485A  5011               	movf	lcd_byte@temp,w,c
 10757  00485C  108C               	iorwf	3980,w,c	;volatile
 10758  00485E  6E8C               	movwf	3980,c	;volatile
 10759                           
 10760                           ;LCD_F.c: 23:     LATDbits.LATD3 = 0;
 10761  004860  968C               	bcf	3980,3,c	;volatile
 10762                           
 10763                           ;LCD_F.c: 24:     _delay((unsigned long)((25)*(40000000/4000000.0)));
 10764  004862  0E53               	movlw	83
 10765  004864                     u8017:
 10766  004864  2EE8               	decfsz	wreg,f,c
 10767  004866  D7FE               	bra	u8017
 10768  004868  F000               	nop	
 10769                           
 10770                           ;LCD_F.c: 25:     LATDbits.LATD3 = 1;
 10771  00486A  868C               	bsf	3980,3,c	;volatile
 10772                           
 10773                           ;LCD_F.c: 26:     _delay((unsigned long)((100)*(40000000/4000000.0)));
 10774  00486C  0EC8               	movlw	200
 10775  00486E                     u8027:
 10776  00486E  D000               	nop2	
 10777  004870  2EE8               	decfsz	wreg,f,c
 10778  004872  D7FD               	bra	u8027
 10779                           
 10780                           ;LCD_F.c: 29:     data = data << 4;
 10781  004874  3812               	swapf	lcd_byte@data,w,c
 10782  004876  0BF0               	andlw	240
 10783  004878  6E12               	movwf	lcd_byte@data,c
 10784                           
 10785                           ;LCD_F.c: 30:     temp = data & 0xF0;
 10786  00487A  5012               	movf	lcd_byte@data,w,c
 10787  00487C  0BF0               	andlw	240
 10788  00487E  6E11               	movwf	lcd_byte@temp,c
 10789                           
 10790                           ;LCD_F.c: 31:     LATD = LATD & 0x0F;
 10791  004880  508C               	movf	3980,w,c	;volatile
 10792  004882  0B0F               	andlw	15
 10793  004884  6E8C               	movwf	3980,c	;volatile
 10794                           
 10795                           ;LCD_F.c: 32:     LATD = temp | LATD;
 10796  004886  5011               	movf	lcd_byte@temp,w,c
 10797  004888  108C               	iorwf	3980,w,c	;volatile
 10798  00488A  6E8C               	movwf	3980,c	;volatile
 10799                           
 10800                           ;LCD_F.c: 35:     LATDbits.LATD3 = 0;
 10801  00488C  968C               	bcf	3980,3,c	;volatile
 10802                           
 10803                           ;LCD_F.c: 36:     _delay((unsigned long)((25)*(40000000/4000000.0)));
 10804  00488E  0E53               	movlw	83
 10805  004890                     u8037:
 10806  004890  2EE8               	decfsz	wreg,f,c
 10807  004892  D7FE               	bra	u8037
 10808  004894  F000               	nop	
 10809                           
 10810                           ;LCD_F.c: 37:     LATDbits.LATD3 = 1;
 10811  004896  868C               	bsf	3980,3,c	;volatile
 10812                           
 10813                           ;LCD_F.c: 38:     _delay((unsigned long)((100)*(40000000/4000000.0)));
 10814  004898  0EC8               	movlw	200
 10815  00489A                     u8047:
 10816  00489A  D000               	nop2	
 10817  00489C  2EE8               	decfsz	wreg,f,c
 10818  00489E  D7FD               	bra	u8047
 10819  0048A0  0012               	return		;funcret
 10820  0048A2                     __end_of_lcd_byte:
 10821                           	opt callstack 0
 10822                           
 10823 ;; *************** function ___xxtofl *****************
 10824 ;; Defined at:
 10825 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
 10826 ;; Parameters:    Size  Location     Type
 10827 ;;  sign            1    wreg     unsigned char 
 10828 ;;  val             4   16[COMRAM] long 
 10829 ;; Auto vars:     Size  Location     Type
 10830 ;;  sign            1   24[COMRAM] unsigned char 
 10831 ;;  arg             4   26[COMRAM] unsigned long 
 10832 ;;  exp             1   25[COMRAM] unsigned char 
 10833 ;; Return value:  Size  Location     Type
 10834 ;;                  4   16[COMRAM] unsigned char 
 10835 ;; Registers used:
 10836 ;;		wreg, status,2, status,0
 10837 ;; Tracked objects:
 10838 ;;		On entry : 0/0
 10839 ;;		On exit  : 0/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10842 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10843 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10844 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10845 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10846 ;;Total ram usage:       14 bytes
 10847 ;; Hardware stack levels used:    1
 10848 ;; Hardware stack levels required when called:    2
 10849 ;; This function calls:
 10850 ;;		Nothing
 10851 ;; This function is called by:
 10852 ;;		_main
 10853 ;; This function uses a non-reentrant model
 10854 ;;
 10855                           
 10856                           	psect	text46
 10857  003C60                     __ptext46:
 10858                           	opt callstack 0
 10859  003C60                     ___xxtofl:
 10860                           	opt callstack 28
 10861                           
 10862                           ;incstack = 0
 10863                           ;___xxtofl@sign stored from wreg
 10864  003C60  6E19               	movwf	___xxtofl@sign,c
 10865  003C62  5019               	movf	___xxtofl@sign,w,c
 10866  003C64  A4D8               	btfss	status,2,c
 10867  003C66  AE14               	btfss	___xxtofl@val+3,7,c
 10868  003C68  D01A               	goto	l1122
 10869  003C6A  C011  F015         	movff	___xxtofl@val,??___xxtofl
 10870  003C6E  C012  F016         	movff	___xxtofl@val+1,??___xxtofl+1
 10871  003C72  C013  F017         	movff	___xxtofl@val+2,??___xxtofl+2
 10872  003C76  C014  F018         	movff	___xxtofl@val+3,??___xxtofl+3
 10873  003C7A  1E15               	comf	??___xxtofl,f,c
 10874  003C7C  1E16               	comf	??___xxtofl+1,f,c
 10875  003C7E  1E17               	comf	??___xxtofl+2,f,c
 10876  003C80  1E18               	comf	??___xxtofl+3,f,c
 10877  003C82  2A15               	incf	??___xxtofl,f,c
 10878  003C84  0E00               	movlw	0
 10879  003C86  2216               	addwfc	??___xxtofl+1,f,c
 10880  003C88  2217               	addwfc	??___xxtofl+2,f,c
 10881  003C8A  2218               	addwfc	??___xxtofl+3,f,c
 10882  003C8C  C015  F01B         	movff	??___xxtofl,___xxtofl@arg
 10883  003C90  C016  F01C         	movff	??___xxtofl+1,___xxtofl@arg+1
 10884  003C94  C017  F01D         	movff	??___xxtofl+2,___xxtofl@arg+2
 10885  003C98  C018  F01E         	movff	??___xxtofl+3,___xxtofl@arg+3
 10886  003C9C  D008               	goto	l5394
 10887  003C9E                     l1122:
 10888  003C9E  C011  F01B         	movff	___xxtofl@val,___xxtofl@arg
 10889  003CA2  C012  F01C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10890  003CA6  C013  F01D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10891  003CAA  C014  F01E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10892  003CAE                     l5394:
 10893  003CAE  5011               	movf	___xxtofl@val,w,c
 10894  003CB0  1012               	iorwf	___xxtofl@val+1,w,c
 10895  003CB2  1013               	iorwf	___xxtofl@val+2,w,c
 10896  003CB4  1014               	iorwf	___xxtofl@val+3,w,c
 10897  003CB6  A4D8               	btfss	status,2,c
 10898  003CB8  D009               	goto	l5400
 10899  003CBA  0E00               	movlw	0
 10900  003CBC  6E11               	movwf	?___xxtofl,c
 10901  003CBE  0E00               	movlw	0
 10902  003CC0  6E12               	movwf	?___xxtofl+1,c
 10903  003CC2  0E00               	movlw	0
 10904  003CC4  6E13               	movwf	?___xxtofl+2,c
 10905  003CC6  0E00               	movlw	0
 10906  003CC8  6E14               	movwf	?___xxtofl+3,c
 10907  003CCA  0012               	return	
 10908  003CCC                     l5400:
 10909  003CCC  0E96               	movlw	150
 10910  003CCE  6E1A               	movwf	___xxtofl@exp,c
 10911  003CD0  D006               	goto	l5404
 10912  003CD2                     l5402:
 10913  003CD2  2A1A               	incf	___xxtofl@exp,f,c
 10914  003CD4  90D8               	bcf	status,0,c
 10915  003CD6  321E               	rrcf	___xxtofl@arg+3,f,c
 10916  003CD8  321D               	rrcf	___xxtofl@arg+2,f,c
 10917  003CDA  321C               	rrcf	___xxtofl@arg+1,f,c
 10918  003CDC  321B               	rrcf	___xxtofl@arg,f,c
 10919  003CDE                     l5404:
 10920  003CDE  0E00               	movlw	0
 10921  003CE0  141B               	andwf	___xxtofl@arg,w,c
 10922  003CE2  6E15               	movwf	??___xxtofl& (0+255),c
 10923  003CE4  0E00               	movlw	0
 10924  003CE6  141C               	andwf	___xxtofl@arg+1,w,c
 10925  003CE8  6E16               	movwf	(??___xxtofl+1)& (0+255),c
 10926  003CEA  0E00               	movlw	0
 10927  003CEC  141D               	andwf	___xxtofl@arg+2,w,c
 10928  003CEE  6E17               	movwf	(??___xxtofl+2)& (0+255),c
 10929  003CF0  0EFE               	movlw	254
 10930  003CF2  141E               	andwf	___xxtofl@arg+3,w,c
 10931  003CF4  6E18               	movwf	(??___xxtofl+3)& (0+255),c
 10932  003CF6  5015               	movf	??___xxtofl,w,c
 10933  003CF8  1016               	iorwf	??___xxtofl+1,w,c
 10934  003CFA  1017               	iorwf	??___xxtofl+2,w,c
 10935  003CFC  1018               	iorwf	??___xxtofl+3,w,c
 10936  003CFE  B4D8               	btfsc	status,2,c
 10937  003D00  D00D               	goto	l1129
 10938  003D02  D7E7               	goto	l5402
 10939  003D04                     l5406:
 10940  003D04  2A1A               	incf	___xxtofl@exp,f,c
 10941  003D06  0E01               	movlw	1
 10942  003D08  261B               	addwf	___xxtofl@arg,f,c
 10943  003D0A  0E00               	movlw	0
 10944  003D0C  221C               	addwfc	___xxtofl@arg+1,f,c
 10945  003D0E  221D               	addwfc	___xxtofl@arg+2,f,c
 10946  003D10  221E               	addwfc	___xxtofl@arg+3,f,c
 10947  003D12  90D8               	bcf	status,0,c
 10948  003D14  321E               	rrcf	___xxtofl@arg+3,f,c
 10949  003D16  321D               	rrcf	___xxtofl@arg+2,f,c
 10950  003D18  321C               	rrcf	___xxtofl@arg+1,f,c
 10951  003D1A  321B               	rrcf	___xxtofl@arg,f,c
 10952  003D1C                     l1129:
 10953  003D1C  0E00               	movlw	0
 10954  003D1E  141B               	andwf	___xxtofl@arg,w,c
 10955  003D20  6E15               	movwf	??___xxtofl& (0+255),c
 10956  003D22  0E00               	movlw	0
 10957  003D24  141C               	andwf	___xxtofl@arg+1,w,c
 10958  003D26  6E16               	movwf	(??___xxtofl+1)& (0+255),c
 10959  003D28  0E00               	movlw	0
 10960  003D2A  141D               	andwf	___xxtofl@arg+2,w,c
 10961  003D2C  6E17               	movwf	(??___xxtofl+2)& (0+255),c
 10962  003D2E  0EFF               	movlw	255
 10963  003D30  141E               	andwf	___xxtofl@arg+3,w,c
 10964  003D32  6E18               	movwf	(??___xxtofl+3)& (0+255),c
 10965  003D34  5015               	movf	??___xxtofl,w,c
 10966  003D36  1016               	iorwf	??___xxtofl+1,w,c
 10967  003D38  1017               	iorwf	??___xxtofl+2,w,c
 10968  003D3A  1018               	iorwf	??___xxtofl+3,w,c
 10969  003D3C  B4D8               	btfsc	status,2,c
 10970  003D3E  D007               	goto	l5414
 10971  003D40  D7E1               	goto	l5406
 10972  003D42                     l5412:
 10973  003D42  061A               	decf	___xxtofl@exp,f,c
 10974  003D44  90D8               	bcf	status,0,c
 10975  003D46  361B               	rlcf	___xxtofl@arg,f,c
 10976  003D48  361C               	rlcf	___xxtofl@arg+1,f,c
 10977  003D4A  361D               	rlcf	___xxtofl@arg+2,f,c
 10978  003D4C  361E               	rlcf	___xxtofl@arg+3,f,c
 10979  003D4E                     l5414:
 10980  003D4E  BE1D               	btfsc	___xxtofl@arg+2,7,c
 10981  003D50  D003               	goto	u6950
 10982  003D52  0E02               	movlw	2
 10983  003D54  601A               	cpfslt	___xxtofl@exp,c
 10984  003D56  D7F5               	goto	l5412
 10985  003D58                     u6950:
 10986  003D58  A01A               	btfss	___xxtofl@exp,0,c
 10987  003D5A  9E1D               	bcf	___xxtofl@arg+2,7,c
 10988  003D5C  90D8               	bcf	status,0,c
 10989  003D5E  321A               	rrcf	___xxtofl@exp,f,c
 10990  003D60  C01A  F015         	movff	___xxtofl@exp,??___xxtofl
 10991  003D64  6A16               	clrf	(??___xxtofl+1)& (0+255),c
 10992  003D66  6A17               	clrf	(??___xxtofl+2)& (0+255),c
 10993  003D68  6A18               	clrf	(??___xxtofl+3)& (0+255),c
 10994  003D6A  C015  F018         	movff	??___xxtofl,??___xxtofl+3
 10995  003D6E  6A17               	clrf	??___xxtofl+2,c
 10996  003D70  6A16               	clrf	??___xxtofl+1,c
 10997  003D72  6A15               	clrf	??___xxtofl,c
 10998  003D74  5015               	movf	??___xxtofl,w,c
 10999  003D76  121B               	iorwf	___xxtofl@arg,f,c
 11000  003D78  5016               	movf	??___xxtofl+1,w,c
 11001  003D7A  121C               	iorwf	___xxtofl@arg+1,f,c
 11002  003D7C  5017               	movf	??___xxtofl+2,w,c
 11003  003D7E  121D               	iorwf	___xxtofl@arg+2,f,c
 11004  003D80  5018               	movf	??___xxtofl+3,w,c
 11005  003D82  121E               	iorwf	___xxtofl@arg+3,f,c
 11006  003D84  5019               	movf	___xxtofl@sign,w,c
 11007  003D86  A4D8               	btfss	status,2,c
 11008  003D88  AE14               	btfss	___xxtofl@val+3,7,c
 11009  003D8A  D001               	goto	l5430
 11010  003D8C  8E1E               	bsf	___xxtofl@arg+3,7,c
 11011  003D8E                     l5430:
 11012  003D8E  C01B  F011         	movff	___xxtofl@arg,?___xxtofl
 11013  003D92  C01C  F012         	movff	___xxtofl@arg+1,?___xxtofl+1
 11014  003D96  C01D  F013         	movff	___xxtofl@arg+2,?___xxtofl+2
 11015  003D9A  C01E  F014         	movff	___xxtofl@arg+3,?___xxtofl+3
 11016  003D9E  0012               	return		;funcret
 11017  003DA0                     __end_of___xxtofl:
 11018                           	opt callstack 0
 11019                           
 11020 ;; *************** function _I2C_Master_Write *****************
 11021 ;; Defined at:
 11022 ;;		line 68 in file "RTC_I2C.c"
 11023 ;; Parameters:    Size  Location     Type
 11024 ;;  byteToWrite     2   26[COMRAM] unsigned int 
 11025 ;; Auto vars:     Size  Location     Type
 11026 ;;		None
 11027 ;; Return value:  Size  Location     Type
 11028 ;;                  1    wreg      void 
 11029 ;; Registers used:
 11030 ;;		wreg, status,2, status,0, cstack
 11031 ;; Tracked objects:
 11032 ;;		On entry : 0/0
 11033 ;;		On exit  : 0/0
 11034 ;;		Unchanged: 0/0
 11035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11039 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11040 ;;Total ram usage:        2 bytes
 11041 ;; Hardware stack levels used:    1
 11042 ;; Hardware stack levels required when called:    3
 11043 ;; This function calls:
 11044 ;;		_I2C_Master_Wait
 11045 ;; This function is called by:
 11046 ;;		_main
 11047 ;;		_reset_time
 11048 ;; This function uses a non-reentrant model
 11049 ;;
 11050                           
 11051                           	psect	text47
 11052  004CDC                     __ptext47:
 11053                           	opt callstack 0
 11054  004CDC                     _I2C_Master_Write:
 11055                           	opt callstack 27
 11056                           
 11057                           ;RTC_I2C.c: 69:     I2C_Master_Wait();
 11058                           
 11059                           ;incstack = 0
 11060  004CDC  EC5F  F026         	call	_I2C_Master_Wait	;wreg free
 11061                           
 11062                           ;RTC_I2C.c: 71:     SSPBUF = byteToWrite;
 11063  004CE0  C01B  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 11064  004CE4  0012               	return		;funcret
 11065  004CE6                     __end_of_I2C_Master_Write:
 11066                           	opt callstack 0
 11067                           
 11068 ;; *************** function _I2C_Master_Stop *****************
 11069 ;; Defined at:
 11070 ;;		line 63 in file "RTC_I2C.c"
 11071 ;; Parameters:    Size  Location     Type
 11072 ;;		None
 11073 ;; Auto vars:     Size  Location     Type
 11074 ;;		None
 11075 ;; Return value:  Size  Location     Type
 11076 ;;                  1    wreg      void 
 11077 ;; Registers used:
 11078 ;;		wreg, status,2, status,0, cstack
 11079 ;; Tracked objects:
 11080 ;;		On entry : 0/0
 11081 ;;		On exit  : 0/0
 11082 ;;		Unchanged: 0/0
 11083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11088 ;;Total ram usage:        0 bytes
 11089 ;; Hardware stack levels used:    1
 11090 ;; Hardware stack levels required when called:    3
 11091 ;; This function calls:
 11092 ;;		_I2C_Master_Wait
 11093 ;; This function is called by:
 11094 ;;		_main
 11095 ;;		_reset_time
 11096 ;; This function uses a non-reentrant model
 11097 ;;
 11098                           
 11099                           	psect	text48
 11100  004CF6                     __ptext48:
 11101                           	opt callstack 0
 11102  004CF6                     _I2C_Master_Stop:
 11103                           	opt callstack 27
 11104                           
 11105                           ;RTC_I2C.c: 64:     I2C_Master_Wait();
 11106                           
 11107                           ;incstack = 0
 11108  004CF6  EC5F  F026         	call	_I2C_Master_Wait	;wreg free
 11109                           
 11110                           ;RTC_I2C.c: 65:     SSPCON2bits.PEN = 1;
 11111  004CFA  84C5               	bsf	4037,2,c	;volatile
 11112  004CFC  0012               	return		;funcret
 11113  004CFE                     __end_of_I2C_Master_Stop:
 11114                           	opt callstack 0
 11115                           
 11116 ;; *************** function _I2C_Master_Start *****************
 11117 ;; Defined at:
 11118 ;;		line 53 in file "RTC_I2C.c"
 11119 ;; Parameters:    Size  Location     Type
 11120 ;;		None
 11121 ;; Auto vars:     Size  Location     Type
 11122 ;;		None
 11123 ;; Return value:  Size  Location     Type
 11124 ;;                  1    wreg      void 
 11125 ;; Registers used:
 11126 ;;		wreg, status,2, status,0, cstack
 11127 ;; Tracked objects:
 11128 ;;		On entry : 0/0
 11129 ;;		On exit  : 0/0
 11130 ;;		Unchanged: 0/0
 11131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11136 ;;Total ram usage:        0 bytes
 11137 ;; Hardware stack levels used:    1
 11138 ;; Hardware stack levels required when called:    3
 11139 ;; This function calls:
 11140 ;;		_I2C_Master_Wait
 11141 ;; This function is called by:
 11142 ;;		_main
 11143 ;;		_reset_time
 11144 ;; This function uses a non-reentrant model
 11145 ;;
 11146                           
 11147                           	psect	text49
 11148  004CFE                     __ptext49:
 11149                           	opt callstack 0
 11150  004CFE                     _I2C_Master_Start:
 11151                           	opt callstack 27
 11152                           
 11153                           ;RTC_I2C.c: 54:     I2C_Master_Wait();
 11154                           
 11155                           ;incstack = 0
 11156  004CFE  EC5F  F026         	call	_I2C_Master_Wait	;wreg free
 11157                           
 11158                           ;RTC_I2C.c: 55:     SSPCON2bits.SEN = 1;
 11159  004D02  80C5               	bsf	4037,0,c	;volatile
 11160  004D04  0012               	return		;funcret
 11161  004D06                     __end_of_I2C_Master_Start:
 11162                           	opt callstack 0
 11163                           
 11164 ;; *************** function _I2C_Master_Read *****************
 11165 ;; Defined at:
 11166 ;;		line 74 in file "RTC_I2C.c"
 11167 ;; Parameters:    Size  Location     Type
 11168 ;;  ackBit          1    wreg     unsigned char 
 11169 ;; Auto vars:     Size  Location     Type
 11170 ;;  ackBit          1   17[COMRAM] unsigned char 
 11171 ;;  receivedByte    1   18[COMRAM] unsigned char 
 11172 ;; Return value:  Size  Location     Type
 11173 ;;                  1    wreg      unsigned char 
 11174 ;; Registers used:
 11175 ;;		wreg, status,2, status,0, cstack
 11176 ;; Tracked objects:
 11177 ;;		On entry : 0/0
 11178 ;;		On exit  : 0/0
 11179 ;;		Unchanged: 0/0
 11180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11184 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11185 ;;Total ram usage:        2 bytes
 11186 ;; Hardware stack levels used:    1
 11187 ;; Hardware stack levels required when called:    3
 11188 ;; This function calls:
 11189 ;;		_I2C_Master_Wait
 11190 ;; This function is called by:
 11191 ;;		_main
 11192 ;; This function uses a non-reentrant model
 11193 ;;
 11194                           
 11195                           	psect	text50
 11196  004C6E                     __ptext50:
 11197                           	opt callstack 0
 11198  004C6E                     _I2C_Master_Read:
 11199                           	opt callstack 27
 11200                           
 11201                           ;incstack = 0
 11202                           ;I2C_Master_Read@ackBit stored from wreg
 11203  004C6E  6E12               	movwf	I2C_Master_Read@ackBit,c
 11204                           
 11205                           ;RTC_I2C.c: 75:     I2C_Master_Wait();
 11206  004C70  EC5F  F026         	call	_I2C_Master_Wait	;wreg free
 11207                           
 11208                           ;RTC_I2C.c: 76:     SSPCON2bits.RCEN = 1;
 11209  004C74  86C5               	bsf	4037,3,c	;volatile
 11210                           
 11211                           ;RTC_I2C.c: 78:     I2C_Master_Wait();
 11212  004C76  EC5F  F026         	call	_I2C_Master_Wait	;wreg free
 11213                           
 11214                           ;RTC_I2C.c: 81:     unsigned char receivedByte = SSPBUF;
 11215  004C7A  CFC9 F013          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 11216                           
 11217                           ;RTC_I2C.c: 83:     I2C_Master_Wait();
 11218  004C7E  EC5F  F026         	call	_I2C_Master_Wait	;wreg free
 11219                           
 11220                           ;RTC_I2C.c: 84:     SSPCON2bits.ACKDT = ackBit;
 11221  004C82  B012               	btfsc	I2C_Master_Read@ackBit,0,c
 11222  004C84  D002               	bra	u6885
 11223  004C86  9AC5               	bcf	4037,5,c	;volatile
 11224  004C88  D001               	bra	u6886
 11225  004C8A                     u6885:
 11226  004C8A  8AC5               	bsf	4037,5,c	;volatile
 11227  004C8C                     u6886:
 11228                           
 11229                           ;RTC_I2C.c: 85:     SSPCON2bits.ACKEN = 1;
 11230  004C8C  88C5               	bsf	4037,4,c	;volatile
 11231                           
 11232                           ;RTC_I2C.c: 89:     return receivedByte;
 11233  004C8E  5013               	movf	I2C_Master_Read@receivedByte,w,c
 11234  004C90  0012               	return		;funcret
 11235  004C92                     __end_of_I2C_Master_Read:
 11236                           	opt callstack 0
 11237                           
 11238 ;; *************** function _I2C_Master_Wait *****************
 11239 ;; Defined at:
 11240 ;;		line 19 in file "RTC_I2C.c"
 11241 ;; Parameters:    Size  Location     Type
 11242 ;;		None
 11243 ;; Auto vars:     Size  Location     Type
 11244 ;;		None
 11245 ;; Return value:  Size  Location     Type
 11246 ;;                  1    wreg      void 
 11247 ;; Registers used:
 11248 ;;		wreg, status,2, status,0
 11249 ;; Tracked objects:
 11250 ;;		On entry : 0/0
 11251 ;;		On exit  : 0/0
 11252 ;;		Unchanged: 0/0
 11253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11257 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11258 ;;Total ram usage:        1 bytes
 11259 ;; Hardware stack levels used:    1
 11260 ;; Hardware stack levels required when called:    2
 11261 ;; This function calls:
 11262 ;;		Nothing
 11263 ;; This function is called by:
 11264 ;;		_I2C_Master_Start
 11265 ;;		_I2C_Master_Stop
 11266 ;;		_I2C_Master_Write
 11267 ;;		_I2C_Master_Read
 11268 ;;		_I2C_Master_RepeatedStart
 11269 ;; This function uses a non-reentrant model
 11270 ;;
 11271                           
 11272                           	psect	text51
 11273  004CBE                     __ptext51:
 11274                           	opt callstack 0
 11275  004CBE                     _I2C_Master_Wait:
 11276                           	opt callstack 27
 11277                           
 11278                           ;RTC_I2C.c: 25:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 11279                           
 11280                           ;RTC_I2C.c: 27:     }
 11281                           
 11282                           ;incstack = 0
 11283  004CBE  B4C7               	btfsc	4039,2,c	;volatile
 11284  004CC0  D7FE               	goto	_I2C_Master_Wait
 11285  004CC2  CFC5 F011          	movff	4037,??_I2C_Master_Wait	;volatile
 11286  004CC6  0E1F               	movlw	31
 11287  004CC8  1611               	andwf	??_I2C_Master_Wait,f,c
 11288  004CCA  B4D8               	btfsc	status,2,c
 11289  004CCC  0012               	return	
 11290  004CCE  D7F7               	goto	_I2C_Master_Wait
 11291  004CD0                     __end_of_I2C_Master_Wait:
 11292                           	opt callstack 0
 11293                           
 11294 ;; *************** function _I2C_Master_Init *****************
 11295 ;; Defined at:
 11296 ;;		line 31 in file "RTC_I2C.c"
 11297 ;; Parameters:    Size  Location     Type
 11298 ;;  clockFreq       4   29[COMRAM] const unsigned long 
 11299 ;; Auto vars:     Size  Location     Type
 11300 ;;		None
 11301 ;; Return value:  Size  Location     Type
 11302 ;;                  1    wreg      void 
 11303 ;; Registers used:
 11304 ;;		wreg, status,2, status,0, cstack
 11305 ;; Tracked objects:
 11306 ;;		On entry : 0/0
 11307 ;;		On exit  : 0/0
 11308 ;;		Unchanged: 0/0
 11309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11310 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11312 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11313 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11314 ;;Total ram usage:        8 bytes
 11315 ;; Hardware stack levels used:    1
 11316 ;; Hardware stack levels required when called:    3
 11317 ;; This function calls:
 11318 ;;		___lldiv
 11319 ;; This function is called by:
 11320 ;;		_main
 11321 ;; This function uses a non-reentrant model
 11322 ;;
 11323                           
 11324                           	psect	text52
 11325  00431A                     __ptext52:
 11326                           	opt callstack 0
 11327  00431A                     _I2C_Master_Init:
 11328                           	opt callstack 27
 11329                           
 11330                           ;RTC_I2C.c: 32:     SSPCON1bits.SSPEN = 0;
 11331                           
 11332                           ;incstack = 0
 11333  00431A  9AC6               	bcf	4038,5,c	;volatile
 11334                           
 11335                           ;RTC_I2C.c: 35:     TRISCbits.TRISC3 = 1;
 11336  00431C  8694               	bsf	3988,3,c	;volatile
 11337                           
 11338                           ;RTC_I2C.c: 36:     TRISCbits.TRISC4 = 1;
 11339  00431E  8894               	bsf	3988,4,c	;volatile
 11340                           
 11341                           ;RTC_I2C.c: 42:     SSPADD = (40000000 / (4 * clockFreq)) - 1;
 11342  004320  0E00               	movlw	0
 11343  004322  6E11               	movwf	___lldiv@dividend,c
 11344  004324  0E5A               	movlw	90
 11345  004326  6E12               	movwf	___lldiv@dividend+1,c
 11346  004328  0E62               	movlw	98
 11347  00432A  6E13               	movwf	___lldiv@dividend+2,c
 11348  00432C  0E02               	movlw	2
 11349  00432E  6E14               	movwf	___lldiv@dividend+3,c
 11350  004330  C01E  F022         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 11351  004334  C01F  F023         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 11352  004338  C020  F024         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 11353  00433C  C021  F025         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 11354  004340  0E02               	movlw	2
 11355  004342                     u6865:
 11356  004342  90D8               	bcf	status,0,c
 11357  004344  3622               	rlcf	??_I2C_Master_Init,f,c
 11358  004346  3623               	rlcf	??_I2C_Master_Init+1,f,c
 11359  004348  3624               	rlcf	??_I2C_Master_Init+2,f,c
 11360  00434A  3625               	rlcf	??_I2C_Master_Init+3,f,c
 11361  00434C  2EE8               	decfsz	wreg,f,c
 11362  00434E  D7F9               	goto	u6865
 11363  004350  C022  F015         	movff	??_I2C_Master_Init,___lldiv@divisor
 11364  004354  C023  F016         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 11365  004358  C024  F017         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 11366  00435C  C025  F018         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 11367  004360  EC4C  F023         	call	___lldiv	;wreg free
 11368  004364  0411               	decf	?___lldiv,w,c
 11369  004366  6EC8               	movwf	4040,c	;volatile
 11370                           
 11371                           ;RTC_I2C.c: 43:     SSPADD = (40000000 / (4 * clockFreq)) - 1;
 11372  004368  0E00               	movlw	0
 11373  00436A  6E11               	movwf	___lldiv@dividend,c
 11374  00436C  0E5A               	movlw	90
 11375  00436E  6E12               	movwf	___lldiv@dividend+1,c
 11376  004370  0E62               	movlw	98
 11377  004372  6E13               	movwf	___lldiv@dividend+2,c
 11378  004374  0E02               	movlw	2
 11379  004376  6E14               	movwf	___lldiv@dividend+3,c
 11380  004378  C01E  F022         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 11381  00437C  C01F  F023         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 11382  004380  C020  F024         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 11383  004384  C021  F025         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 11384  004388  0E02               	movlw	2
 11385  00438A                     u6875:
 11386  00438A  90D8               	bcf	status,0,c
 11387  00438C  3622               	rlcf	??_I2C_Master_Init,f,c
 11388  00438E  3623               	rlcf	??_I2C_Master_Init+1,f,c
 11389  004390  3624               	rlcf	??_I2C_Master_Init+2,f,c
 11390  004392  3625               	rlcf	??_I2C_Master_Init+3,f,c
 11391  004394  2EE8               	decfsz	wreg,f,c
 11392  004396  D7F9               	goto	u6875
 11393  004398  C022  F015         	movff	??_I2C_Master_Init,___lldiv@divisor
 11394  00439C  C023  F016         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 11395  0043A0  C024  F017         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 11396  0043A4  C025  F018         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 11397  0043A8  EC4C  F023         	call	___lldiv	;wreg free
 11398  0043AC  0411               	decf	?___lldiv,w,c
 11399  0043AE  6EC8               	movwf	4040,c	;volatile
 11400                           
 11401                           ;RTC_I2C.c: 45:     SSPSTAT = 0b10000000;
 11402  0043B0  0E80               	movlw	128
 11403  0043B2  6EC7               	movwf	4039,c	;volatile
 11404                           
 11405                           ;RTC_I2C.c: 47:     SSPCON1 = 0b00101000;
 11406  0043B4  0E28               	movlw	40
 11407  0043B6  6EC6               	movwf	4038,c	;volatile
 11408                           
 11409                           ;RTC_I2C.c: 50:     SSPCON2 = 0b00000000;
 11410  0043B8  0E00               	movlw	0
 11411  0043BA  6EC5               	movwf	4037,c	;volatile
 11412  0043BC  0012               	return		;funcret
 11413  0043BE                     __end_of_I2C_Master_Init:
 11414                           	opt callstack 0
 11415                           
 11416 ;; *************** function ___lldiv *****************
 11417 ;; Defined at:
 11418 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/__lldiv.c"
 11419 ;; Parameters:    Size  Location     Type
 11420 ;;  dividend        4   16[COMRAM] unsigned long 
 11421 ;;  divisor         4   20[COMRAM] unsigned long 
 11422 ;; Auto vars:     Size  Location     Type
 11423 ;;  quotient        4   24[COMRAM] unsigned long 
 11424 ;;  counter         1   28[COMRAM] unsigned char 
 11425 ;; Return value:  Size  Location     Type
 11426 ;;                  4   16[COMRAM] unsigned long 
 11427 ;; Registers used:
 11428 ;;		wreg, status,2, status,0
 11429 ;; Tracked objects:
 11430 ;;		On entry : 0/0
 11431 ;;		On exit  : 0/0
 11432 ;;		Unchanged: 0/0
 11433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11434 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11435 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11437 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11438 ;;Total ram usage:       13 bytes
 11439 ;; Hardware stack levels used:    1
 11440 ;; Hardware stack levels required when called:    2
 11441 ;; This function calls:
 11442 ;;		Nothing
 11443 ;; This function is called by:
 11444 ;;		_I2C_Master_Init
 11445 ;; This function uses a non-reentrant model
 11446 ;;
 11447                           
 11448                           	psect	text53
 11449  004698                     __ptext53:
 11450                           	opt callstack 0
 11451  004698                     ___lldiv:
 11452                           	opt callstack 27
 11453                           
 11454                           ;incstack = 0
 11455  004698  0E00               	movlw	0
 11456  00469A  6E19               	movwf	___lldiv@quotient,c
 11457  00469C  0E00               	movlw	0
 11458  00469E  6E1A               	movwf	___lldiv@quotient+1,c
 11459  0046A0  0E00               	movlw	0
 11460  0046A2  6E1B               	movwf	___lldiv@quotient+2,c
 11461  0046A4  0E00               	movlw	0
 11462  0046A6  6E1C               	movwf	___lldiv@quotient+3,c
 11463  0046A8  5015               	movf	___lldiv@divisor,w,c
 11464  0046AA  1016               	iorwf	___lldiv@divisor+1,w,c
 11465  0046AC  1017               	iorwf	___lldiv@divisor+2,w,c
 11466  0046AE  1018               	iorwf	___lldiv@divisor+3,w,c
 11467  0046B0  B4D8               	btfsc	status,2,c
 11468  0046B2  D02A               	goto	l494
 11469  0046B4  0E01               	movlw	1
 11470  0046B6  6E1D               	movwf	___lldiv@counter,c
 11471  0046B8  D006               	goto	l5292
 11472  0046BA                     l5290:
 11473  0046BA  90D8               	bcf	status,0,c
 11474  0046BC  3615               	rlcf	___lldiv@divisor,f,c
 11475  0046BE  3616               	rlcf	___lldiv@divisor+1,f,c
 11476  0046C0  3617               	rlcf	___lldiv@divisor+2,f,c
 11477  0046C2  3618               	rlcf	___lldiv@divisor+3,f,c
 11478  0046C4  2A1D               	incf	___lldiv@counter,f,c
 11479  0046C6                     l5292:
 11480  0046C6  AE18               	btfss	___lldiv@divisor+3,7,c
 11481  0046C8  D7F8               	goto	l5290
 11482  0046CA                     u6840:
 11483  0046CA  90D8               	bcf	status,0,c
 11484  0046CC  3619               	rlcf	___lldiv@quotient,f,c
 11485  0046CE  361A               	rlcf	___lldiv@quotient+1,f,c
 11486  0046D0  361B               	rlcf	___lldiv@quotient+2,f,c
 11487  0046D2  361C               	rlcf	___lldiv@quotient+3,f,c
 11488  0046D4  5015               	movf	___lldiv@divisor,w,c
 11489  0046D6  5C11               	subwf	___lldiv@dividend,w,c
 11490  0046D8  5016               	movf	___lldiv@divisor+1,w,c
 11491  0046DA  5812               	subwfb	___lldiv@dividend+1,w,c
 11492  0046DC  5017               	movf	___lldiv@divisor+2,w,c
 11493  0046DE  5813               	subwfb	___lldiv@dividend+2,w,c
 11494  0046E0  5018               	movf	___lldiv@divisor+3,w,c
 11495  0046E2  5814               	subwfb	___lldiv@dividend+3,w,c
 11496  0046E4  A0D8               	btfss	status,0,c
 11497  0046E6  D009               	goto	l5302
 11498  0046E8  5015               	movf	___lldiv@divisor,w,c
 11499  0046EA  5E11               	subwf	___lldiv@dividend,f,c
 11500  0046EC  5016               	movf	___lldiv@divisor+1,w,c
 11501  0046EE  5A12               	subwfb	___lldiv@dividend+1,f,c
 11502  0046F0  5017               	movf	___lldiv@divisor+2,w,c
 11503  0046F2  5A13               	subwfb	___lldiv@dividend+2,f,c
 11504  0046F4  5018               	movf	___lldiv@divisor+3,w,c
 11505  0046F6  5A14               	subwfb	___lldiv@dividend+3,f,c
 11506  0046F8  8019               	bsf	___lldiv@quotient,0,c
 11507  0046FA                     l5302:
 11508  0046FA  90D8               	bcf	status,0,c
 11509  0046FC  3218               	rrcf	___lldiv@divisor+3,f,c
 11510  0046FE  3217               	rrcf	___lldiv@divisor+2,f,c
 11511  004700  3216               	rrcf	___lldiv@divisor+1,f,c
 11512  004702  3215               	rrcf	___lldiv@divisor,f,c
 11513  004704  2E1D               	decfsz	___lldiv@counter,f,c
 11514  004706  D7E1               	goto	u6840
 11515  004708                     l494:
 11516  004708  C019  F011         	movff	___lldiv@quotient,?___lldiv
 11517  00470C  C01A  F012         	movff	___lldiv@quotient+1,?___lldiv+1
 11518  004710  C01B  F013         	movff	___lldiv@quotient+2,?___lldiv+2
 11519  004714  C01C  F014         	movff	___lldiv@quotient+3,?___lldiv+3
 11520  004718  0012               	return		;funcret
 11521  00471A                     __end_of___lldiv:
 11522                           	opt callstack 0
 11523                           
 11524 ;; *************** function _interruptHandler *****************
 11525 ;; Defined at:
 11526 ;;		line 331 in file "main.c"
 11527 ;; Parameters:    Size  Location     Type
 11528 ;;		None
 11529 ;; Auto vars:     Size  Location     Type
 11530 ;;		None
 11531 ;; Return value:  Size  Location     Type
 11532 ;;                  1    wreg      void 
 11533 ;; Registers used:
 11534 ;;		wreg, status,2, status,0, cstack
 11535 ;; Tracked objects:
 11536 ;;		On entry : 0/0
 11537 ;;		On exit  : 0/0
 11538 ;;		Unchanged: 0/0
 11539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11544 ;;Total ram usage:        0 bytes
 11545 ;; Hardware stack levels used:    1
 11546 ;; Hardware stack levels required when called:    1
 11547 ;; This function calls:
 11548 ;;		i2___fladd
 11549 ;; This function is called by:
 11550 ;;		Interrupt level 2
 11551 ;; This function uses a non-reentrant model
 11552 ;;
 11553                           
 11554                           	psect	intcode
 11555  000008                     __pintcode:
 11556                           	opt callstack 0
 11557  000008                     _interruptHandler:
 11558                           	opt callstack 20
 11559                           
 11560                           ;incstack = 0
 11561  000008  826E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11562  00000A  ED7B  F022         	call	int_func,f	;refresh shadow registers
 11563                           
 11564                           	psect	intcode_body
 11565  0044F6                     __pintcode_body:
 11566                           	opt callstack 20
 11567  0044F6                     int_func:
 11568                           	opt callstack 20
 11569  0044F6  0006               	pop		; remove dummy address from shadow register refresh
 11570                           
 11571                           ;main.c: 332:     INTCONbits.GIE = 0;
 11572  0044F8  9EF2               	bcf	4082,7,c	;volatile
 11573                           
 11574                           ;main.c: 335:     if(INT1IE && INT1IF){
 11575  0044FA  B6F0               	btfsc	4080,3,c	;volatile
 11576  0044FC  A0F0               	btfss	4080,0,c	;volatile
 11577  0044FE  D006               	goto	i2l5904
 11578                           
 11579                           ;main.c: 336:         key_pressed = 1;
 11580  004500  0E00               	movlw	0
 11581  004502  0101               	movlb	1	; () banked
 11582  004504  6F05               	movwf	(_key_pressed+1)& (0+255),b	;volatile
 11583  004506  0E01               	movlw	1
 11584  004508  6F04               	movwf	_key_pressed& (0+255),b	;volatile
 11585                           
 11586                           ; BSR set to: 1
 11587                           ;main.c: 337:         INT1IF = 0;
 11588  00450A  90F0               	bcf	4080,0,c	;volatile
 11589  00450C                     i2l5904:
 11590                           
 11591                           ;main.c: 340:     if(INT2IE && INT2IF){
 11592  00450C  B8F0               	btfsc	4080,4,c	;volatile
 11593  00450E  A2F0               	btfss	4080,1,c	;volatile
 11594  004510  D01B               	goto	i2l5912
 11595                           
 11596                           ;main.c: 341:         distance_travelled = distance_travelled + 1.06103295395;
 11597  004512  C100  F001         	movff	_distance_travelled,i2___fladd@b
 11598  004516  C101  F002         	movff	_distance_travelled+1,i2___fladd@b+1
 11599  00451A  C102  F003         	movff	_distance_travelled+2,i2___fladd@b+2
 11600  00451E  C103  F004         	movff	_distance_travelled+3,i2___fladd@b+3
 11601  004522  0EEE               	movlw	238
 11602  004524  6E05               	movwf	i2___fladd@a,c
 11603  004526  0ECF               	movlw	207
 11604  004528  6E06               	movwf	i2___fladd@a+1,c
 11605  00452A  0E87               	movlw	135
 11606  00452C  6E07               	movwf	i2___fladd@a+2,c
 11607  00452E  0E3F               	movlw	63
 11608  004530  6E08               	movwf	i2___fladd@a+3,c
 11609  004532  EC10  F017         	call	i2___fladd	;wreg free
 11610  004536  C001  F100         	movff	?i2___fladd,_distance_travelled
 11611  00453A  C002  F101         	movff	?i2___fladd+1,_distance_travelled+1
 11612  00453E  C003  F102         	movff	?i2___fladd+2,_distance_travelled+2
 11613  004542  C004  F103         	movff	?i2___fladd+3,_distance_travelled+3
 11614                           
 11615                           ;main.c: 342:         INT2IF = 0;
 11616  004546  92F0               	bcf	4080,1,c	;volatile
 11617  004548                     i2l5912:
 11618                           
 11619                           ;main.c: 345:     if(INT0IE && INT0IF){
 11620  004548  B8F2               	btfsc	4082,4,c	;volatile
 11621  00454A  A2F2               	btfss	4082,1,c	;volatile
 11622  00454C  D01B               	goto	i2l5920
 11623                           
 11624                           ;main.c: 346:        distance_travelled = distance_travelled + 1.06103295395;
 11625  00454E  C100  F001         	movff	_distance_travelled,i2___fladd@b
 11626  004552  C101  F002         	movff	_distance_travelled+1,i2___fladd@b+1
 11627  004556  C102  F003         	movff	_distance_travelled+2,i2___fladd@b+2
 11628  00455A  C103  F004         	movff	_distance_travelled+3,i2___fladd@b+3
 11629  00455E  0EEE               	movlw	238
 11630  004560  6E05               	movwf	i2___fladd@a,c
 11631  004562  0ECF               	movlw	207
 11632  004564  6E06               	movwf	i2___fladd@a+1,c
 11633  004566  0E87               	movlw	135
 11634  004568  6E07               	movwf	i2___fladd@a+2,c
 11635  00456A  0E3F               	movlw	63
 11636  00456C  6E08               	movwf	i2___fladd@a+3,c
 11637  00456E  EC10  F017         	call	i2___fladd	;wreg free
 11638  004572  C001  F100         	movff	?i2___fladd,_distance_travelled
 11639  004576  C002  F101         	movff	?i2___fladd+1,_distance_travelled+1
 11640  00457A  C003  F102         	movff	?i2___fladd+2,_distance_travelled+2
 11641  00457E  C004  F103         	movff	?i2___fladd+3,_distance_travelled+3
 11642                           
 11643                           ;main.c: 347:        INT0IF = 0;
 11644  004582  92F2               	bcf	4082,1,c	;volatile
 11645  004584                     i2l5920:
 11646                           
 11647                           ;main.c: 349:     INTCONbits.GIE = 1;
 11648  004584  8EF2               	bsf	4082,7,c	;volatile
 11649  004586  926E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11650  004588  0011               	retfie		f
 11651  00458A                     __end_of_interruptHandler:
 11652                           	opt callstack 0
 11653                           
 11654 ;; *************** function i2___fladd *****************
 11655 ;; Defined at:
 11656 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
 11657 ;; Parameters:    Size  Location     Type
 11658 ;;  b               4    0[COMRAM] void 
 11659 ;;  a               4    4[COMRAM] void 
 11660 ;; Auto vars:     Size  Location     Type
 11661 ;;  __fladd         1   15[COMRAM] unsigned char 
 11662 ;;  __fladd         1   14[COMRAM] unsigned char 
 11663 ;;  __fladd         1   13[COMRAM] unsigned char 
 11664 ;;  __fladd         1   12[COMRAM] unsigned char 
 11665 ;; Return value:  Size  Location     Type
 11666 ;;                  4    0[COMRAM] unsigned char 
 11667 ;; Registers used:
 11668 ;;		wreg, status,2, status,0
 11669 ;; Tracked objects:
 11670 ;;		On entry : 0/0
 11671 ;;		On exit  : 0/0
 11672 ;;		Unchanged: 0/0
 11673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11674 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11675 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11676 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11677 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11678 ;;Total ram usage:       16 bytes
 11679 ;; Hardware stack levels used:    1
 11680 ;; This function calls:
 11681 ;;		Nothing
 11682 ;; This function is called by:
 11683 ;;		_interruptHandler
 11684 ;; This function uses a non-reentrant model
 11685 ;;
 11686                           
 11687                           	psect	text55
 11688  002E20                     __ptext55:
 11689                           	opt callstack 0
 11690  002E20                     i2___fladd:
 11691                           	opt callstack 20
 11692                           
 11693                           ;incstack = 0
 11694  002E20  5004               	movf	i2___fladd@b+3,w,c
 11695  002E22  0B80               	andlw	128
 11696  002E24  6E0D               	movwf	i2___fladd@signs,c
 11697  002E26  5004               	movf	i2___fladd@b+3,w,c
 11698  002E28  2404               	addwf	i2___fladd@b+3,w,c
 11699  002E2A  6E0F               	movwf	i2___fladd@bexp,c
 11700  002E2C  BE03               	btfsc	i2___fladd@b+2,7,c
 11701  002E2E  800F               	bsf	i2___fladd@bexp,0,c
 11702  002E30  500F               	movf	i2___fladd@bexp,w,c
 11703  002E32  B4D8               	btfsc	status,2,c
 11704  002E34  D00D               	goto	i2l5450
 11705  002E36  280F               	incf	i2___fladd@bexp,w,c
 11706  002E38  A4D8               	btfss	status,2,c
 11707  002E3A  D008               	goto	i2l5446
 11708  002E3C  0E00               	movlw	0
 11709  002E3E  6E01               	movwf	i2___fladd@b,c
 11710  002E40  0E00               	movlw	0
 11711  002E42  6E02               	movwf	i2___fladd@b+1,c
 11712  002E44  0E00               	movlw	0
 11713  002E46  6E03               	movwf	i2___fladd@b+2,c
 11714  002E48  0E00               	movlw	0
 11715  002E4A  6E04               	movwf	i2___fladd@b+3,c
 11716  002E4C                     i2l5446:
 11717  002E4C  8E03               	bsf	i2___fladd@b+2,7,c
 11718  002E4E  D006               	goto	L17
 11719  002E50                     i2l5450:
 11720  002E50  0E00               	movlw	0
 11721  002E52  6E01               	movwf	i2___fladd@b,c
 11722  002E54  0E00               	movlw	0
 11723  002E56  6E02               	movwf	i2___fladd@b+1,c
 11724  002E58  0E00               	movlw	0
 11725  002E5A  6E03               	movwf	i2___fladd@b+2,c
 11726  002E5C                     L17:
 11727  002E5C  0E00               	movlw	0
 11728  002E5E  6E04               	movwf	i2___fladd@b+3,c
 11729  002E60  5008               	movf	i2___fladd@a+3,w,c
 11730  002E62  0B80               	andlw	128
 11731  002E64  6E0E               	movwf	i2___fladd@aexp,c
 11732  002E66  500D               	movf	i2___fladd@signs,w,c
 11733  002E68  180E               	xorwf	i2___fladd@aexp,w,c
 11734  002E6A  A4D8               	btfss	status,2,c
 11735  002E6C  8C0D               	bsf	i2___fladd@signs,6,c
 11736  002E6E  5008               	movf	i2___fladd@a+3,w,c
 11737  002E70  2408               	addwf	i2___fladd@a+3,w,c
 11738  002E72  6E0E               	movwf	i2___fladd@aexp,c
 11739  002E74  BE07               	btfsc	i2___fladd@a+2,7,c
 11740  002E76  800E               	bsf	i2___fladd@aexp,0,c
 11741  002E78  500E               	movf	i2___fladd@aexp,w,c
 11742  002E7A  B4D8               	btfsc	status,2,c
 11743  002E7C  D00D               	goto	i2l5474
 11744  002E7E  280E               	incf	i2___fladd@aexp,w,c
 11745  002E80  A4D8               	btfss	status,2,c
 11746  002E82  D008               	goto	i2l5470
 11747  002E84  0E00               	movlw	0
 11748  002E86  6E05               	movwf	i2___fladd@a,c
 11749  002E88  0E00               	movlw	0
 11750  002E8A  6E06               	movwf	i2___fladd@a+1,c
 11751  002E8C  0E00               	movlw	0
 11752  002E8E  6E07               	movwf	i2___fladd@a+2,c
 11753  002E90  0E00               	movlw	0
 11754  002E92  6E08               	movwf	i2___fladd@a+3,c
 11755  002E94                     i2l5470:
 11756  002E94  8E07               	bsf	i2___fladd@a+2,7,c
 11757  002E96  D006               	goto	L18
 11758  002E98                     i2l5474:
 11759  002E98  0E00               	movlw	0
 11760  002E9A  6E05               	movwf	i2___fladd@a,c
 11761  002E9C  0E00               	movlw	0
 11762  002E9E  6E06               	movwf	i2___fladd@a+1,c
 11763  002EA0  0E00               	movlw	0
 11764  002EA2  6E07               	movwf	i2___fladd@a+2,c
 11765  002EA4                     L18:
 11766  002EA4  0E00               	movlw	0
 11767  002EA6  6E08               	movwf	i2___fladd@a+3,c
 11768  002EA8  500F               	movf	i2___fladd@bexp,w,c
 11769  002EAA  5C0E               	subwf	i2___fladd@aexp,w,c
 11770  002EAC  B0D8               	btfsc	status,0,c
 11771  002EAE  D022               	goto	i2l5512
 11772  002EB0  AC0D               	btfss	i2___fladd@signs,6,c
 11773  002EB2  D002               	goto	i2l5482
 11774  002EB4  0E80               	movlw	128
 11775  002EB6  1A0D               	xorwf	i2___fladd@signs,f,c
 11776  002EB8                     i2l5482:
 11777  002EB8  C00F  F010         	movff	i2___fladd@bexp,i2___fladd@grs
 11778  002EBC  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 11779  002EC0  C010  F00E         	movff	i2___fladd@grs,i2___fladd@aexp
 11780  002EC4  C001  F010         	movff	i2___fladd@b,i2___fladd@grs
 11781  002EC8  C005  F001         	movff	i2___fladd@a,i2___fladd@b
 11782  002ECC  C010  F005         	movff	i2___fladd@grs,i2___fladd@a
 11783  002ED0  C002  F010         	movff	i2___fladd@b+1,i2___fladd@grs
 11784  002ED4  C006  F002         	movff	i2___fladd@a+1,i2___fladd@b+1
 11785  002ED8  C010  F006         	movff	i2___fladd@grs,i2___fladd@a+1
 11786  002EDC  C003  F010         	movff	i2___fladd@b+2,i2___fladd@grs
 11787  002EE0  C007  F003         	movff	i2___fladd@a+2,i2___fladd@b+2
 11788  002EE4  C010  F007         	movff	i2___fladd@grs,i2___fladd@a+2
 11789  002EE8  C004  F010         	movff	i2___fladd@b+3,i2___fladd@grs
 11790  002EEC  C008  F004         	movff	i2___fladd@a+3,i2___fladd@b+3
 11791  002EF0  C010  F008         	movff	i2___fladd@grs,i2___fladd@a+3
 11792  002EF4                     i2l5512:
 11793  002EF4  0E00               	movlw	0
 11794  002EF6  6E10               	movwf	i2___fladd@grs,c
 11795  002EF8  500F               	movf	i2___fladd@bexp,w,c
 11796  002EFA  C00E  F009         	movff	i2___fladd@aexp,??i2___fladd
 11797  002EFE  6A0A               	clrf	(??i2___fladd+1)& (0+255),c
 11798  002F00  5E09               	subwf	??i2___fladd,f,c
 11799  002F02  0E00               	movlw	0
 11800  002F04  5A0A               	subwfb	??i2___fladd+1,f,c
 11801  002F06  BE0A               	btfsc	??i2___fladd+1,7,c
 11802  002F08  D02C               	goto	i2l996
 11803  002F0A  500A               	movf	??i2___fladd+1,w,c
 11804  002F0C  E104               	bnz	i2u708_40
 11805  002F0E  0E1A               	movlw	26
 11806  002F10  5C09               	subwf	??i2___fladd,w,c
 11807  002F12  A0D8               	btfss	status,0,c
 11808  002F14  D026               	goto	i2l996
 11809  002F16                     i2u708_40:
 11810  002F16  5001               	movf	i2___fladd@b,w,c
 11811  002F18  1002               	iorwf	i2___fladd@b+1,w,c
 11812  002F1A  1003               	iorwf	i2___fladd@b+2,w,c
 11813  002F1C  1004               	iorwf	i2___fladd@b+3,w,c
 11814  002F1E  B4D8               	btfsc	status,2,c
 11815  002F20  D002               	goto	i2u709_40
 11816  002F22  0E01               	movlw	1
 11817  002F24  D001               	goto	i2u710_40
 11818  002F26                     i2u709_40:
 11819  002F26  0E00               	movlw	0
 11820  002F28                     i2u710_40:
 11821  002F28  6E10               	movwf	i2___fladd@grs,c
 11822  002F2A  0E00               	movlw	0
 11823  002F2C  6E01               	movwf	i2___fladd@b,c
 11824  002F2E  0E00               	movlw	0
 11825  002F30  6E02               	movwf	i2___fladd@b+1,c
 11826  002F32  0E00               	movlw	0
 11827  002F34  6E03               	movwf	i2___fladd@b+2,c
 11828  002F36  0E00               	movlw	0
 11829  002F38  6E04               	movwf	i2___fladd@b+3,c
 11830  002F3A  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 11831  002F3E  D015               	goto	i2u713_40
 11832  002F40                     i2l997:
 11833  002F40  A010               	btfss	i2___fladd@grs,0,c
 11834  002F42  D005               	goto	i2l5524
 11835  002F44  90D8               	bcf	status,0,c
 11836  002F46  3010               	rrcf	i2___fladd@grs,w,c
 11837  002F48  0901               	iorlw	1
 11838  002F4A  6E10               	movwf	i2___fladd@grs,c
 11839  002F4C  D002               	goto	i2l5526
 11840  002F4E                     i2l5524:
 11841  002F4E  90D8               	bcf	status,0,c
 11842  002F50  3210               	rrcf	i2___fladd@grs,f,c
 11843  002F52                     i2l5526:
 11844  002F52  B001               	btfsc	i2___fladd@b,0,c
 11845  002F54  8E10               	bsf	i2___fladd@grs,7,c
 11846  002F56  3404               	rlcf	i2___fladd@b+3,w,c
 11847  002F58  3204               	rrcf	i2___fladd@b+3,f,c
 11848  002F5A  3203               	rrcf	i2___fladd@b+2,f,c
 11849  002F5C  3202               	rrcf	i2___fladd@b+1,f,c
 11850  002F5E  3201               	rrcf	i2___fladd@b,f,c
 11851  002F60  2A0F               	incf	i2___fladd@bexp,f,c
 11852  002F62                     i2l996:
 11853  002F62  500E               	movf	i2___fladd@aexp,w,c
 11854  002F64  5C0F               	subwf	i2___fladd@bexp,w,c
 11855  002F66  A0D8               	btfss	status,0,c
 11856  002F68  D7EB               	goto	i2l997
 11857  002F6A                     i2u713_40:
 11858  002F6A  BC0D               	btfsc	i2___fladd@signs,6,c
 11859  002F6C  D028               	goto	i2l5558
 11860  002F6E  500F               	movf	i2___fladd@bexp,w,c
 11861  002F70  A4D8               	btfss	status,2,c
 11862  002F72  D009               	goto	i2l5540
 11863  002F74  0E00               	movlw	0
 11864  002F76  6E01               	movwf	?i2___fladd,c
 11865  002F78  0E00               	movlw	0
 11866  002F7A  6E02               	movwf	?i2___fladd+1,c
 11867  002F7C  0E00               	movlw	0
 11868  002F7E  6E03               	movwf	?i2___fladd+2,c
 11869  002F80  0E00               	movlw	0
 11870  002F82  6E04               	movwf	?i2___fladd+3,c
 11871  002F84  0012               	return	
 11872  002F86                     i2l5540:
 11873  002F86  5005               	movf	i2___fladd@a,w,c
 11874  002F88  2601               	addwf	i2___fladd@b,f,c
 11875  002F8A  5006               	movf	i2___fladd@a+1,w,c
 11876  002F8C  2202               	addwfc	i2___fladd@b+1,f,c
 11877  002F8E  5007               	movf	i2___fladd@a+2,w,c
 11878  002F90  2203               	addwfc	i2___fladd@b+2,f,c
 11879  002F92  5008               	movf	i2___fladd@a+3,w,c
 11880  002F94  2204               	addwfc	i2___fladd@b+3,f,c
 11881  002F96  A004               	btfss	i2___fladd@b+3,0,c
 11882  002F98  D071               	goto	i2u726_40
 11883  002F9A  A010               	btfss	i2___fladd@grs,0,c
 11884  002F9C  D005               	goto	i2l5548
 11885  002F9E  90D8               	bcf	status,0,c
 11886  002FA0  3010               	rrcf	i2___fladd@grs,w,c
 11887  002FA2  0901               	iorlw	1
 11888  002FA4  6E10               	movwf	i2___fladd@grs,c
 11889  002FA6  D002               	goto	i2l5550
 11890  002FA8                     i2l5548:
 11891  002FA8  90D8               	bcf	status,0,c
 11892  002FAA  3210               	rrcf	i2___fladd@grs,f,c
 11893  002FAC                     i2l5550:
 11894  002FAC  B001               	btfsc	i2___fladd@b,0,c
 11895  002FAE  8E10               	bsf	i2___fladd@grs,7,c
 11896  002FB0  3404               	rlcf	i2___fladd@b+3,w,c
 11897  002FB2  3204               	rrcf	i2___fladd@b+3,f,c
 11898  002FB4  3203               	rrcf	i2___fladd@b+2,f,c
 11899  002FB6  3202               	rrcf	i2___fladd@b+1,f,c
 11900  002FB8  3201               	rrcf	i2___fladd@b,f,c
 11901  002FBA  2A0F               	incf	i2___fladd@bexp,f,c
 11902  002FBC  D05F               	goto	i2u726_40
 11903  002FBE                     i2l5558:
 11904  002FBE  5005               	movf	i2___fladd@a,w,c
 11905  002FC0  5C01               	subwf	i2___fladd@b,w,c
 11906  002FC2  5006               	movf	i2___fladd@a+1,w,c
 11907  002FC4  5802               	subwfb	i2___fladd@b+1,w,c
 11908  002FC6  5007               	movf	i2___fladd@a+2,w,c
 11909  002FC8  5803               	subwfb	i2___fladd@b+2,w,c
 11910  002FCA  5004               	movf	i2___fladd@b+3,w,c
 11911  002FCC  0A80               	xorlw	128
 11912  002FCE  6E09               	movwf	??i2___fladd& (0+255),c
 11913  002FD0  5008               	movf	i2___fladd@a+3,w,c
 11914  002FD2  0A80               	xorlw	128
 11915  002FD4  5809               	subwfb	??i2___fladd& (0+255),w,c
 11916  002FD6  B0D8               	btfsc	status,0,c
 11917  002FD8  D025               	goto	i2l5568
 11918  002FDA  5001               	movf	i2___fladd@b,w,c
 11919  002FDC  5C05               	subwf	i2___fladd@a,w,c
 11920  002FDE  6E09               	movwf	??i2___fladd& (0+255),c
 11921  002FE0  5002               	movf	i2___fladd@b+1,w,c
 11922  002FE2  5806               	subwfb	i2___fladd@a+1,w,c
 11923  002FE4  6E0A               	movwf	(??i2___fladd+1)& (0+255),c
 11924  002FE6  5003               	movf	i2___fladd@b+2,w,c
 11925  002FE8  5807               	subwfb	i2___fladd@a+2,w,c
 11926  002FEA  6E0B               	movwf	(??i2___fladd+2)& (0+255),c
 11927  002FEC  5004               	movf	i2___fladd@b+3,w,c
 11928  002FEE  5808               	subwfb	i2___fladd@a+3,w,c
 11929  002FF0  6E0C               	movwf	(??i2___fladd+3)& (0+255),c
 11930  002FF2  0EFF               	movlw	255
 11931  002FF4  2409               	addwf	??i2___fladd,w,c
 11932  002FF6  6E01               	movwf	i2___fladd@b,c
 11933  002FF8  0EFF               	movlw	255
 11934  002FFA  200A               	addwfc	??i2___fladd+1,w,c
 11935  002FFC  6E02               	movwf	i2___fladd@b+1,c
 11936  002FFE  0EFF               	movlw	255
 11937  003000  200B               	addwfc	??i2___fladd+2,w,c
 11938  003002  6E03               	movwf	i2___fladd@b+2,c
 11939  003004  0EFF               	movlw	255
 11940  003006  200C               	addwfc	??i2___fladd+3,w,c
 11941  003008  6E04               	movwf	i2___fladd@b+3,c
 11942  00300A  0E80               	movlw	128
 11943  00300C  1A0D               	xorwf	i2___fladd@signs,f,c
 11944  00300E  6C10               	negf	i2___fladd@grs,c
 11945  003010  5010               	movf	i2___fladd@grs,w,c
 11946  003012  A4D8               	btfss	status,2,c
 11947  003014  D00F               	goto	i2l1012
 11948  003016  0E01               	movlw	1
 11949  003018  2601               	addwf	i2___fladd@b,f,c
 11950  00301A  0E00               	movlw	0
 11951  00301C  2202               	addwfc	i2___fladd@b+1,f,c
 11952  00301E  2203               	addwfc	i2___fladd@b+2,f,c
 11953  003020  2204               	addwfc	i2___fladd@b+3,f,c
 11954  003022  D008               	goto	i2l1012
 11955  003024                     i2l5568:
 11956  003024  5005               	movf	i2___fladd@a,w,c
 11957  003026  5E01               	subwf	i2___fladd@b,f,c
 11958  003028  5006               	movf	i2___fladd@a+1,w,c
 11959  00302A  5A02               	subwfb	i2___fladd@b+1,f,c
 11960  00302C  5007               	movf	i2___fladd@a+2,w,c
 11961  00302E  5A03               	subwfb	i2___fladd@b+2,f,c
 11962  003030  5008               	movf	i2___fladd@a+3,w,c
 11963  003032  5A04               	subwfb	i2___fladd@b+3,f,c
 11964  003034                     i2l1012:
 11965  003034  5001               	movf	i2___fladd@b,w,c
 11966  003036  1002               	iorwf	i2___fladd@b+1,w,c
 11967  003038  1003               	iorwf	i2___fladd@b+2,w,c
 11968  00303A  1004               	iorwf	i2___fladd@b+3,w,c
 11969  00303C  A4D8               	btfss	status,2,c
 11970  00303E  D01C               	goto	i2l5592
 11971  003040  5010               	movf	i2___fladd@grs,w,c
 11972  003042  A4D8               	btfss	status,2,c
 11973  003044  D019               	goto	i2l5592
 11974  003046  0E00               	movlw	0
 11975  003048  6E01               	movwf	?i2___fladd,c
 11976  00304A  0E00               	movlw	0
 11977  00304C  6E02               	movwf	?i2___fladd+1,c
 11978  00304E  0E00               	movlw	0
 11979  003050  6E03               	movwf	?i2___fladd+2,c
 11980  003052  0E00               	movlw	0
 11981  003054  6E04               	movwf	?i2___fladd+3,c
 11982  003056  0012               	return	
 11983  003058                     i2l5576:
 11984  003058  90D8               	bcf	status,0,c
 11985  00305A  3601               	rlcf	i2___fladd@b,f,c
 11986  00305C  3602               	rlcf	i2___fladd@b+1,f,c
 11987  00305E  3603               	rlcf	i2___fladd@b+2,f,c
 11988  003060  3604               	rlcf	i2___fladd@b+3,f,c
 11989  003062  BE10               	btfsc	i2___fladd@grs,7,c
 11990  003064  8001               	bsf	i2___fladd@b,0,c
 11991  003066  A010               	btfss	i2___fladd@grs,0,c
 11992  003068  D002               	goto	i2l5586
 11993  00306A  80D8               	bsf	status,0,c
 11994  00306C  D001               	goto	L19
 11995  00306E                     i2l5586:
 11996  00306E  90D8               	bcf	status,0,c
 11997  003070                     L19:
 11998  003070  3610               	rlcf	i2___fladd@grs,f,c
 11999  003072  500F               	movf	i2___fladd@bexp,w,c
 12000  003074  A4D8               	btfss	status,2,c
 12001  003076  060F               	decf	i2___fladd@bexp,f,c
 12002  003078                     i2l5592:
 12003  003078  AE03               	btfss	i2___fladd@b+2,7,c
 12004  00307A  D7EE               	goto	i2l5576
 12005  00307C                     i2u726_40:
 12006  00307C  0E00               	movlw	0
 12007  00307E  6E0E               	movwf	i2___fladd@aexp,c
 12008  003080  AE10               	btfss	i2___fladd@grs,7,c
 12009  003082  D00B               	goto	i2l1021
 12010  003084  C010  F009         	movff	i2___fladd@grs,??i2___fladd
 12011  003088  0E7F               	movlw	127
 12012  00308A  1609               	andwf	??i2___fladd,f,c
 12013  00308C  B4D8               	btfsc	status,2,c
 12014  00308E  D003               	goto	i2l1022
 12015  003090                     i2u728_40:
 12016  003090  0E01               	movlw	1
 12017  003092  6E0E               	movwf	i2___fladd@aexp,c
 12018  003094  D002               	goto	i2l1021
 12019  003096                     i2l1022:
 12020  003096  B001               	btfsc	i2___fladd@b,0,c
 12021  003098  D7FB               	goto	i2u728_40
 12022  00309A                     i2l1021:
 12023  00309A  500E               	movf	i2___fladd@aexp,w,c
 12024  00309C  B4D8               	btfsc	status,2,c
 12025  00309E  D020               	goto	i2l5612
 12026  0030A0  0E01               	movlw	1
 12027  0030A2  2601               	addwf	i2___fladd@b,f,c
 12028  0030A4  0E00               	movlw	0
 12029  0030A6  2202               	addwfc	i2___fladd@b+1,f,c
 12030  0030A8  2203               	addwfc	i2___fladd@b+2,f,c
 12031  0030AA  2204               	addwfc	i2___fladd@b+3,f,c
 12032  0030AC  A004               	btfss	i2___fladd@b+3,0,c
 12033  0030AE  D018               	goto	i2l5612
 12034  0030B0  C001  F009         	movff	i2___fladd@b,??i2___fladd
 12035  0030B4  C002  F00A         	movff	i2___fladd@b+1,??i2___fladd+1
 12036  0030B8  C003  F00B         	movff	i2___fladd@b+2,??i2___fladd+2
 12037  0030BC  C004  F00C         	movff	i2___fladd@b+3,??i2___fladd+3
 12038  0030C0  340C               	rlcf	??i2___fladd+3,w,c
 12039  0030C2  320C               	rrcf	??i2___fladd+3,f,c
 12040  0030C4  320B               	rrcf	??i2___fladd+2,f,c
 12041  0030C6  320A               	rrcf	??i2___fladd+1,f,c
 12042  0030C8  3209               	rrcf	??i2___fladd,f,c
 12043  0030CA  C009  F001         	movff	??i2___fladd,i2___fladd@b
 12044  0030CE  C00A  F002         	movff	??i2___fladd+1,i2___fladd@b+1
 12045  0030D2  C00B  F003         	movff	??i2___fladd+2,i2___fladd@b+2
 12046  0030D6  C00C  F004         	movff	??i2___fladd+3,i2___fladd@b+3
 12047  0030DA  280F               	incf	i2___fladd@bexp,w,c
 12048  0030DC  A4D8               	btfss	status,2,c
 12049  0030DE  2A0F               	incf	i2___fladd@bexp,f,c
 12050  0030E0                     i2l5612:
 12051  0030E0  280F               	incf	i2___fladd@bexp,w,c
 12052  0030E2  B4D8               	btfsc	status,2,c
 12053  0030E4  D003               	goto	i2u734_40
 12054  0030E6  500F               	movf	i2___fladd@bexp,w,c
 12055  0030E8  A4D8               	btfss	status,2,c
 12056  0030EA  D00D               	goto	i2l5620
 12057  0030EC                     i2u734_40:
 12058  0030EC  0E00               	movlw	0
 12059  0030EE  6E01               	movwf	i2___fladd@b,c
 12060  0030F0  0E00               	movlw	0
 12061  0030F2  6E02               	movwf	i2___fladd@b+1,c
 12062  0030F4  0E00               	movlw	0
 12063  0030F6  6E03               	movwf	i2___fladd@b+2,c
 12064  0030F8  0E00               	movlw	0
 12065  0030FA  6E04               	movwf	i2___fladd@b+3,c
 12066  0030FC  500F               	movf	i2___fladd@bexp,w,c
 12067  0030FE  A4D8               	btfss	status,2,c
 12068  003100  D002               	goto	i2l5620
 12069  003102  0E00               	movlw	0
 12070  003104  6E0D               	movwf	i2___fladd@signs,c
 12071  003106                     i2l5620:
 12072  003106  A00F               	btfss	i2___fladd@bexp,0,c
 12073  003108  D002               	goto	i2l5624
 12074  00310A  8E03               	bsf	i2___fladd@b+2,7,c
 12075  00310C  D001               	goto	i2l5626
 12076  00310E                     i2l5624:
 12077  00310E  9E03               	bcf	i2___fladd@b+2,7,c
 12078  003110                     i2l5626:
 12079  003110  90D8               	bcf	status,0,c
 12080  003112  300F               	rrcf	i2___fladd@bexp,w,c
 12081  003114  6E04               	movwf	i2___fladd@b+3,c
 12082  003116  BE0D               	btfsc	i2___fladd@signs,7,c
 12083  003118  8E04               	bsf	i2___fladd@b+3,7,c
 12084  00311A  C001  F001         	movff	i2___fladd@b,?i2___fladd
 12085  00311E  C002  F002         	movff	i2___fladd@b+1,?i2___fladd+1
 12086  003122  C003  F003         	movff	i2___fladd@b+2,?i2___fladd+2
 12087  003126  C004  F004         	movff	i2___fladd@b+3,?i2___fladd+3
 12088  00312A  0012               	return		;funcret
 12089  00312C                     __end_ofi2___fladd:
 12090                           	opt callstack 0
 12091                           
 12092                           	psect	rparam
 12093  0000                     
 12094                           	psect	temp
 12095  00006E                     btemp:
 12096                           	opt callstack 0
 12097  00006E                     	ds	1
 12098  0000                     int$flags	set	btemp
 12099  0000                     wtemp8	set	btemp+1
 12100  0000                     ttemp5	set	btemp+1
 12101  0000                     ttemp6	set	btemp+4
 12102  0000                     ttemp7	set	btemp+8
 12103                           tosu	equ	0xFFF
 12104                           tosh	equ	0xFFE
 12105                           tosl	equ	0xFFD
 12106                           stkptr	equ	0xFFC
 12107                           pclatu	equ	0xFFB
 12108                           pclath	equ	0xFFA
 12109                           pcl	equ	0xFF9
 12110                           tblptru	equ	0xFF8
 12111                           tblptrh	equ	0xFF7
 12112                           tblptrl	equ	0xFF6
 12113                           tablat	equ	0xFF5
 12114                           prodh	equ	0xFF4
 12115                           prodl	equ	0xFF3
 12116                           indf0	equ	0xFEF
 12117                           postinc0	equ	0xFEE
 12118                           postdec0	equ	0xFED
 12119                           preinc0	equ	0xFEC
 12120                           plusw0	equ	0xFEB
 12121                           fsr0h	equ	0xFEA
 12122                           fsr0l	equ	0xFE9
 12123                           wreg	equ	0xFE8
 12124                           indf1	equ	0xFE7
 12125                           postinc1	equ	0xFE6
 12126                           postdec1	equ	0xFE5
 12127                           preinc1	equ	0xFE4
 12128                           plusw1	equ	0xFE3
 12129                           fsr1h	equ	0xFE2
 12130                           fsr1l	equ	0xFE1
 12131                           bsr	equ	0xFE0
 12132                           indf2	equ	0xFDF
 12133                           postinc2	equ	0xFDE
 12134                           postdec2	equ	0xFDD
 12135                           preinc2	equ	0xFDC
 12136                           plusw2	equ	0xFDB
 12137                           fsr2h	equ	0xFDA
 12138                           fsr2l	equ	0xFD9
 12139                           status	equ	0xFD8


Data Sizes:
    Strings     144
    Constant    7
    Data        0
    BSS         510
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     95     109
    BANK0           128    110     112
    BANK1           256     23     117
    BANK2           256      0     200
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_23(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_23(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_12(CODE[14]), STR_11(CODE[14]), STR_10(CODE[15]), STR_9(CODE[15]), 
		 -> STR_8(CODE[10]), STR_7(CODE[11]), STR_6(CODE[10]), STR_5(CODE[16]), 
		 -> STR_4(CODE[9]), STR_3(CODE[10]), STR_2(CODE[15]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1245_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_12(CODE[14]), STR_11(CODE[14]), STR_10(CODE[15]), STR_9(CODE[15]), 
		 -> STR_8(CODE[10]), STR_7(CODE[11]), STR_6(CODE[10]), STR_5(CODE[16]), 
		 -> STR_4(CODE[9]), STR_3(CODE[10]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_12(CODE[14]), STR_11(CODE[14]), STR_10(CODE[15]), STR_9(CODE[15]), 
		 -> STR_8(CODE[10]), STR_7(CODE[11]), STR_6(CODE[10]), STR_5(CODE[16]), 
		 -> STR_4(CODE[9]), STR_3(CODE[10]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_12(CODE[14]), STR_11(CODE[14]), STR_10(CODE[15]), STR_9(CODE[15]), 
		 -> STR_8(CODE[10]), STR_7(CODE[11]), STR_6(CODE[10]), STR_5(CODE[16]), 
		 -> STR_4(CODE[9]), STR_3(CODE[10]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    time_elapsed@array	PTR int  size(2) Largest target is 4
		 -> main@op_time(BANK1[4]), 

    main@temp	PTR unsigned char  size(2) Largest target is 1
		 -> main@begin_sec(BANK1[1]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _time_elapsed->___awdiv
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_lcd_byte
    _abs->___aomod
    _atoi->_isspace
    _line_2->_lcd_Instructions
    _initialize_LCD->_lcd_Instructions
    _cursor_reset->_lcd_Instructions
    _clear->_lcd_Instructions
    _lcd_Instructions->_lcd_byte
    _I2C_Master_Write->___fltol
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->i2___fladd

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0   49845
                                            106 BANK0      4     4      0
                                              0 BANK1     23    23      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fltol
                           ___xxtofl
                              _clear
                       _cursor_reset
                     _initialize_LCD
                             _line_2
                             _printf
                       _time_elapsed
 ---------------------------------------------------------------------------------
 (1) _time_elapsed                                        24    19      5    3087
                                             24 COMRAM    24    19      5
                            ___awdiv
                            ___awmod
                             ___wmul
                            _atohtoi
 ---------------------------------------------------------------------------------
 (2) _atohtoi                                              5     3      2     419
                                             16 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   41964
                                             91 COMRAM     4     4      0
                                             98 BANK0      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   40988
                                             89 COMRAM     2     2      0
                                             92 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   40599
                                             85 COMRAM     4     4      0
                                             56 BANK0     36    30      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5693
                                             46 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                             22 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                             16 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   23067
                                             61 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1020
                                             22 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     541
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                             16 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             41 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                             16 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                             16 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3089
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2614
                                             16 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                             16 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2352
                                             16 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                             16 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                             16 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                             16 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5408
                                             46 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3759
                                             35 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1304
                                             28 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     903
                                             19 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     135
                                             18 COMRAM     1     1      0
                           _lcd_byte
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             34 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                             16 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                             16 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1640
                                             23 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                             16 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     799
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _line_2                                               0     0      0     135
                   _lcd_Instructions
 ---------------------------------------------------------------------------------
 (1) _initialize_LCD                                       1     1      0     135
                                             19 COMRAM     1     1      0
                   _lcd_Instructions
 ---------------------------------------------------------------------------------
 (1) _cursor_reset                                         0     0      0     135
                   _lcd_Instructions
 ---------------------------------------------------------------------------------
 (1) _clear                                                1     1      0     135
                                             19 COMRAM     1     1      0
                   _lcd_Instructions
 ---------------------------------------------------------------------------------
 (2) _lcd_Instructions                                     1     1      0     135
                                             18 COMRAM     1     1      0
                           _lcd_byte
 ---------------------------------------------------------------------------------
 (9) _lcd_byte                                             2     2      0     113
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                             16 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1390
                                             26 COMRAM     2     0      2
                    _I2C_Master_Wait
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      45
                                             17 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     586
                                             29 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                             16 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _interruptHandler                                    0     0      0    2088
                          i2___fladd
 ---------------------------------------------------------------------------------
 (11) i2___fladd                                          16     8      8    2088
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
     ___fltol (ARG)
   ___fltol
   ___xxtofl
   _clear
     _lcd_Instructions
       _lcd_byte
   _cursor_reset
     _lcd_Instructions
       _lcd_byte
   _initialize_LCD
     _lcd_Instructions
       _lcd_byte
   _line_2
     _lcd_Instructions
       _lcd_byte
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _lcd_byte
             _fputs
               _fputc
                 _putch
                   _lcd_byte
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _lcd_byte
             _fputs
               _fputc
                 _putch
                   _lcd_byte
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _lcd_byte
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _lcd_byte
             _fputs
               _fputc
                 _putch
                   _lcd_byte
             _strlen
           _toupper
             _islower
   _time_elapsed
     ___awdiv
     ___awmod
     ___wmul
     _atohtoi

 _interruptHandler (ROOT)
   i2___fladd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     17      75       7       45.7%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     6E      70       5       87.5%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5F      6D       1       86.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2E2      34        0.0%
DATA                 0      0     2E2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar  7 09:09:51 2019

               ___fldiv@aexp 0029                 ___fldiv@bexp 0028                 ___fldiv@sign 0021  
               ___awdiv@sign 0016          ___wmul@multiplicand 0013                  __CFG_BORV$3 000000  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                          l212 3FDA                          l206 3FAC  
                        l330 1404                          l263 448E                          l274 3426  
                        l276 342E                          l356 16E6                          l390 3612  
                        l392 361A                          l732 4158                          l494 4708  
                        l996 2C56                          l997 2C34                 __CFG_CPB$OFF 000000  
               __CFG_CPD$OFF 000000                  i2___fladd@a 0005                  i2___fladd@b 0001  
                        _abs 4B06                          _pad 4460                 ___awmod@sign 0016  
       lcd_Instructions@data 0013                          wreg 000FE8                 ___flmul@aexp 0022  
               ___flmul@bexp 0023                 ___flmul@sign 001D                 ___flmul@temp 0028  
               ___flmul@prod 0024                  _total_cones 010A                  _total_holes 0106  
               __CFG_LVP$OFF 000000                  main@end_min 0169                  main@end_sec 0168  
               ___fltol@exp1 001A                 __CFG_WDT$OFF 000000                         l1012 2D28  
                       l1021 2D8E                         l1022 2D8A                         l1122 3C9E  
                       l1051 329E                         ?_abs 0023                         l1062 330C  
                       l1063 3308                         l1129 3D1C                         l1153 4B2E  
                       l1081 2842                         l1090 2A5A                         l1091 2A56  
                       l1184 3C56                         l4000 3998                         l1098 2AE0  
                       l4100 3E66                         l4004 39C6                         l1196 3938  
                       l1292 4982                         l1279 4938                         l4040 3A04  
                       l4104 3E7C                         l4200 32B4                         l5012 3B8C  
                       l4052 3A52                         l4108 3EA2                         l4124 3158  
                       l5022 3BF6                         l5014 3B94                         l5006 3B7C  
                       l4054 3A66                         l4046 3A2C                         l4230 3374  
                       l4206 32D2                         l5016 3B9A                         l4072 3AFE  
                       l4064 3AC2                         l4400 4638                         l4240 33AA  
                       l4144 3198                         l4128 315C                         l5104 2326  
                       l5018 3BC2                         l4242 33AC                         l4234 339E  
                       l4226 3350                         l4170 31FE                         l4162 31E6  
                       l5042 43E8                         l5106 2344                         l4068 3AD8  
                       l4092 3E0A                         l4084 3DCC                         l3700 4C00  
                       l4180 324E                         l4156 31D0                         l4148 319C  
                       l4500 4190                         l4332 2A02                         l5044 43F6  
                       l5124 242C                         l5108 2352                         l6020 1A9C  
                       l5302 46FA                         l4094 3E1E                         l3702 4C04  
                       l4406 464E                         l4422 4680                         l4262 27EE  
                       l5134 24DE                         l5070 225E                         l5400 3CCC  
                       l4088 3DF0                         l4408 4656                         l4280 282E  
                       l4264 27F2                         l6112 1CF2                         l6104 1C84  
                       l5402 3CD2                         l4602 3550                         l4426 468E  
                       l4418 4676                         l4442 473A                         l4194 329C  
                       l4362 2ABC                         l4338 2A20                         l4290 2860  
                       l4282 2832                         l4266 2802                         l3802 2C42  
                       l5162 265C                         l5146 2564                         l5090 2278  
                       l5082 226A                         l5074 2262                         l5066 224C  
                       l5412 3D42                         l5404 3CDE                         l4188 3276  
                       l4508 4BE4                         l3804 2C46                         l3724 2B40  
                       l5068 224E                         l5092 22BA                         l5228 3EF4  
                       l6220 20F2                         l6212 20BA                         l6132 1D38  
                       l6124 1D20                         l5430 3D8E                         l5414 3D4E  
                       l5406 3D04                         l4622 35B4                         l4462 4780  
                       l4454 4768                         l4446 4748                         l4438 472E  
                       l4470 45BE                         l4374 2AFE                         l4358 2A9E  
                       l3902 2E02                         l4534 42C8                         l4518 427E  
                       l4702 12D4                         l5182 2768                         l5086 226E  
                       l5078 2266                         l5238 3F22                         l6230 21BE  
                       l6126 1D28                         l6038 1AD2                         ?_pad 0024  
                       l4448 4750                         l3904 2E04                         l3760 2BAC  
                       l3752 2B8C                         l3728 2B44                         l4552 4308  
                       l4544 42E0                         l4800 16DE                         l4712 1398  
                       l4640 10E4                         l5176 272C                         l5192 278E  
                       l5280 480A                         l5248 3F50                         l6208 2098  
                       l5290 46BA                         l3682 47A2                         l3922 4478  
                       l4626 35CC                         l4394 4628                         l4458 4772  
                       l4474 45F2                         l4490 412C                         l3826 2C9C  
                       l3818 2C7A                         l4546 42EC                         l4538 42D8  
                       l4802 1700                         l4706 130E                         l5186 2774  
                       l5282 4830                         l5258 3F7E                         l6234 21E0  
                       l6218 20E8                         l6170 1F02                         l6154 1E7E  
                       l6146 1DCE                         l6138 1D4A                         l6074 1BE2  
                       l5292 46C6                         l4564 4A92                         l3692 4AA4  
                       l3932 44B0                         l3828 2CA0                         l3836 2CB2  
                       l3748 2B88                         l4900 19A8                         l4724 13EC  
                       l4708 135C                         l4652 1112                         l4660 1128  
                       l6180 1F52                         l3926 4486                         l4574 340A  
                       l4478 4610                         l4494 4142                         l4486 40F8  
                       l3854 2D4C                         l3870 2D6C                         l3846 2D18  
                       l3790 2BE8                         l4814 1782                         l4742 145C  
                       l4734 1414                         l4670 1194                         l6158 1EB4  
                       l3696 4ABA                         l3936 44DC                         l3928 4498  
                       l4592 3458                         l3864 2D62                         l3952 420C  
                       l4760 14A2                         l4744 1460                         l4728 140E  
                       l4672 11AC                         l6096 1C5C                         l5394 3CAE  
                       l3890 2DD4                         l3962 4256                         l4826 17B2  
                       l4834 17D2                         l4842 17F6                         l4850 188E  
                       l4770 14DC                         l4754 147E                         l4690 1260  
                       l4588 3448                         l3956 4216                         l4916 1A08  
                       l4924 1A42                         l4764 14B2                         l4862 18D0  
                       l4678 11DC                         l6198 1FCC                         l3968 48B2  
                       l4880 1926                         l4792 1686                         l4688 1248  
                       l4696 1290                         l4952 3680                         l4944 365E  
                       l3898 2DFA                         l3986 389A                         l4890 197C  
                       l4786 1648                         l4778 15D2                         l4938 362E  
                       l3996 395A                         l4878 191C                         l4990 37F8  
                       l4966 370E                         l4974 3784                         l4996 3B32  
                       l4998 3B36                         STR_1 1027                         STR_2 1036  
                       STR_3 1072                         STR_4 107C                         STR_5 1008  
                       STR_6 1068                         STR_7 1053                         STR_8 105E  
                       STR_9 1018                         _LATD 000F8C                         u4010 2C0A  
                       u4020 2C1A                         u4030 2C1C                         u5000 335E  
                       u5010 3382                         u4210 2D84                         u5100 284E  
                       u4060 2C5E                         u5110 29C4                         u4310 4B60  
                       u5200 2ACA                         u4320 4B62                         u5115 29BA  
                       u4500 3868                         u5310 4754                         u5150 2A50  
                       u4270 2DE0                         u4190 2D70                         u4430 424E  
                       u4510 3888                         u4440 4250                         u4600 4AFE  
                       u6200 3608                         u4425 4230                         u4505 385E  
                       u4370 4B14                         u5250 465A                         u4450 48EC  
                       u4610 4B00                         u4380 41D2                         u3900 4B90  
                       u6140 1992                         u4620 496A                         u6300 3794  
                       u6220 367C                         u5510 4A8E                         u4710 3A6A  
                       u5190 2AAC                         u5430 426C                         u4550 3918  
                       u3910 4B92                         u4470 491E                         u4630 496C  
                       u6230 36B2                         u4535 38B2                         u6400 3C28  
                       u5520 33DC                         u5360 460C                         u5440 429C  
                       u4536 38B8                         u4480 4920                         u6160 19F2  
                       u6080 18B2                         u6320 37B6                         u6240 36B4  
                       u4385 41C8                         u4537 38C6                         u4457 48E2  
                       u6321 37B4                         u4650 4BC0                         u3850 479A  
                       u5610 3580                         u5530 33DE                         u4570 3978  
                       u6170 19F4                         u6330 37C4                         u5611 357E  
                       u4555 390E                         u4660 4BC2                         u5620 358E  
                       u6340 37C8                         u6260 36EC                         u5445 4292  
                       u3870 47E2                         u5630 3592                         u6270 36EE  
                       u8007 4C9E                         u4575 396E                         u5560 341C  
                       u5480 42F2                         u5720 116A                         u8017 4864  
                       u6370 3B78                         u4770 3E22                         u5650 359E  
                       u5810 13C0                         u5730 116C                         u6290 3760  
                       u6530 238A                         u8027 486E                         u4691 3A32  
                       u5580 3442                         u6620 25E6                         u6540 238C  
                       u6700 3EDC                         u8037 4890                         u6390 3C26  
                       u5590 355E                         u5910 147A                         u6470 443C  
                       u6630 25E8                         u6550 239A                         u6710 3EEA  
                       u8047 489A                         u6295 374E                         u4960 3302  
                       u5840 13FA                         u5760 121E                         u6800 3FBC  
                       u6720 3F04                         u5770 1220                         u5690 1102  
                       u6810 3FCC                         u6730 3F14                         u6660 2690  
                       u6740 3F32                         u5870 142C                         u6590 2460  
                       u6750 3F42                         u6840 46CA                         u6760 3F60  
                       u6770 3F70                         u7810 1F48                         u6780 3F8E  
                       u6950 3D58                         u6790 3F9E                         u7750 1D5A  
                       u7840 20D4                         u6865 4342                         u7850 20DE  
                       u6875 438A                         u7907 1C4C                         u6885 4C8A  
                       u7917 1C74                         u6886 4C8C                         u7870 21FA  
                       u7927 1EE4                         u7937 1F5E             ??_initialize_LCD 0014  
                       u7947 1FB4                         u7957 20A4                         u7967 21CA  
                       u7977 4CB6                         u7897 1B52                         u7987 49D8  
                       u7997 4A0C                         abs@a 0023                 lcd_byte@data 0012  
                       _dbuf 010E                         _atoi 3B20                  main@op_time 016A  
                       _main 1A68                         _dtoa 33B4     __end_of_interruptHandler 458A  
                       _prec 006A                 lcd_byte@temp 0011                         _nout 00EE  
                       pad@i 002B                         pad@p 0028                         fsr1h 000FE2  
                       fsr2h 000FDA                         indf1 000FE7                         indf2 000FDF  
                       fsr1l 000FE1                         pad@w 002D                         fsr2l 000FD9  
                       btemp 006E                         _xtoa 35F6                ___fpclassifyf 4194  
                       prodh 000FF4                         prodl 000FF3                         start 000E  
              __CFG_IESO$OFF 000000              ___fldiv@new_exp 0022                 _tolower$1306 001D  
              __CFG_MCLRE$ON 000000                 ___param_bank 000000                 _total_cracks 0108  
                      ??_abs 0025                        ??_pad 002A        I2C_Master_Read@ackBit 0012  
           ?_I2C_Master_Init 001E             ?_I2C_Master_Read 0001             ?_I2C_Master_Wait 0001  
           ?_I2C_Master_Stop 0001                ___fltol@sign1 0019              __end_of___aodiv 3B20  
                      ?_atoi 0018              __end_of___fladd 2E20                        ?_main 0001  
                      ?_dtoa 002F              __end_of___aomod 3EC4              __end_of___fldiv 33B4  
            __end_of___awdiv 4698              __end_of___flneg 4BF6                        STR_10 1018  
                      STR_11 1045                        STR_12 1045                        STR_21 1095  
                      STR_13 1085                        STR_14 108D                        STR_23 1095  
                      STR_17 1089                        STR_18 1091              __end_of___awmod 478A  
            __end_of___flmul 2B14              __end_of___flsub 49D2              __end_of___fltol 431A  
            __end_of___lldiv 471A              ___awdiv@divisor 0013                        ?_xtoa 002F  
            ___awdiv@counter 0015                        i2l996 2F62                        i2l997 2F40  
               vfpfcnvrt@fmt 00BA                 vfpfcnvrt@llu 00C6                        _TRISD 000F95  
              __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000                i2___fladd@grs 0010  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000              __end_of_atohtoi 3FE0  
             __CFG_EBTRB$OFF 000000                        _clear 4C92                        _flags 006C  
                      _fputc 478A              __end_of_isalpha 4B06                        _fputs 4A9A  
            __end_of_isdigit 4BC8                        _reset 1001                        atoi@n 0025  
                      pad@fp 0024                        atoi@s 0018                        _width 0068  
                      _putch 4CAA                        main@i 0173                        dtoa@d 0031  
                      dtoa@i 0051                        dtoa@n 0049                        dtoa@p 0043  
                      dtoa@s 0047                        dtoa@w 0045              __end_of_islower 4B68  
            __end_of_isspace 4A9A              __end_of_isupper 4B98                        tablat 000FF5  
                      ttemp5 006F                        ttemp6 0072                        ttemp7 0076  
                      status 000FD8  I2C_Master_Read@receivedByte 0013                        wtemp8 006F  
             ?___fpclassifyf 0011              __end_of_tolower 4942                        xtoa@c 0054  
                      xtoa@d 0031                        xtoa@i 0052                        xtoa@n 004A  
                      xtoa@p 0046                        xtoa@w 0048                        xtoa@x 0039  
            __end_of_strncmp 4460              __end_of_toupper 498C           __size_ofi2___fladd 030C  
               _toupper$1321 001D              __initialization 4A18                main@begin_min 0167  
              main@begin_sec 016E                 __end_of_atoi 3C60                 __end_of_main 2206  
               __end_of_dtoa 35F6                 __end_of_xtoa 3822               __CFG_OSC$HSPLL 000000  
                     ??_atoi 001A                       ??_main 00EA                       ??_dtoa 0039  
                     ??_xtoa 003A                __activetblptr 000002            ?_I2C_Master_Start 0001  
          ?_I2C_Master_Write 001B                       ?_clear 0001           ??_I2C_Master_Start 0012  
         ??_I2C_Master_Write 001D                       ?_fputc 0014                       ?_fputs 001D  
           ___awdiv@dividend 0011                       ?_putch 0001                       _INT0IE 007F94  
                     _INT0IF 007F91                 atohtoi@ascii 0013                       _INT1IE 007F83  
                     _INT1IF 007F80                       _INT2IE 007F84                       _INT2IF 007F81  
                     i2l1012 3034                       i2l1021 309A                       i2l1022 3096  
                     i2l5512 2EF4                       i2l5450 2E50                       i2l5620 3106  
                     i2l5612 30E0                       i2l5540 2F86                       i2l5524 2F4E  
                     i2l5550 2FAC                       i2l5526 2F52                       i2l5470 2E94  
                     i2l5446 2E4C                       i2l5624 310E                       i2l5626 3110  
                     i2l5482 2EB8                       i2l5474 2E98                       i2l5548 2FA8  
                     i2l5558 2FBE                       i2l5576 3058                       i2l5592 3078  
                     i2l5568 3024                       i2l5920 4584                       i2l5912 4548  
                     i2l5904 450C                       i2l5586 306E                vfpfcnvrt@done 00CE  
                     _SSPADD 000FC8                       _SSPBUF 000FC9             __end_of___xxtofl 3DA0  
             i2___fladd@aexp 000E               i2___fladd@bexp 000F               __CFG_XINST$OFF 000000  
               vfprintf@cfmt 005A             __end_of_lcd_byte 48A2                       ___flge 40C4  
                     ___fleq 458A                    ??___aodiv 0021                    ??___fladd 0019  
                  ??___aomod 0021                       ___wmul 4C48                    ??___fldiv 0019  
                  ??___awdiv 0015                    ??___flneg 0015               __CFG_STVREN$ON 000000  
                  ??___awmod 0015                    ??___flmul 0019                    ??___flsub 0032  
                  ??___fltol 0015                    ??___lldiv 0019                       _efgtoa 109A  
              ?_cursor_reset 0001                       _floorf 3822                       _line_2 4CE6  
                     clear_0 4A1E                       clear_1 4A2A                       clear_2 4A36  
                     clear_3 4A48             ___awdiv@quotient 0017              ___awmod@divisor 0013  
         _distance_travelled 0100              ___awmod@counter 0015                       _printf 4C20  
                     pad@buf 0026                       dtoa@fp 002F                       _strcpy 48A2  
                     _strlen 4BF6                    ??_atohtoi 0013                       fputc@c 0014  
                     fputs@c 0021                       fputs@i 0022                       fputs@s 001D  
                  ??_isalpha 0013            __end_ofi2___fladd 312C                    ??_isdigit 0013  
            ___fpclassifyf@e 0019              ___fpclassifyf@u 001B              ___fpclassifyf@x 0011  
                  ??_islower 0013                 __mediumconst 0000                    ??_isspace 0013  
                     tblptrh 000FF7                    ??_isupper 0013                       tblptrl 000FF6  
                     tblptru 000FF8             __end_of_vfprintf 484C                    ??_tolower 0019  
                     xtoa@fp 002F                    ??_strncmp 0017                    ??_toupper 0019  
                 ___flge@ff1 002A                   ___flge@ff2 002E              ??___fpclassifyf 0015  
               ___xxtofl@arg 001B                 ___xxtofl@exp 001A                 ___xxtofl@val 0011  
                 ___fleq@ff1 0011                   ___fleq@ff2 0015                   __accesstop 0080  
    __end_of__initialization 4A4E              __CFG_PBADEN$OFF 000000                   ___flneg@f1 0011  
              ___rparam_used 000001                   ___fltol@f1 0011               __pcstackCOMRAM 0001  
              __end_of_clear 4CAA               ??_cursor_reset 0014                __end_of_fputc 47F6  
              __end_of_fputs 4AD2                __end_of_reset 1008                __end_of_putch 4CBE  
  __size_of_lcd_Instructions 000C                      ??_clear 0014                      ??_fputc 0018  
                    ??_fputs 0021                      ??_putch 0013                   __pbssBANK0 00EE  
                 __pbssBANK1 0100                   __pbssBANK2 0200                   __pbssBANK3 0300  
                 _data_count 010C            ?_interruptHandler 0001           ??_interruptHandler 0011  
                 _efgtoa$682 0088                   _efgtoa$677 0084                   _efgtoa$686 008A  
                 _efgtoa$678 0086                   _efgtoa$687 008C                   _efgtoa$688 008E  
                    ?___flge 002A                      ?___fleq 0011            time_elapsed@end_s 0028  
          time_elapsed@array 001C                      ?___wmul 0011          time_elapsed@begin_s 0026  
                    ?_efgtoa 003E                      ?_floorf 002A                      ?_line_2 0001  
        time_elapsed@end_min 001A                   _crack_dist 0200          time_elapsed@end_sec 001B  
                    ?_printf 00E2                      ?_strcpy 0011                      ?_strlen 0011  
        time_elapsed@minutes 002A          time_elapsed@seconds 002C        time_elapsed@b_min_int 001E  
                  ?___xxtofl 0011        time_elapsed@b_sec_int 0020           __size_of_vfpfcnvrt 05BC  
      time_elapsed@begin_min 002E        time_elapsed@begin_sec 0019          time_elapsed@total_s 002F  
                    _SSPCON1 000FC6                      _SSPCON2 000FC5        time_elapsed@e_min_int 0022  
      time_elapsed@e_sec_int 0024                    ?_lcd_byte 0001                      _SSPSTAT 000FC7  
            i2___fladd@signs 000D                      __Hparam 0000                      __Lparam 0000  
            __size_of___flge 00D0              __size_of___fleq 008A                      ___aodiv 39D8  
                    ___fladd 2B14                      ___aomod 3DA0                      ___fldiv 312C  
                    ___awdiv 4614                      ___flneg 4BC8                      ___awmod 471A  
                    ___flmul 27C2                      ___flsub 498C                      ___fltol 4260  
                    ___lldiv 4698              __size_of___wmul 0026                    ?_vfprintf 00DC  
               __psmallconst 1000              __size_of_efgtoa 09CE              __size_of_floorf 01B6  
            __size_of_line_2 0008                      __pcinit 4A18                      __ramtop 1000  
                    __ptext0 1A68                      __ptext1 3FE0                      __ptext2 3EC4  
                    __ptext3 4C20                      __ptext4 47F6                      __ptext5 2206  
                    __ptext6 35F6                      __ptext7 4942                      __ptext8 4B38  
                    __ptext9 4AD2              __size_of_printf 0028                      _atohtoi 3EC4  
            __size_of_strcpy 0054              __size_of_strlen 002A                 __size_of_abs 0032  
               __size_of_pad 0096                      _isalpha 4AD2                      _isdigit 4B98  
                 ??___xxtofl 0015             ___awmod@dividend 0011                      _islower 4B38  
                    _isspace 4A5C                      _isupper 4B68     __size_of_I2C_Master_Init 00A4  
   __size_of_I2C_Master_Read 0024                      efgtoa@c 0044                      efgtoa@d 0098  
                    efgtoa@e 00B0                      efgtoa@f 0040                      efgtoa@g 00AC  
                    efgtoa@h 00A2                      efgtoa@i 00AA                      efgtoa@l 00A6  
                    efgtoa@m 0094                      efgtoa@n 00B2                      efgtoa@p 009C  
                    efgtoa@t 0090                      efgtoa@u 00B4                      efgtoa@w 009F  
   __size_of_I2C_Master_Wait 0012     __size_of_I2C_Master_Stop 0008                      atoi@neg 001E  
              ?_time_elapsed 0019                      _tolower 48F6                   ??_lcd_byte 0011  
                    _strncmp 43BE               __pintcode_body 44F6                      _toupper 4942  
       end_of_initialization 4A4E         __end_of_cursor_reset 4CF6                      floorf@e 0038  
                    floorf@m 0034                      floorf@u 003A                      floorf@x 002A  
                    fputc@fp 0016                __Lmediumconst 0000                      int_func 44F6  
                    fputs@fp 001F    __size_of_I2C_Master_Start 0008    __size_of_I2C_Master_Write 000A  
            ___lldiv@divisor 0015              ___lldiv@counter 001D            __end_of_vfpfcnvrt 27C2  
                 efgtoa@mode 00A1                   efgtoa@sign 009A      __size_of_initialize_LCD 0046  
                    postdec2 000FDD                      postinc0 000FEE                      postinc1 000FE6  
                    postinc2 000FDE                   ??_vfprintf 005A                      strcpy@d 0019  
                    strlen@a 0013                      strcpy@s 0017                      strlen@s 0011  
           _lcd_Instructions 4CD0                  ___fladd@grs 0020                ___xxtofl@sign 0019  
                  _TRISAbits 000F92                    _TRISCbits 000F94               ??_time_elapsed 001E  
                ___fldiv@grs 0024                  ___fldiv@rem 001D                    i2___fladd 2E20  
                ___flmul@grs 001E               __end_of___flge 4194               __end_of___fleq 4614  
                vfpfcnvrt@ap 00BC                  vfpfcnvrt@ct 00D8                  vfpfcnvrt@fp 00B8  
                vfpfcnvrt@ll 00BE               __end_of___wmul 4C6E               __end_of_efgtoa 1A68  
             __end_of_floorf 39D8               __end_of_line_2 4CEE                   floorf@F524 0060  
             __end_of_printf 4C48               __end_of_strcpy 48F6               __end_of_strlen 4C20  
        start_initialization 4A18                  __end_of_abs 4B38                  __end_of_pad 44F6  
                 ?i2___fladd 0001            ??_I2C_Master_Init 0022            ??_I2C_Master_Read 0012  
          ??_I2C_Master_Wait 0011            ??_I2C_Master_Stop 0012        __end_of___fpclassifyf 4260  
                vfprintf@fmt 00DE                     ??___flge 0032                     ??___fleq 0019  
                   ??___wmul 0015                     ??_efgtoa 0045     I2C_Master_Init@clockFreq 001E  
                   ??_floorf 002E             __CFG_LPT1OSC$OFF 000000                     ??_line_2 0014  
                   ??_printf 005C    __size_of_interruptHandler 4582                     ??_strcpy 0015  
                   ??_strlen 0013                    ___fladd@a 0015                    ___fladd@b 0011  
                  ___fldiv@a 0015                    ___fldiv@b 0011              main@break_while 016F  
                  ___flmul@a 0015                    ___flmul@b 0011                  __pbssCOMRAM 0060  
                  ___flsub@a 002E                    ___flsub@b 002A        __size_of_cursor_reset 0008  
              __pcstackBANK0 0080                __pcstackBANK1 015E             ___aodiv@dividend 0011  
          __size_of___xxtofl 0140            __size_of_lcd_byte 0056                    _atoi$1192 0020  
                  _atoi$1193 0024                    _atoi$1194 0022             _I2C_Master_Start 4CFE  
           _I2C_Master_Write 4CDC            __CFG_CCP2MX$PORTC 000000               _initialize_LCD 49D2  
                  __pintcode 0008         __end_of_time_elapsed 40C4                     ?___aodiv 0011  
                   ?___fladd 0011                     ?___aomod 0011                     ?___fldiv 0011  
                   ?___awdiv 0011             ___aodiv@quotient 0023                     ?___flneg 0011  
                   ?___awmod 0011                     ?___flmul 0011                     ?___flsub 002A  
                   ?___fltol 0011                     ?___lldiv 0011                 _cursor_reset 4CEE  
          __size_of_vfprintf 0056                     ?_atohtoi 0011                  __smallconst 1000  
                   ?_isalpha 0011                     ?_isdigit 0011                     ?_islower 0011  
                   ?_isspace 0011                    _hole_dist 0300                     ?_isupper 0011  
             __size_of_clear 0018                  ??i2___fladd 0009                     ?_tolower 0017  
             __size_of_fputc 006C               __size_of_fputs 0038                     ?_strncmp 0011  
                   ?_toupper 0017               __size_of_putch 0014     __end_of_lcd_Instructions 4CDC  
             ___wmul@product 0015                     _LATAbits 000F89                     _LATDbits 000F8C  
     __end_of_initialize_LCD 4A18                     i2u710_40 2F28                     i2u713_40 2F6A  
                   i2u708_40 2F16                     i2u709_40 2F26                     i2u734_40 30EC  
                   i2u726_40 307C                     i2u728_40 3090             __CFG_WDTPS$32768 000000  
                  _vfpfcnvrt 2206                    main@i_310 0171            ___wmul@multiplier 0011  
               _isspace$1232 0017                   vfpfcnvrt@c 00DB                   vfpfcnvrt@f 00D4  
                _INTCON3bits 000FF0              ?_initialize_LCD 0001                     __Hrparam 0000  
                 vfprintf@ap 00E0                     __Lrparam 0000                   vfprintf@fp 00DC  
         __CFG_BOREN$SBORDIS 000000             __size_of___aodiv 0148             __size_of___fladd 030C  
           __size_of___aomod 0124             __size_of___fldiv 0288             __size_of___awdiv 0084  
           __size_of___flneg 002E             __size_of___awmod 0070             __size_of___flmul 0352  
           __size_of___flsub 0046             __size_of___fltol 00BA             __size_of___lldiv 0082  
                 ?_vfpfcnvrt 00B8              ___aodiv@divisor 0019             _interruptHandler 0008  
            ___aodiv@counter 0021           ___fpclassifyf@F463 0064             __size_of_atohtoi 011C  
            _I2C_Master_Init 431A              _I2C_Master_Read 4C6E                     ___xxtofl 3C60  
            _I2C_Master_Wait 4CBE              _I2C_Master_Stop 4CF6                  _key_pressed 0104  
           __size_of_isalpha 0034             __size_of_isdigit 0030                     _dtoa$653 0041  
           __size_of_islower 0030             __size_of_isspace 003E                     __ptext10 43BE  
                   __ptext11 109A                     __ptext20 4BC8                     __ptext12 48F6  
                   __ptext21 27C2                     __ptext13 4B68                     __ptext30 4A9A  
                   __ptext22 40C4                     __ptext14 48A2                     __ptext31 478A  
                   __ptext23 458A                     __ptext15 3822                     __ptext40 4CE6  
                   __ptext32 4CAA                     __ptext24 312C                     __ptext16 4194  
                   __ptext41 49D2                     __ptext33 4B06                     __ptext25 471A  
                   __ptext17 4260                     __ptext50 4C6E                     __ptext42 4CEE  
                   __ptext34 3DA0                     __ptext26 4614                     __ptext18 498C  
                   __ptext51 4CBE                     __ptext43 4C92                     __ptext35 39D8  
                   __ptext27 33B4                     __ptext19 2B14                     __ptext52 431A  
                   __ptext44 4CD0                     __ptext36 3B20                     __ptext28 4460  
                   __ptext53 4698                     __ptext45 484C                     __ptext37 4A5C  
                   __ptext29 4BF6                     __ptext46 3C60                     __ptext38 4B98  
                   __ptext55 2E20                     __ptext47 4CDC                     __ptext39 4C48  
                   __ptext48 4CF6                     __ptext49 4CFE             __size_of_isupper 0030  
                   _lcd_byte 484C             __size_of_tolower 004C             atohtoi@dec_ascii 0014  
                 strcpy@dest 0011             __size_of_strncmp 00A2             __size_of_toupper 004A  
              __size_of_atoi 0140                __size_of_main 079E                __size_of_dtoa 0242  
              __size_of_xtoa 022C        __size_of_time_elapsed 00E4                     efgtoa@fp 003E  
                   efgtoa@ne 0096                     efgtoa@pp 0092                     efgtoa@ou 0080  
                   int$flags 006E                     _xtoa$698 0042                     _xtoa$699 0044  
                   _vfprintf 47F6                     main@data 0172                    printf@fmt 00E2  
                   main@time 0160  I2C_Master_Write@byteToWrite 001B             ___aomod@dividend 0011  
                  putch@data 0013     __end_of_I2C_Master_Start 4D06     __end_of_I2C_Master_Write 4CE6  
                 _INTCONbits 000FF2                     isalpha@c 0011                     isdigit@c 0011  
               _time_elapsed 3FE0                     intlevel2 0000                     islower@c 0011  
                   isspace@c 0011             ___lldiv@dividend 0011                    strcpy@src 0013  
                   isupper@c 0011                    strncmp@_l 0011                    strncmp@_r 0013  
                efgtoa@nmode 009E                     printf@ap 005E      __end_of_I2C_Master_Init 43BE  
            ___aomod@divisor 0019      __end_of_I2C_Master_Read 4C92      __end_of_I2C_Master_Wait 4CD0  
    __end_of_I2C_Master_Stop 4CFE                  ??_vfpfcnvrt 0056              ___aomod@counter 0021  
              _vfpfcnvrt$713 00D0                _vfpfcnvrt$718 00D2                     tolower@c 0017  
     __size_of___fpclassifyf 00CC             ___lldiv@quotient 0019                     strncmp@l 0018  
                   strncmp@n 0015                     strncmp@r 001A                     toupper@c 0017  
                _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5                ___fladd@signs 001D  
               ___aodiv@sign 0022                 ___fladd@aexp 001E                 ___fladd@bexp 001F  
          ?_lcd_Instructions 0001                 ___aomod@sign 0022           ??_lcd_Instructions 0013  
