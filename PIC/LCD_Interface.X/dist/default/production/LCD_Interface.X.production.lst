

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 17 14:40:14 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           ; Version 2.05
    80                           ; Generated 20/12/2018 GMT
    81                           ; 
    82                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F4620 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataBANK1
   115  004860                     __pidataBANK1:
   116                           	opt callstack 0
   117                           
   118                           ;initializer for _status
   119  004860  4E                 	db	78
   120                           
   121                           ;initializer for _second_digit
   122  004861  14                 	db	20
   123                           
   124                           ;initializer for _first_digit
   125  004862  14                 	db	20
   126                           
   127                           	psect	smallconst
   128  001000                     __psmallconst:
   129                           	opt callstack 0
   130  001000  00                 	db	0
   131  001001                     _keys:
   132                           	opt callstack 0
   133  001001  31                 	db	49
   134  001002  32                 	db	50
   135  001003  33                 	db	51
   136  001004  41                 	db	65
   137  001005  34                 	db	52
   138  001006  35                 	db	53
   139  001007  36                 	db	54
   140  001008  42                 	db	66
   141  001009  37                 	db	55
   142  00100A  38                 	db	56
   143  00100B  39                 	db	57
   144  00100C  43                 	db	67
   145  00100D  2A                 	db	42
   146  00100E  30                 	db	48
   147  00100F  23                 	db	35
   148  001010  44                 	db	68
   149  001011  00                 	db	0
   150  001012                     __end_of_keys:
   151                           	opt callstack 0
   152  001012                     _reset:
   153                           	opt callstack 0
   154  001012  00                 	db	0
   155  001013  46                 	db	70
   156  001014  11                 	db	17
   157  001015  01                 	db	1
   158  001016  25                 	db	37
   159  001017  02                 	db	2
   160  001018  19                 	db	25
   161  001019                     __end_of_reset:
   162                           	opt callstack 0
   163  0000                     _SSPBUF	set	4041
   164  0000                     _SSPCON2bits	set	4037
   165  0000                     _SSPCON1	set	4038
   166  0000                     _SSPADD	set	4040
   167  0000                     _SSPCON1bits	set	4038
   168  0000                     _SSPCON2	set	4037
   169  0000                     _SSPSTAT	set	4039
   170  0000                     _LATDbits	set	3980
   171  0000                     _TXREG	set	4013
   172  0000                     _PORTB	set	3969
   173  0000                     _INTCON3bits	set	4080
   174  0000                     _INTCONbits	set	4082
   175  0000                     _LATAbits	set	3977
   176  0000                     _TRISAbits	set	3986
   177  0000                     _PIE1bits	set	3997
   178  0000                     _TRISCbits	set	3988
   179  0000                     _RCSTAbits	set	4011
   180  0000                     _TXSTAbits	set	4012
   181  0000                     _SPBRG	set	4015
   182  0000                     _TRISD	set	3989
   183  0000                     _LATD	set	3980
   184  0000                     _INT0IF	set	32657
   185  0000                     _INT0IE	set	32660
   186  0000                     _INT2IF	set	32641
   187  0000                     _INT2IE	set	32644
   188  0000                     _INT1IF	set	32640
   189  0000                     _INT1IE	set	32643
   190  0000                     _TRMT	set	32097
   191  0000                     _TXIF	set	31988
   192  001019  54                 	db	84	;'T'
   193  00101A  69                 	db	105	;'i'
   194  00101B  6D                 	db	109	;'m'
   195  00101C  65                 	db	101	;'e'
   196  00101D  3A                 	db	58	;':'
   197  00101E  20                 	db	32
   198  00101F  25                 	db	37
   199  001020  30                 	db	48	;'0'
   200  001021  32                 	db	50	;'2'
   201  001022  64                 	db	100	;'d'
   202  001023  3A                 	db	58	;':'
   203  001024  25                 	db	37
   204  001025  30                 	db	48	;'0'
   205  001026  32                 	db	50	;'2'
   206  001027  64                 	db	100	;'d'
   207  001028  00                 	db	0
   208  001029                     STR_10:
   209  001029  43                 	db	67	;'C'
   210  00102A  72                 	db	114	;'r'
   211  00102B  61                 	db	97	;'a'
   212  00102C  63                 	db	99	;'c'
   213  00102D  6B                 	db	107	;'k'
   214  00102E  20                 	db	32
   215  00102F  25                 	db	37
   216  001030  64                 	db	100	;'d'
   217  001031  3A                 	db	58	;':'
   218  001032  20                 	db	32
   219  001033  25                 	db	37
   220  001034  66                 	db	102	;'f'
   221  001035  63                 	db	99	;'c'
   222  001036  6D                 	db	109	;'m'
   223  001037  00                 	db	0
   224  001038                     STR_1:
   225  001038  25                 	db	37
   226  001039  30                 	db	48	;'0'
   227  00103A  32                 	db	50	;'2'
   228  00103B  78                 	db	120	;'x'
   229  00103C  2F                 	db	47
   230  00103D  25                 	db	37
   231  00103E  30                 	db	48	;'0'
   232  00103F  32                 	db	50	;'2'
   233  001040  78                 	db	120	;'x'
   234  001041  2F                 	db	47
   235  001042  25                 	db	37
   236  001043  30                 	db	48	;'0'
   237  001044  32                 	db	50	;'2'
   238  001045  78                 	db	120	;'x'
   239  001046  00                 	db	0
   240  001047                     STR_2:
   241  001047  25                 	db	37
   242  001048  30                 	db	48	;'0'
   243  001049  32                 	db	50	;'2'
   244  00104A  78                 	db	120	;'x'
   245  00104B  3A                 	db	58	;':'
   246  00104C  25                 	db	37
   247  00104D  30                 	db	48	;'0'
   248  00104E  32                 	db	50	;'2'
   249  00104F  78                 	db	120	;'x'
   250  001050  3A                 	db	58	;':'
   251  001051  25                 	db	37
   252  001052  30                 	db	48	;'0'
   253  001053  32                 	db	50	;'2'
   254  001054  78                 	db	120	;'x'
   255  001055  00                 	db	0
   256  001056                     STR_12:
   257  001056  48                 	db	72	;'H'
   258  001057  6F                 	db	111	;'o'
   259  001058  6C                 	db	108	;'l'
   260  001059  65                 	db	101	;'e'
   261  00105A  20                 	db	32
   262  00105B  25                 	db	37
   263  00105C  64                 	db	100	;'d'
   264  00105D  3A                 	db	58	;':'
   265  00105E  20                 	db	32
   266  00105F  25                 	db	37
   267  001060  66                 	db	102	;'f'
   268  001061  63                 	db	99	;'c'
   269  001062  6D                 	db	109	;'m'
   270  001063  00                 	db	0
   271  001064  43                 	db	67	;'C'
   272  001065  72                 	db	114	;'r'
   273  001066  61                 	db	97	;'a'
   274  001067  63                 	db	99	;'c'
   275  001068  6B                 	db	107	;'k'
   276  001069  73                 	db	115	;'s'
   277  00106A  3A                 	db	58	;':'
   278  00106B  20                 	db	32
   279  00106C  25                 	db	37
   280  00106D  64                 	db	100	;'d'
   281  00106E  00                 	db	0
   282  00106F  48                 	db	72	;'H'
   283  001070  6F                 	db	111	;'o'
   284  001071  6C                 	db	108	;'l'
   285  001072  65                 	db	101	;'e'
   286  001073  73                 	db	115	;'s'
   287  001074  3A                 	db	58	;':'
   288  001075  20                 	db	32
   289  001076  25                 	db	37
   290  001077  64                 	db	100	;'d'
   291  001078  00                 	db	0
   292  001079  43                 	db	67	;'C'
   293  00107A  6F                 	db	111	;'o'
   294  00107B  6E                 	db	110	;'n'
   295  00107C  65                 	db	101	;'e'
   296  00107D  73                 	db	115	;'s'
   297  00107E  3A                 	db	58	;':'
   298  00107F  20                 	db	32
   299  001080  25                 	db	37
   300  001081  64                 	db	100	;'d'
   301  001082  00                 	db	0
   302  001083  4F                 	db	79	;'O'
   303  001084  70                 	db	112	;'p'
   304  001085  65                 	db	101	;'e'
   305  001086  72                 	db	114	;'r'
   306  001087  61                 	db	97	;'a'
   307  001088  74                 	db	116	;'t'
   308  001089  69                 	db	105	;'i'
   309  00108A  6F                 	db	111	;'o'
   310  00108B  6E                 	db	110	;'n'
   311  00108C  00                 	db	0
   312  00108D  43                 	db	67	;'C'
   313  00108E  6F                 	db	111	;'o'
   314  00108F  6D                 	db	109	;'m'
   315  001090  70                 	db	112	;'p'
   316  001091  6C                 	db	108	;'l'
   317  001092  65                 	db	101	;'e'
   318  001093  74                 	db	116	;'t'
   319  001094  65                 	db	101	;'e'
   320  001095  00                 	db	0
   321  001096                     STR_14:
   322  001096  49                 	db	73	;'I'
   323  001097  4E                 	db	78	;'N'
   324  001098  46                 	db	70	;'F'
   325  001099  00                 	db	0
   326  00109A                     STR_18:
   327  00109A  4E                 	db	78	;'N'
   328  00109B  41                 	db	65	;'A'
   329  00109C  4E                 	db	78	;'N'
   330  00109D  00                 	db	0
   331  00109E                     STR_15:
   332  00109E  69                 	db	105	;'i'
   333  00109F  6E                 	db	110	;'n'
   334  0010A0  66                 	db	102	;'f'
   335  0010A1  00                 	db	0
   336  0010A2                     STR_19:
   337  0010A2  6E                 	db	110	;'n'
   338  0010A3  61                 	db	97	;'a'
   339  0010A4  6E                 	db	110	;'n'
   340  0010A5  00                 	db	0
   341  0010A6                     STR_22:
   342  0010A6  6C                 	db	108	;'l'
   343  0010A7  66                 	db	102	;'f'
   344  0010A8  00                 	db	0
   345  0010A9                     STR_3:
   346  0010A9  25                 	db	37
   347  0010AA  78                 	db	120	;'x'
   348  0010AB  00                 	db	0
   349  0000                     
   350                           ; #config settings
   351  0010AC  00                 	db	0	; dummy byte at the end
   352  0000                     
   353                           	psect	cinit
   354  004302                     __pcinit:
   355                           	opt callstack 0
   356  004302                     start_initialization:
   357                           	opt callstack 0
   358  004302                     __initialization:
   359                           	opt callstack 0
   360                           
   361                           ; Initialize objects allocated to BANK1 (3 bytes)
   362                           ; load TBLPTR registers with __pidataBANK1
   363  004302  0E60               	movlw	low __pidataBANK1
   364  004304  6EF6               	movwf	tblptrl,c
   365  004306  0E48               	movlw	high __pidataBANK1
   366  004308  6EF7               	movwf	tblptrh,c
   367  00430A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   368  00430C  6EF8               	movwf	tblptru,c
   369  00430E  0009               	tblrd		*+	;fetch initializer
   370  004310  CFF5 F175          	movff	tablat,__pdataBANK1
   371  004314  0009               	tblrd		*+	;fetch initializer
   372  004316  CFF5 F176          	movff	tablat,__pdataBANK1+1
   373  00431A  0009               	tblrd		*+	;fetch initializer
   374  00431C  CFF5 F177          	movff	tablat,__pdataBANK1+2
   375                           
   376                           ; Clear objects allocated to BANK3 (200 bytes)
   377  004320  EE03  F000         	lfsr	0,__pbssBANK3
   378  004324  0EC8               	movlw	200
   379  004326                     clear_0:
   380  004326  6AEE               	clrf	postinc0,c
   381  004328  06E8               	decf	wreg,f,c
   382  00432A  E1FD               	bnz	clear_0
   383                           
   384                           ; Clear objects allocated to BANK2 (200 bytes)
   385  00432C  EE02  F000         	lfsr	0,__pbssBANK2
   386  004330  0EC8               	movlw	200
   387  004332                     clear_1:
   388  004332  6AEE               	clrf	postinc0,c
   389  004334  06E8               	decf	wreg,f,c
   390  004336  E1FD               	bnz	clear_1
   391                           
   392                           ; Clear objects allocated to BANK1 (92 bytes)
   393  004338  EE01  F000         	lfsr	0,__pbssBANK1
   394  00433C  0E5C               	movlw	92
   395  00433E                     clear_2:
   396  00433E  6AEE               	clrf	postinc0,c
   397  004340  06E8               	decf	wreg,f,c
   398  004342  E1FD               	bnz	clear_2
   399                           
   400                           ; Clear objects allocated to BANK0 (2 bytes)
   401  004344  0100               	movlb	0
   402  004346  6BF3               	clrf	(__pbssBANK0+1)& (0+255),b
   403  004348  6BF2               	clrf	__pbssBANK0& (0+255),b
   404                           
   405                           ; Clear objects allocated to COMRAM (16 bytes)
   406  00434A  EE00  F05C         	lfsr	0,__pbssCOMRAM
   407  00434E  0E10               	movlw	16
   408  004350                     clear_3:
   409  004350  6AEE               	clrf	postinc0,c
   410  004352  06E8               	decf	wreg,f,c
   411  004354  E1FD               	bnz	clear_3
   412  004356                     end_of_initialization:
   413                           	opt callstack 0
   414  004356                     __end_of__initialization:
   415                           	opt callstack 0
   416  004356  906C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   417  004358  926C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   418  00435A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   419  00435C  6EF8               	movwf	tblptru,c
   420  00435E  0100               	movlb	0
   421  004360  EFC5  F011         	goto	_main	;jump to C main() function
   422                           
   423                           	psect	bssCOMRAM
   424  00005C                     __pbssCOMRAM:
   425                           	opt callstack 0
   426  00005C                     floorf@F524:
   427                           	opt callstack 0
   428  00005C                     	ds	4
   429  000060                     ___fpclassifyf@F463:
   430                           	opt callstack 0
   431  000060                     	ds	4
   432  000064                     _width:
   433                           	opt callstack 0
   434  000064                     	ds	2
   435  000066                     _prec:
   436                           	opt callstack 0
   437  000066                     	ds	2
   438  000068                     _flags:
   439                           	opt callstack 0
   440  000068                     	ds	2
   441  00006A                     _data_count:
   442                           	opt callstack 0
   443  00006A                     	ds	2
   444                           
   445                           	psect	bssBANK0
   446  0000F2                     __pbssBANK0:
   447                           	opt callstack 0
   448  0000F2                     _nout:
   449                           	opt callstack 0
   450  0000F2                     	ds	2
   451                           
   452                           	psect	bssBANK1
   453  000100                     __pbssBANK1:
   454                           	opt callstack 0
   455  000100                     _distance_travelled:
   456                           	opt callstack 0
   457  000100                     	ds	4
   458  000104                     _key_pressed:
   459                           	opt callstack 0
   460  000104                     	ds	2
   461  000106                     _total_holes:
   462                           	opt callstack 0
   463  000106                     	ds	2
   464  000108                     _total_cracks:
   465                           	opt callstack 0
   466  000108                     	ds	2
   467  00010A                     _total_cones:
   468                           	opt callstack 0
   469  00010A                     	ds	2
   470  00010C                     _dbuf:
   471                           	opt callstack 0
   472  00010C                     	ds	80
   473                           
   474                           	psect	dataBANK1
   475  000175                     __pdataBANK1:
   476                           	opt callstack 0
   477  000175                     _status:
   478                           	opt callstack 0
   479  000175                     	ds	1
   480  000176                     _second_digit:
   481                           	opt callstack 0
   482  000176                     	ds	1
   483  000177                     _first_digit:
   484                           	opt callstack 0
   485  000177                     	ds	1
   486                           
   487                           	psect	bssBANK2
   488  000200                     __pbssBANK2:
   489                           	opt callstack 0
   490  000200                     _crack_dist:
   491                           	opt callstack 0
   492  000200                     	ds	200
   493                           
   494                           	psect	bssBANK3
   495  000300                     __pbssBANK3:
   496                           	opt callstack 0
   497  000300                     _hole_dist:
   498                           	opt callstack 0
   499  000300                     	ds	200
   500                           
   501                           	psect	cstackBANK1
   502  00015C                     __pcstackBANK1:
   503                           	opt callstack 0
   504  00015C                     main@temp:
   505                           	opt callstack 0
   506                           
   507                           ; 2 bytes @ 0x0
   508  00015C                     	ds	2
   509  00015E                     main@baudRate:
   510                           	opt callstack 0
   511                           
   512                           ; 4 bytes @ 0x2
   513  00015E                     	ds	4
   514  000162                     main@time:
   515                           	opt callstack 0
   516                           
   517                           ; 7 bytes @ 0x6
   518  000162                     	ds	7
   519  000169                     main@begin_min:
   520                           	opt callstack 0
   521                           
   522                           ; 1 bytes @ 0xD
   523  000169                     	ds	3
   524  00016C                     main@op_time:
   525                           	opt callstack 0
   526                           
   527                           ; 4 bytes @ 0x10
   528  00016C                     	ds	4
   529  000170                     main@begin_sec:
   530                           	opt callstack 0
   531                           
   532                           ; 1 bytes @ 0x14
   533  000170                     	ds	3
   534  000173                     main@i_534:
   535                           	opt callstack 0
   536                           
   537                           ; 1 bytes @ 0x17
   538  000173                     	ds	1
   539  000174                     main@keypress:
   540                           	opt callstack 0
   541                           
   542                           ; 1 bytes @ 0x18
   543  000174                     	ds	1
   544                           
   545                           	psect	cstackBANK0
   546  000080                     __pcstackBANK0:
   547                           	opt callstack 0
   548  000080                     efgtoa@ou:
   549                           	opt callstack 0
   550                           
   551                           ; 4 bytes @ 0x0
   552  000080                     	ds	4
   553  000084                     _efgtoa$882:
   554                           	opt callstack 0
   555                           
   556                           ; 2 bytes @ 0x4
   557  000084                     	ds	2
   558  000086                     _efgtoa$883:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0x6
   562  000086                     	ds	2
   563  000088                     _efgtoa$887:
   564                           	opt callstack 0
   565                           
   566                           ; 2 bytes @ 0x8
   567  000088                     	ds	2
   568  00008A                     _efgtoa$891:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0xA
   572  00008A                     	ds	2
   573  00008C                     _efgtoa$892:
   574                           	opt callstack 0
   575                           
   576                           ; 2 bytes @ 0xC
   577  00008C                     	ds	2
   578  00008E                     _efgtoa$893:
   579                           	opt callstack 0
   580                           
   581                           ; 2 bytes @ 0xE
   582  00008E                     	ds	2
   583  000090                     efgtoa@t:
   584                           	opt callstack 0
   585                           
   586                           ; 2 bytes @ 0x10
   587  000090                     	ds	2
   588  000092                     efgtoa@pp:
   589                           	opt callstack 0
   590                           
   591                           ; 2 bytes @ 0x12
   592  000092                     	ds	2
   593  000094                     efgtoa@m:
   594                           	opt callstack 0
   595                           
   596                           ; 2 bytes @ 0x14
   597  000094                     	ds	2
   598  000096                     efgtoa@ne:
   599                           	opt callstack 0
   600                           
   601                           ; 2 bytes @ 0x16
   602  000096                     	ds	2
   603  000098                     efgtoa@d:
   604                           	opt callstack 0
   605                           
   606                           ; 2 bytes @ 0x18
   607  000098                     	ds	2
   608  00009A                     efgtoa@sign:
   609                           	opt callstack 0
   610                           
   611                           ; 2 bytes @ 0x1A
   612  00009A                     	ds	2
   613  00009C                     efgtoa@p:
   614                           	opt callstack 0
   615                           
   616                           ; 2 bytes @ 0x1C
   617  00009C                     	ds	2
   618  00009E                     efgtoa@nmode:
   619                           	opt callstack 0
   620                           
   621                           ; 1 bytes @ 0x1E
   622  00009E                     	ds	1
   623  00009F                     efgtoa@w:
   624                           	opt callstack 0
   625                           
   626                           ; 2 bytes @ 0x1F
   627  00009F                     	ds	2
   628  0000A1                     efgtoa@mode:
   629                           	opt callstack 0
   630                           
   631                           ; 1 bytes @ 0x21
   632  0000A1                     	ds	1
   633  0000A2                     efgtoa@h:
   634                           	opt callstack 0
   635                           
   636                           ; 4 bytes @ 0x22
   637  0000A2                     	ds	4
   638  0000A6                     efgtoa@l:
   639                           	opt callstack 0
   640                           
   641                           ; 4 bytes @ 0x26
   642  0000A6                     	ds	4
   643  0000AA                     efgtoa@i:
   644                           	opt callstack 0
   645                           
   646                           ; 2 bytes @ 0x2A
   647  0000AA                     	ds	2
   648  0000AC                     efgtoa@g:
   649                           	opt callstack 0
   650                           
   651                           ; 4 bytes @ 0x2C
   652  0000AC                     	ds	4
   653  0000B0                     efgtoa@e:
   654                           	opt callstack 0
   655                           
   656                           ; 2 bytes @ 0x30
   657  0000B0                     	ds	2
   658  0000B2                     efgtoa@n:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0x32
   662  0000B2                     	ds	2
   663  0000B4                     efgtoa@u:
   664                           	opt callstack 0
   665                           
   666                           ; 4 bytes @ 0x34
   667  0000B4                     	ds	4
   668  0000B8                     ?_vfpfcnvrt:
   669                           	opt callstack 0
   670  0000B8                     vfpfcnvrt@fp:
   671                           	opt callstack 0
   672                           
   673                           ; 2 bytes @ 0x38
   674  0000B8                     	ds	2
   675  0000BA                     vfpfcnvrt@fmt:
   676                           	opt callstack 0
   677                           
   678                           ; 2 bytes @ 0x3A
   679  0000BA                     	ds	2
   680  0000BC                     vfpfcnvrt@ap:
   681                           	opt callstack 0
   682                           
   683                           ; 2 bytes @ 0x3C
   684  0000BC                     	ds	2
   685  0000BE                     vfpfcnvrt@ll:
   686                           	opt callstack 0
   687                           
   688                           ; 8 bytes @ 0x3E
   689  0000BE                     	ds	8
   690  0000C6                     vfpfcnvrt@llu:
   691                           	opt callstack 0
   692                           
   693                           ; 8 bytes @ 0x46
   694  0000C6                     	ds	8
   695  0000CE                     vfpfcnvrt@done:
   696                           	opt callstack 0
   697                           
   698                           ; 2 bytes @ 0x4E
   699  0000CE                     	ds	2
   700  0000D0                     _vfpfcnvrt$918:
   701                           	opt callstack 0
   702                           
   703                           ; 2 bytes @ 0x50
   704  0000D0                     	ds	2
   705  0000D2                     _vfpfcnvrt$923:
   706                           	opt callstack 0
   707                           
   708                           ; 2 bytes @ 0x52
   709  0000D2                     	ds	2
   710  0000D4                     vfpfcnvrt@f:
   711                           	opt callstack 0
   712                           
   713                           ; 4 bytes @ 0x54
   714  0000D4                     	ds	4
   715  0000D8                     vfpfcnvrt@ct:
   716                           	opt callstack 0
   717                           
   718                           ; 3 bytes @ 0x58
   719  0000D8                     	ds	3
   720  0000DB                     vfpfcnvrt@c:
   721                           	opt callstack 0
   722                           
   723                           ; 1 bytes @ 0x5B
   724  0000DB                     	ds	1
   725  0000DC                     ?_vfprintf:
   726                           	opt callstack 0
   727  0000DC                     vfprintf@fp:
   728                           	opt callstack 0
   729                           
   730                           ; 2 bytes @ 0x5C
   731  0000DC                     	ds	2
   732  0000DE                     vfprintf@fmt:
   733                           	opt callstack 0
   734                           
   735                           ; 2 bytes @ 0x5E
   736  0000DE                     	ds	2
   737  0000E0                     vfprintf@ap:
   738                           	opt callstack 0
   739                           
   740                           ; 2 bytes @ 0x60
   741  0000E0                     	ds	2
   742  0000E2                     ?_printf:
   743                           	opt callstack 0
   744  0000E2                     printf@fmt:
   745                           	opt callstack 0
   746                           
   747                           ; 2 bytes @ 0x62
   748  0000E2                     	ds	10
   749  0000EC                     printf@ap:
   750                           	opt callstack 0
   751                           
   752                           ; 2 bytes @ 0x6C
   753  0000EC                     	ds	2
   754  0000EE                     ??_main:
   755                           
   756                           ; 1 bytes @ 0x6E
   757  0000EE                     	ds	4
   758                           
   759                           	psect	cstackCOMRAM
   760  000001                     __pcstackCOMRAM:
   761                           	opt callstack 0
   762  000001                     ?i2___fladd:
   763                           	opt callstack 0
   764  000001                     i2___fladd@b:
   765                           	opt callstack 0
   766                           
   767                           ; 4 bytes @ 0x0
   768  000001                     	ds	4
   769  000005                     i2___fladd@a:
   770                           	opt callstack 0
   771                           
   772                           ; 4 bytes @ 0x4
   773  000005                     	ds	4
   774  000009                     ??i2___fladd:
   775                           
   776                           ; 1 bytes @ 0x8
   777  000009                     	ds	4
   778  00000D                     i2___fladd@signs:
   779                           	opt callstack 0
   780                           
   781                           ; 1 bytes @ 0xC
   782  00000D                     	ds	1
   783  00000E                     i2___fladd@aexp:
   784                           	opt callstack 0
   785                           
   786                           ; 1 bytes @ 0xD
   787  00000E                     	ds	1
   788  00000F                     i2___fladd@bexp:
   789                           	opt callstack 0
   790                           
   791                           ; 1 bytes @ 0xE
   792  00000F                     	ds	1
   793  000010                     i2___fladd@grs:
   794                           	opt callstack 0
   795                           
   796                           ; 1 bytes @ 0xF
   797  000010                     	ds	1
   798  000011                     ??_I2C_Master_Wait:
   799  000011                     ?_strlen:
   800                           	opt callstack 0
   801  000011                     ?___fpclassifyf:
   802                           	opt callstack 0
   803  000011                     ?_isupper:
   804                           	opt callstack 0
   805  000011                     ?_isalpha:
   806                           	opt callstack 0
   807  000011                     ?_isdigit:
   808                           	opt callstack 0
   809  000011                     ?_strncmp:
   810                           	opt callstack 0
   811  000011                     ?_isspace:
   812                           	opt callstack 0
   813  000011                     ?_islower:
   814                           	opt callstack 0
   815  000011                     ?_atohtoi:
   816                           	opt callstack 0
   817  000011                     ?___wmul:
   818                           	opt callstack 0
   819  000011                     ?___awdiv:
   820                           	opt callstack 0
   821  000011                     ?___awmod:
   822                           	opt callstack 0
   823  000011                     ?___fladd:
   824                           	opt callstack 0
   825  000011                     ?___fldiv:
   826                           	opt callstack 0
   827  000011                     ?___flmul:
   828                           	opt callstack 0
   829  000011                     ?___lldiv:
   830                           	opt callstack 0
   831  000011                     ?___aldiv:
   832                           	opt callstack 0
   833  000011                     ?___flneg:
   834                           	opt callstack 0
   835  000011                     ?___fltol:
   836                           	opt callstack 0
   837  000011                     ?___aodiv:
   838                           	opt callstack 0
   839  000011                     ?___aomod:
   840                           	opt callstack 0
   841  000011                     lcd_byte@temp:
   842                           	opt callstack 0
   843  000011                     ___wmul@multiplier:
   844                           	opt callstack 0
   845  000011                     ___awdiv@dividend:
   846                           	opt callstack 0
   847  000011                     ___awmod@dividend:
   848                           	opt callstack 0
   849  000011                     isalpha@c:
   850                           	opt callstack 0
   851  000011                     isdigit@c:
   852                           	opt callstack 0
   853  000011                     isspace@c:
   854                           	opt callstack 0
   855  000011                     isupper@c:
   856                           	opt callstack 0
   857  000011                     strcpy@dest:
   858                           	opt callstack 0
   859  000011                     strlen@s:
   860                           	opt callstack 0
   861  000011                     strncmp@_l:
   862                           	opt callstack 0
   863  000011                     islower@c:
   864                           	opt callstack 0
   865  000011                     ___lldiv@dividend:
   866                           	opt callstack 0
   867  000011                     ___aldiv@dividend:
   868                           	opt callstack 0
   869  000011                     ___fleq@ff1:
   870                           	opt callstack 0
   871  000011                     ___flneg@f1:
   872                           	opt callstack 0
   873  000011                     ___fltol@f1:
   874                           	opt callstack 0
   875  000011                     ___fladd@b:
   876                           	opt callstack 0
   877  000011                     ___fldiv@b:
   878                           	opt callstack 0
   879  000011                     ___flmul@b:
   880                           	opt callstack 0
   881  000011                     ___fpclassifyf@x:
   882                           	opt callstack 0
   883  000011                     ___aodiv@dividend:
   884                           	opt callstack 0
   885  000011                     ___aomod@dividend:
   886                           	opt callstack 0
   887                           
   888                           ; 8 bytes @ 0x10
   889  000011                     	ds	1
   890  000012                     lcd_byte@data:
   891                           	opt callstack 0
   892  000012                     I2C_Master_Read@ackBit:
   893                           	opt callstack 0
   894  000012                     I2C_Master_Write@byteToWrite:
   895                           	opt callstack 0
   896                           
   897                           ; 2 bytes @ 0x11
   898  000012                     	ds	1
   899  000013                     ??_isupper:
   900  000013                     ??_isalpha:
   901  000013                     ??_isdigit:
   902  000013                     ??_isspace:
   903  000013                     ??_islower:
   904  000013                     lcd_Instructions@data:
   905                           	opt callstack 0
   906  000013                     putch@data:
   907                           	opt callstack 0
   908  000013                     I2C_Master_Read@receivedByte:
   909                           	opt callstack 0
   910  000013                     atohtoi@ascii:
   911                           	opt callstack 0
   912  000013                     ___wmul@multiplicand:
   913                           	opt callstack 0
   914  000013                     ___awdiv@divisor:
   915                           	opt callstack 0
   916  000013                     ___awmod@divisor:
   917                           	opt callstack 0
   918  000013                     strcpy@src:
   919                           	opt callstack 0
   920  000013                     strlen@a:
   921                           	opt callstack 0
   922  000013                     strncmp@_r:
   923                           	opt callstack 0
   924                           
   925                           ; 2 bytes @ 0x12
   926  000013                     	ds	1
   927  000014                     ??_initialize_LCD:
   928  000014                     ??_clear:
   929  000014                     atohtoi@dec_ascii:
   930                           	opt callstack 0
   931  000014                     fputc@c:
   932                           	opt callstack 0
   933                           
   934                           ; 2 bytes @ 0x13
   935  000014                     	ds	1
   936  000015                     ??___fpclassifyf:
   937  000015                     ??_strcpy:
   938  000015                     ??___fltol:
   939  000015                     ___awdiv@counter:
   940                           	opt callstack 0
   941  000015                     ___awmod@counter:
   942                           	opt callstack 0
   943  000015                     ___wmul@product:
   944                           	opt callstack 0
   945  000015                     strncmp@n:
   946                           	opt callstack 0
   947  000015                     ___lldiv@divisor:
   948                           	opt callstack 0
   949  000015                     ___aldiv@divisor:
   950                           	opt callstack 0
   951  000015                     ___fleq@ff2:
   952                           	opt callstack 0
   953  000015                     ___fladd@a:
   954                           	opt callstack 0
   955  000015                     ___fldiv@a:
   956                           	opt callstack 0
   957  000015                     ___flmul@a:
   958                           	opt callstack 0
   959                           
   960                           ; 4 bytes @ 0x14
   961  000015                     	ds	1
   962  000016                     ___awdiv@sign:
   963                           	opt callstack 0
   964  000016                     ___awmod@sign:
   965                           	opt callstack 0
   966  000016                     fputc@fp:
   967                           	opt callstack 0
   968                           
   969                           ; 2 bytes @ 0x15
   970  000016                     	ds	1
   971  000017                     ??_strncmp:
   972  000017                     ?_keypad_total:
   973                           	opt callstack 0
   974  000017                     ?_tolower:
   975                           	opt callstack 0
   976  000017                     ?_toupper:
   977                           	opt callstack 0
   978  000017                     keypad_total@second:
   979                           	opt callstack 0
   980  000017                     _isspace$1437:
   981                           	opt callstack 0
   982  000017                     ___awdiv@quotient:
   983                           	opt callstack 0
   984  000017                     strcpy@s:
   985                           	opt callstack 0
   986  000017                     tolower@c:
   987                           	opt callstack 0
   988  000017                     toupper@c:
   989                           	opt callstack 0
   990                           
   991                           ; 2 bytes @ 0x16
   992  000017                     	ds	1
   993  000018                     ??_fputc:
   994  000018                     ?_atoi:
   995                           	opt callstack 0
   996  000018                     atoi@s:
   997                           	opt callstack 0
   998  000018                     strncmp@l:
   999                           	opt callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x17
  1002  000018                     	ds	1
  1003  000019                     ??_tolower:
  1004  000019                     ??_toupper:
  1005  000019                     ??___fladd:
  1006  000019                     ??___fldiv:
  1007  000019                     ??___flmul:
  1008  000019                     ??___fleq:
  1009  000019                     keypad_total@first:
  1010                           	opt callstack 0
  1011  000019                     time_elapsed@begin_sec:
  1012                           	opt callstack 0
  1013  000019                     ___aldiv@counter:
  1014                           	opt callstack 0
  1015  000019                     ___fltol@sign1:
  1016                           	opt callstack 0
  1017  000019                     ___fpclassifyf@e:
  1018                           	opt callstack 0
  1019  000019                     strcpy@d:
  1020                           	opt callstack 0
  1021  000019                     ___lldiv@quotient:
  1022                           	opt callstack 0
  1023  000019                     ___aodiv@divisor:
  1024                           	opt callstack 0
  1025  000019                     ___aomod@divisor:
  1026                           	opt callstack 0
  1027                           
  1028                           ; 8 bytes @ 0x18
  1029  000019                     	ds	1
  1030  00001A                     ??_atoi:
  1031  00001A                     time_elapsed@end_min:
  1032                           	opt callstack 0
  1033  00001A                     ___aldiv@sign:
  1034                           	opt callstack 0
  1035  00001A                     ___fltol@exp1:
  1036                           	opt callstack 0
  1037  00001A                     keypad_total@first_int:
  1038                           	opt callstack 0
  1039  00001A                     strncmp@r:
  1040                           	opt callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x19
  1043  00001A                     	ds	1
  1044  00001B                     time_elapsed@end_sec:
  1045                           	opt callstack 0
  1046  00001B                     ___aldiv@quotient:
  1047                           	opt callstack 0
  1048  00001B                     ___fpclassifyf@u:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x1A
  1052  00001B                     	ds	1
  1053  00001C                     keypad_total@second_int:
  1054                           	opt callstack 0
  1055  00001C                     time_elapsed@array:
  1056                           	opt callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x1B
  1059  00001C                     	ds	1
  1060  00001D                     ___lldiv@counter:
  1061                           	opt callstack 0
  1062  00001D                     ___fladd@signs:
  1063                           	opt callstack 0
  1064  00001D                     ___flmul@sign:
  1065                           	opt callstack 0
  1066  00001D                     fputs@s:
  1067                           	opt callstack 0
  1068  00001D                     _tolower$1511:
  1069                           	opt callstack 0
  1070  00001D                     _toupper$1526:
  1071                           	opt callstack 0
  1072  00001D                     ___fldiv@rem:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 4 bytes @ 0x1C
  1076  00001D                     	ds	1
  1077  00001E                     time_elapsed@begin_min:
  1078                           	opt callstack 0
  1079  00001E                     ___fladd@aexp:
  1080                           	opt callstack 0
  1081  00001E                     ___flmul@aexp:
  1082                           	opt callstack 0
  1083  00001E                     atoi@neg:
  1084                           	opt callstack 0
  1085  00001E                     I2C_Master_Init@clockFreq:
  1086                           	opt callstack 0
  1087                           
  1088                           ; 4 bytes @ 0x1D
  1089  00001E                     	ds	1
  1090  00001F                     ___fladd@bexp:
  1091                           	opt callstack 0
  1092  00001F                     time_elapsed@b_min_int:
  1093                           	opt callstack 0
  1094  00001F                     fputs@fp:
  1095                           	opt callstack 0
  1096  00001F                     ___flmul@grs:
  1097                           	opt callstack 0
  1098                           
  1099                           ; 4 bytes @ 0x1E
  1100  00001F                     	ds	1
  1101  000020                     ___fladd@grs:
  1102                           	opt callstack 0
  1103  000020                     _atoi$1397:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x1F
  1107  000020                     	ds	1
  1108  000021                     ___aodiv@counter:
  1109                           	opt callstack 0
  1110  000021                     ___aomod@counter:
  1111                           	opt callstack 0
  1112  000021                     ___fldiv@sign:
  1113                           	opt callstack 0
  1114  000021                     fputs@c:
  1115                           	opt callstack 0
  1116  000021                     time_elapsed@b_sec_int:
  1117                           	opt callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x20
  1120  000021                     	ds	1
  1121  000022                     ??_I2C_Master_Init:
  1122  000022                     ___aodiv@sign:
  1123                           	opt callstack 0
  1124  000022                     ___aomod@sign:
  1125                           	opt callstack 0
  1126  000022                     ___fldiv@new_exp:
  1127                           	opt callstack 0
  1128  000022                     _atoi$1399:
  1129                           	opt callstack 0
  1130  000022                     fputs@i:
  1131                           	opt callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x21
  1134  000022                     	ds	1
  1135  000023                     ?_abs:
  1136                           	opt callstack 0
  1137  000023                     ___flmul@bexp:
  1138                           	opt callstack 0
  1139  000023                     time_elapsed@e_min_int:
  1140                           	opt callstack 0
  1141  000023                     abs@a:
  1142                           	opt callstack 0
  1143  000023                     ___aodiv@quotient:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 8 bytes @ 0x22
  1147  000023                     	ds	1
  1148  000024                     ?_pad:
  1149                           	opt callstack 0
  1150  000024                     _atoi$1398:
  1151                           	opt callstack 0
  1152  000024                     pad@fp:
  1153                           	opt callstack 0
  1154  000024                     ___fldiv@grs:
  1155                           	opt callstack 0
  1156  000024                     ___flmul@prod:
  1157                           	opt callstack 0
  1158                           
  1159                           ; 4 bytes @ 0x23
  1160  000024                     	ds	1
  1161  000025                     ??_abs:
  1162  000025                     time_elapsed@e_sec_int:
  1163                           	opt callstack 0
  1164  000025                     atoi@n:
  1165                           	opt callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x24
  1168  000025                     	ds	1
  1169  000026                     pad@buf:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x25
  1173  000026                     	ds	1
  1174  000027                     time_elapsed@begin_s:
  1175                           	opt callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x26
  1178  000027                     	ds	1
  1179  000028                     ___fldiv@bexp:
  1180                           	opt callstack 0
  1181  000028                     pad@p:
  1182                           	opt callstack 0
  1183  000028                     ___flmul@temp:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x27
  1187  000028                     	ds	1
  1188  000029                     ___fldiv@aexp:
  1189                           	opt callstack 0
  1190  000029                     time_elapsed@end_s:
  1191                           	opt callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x28
  1194  000029                     	ds	1
  1195  00002A                     ??_pad:
  1196  00002A                     ?_floorf:
  1197                           	opt callstack 0
  1198  00002A                     ?___flsub:
  1199                           	opt callstack 0
  1200  00002A                     ___flge@ff1:
  1201                           	opt callstack 0
  1202  00002A                     ___flsub@b:
  1203                           	opt callstack 0
  1204  00002A                     floorf@x:
  1205                           	opt callstack 0
  1206                           
  1207                           ; 4 bytes @ 0x29
  1208  00002A                     	ds	1
  1209  00002B                     time_elapsed@minutes:
  1210                           	opt callstack 0
  1211  00002B                     pad@i:
  1212                           	opt callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x2A
  1215  00002B                     	ds	2
  1216  00002D                     time_elapsed@seconds:
  1217                           	opt callstack 0
  1218  00002D                     pad@w:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x2C
  1222  00002D                     	ds	1
  1223  00002E                     ??_floorf:
  1224  00002E                     ___flge@ff2:
  1225                           	opt callstack 0
  1226  00002E                     ___flsub@a:
  1227                           	opt callstack 0
  1228                           
  1229                           ; 4 bytes @ 0x2D
  1230  00002E                     	ds	1
  1231  00002F                     ?_dtoa:
  1232                           	opt callstack 0
  1233  00002F                     ?_xtoa:
  1234                           	opt callstack 0
  1235  00002F                     time_elapsed@total_s:
  1236                           	opt callstack 0
  1237  00002F                     dtoa@fp:
  1238                           	opt callstack 0
  1239  00002F                     xtoa@fp:
  1240                           	opt callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x2E
  1243  00002F                     	ds	2
  1244  000031                     dtoa@d:
  1245                           	opt callstack 0
  1246  000031                     xtoa@d:
  1247                           	opt callstack 0
  1248                           
  1249                           ; 8 bytes @ 0x30
  1250  000031                     	ds	1
  1251  000032                     ??___flge:
  1252                           
  1253                           ; 1 bytes @ 0x31
  1254  000032                     	ds	2
  1255  000034                     floorf@m:
  1256                           	opt callstack 0
  1257                           
  1258                           ; 4 bytes @ 0x33
  1259  000034                     	ds	4
  1260  000038                     floorf@e:
  1261                           	opt callstack 0
  1262                           
  1263                           ; 2 bytes @ 0x37
  1264  000038                     	ds	1
  1265  000039                     ??_dtoa:
  1266  000039                     xtoa@x:
  1267                           	opt callstack 0
  1268                           
  1269                           ; 1 bytes @ 0x38
  1270  000039                     	ds	1
  1271  00003A                     ??_xtoa:
  1272  00003A                     floorf@u:
  1273                           	opt callstack 0
  1274                           
  1275                           ; 4 bytes @ 0x39
  1276  00003A                     	ds	4
  1277  00003E                     ?_efgtoa:
  1278                           	opt callstack 0
  1279  00003E                     efgtoa@fp:
  1280                           	opt callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x3D
  1283  00003E                     	ds	2
  1284  000040                     efgtoa@f:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x3F
  1288  000040                     	ds	1
  1289  000041                     _dtoa$858:
  1290                           	opt callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x40
  1293  000041                     	ds	1
  1294  000042                     _xtoa$903:
  1295                           	opt callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x41
  1298  000042                     	ds	1
  1299  000043                     dtoa@p:
  1300                           	opt callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x42
  1303  000043                     	ds	1
  1304  000044                     efgtoa@c:
  1305                           	opt callstack 0
  1306  000044                     _xtoa$904:
  1307                           	opt callstack 0
  1308                           
  1309                           ; 2 bytes @ 0x43
  1310  000044                     	ds	1
  1311  000045                     ??_efgtoa:
  1312  000045                     dtoa@w:
  1313                           	opt callstack 0
  1314                           
  1315                           ; 2 bytes @ 0x44
  1316  000045                     	ds	1
  1317  000046                     xtoa@p:
  1318                           	opt callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x45
  1321  000046                     	ds	1
  1322  000047                     dtoa@s:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x46
  1326  000047                     	ds	1
  1327  000048                     xtoa@w:
  1328                           	opt callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x47
  1331  000048                     	ds	1
  1332  000049                     dtoa@n:
  1333                           	opt callstack 0
  1334                           
  1335                           ; 8 bytes @ 0x48
  1336  000049                     	ds	1
  1337  00004A                     xtoa@n:
  1338                           	opt callstack 0
  1339                           
  1340                           ; 8 bytes @ 0x49
  1341  00004A                     	ds	7
  1342  000051                     dtoa@i:
  1343                           	opt callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x50
  1346  000051                     	ds	1
  1347  000052                     xtoa@i:
  1348                           	opt callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x51
  1351  000052                     	ds	2
  1352  000054                     xtoa@c:
  1353                           	opt callstack 0
  1354                           
  1355                           ; 2 bytes @ 0x53
  1356  000054                     	ds	2
  1357  000056                     ??_vfpfcnvrt:
  1358                           
  1359                           ; 1 bytes @ 0x55
  1360  000056                     	ds	4
  1361  00005A                     vfprintf@cfmt:
  1362                           	opt callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x59
  1365  00005A                     	ds	2
  1366  00005C                     
  1367                           ; 1 bytes @ 0x5B
  1368 ;;
  1369 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1370 ;;
  1371 ;; *************** function _main *****************
  1372 ;; Defined at:
  1373 ;;		line 70 in file "main.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  keypress        1   24[BANK1 ] unsigned char 
  1378 ;;  i               1   23[BANK1 ] unsigned char 
  1379 ;;  op_time         4   16[BANK1 ] int [2]
  1380 ;;  temp            2    0[BANK1 ] PTR unsigned char 
  1381 ;;		 -> main@begin_sec(1), 
  1382 ;;  begin_sec       1   20[BANK1 ] unsigned char 
  1383 ;;  end_min         1    0        unsigned char 
  1384 ;;  end_sec         1    0        unsigned char 
  1385 ;;  begin_min       1   13[BANK1 ] unsigned char 
  1386 ;;  time            7    6[BANK1 ] unsigned char [7]
  1387 ;;  baudRate        4    2[BANK1 ] long 
  1388 ;;  i               2    0        int 
  1389 ;;  break_while     2    0        int 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Totals:         0       4      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;Total ram usage:       31 bytes
  1404 ;; Hardware stack levels required when called:   11
  1405 ;; This function calls:
  1406 ;;		_I2C_Master_Init
  1407 ;;		_I2C_Master_Read
  1408 ;;		_I2C_Master_Start
  1409 ;;		_I2C_Master_Stop
  1410 ;;		_I2C_Master_Write
  1411 ;;		___aldiv
  1412 ;;		___fltol
  1413 ;;		_clear
  1414 ;;		_cursor_reset
  1415 ;;		_initialize_LCD
  1416 ;;		_keypad_total
  1417 ;;		_line_2
  1418 ;;		_printf
  1419 ;;		_time_elapsed
  1420 ;; This function is called by:
  1421 ;;		Startup code after reset
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text0
  1426  00238A                     __ptext0:
  1427                           	opt callstack 0
  1428  00238A                     _main:
  1429                           	opt callstack 20
  1430                           
  1431                           ;main.c: 75:     LATD = 0x00;
  1432                           
  1433                           ;incstack = 0
  1434  00238A  0E00               	movlw	0
  1435  00238C  6E8C               	movwf	3980,c	;volatile
  1436                           
  1437                           ;main.c: 76:     TRISD = 0x00;
  1438  00238E  0E00               	movlw	0
  1439  002390  6E95               	movwf	3989,c	;volatile
  1440                           
  1441                           ;main.c: 77:     initialize_LCD();
  1442  002392  ECA0  F022         	call	_initialize_LCD	;wreg free
  1443                           
  1444                           ;main.c: 80:     I2C_Master_Init(100000);
  1445  002396  0EA0               	movlw	160
  1446  002398  6E1E               	movwf	I2C_Master_Init@clockFreq,c
  1447  00239A  0E86               	movlw	134
  1448  00239C  6E1F               	movwf	I2C_Master_Init@clockFreq+1,c
  1449  00239E  0E01               	movlw	1
  1450  0023A0  6E20               	movwf	I2C_Master_Init@clockFreq+2,c
  1451  0023A2  0E00               	movlw	0
  1452  0023A4  6E21               	movwf	I2C_Master_Init@clockFreq+3,c
  1453  0023A6  EC14  F01F         	call	_I2C_Master_Init	;wreg free
  1454                           
  1455                           ;main.c: 81:     unsigned char time[7];;main.c: 85:     cursor_reset();
  1456  0023AA  EC24  F024         	call	_cursor_reset	;wreg free
  1457                           
  1458                           ;main.c: 90:     long baudRate = 9600;
  1459  0023AE  0E80               	movlw	128
  1460  0023B0  0101               	movlb	1	; () banked
  1461  0023B2  6F5E               	movwf	main@baudRate& (0+255),b
  1462  0023B4  0E25               	movlw	37
  1463  0023B6  6F5F               	movwf	(main@baudRate+1)& (0+255),b
  1464  0023B8  0E00               	movlw	0
  1465  0023BA  6F60               	movwf	(main@baudRate+2)& (0+255),b
  1466  0023BC  0E00               	movlw	0
  1467  0023BE  6F61               	movwf	(main@baudRate+3)& (0+255),b
  1468                           
  1469                           ;main.c: 91:     SPBRG = (unsigned char)((40000000 / (64 * baudRate)) - 1);
  1470  0023C0  0E00               	movlw	0
  1471  0023C2  6E11               	movwf	___aldiv@dividend,c
  1472  0023C4  0E5A               	movlw	90
  1473  0023C6  6E12               	movwf	___aldiv@dividend+1,c
  1474  0023C8  0E62               	movlw	98
  1475  0023CA  6E13               	movwf	___aldiv@dividend+2,c
  1476  0023CC  0E02               	movlw	2
  1477  0023CE  6E14               	movwf	___aldiv@dividend+3,c
  1478  0023D0  C15E  F0EE         	movff	main@baudRate,??_main
  1479  0023D4  C15F  F0EF         	movff	main@baudRate+1,??_main+1
  1480  0023D8  C160  F0F0         	movff	main@baudRate+2,??_main+2
  1481  0023DC  C161  F0F1         	movff	main@baudRate+3,??_main+3
  1482  0023E0  0E06               	movlw	6
  1483  0023E2                     u10265:
  1484  0023E2  90D8               	bcf	status,0,c
  1485  0023E4  0100               	movlb	0	; () banked
  1486  0023E6  37EE               	rlcf	??_main& (0+255),f,b
  1487  0023E8  37EF               	rlcf	(??_main+1)& (0+255),f,b
  1488  0023EA  37F0               	rlcf	(??_main+2)& (0+255),f,b
  1489  0023EC  37F1               	rlcf	(??_main+3)& (0+255),f,b
  1490  0023EE  2EE8               	decfsz	wreg,f,c
  1491  0023F0  D7F8               	goto	u10265
  1492  0023F2  C0EE  F015         	movff	??_main,___aldiv@divisor
  1493  0023F6  C0EF  F016         	movff	??_main+1,___aldiv@divisor+1
  1494  0023FA  C0F0  F017         	movff	??_main+2,___aldiv@divisor+2
  1495  0023FE  C0F1  F018         	movff	??_main+3,___aldiv@divisor+3
  1496  002402  EC51  F01E         	call	___aldiv	;wreg free
  1497  002406  0411               	decf	?___aldiv,w,c
  1498  002408  6EAF               	movwf	4015,c	;volatile
  1499                           
  1500                           ;main.c: 94:     TXSTAbits.TX9 = 0;
  1501  00240A  9CAC               	bcf	4012,6,c	;volatile
  1502                           
  1503                           ;main.c: 95:     TXSTAbits.SYNC = 0;
  1504  00240C  98AC               	bcf	4012,4,c	;volatile
  1505                           
  1506                           ;main.c: 96:     TXSTAbits.TXEN = 1;
  1507  00240E  8AAC               	bsf	4012,5,c	;volatile
  1508                           
  1509                           ;main.c: 97:     _delay((unsigned long)((5)*(40000000/4000.0)));
  1510  002410  0E41               	movlw	65
  1511  002412  0100               	movlb	0	; () banked
  1512  002414  6FEE               	movwf	??_main& (0+255),b
  1513  002416  0EEE               	movlw	238
  1514  002418                     u10397:
  1515  002418  2EE8               	decfsz	wreg,f,c
  1516  00241A  D7FE               	bra	u10397
  1517  00241C  2FEE               	decfsz	??_main& (0+255),f,b
  1518  00241E  D7FC               	bra	u10397
  1519  002420  F000               	nop	
  1520                           
  1521                           ;main.c: 100:     RCSTAbits.RX9 = 0;
  1522  002422  9CAB               	bcf	4011,6,c	;volatile
  1523                           
  1524                           ;main.c: 101:     RCSTAbits.CREN = 1;
  1525  002424  88AB               	bsf	4011,4,c	;volatile
  1526                           
  1527                           ;main.c: 104:     TRISCbits.TRISC6 = 0;
  1528  002426  9C94               	bcf	3988,6,c	;volatile
  1529                           
  1530                           ;main.c: 105:     TRISCbits.TRISC7 = 1;
  1531  002428  8E94               	bsf	3988,7,c	;volatile
  1532                           
  1533                           ;main.c: 108:     RCSTAbits.SPEN = 1;
  1534  00242A  8EAB               	bsf	4011,7,c	;volatile
  1535                           
  1536                           ;main.c: 111:     PIE1bits.RCIE = 1;
  1537  00242C  8A9D               	bsf	3997,5,c	;volatile
  1538                           
  1539                           ;main.c: 116:     TRISAbits.RA0 = 0;
  1540  00242E  9092               	bcf	3986,0,c	;volatile
  1541                           
  1542                           ;main.c: 117:     TRISAbits.RA1 = 0;
  1543  002430  9292               	bcf	3986,1,c	;volatile
  1544                           
  1545                           ;main.c: 118:     LATAbits.LATA0 = 0;
  1546  002432  9089               	bcf	3977,0,c	;volatile
  1547                           
  1548                           ;main.c: 119:     LATAbits.LATA1 = 0;
  1549  002434  9289               	bcf	3977,1,c	;volatile
  1550                           
  1551                           ;main.c: 122:     INTCONbits.GIE = 1;
  1552  002436  8EF2               	bsf	4082,7,c	;volatile
  1553                           
  1554                           ;main.c: 123:     INTCONbits.PEIE = 1;
  1555  002438  8CF2               	bsf	4082,6,c	;volatile
  1556                           
  1557                           ;main.c: 126:     INTCON3bits.INT1IE = 1;
  1558  00243A  86F0               	bsf	4080,3,c	;volatile
  1559                           
  1560                           ;main.c: 129:     TRISAbits.RA2 = 0;
  1561  00243C  9492               	bcf	3986,2,c	;volatile
  1562  00243E                     l7663:
  1563                           
  1564                           ;main.c: 140:             I2C_Master_Start();
  1565  00243E  EC2C  F024         	call	_I2C_Master_Start	;wreg free
  1566                           
  1567                           ;main.c: 141:             I2C_Master_Write(0b11010000);
  1568  002442  0E00               	movlw	0
  1569  002444  6E13               	movwf	I2C_Master_Write@byteToWrite+1,c
  1570  002446  0ED0               	movlw	208
  1571  002448  6E12               	movwf	I2C_Master_Write@byteToWrite,c
  1572  00244A  EC1B  F024         	call	_I2C_Master_Write	;wreg free
  1573                           
  1574                           ;main.c: 142:             I2C_Master_Write(0x00);
  1575  00244E  0E00               	movlw	0
  1576  002450  6E13               	movwf	I2C_Master_Write@byteToWrite+1,c
  1577  002452  0E00               	movlw	0
  1578  002454  6E12               	movwf	I2C_Master_Write@byteToWrite,c
  1579  002456  EC1B  F024         	call	_I2C_Master_Write	;wreg free
  1580                           
  1581                           ;main.c: 143:             I2C_Master_Stop();
  1582  00245A  EC28  F024         	call	_I2C_Master_Stop	;wreg free
  1583                           
  1584                           ;main.c: 146:             I2C_Master_Start();
  1585  00245E  EC2C  F024         	call	_I2C_Master_Start	;wreg free
  1586                           
  1587                           ;main.c: 147:             I2C_Master_Write(0b11010001);
  1588  002462  0E00               	movlw	0
  1589  002464  6E13               	movwf	I2C_Master_Write@byteToWrite+1,c
  1590  002466  0ED1               	movlw	209
  1591  002468  6E12               	movwf	I2C_Master_Write@byteToWrite,c
  1592  00246A  EC1B  F024         	call	_I2C_Master_Write	;wreg free
  1593                           
  1594                           ;main.c: 148:             for(unsigned char i = 0; i < 6; i++){
  1595  00246E  0E00               	movlw	0
  1596  002470  0101               	movlb	1	; () banked
  1597  002472  6F73               	movwf	main@i_534& (0+255),b
  1598  002474                     l7681:
  1599                           
  1600                           ; BSR set to: 1
  1601                           ;main.c: 149:                 time[i] = I2C_Master_Read(0);
  1602  002474  0E62               	movlw	low main@time
  1603  002476  2573               	addwf	main@i_534& (0+255),w,b
  1604  002478  6ED9               	movwf	fsr2l,c
  1605  00247A  6ADA               	clrf	fsr2h,c
  1606  00247C  0E01               	movlw	high main@time
  1607  00247E  22DA               	addwfc	fsr2h,f,c
  1608  002480  0E00               	movlw	0
  1609  002482  ECE4  F023         	call	_I2C_Master_Read
  1610  002486  6EDF               	movwf	indf2,c
  1611                           
  1612                           ;main.c: 150:             }
  1613  002488  0101               	movlb	1	; () banked
  1614  00248A  2B73               	incf	main@i_534& (0+255),f,b
  1615                           
  1616                           ; BSR set to: 1
  1617  00248C  0E05               	movlw	5
  1618  00248E  6573               	cpfsgt	main@i_534& (0+255),b
  1619  002490  D7F1               	goto	l7681
  1620                           
  1621                           ; BSR set to: 1
  1622                           ;main.c: 155:             time[6] = I2C_Master_Read(1);
  1623  002492  0E01               	movlw	1
  1624  002494  ECE4  F023         	call	_I2C_Master_Read
  1625  002498  0101               	movlb	1	; () banked
  1626  00249A  6F68               	movwf	(main@time+6)& (0+255),b
  1627                           
  1628                           ;main.c: 156:             I2C_Master_Stop();
  1629  00249C  EC28  F024         	call	_I2C_Master_Stop	;wreg free
  1630                           
  1631                           ;main.c: 159:             clear();
  1632  0024A0  ECF6  F023         	call	_clear	;wreg free
  1633                           
  1634                           ;main.c: 160:             printf("%02x/%02x/%02x", time[4],time[5],time[6]);
  1635  0024A4  0E38               	movlw	low STR_1
  1636  0024A6  0100               	movlb	0	; () banked
  1637  0024A8  6FE2               	movwf	printf@fmt& (0+255),b
  1638  0024AA  0E10               	movlw	high STR_1
  1639  0024AC  6FE3               	movwf	(printf@fmt+1)& (0+255),b
  1640  0024AE  C166  F0E4         	movff	main@time+4,?_printf+2
  1641  0024B2  6BE5               	clrf	(?_printf+3)& (0+255),b
  1642  0024B4  C167  F0E6         	movff	main@time+5,?_printf+4
  1643  0024B8  6BE7               	clrf	(?_printf+5)& (0+255),b
  1644  0024BA  C168  F0E8         	movff	main@time+6,?_printf+6
  1645  0024BE  6BE9               	clrf	(?_printf+7)& (0+255),b
  1646  0024C0  ECBD  F023         	call	_printf	;wreg free
  1647                           
  1648                           ;main.c: 161:             line_2();
  1649  0024C4  EC20  F024         	call	_line_2	;wreg free
  1650                           
  1651                           ;main.c: 162:             printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  1652  0024C8  0E47               	movlw	low STR_2
  1653  0024CA  0100               	movlb	0	; () banked
  1654  0024CC  6FE2               	movwf	printf@fmt& (0+255),b
  1655  0024CE  0E10               	movlw	high STR_2
  1656  0024D0  6FE3               	movwf	(printf@fmt+1)& (0+255),b
  1657  0024D2  C164  F0E4         	movff	main@time+2,?_printf+2
  1658  0024D6  6BE5               	clrf	(?_printf+3)& (0+255),b
  1659  0024D8  C163  F0E6         	movff	main@time+1,?_printf+4
  1660  0024DC  6BE7               	clrf	(?_printf+5)& (0+255),b
  1661  0024DE  C162  F0E8         	movff	main@time,?_printf+6
  1662  0024E2  6BE9               	clrf	(?_printf+7)& (0+255),b
  1663  0024E4  ECBD  F023         	call	_printf	;wreg free
  1664                           
  1665                           ;main.c: 163:             _delay((unsigned long)((1000)*(40000000/4000.0)));
  1666  0024E8  0E33               	movlw	51
  1667  0024EA  0100               	movlb	0	; () banked
  1668  0024EC  6FEF               	movwf	(??_main+1)& (0+255),b
  1669  0024EE  0EBB               	movlw	187
  1670  0024F0  6FEE               	movwf	??_main& (0+255),b
  1671  0024F2  0EDF               	movlw	223
  1672  0024F4                     u10407:
  1673  0024F4  2EE8               	decfsz	wreg,f,c
  1674  0024F6  D7FE               	bra	u10407
  1675  0024F8  2FEE               	decfsz	??_main& (0+255),f,b
  1676  0024FA  D7FC               	bra	u10407
  1677  0024FC  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  1678  0024FE  D7FA               	bra	u10407
  1679  002500  D000               	nop2	
  1680                           
  1681                           ;main.c: 164:             if (key_pressed){
  1682  002502  0101               	movlb	1	; () banked
  1683  002504  5104               	movf	_key_pressed& (0+255),w,b	;volatile
  1684  002506  1105               	iorwf	(_key_pressed+1)& (0+255),w,b	;volatile
  1685  002508  B4D8               	btfsc	status,2,c
  1686  00250A  D799               	goto	l7663
  1687                           
  1688                           ; BSR set to: 1
  1689                           ;main.c: 165:                 key_pressed = 0;
  1690  00250C  0E00               	movlw	0
  1691  00250E  6F05               	movwf	(_key_pressed+1)& (0+255),b	;volatile
  1692  002510  0E00               	movlw	0
  1693  002512  6F04               	movwf	_key_pressed& (0+255),b	;volatile
  1694                           
  1695                           ; BSR set to: 1
  1696                           ;main.c: 169:     clear();
  1697                           
  1698                           ;main.c: 166:                     break;
  1699  002514  ECF6  F023         	call	_clear	;wreg free
  1700  002518                     l7701:
  1701                           
  1702                           ;main.c: 173:         if(key_pressed){
  1703  002518  0101               	movlb	1	; () banked
  1704  00251A  5104               	movf	_key_pressed& (0+255),w,b	;volatile
  1705  00251C  1105               	iorwf	(_key_pressed+1)& (0+255),w,b	;volatile
  1706  00251E  B4D8               	btfsc	status,2,c
  1707  002520  D7FB               	goto	l7701
  1708                           
  1709                           ; BSR set to: 1
  1710                           ;main.c: 174:             key_pressed = 0;
  1711  002522  0E00               	movlw	0
  1712  002524  6F05               	movwf	(_key_pressed+1)& (0+255),b	;volatile
  1713  002526  0E00               	movlw	0
  1714  002528  6F04               	movwf	_key_pressed& (0+255),b	;volatile
  1715                           
  1716                           ; BSR set to: 1
  1717                           ;main.c: 177:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  1718  00252A  3881               	swapf	3969,w,c	;volatile
  1719  00252C  0B0F               	andlw	15
  1720  00252E  0B0F               	andlw	15
  1721  002530  6F74               	movwf	main@keypress& (0+255),b
  1722                           
  1723                           ; BSR set to: 1
  1724                           ;main.c: 178:             if (keys[keypress] == 'A'){
  1725  002532  0E01               	movlw	low _keys
  1726  002534  2574               	addwf	main@keypress& (0+255),w,b
  1727  002536  6EF6               	movwf	tblptrl,c
  1728  002538  6AF7               	clrf	tblptrh,c
  1729  00253A  0E10               	movlw	high _keys
  1730  00253C  22F7               	addwfc	tblptrh,f,c
  1731  00253E                     	if	0	;There are less than 3 active tblptr bytes
  1732  00253E                     	endif
  1733  00253E  0008               	tblrd		*
  1734  002540  50F5               	movf	tablat,w,c
  1735  002542  0A41               	xorlw	65
  1736  002544  B4D8               	btfsc	status,2,c
  1737  002546  D045               	goto	l7727
  1738                           
  1739                           ; BSR set to: 1
  1740                           ;main.c: 181:             if (first_digit == 20){
  1741  002548  0E14               	movlw	20
  1742  00254A  1977               	xorwf	_first_digit& (0+255),w,b
  1743  00254C  B4D8               	btfsc	status,2,c
  1744                           
  1745                           ; BSR set to: 1
  1746                           ;main.c: 182:                 first_digit = keypress;
  1747  00254E  C174  F177         	movff	main@keypress,_first_digit
  1748                           
  1749                           ; BSR set to: 1
  1750                           ;main.c: 184:             if (first_digit != 20){
  1751  002552  0E14               	movlw	20
  1752  002554  1977               	xorwf	_first_digit& (0+255),w,b
  1753  002556  A4D8               	btfss	status,2,c
  1754                           
  1755                           ; BSR set to: 1
  1756                           ;main.c: 185:                 second_digit = keypress;
  1757  002558  C174  F176         	movff	main@keypress,_second_digit
  1758                           
  1759                           ; BSR set to: 1
  1760                           ;main.c: 187:             printf("%x",keys[keypress]);
  1761  00255C  0EA9               	movlw	low STR_3
  1762  00255E  0100               	movlb	0	; () banked
  1763  002560  6FE2               	movwf	printf@fmt& (0+255),b
  1764  002562  0E10               	movlw	high STR_3
  1765  002564  6FE3               	movwf	(printf@fmt+1)& (0+255),b
  1766  002566  0E01               	movlw	low _keys
  1767  002568  0101               	movlb	1	; () banked
  1768  00256A  2574               	addwf	main@keypress& (0+255),w,b
  1769  00256C  6EF6               	movwf	tblptrl,c
  1770  00256E  6AF7               	clrf	tblptrh,c
  1771  002570  0E10               	movlw	high _keys
  1772  002572  22F7               	addwfc	tblptrh,f,c
  1773  002574                     	if	0	;There are less than 3 active tblptr bytes
  1774  002574                     	endif
  1775  002574  0008               	tblrd		*
  1776  002576  50F5               	movf	tablat,w,c
  1777  002578  0100               	movlb	0	; () banked
  1778  00257A  6FE4               	movwf	(?_printf+2)& (0+255),b
  1779  00257C  6BE5               	clrf	(?_printf+3)& (0+255),b
  1780  00257E  ECBD  F023         	call	_printf	;wreg free
  1781                           
  1782                           ;main.c: 188:             total_cones = keypad_total(first_digit, second_digit);
  1783  002582  C176  F017         	movff	_second_digit,keypad_total@second
  1784  002586  0101               	movlb	1	; () banked
  1785  002588  5177               	movf	_first_digit& (0+255),w,b
  1786  00258A  EC79  F023         	call	_keypad_total
  1787  00258E  C017  F10A         	movff	?_keypad_total,_total_cones
  1788  002592  C018  F10B         	movff	?_keypad_total+1,_total_cones+1
  1789  002596                     l7723:
  1790                           
  1791                           ;main.c: 190:              while(!TXIF | !TRMT){
  1792  002596  B2AC               	btfsc	4012,1,c	;volatile
  1793  002598  D002               	goto	u10330
  1794  00259A  0E01               	movlw	1
  1795  00259C  D001               	goto	u10332
  1796  00259E                     u10330:
  1797  00259E  0E00               	movlw	0
  1798  0025A0                     u10332:
  1799  0025A0  0100               	movlb	0	; () banked
  1800  0025A2  6FEE               	movwf	??_main& (0+255),b
  1801  0025A4  B89E               	btfsc	3998,4,c	;volatile
  1802  0025A6  D002               	goto	u10340
  1803  0025A8  0E01               	movlw	1
  1804  0025AA  D001               	goto	u10342
  1805  0025AC                     u10340:
  1806  0025AC  0E00               	movlw	0
  1807  0025AE                     u10342:
  1808  0025AE  11EE               	iorwf	??_main& (0+255),w,b
  1809  0025B0  E1F2               	bnz	l7723
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;main.c: 194:             TXREG = total_cones;
  1813  0025B2  C10A  FFAD         	movff	_total_cones,4013	;volatile
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;main.c: 195:             _delay((unsigned long)((1000)*(40000000/4000.0)));
  1817  0025B6  0E33               	movlw	51
  1818  0025B8  0100               	movlb	0	; () banked
  1819  0025BA  6FEF               	movwf	(??_main+1)& (0+255),b
  1820  0025BC  0EBB               	movlw	187
  1821  0025BE  6FEE               	movwf	??_main& (0+255),b
  1822  0025C0  0EDF               	movlw	223
  1823  0025C2                     u10417:
  1824  0025C2  2EE8               	decfsz	wreg,f,c
  1825  0025C4  D7FE               	bra	u10417
  1826  0025C6  2FEE               	decfsz	??_main& (0+255),f,b
  1827  0025C8  D7FC               	bra	u10417
  1828  0025CA  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  1829  0025CC  D7FA               	bra	u10417
  1830  0025CE  D000               	nop2	
  1831  0025D0  D7A3               	goto	l7701
  1832  0025D2                     l7727:
  1833                           
  1834                           ; BSR set to: 1
  1835                           ;main.c: 201:     I2C_Master_Start();
  1836  0025D2  EC2C  F024         	call	_I2C_Master_Start	;wreg free
  1837                           
  1838                           ;main.c: 202:     I2C_Master_Write(0b11010000);
  1839  0025D6  0E00               	movlw	0
  1840  0025D8  6E13               	movwf	I2C_Master_Write@byteToWrite+1,c
  1841  0025DA  0ED0               	movlw	208
  1842  0025DC  6E12               	movwf	I2C_Master_Write@byteToWrite,c
  1843  0025DE  EC1B  F024         	call	_I2C_Master_Write	;wreg free
  1844                           
  1845                           ;main.c: 203:     I2C_Master_Write(0x00);
  1846  0025E2  0E00               	movlw	0
  1847  0025E4  6E13               	movwf	I2C_Master_Write@byteToWrite+1,c
  1848  0025E6  0E00               	movlw	0
  1849  0025E8  6E12               	movwf	I2C_Master_Write@byteToWrite,c
  1850  0025EA  EC1B  F024         	call	_I2C_Master_Write	;wreg free
  1851                           
  1852                           ;main.c: 204:     I2C_Master_Stop();
  1853  0025EE  EC28  F024         	call	_I2C_Master_Stop	;wreg free
  1854                           
  1855                           ;main.c: 206:     I2C_Master_Start();
  1856  0025F2  EC2C  F024         	call	_I2C_Master_Start	;wreg free
  1857                           
  1858                           ;main.c: 207:     I2C_Master_Write(0b11010001);
  1859  0025F6  0E00               	movlw	0
  1860  0025F8  6E13               	movwf	I2C_Master_Write@byteToWrite+1,c
  1861  0025FA  0ED1               	movlw	209
  1862  0025FC  6E12               	movwf	I2C_Master_Write@byteToWrite,c
  1863  0025FE  EC1B  F024         	call	_I2C_Master_Write	;wreg free
  1864                           
  1865                           ;main.c: 208:     unsigned char begin_sec = I2C_Master_Read(0);
  1866  002602  0E00               	movlw	0
  1867  002604  ECE4  F023         	call	_I2C_Master_Read
  1868  002608  0101               	movlb	1	; () banked
  1869  00260A  6F70               	movwf	main@begin_sec& (0+255),b
  1870                           
  1871                           ;main.c: 209:     unsigned char begin_min = I2C_Master_Read(1);
  1872  00260C  0E01               	movlw	1
  1873  00260E  ECE4  F023         	call	_I2C_Master_Read
  1874  002612  0101               	movlb	1	; () banked
  1875  002614  6F69               	movwf	main@begin_min& (0+255),b
  1876                           
  1877                           ; BSR set to: 1
  1878                           ;main.c: 210:     unsigned char * temp = &begin_sec;
  1879  002616  0E70               	movlw	low main@begin_sec
  1880  002618  6F5C               	movwf	main@temp& (0+255),b
  1881  00261A  0E01               	movlw	high main@begin_sec
  1882  00261C  6F5D               	movwf	(main@temp+1)& (0+255),b
  1883                           
  1884                           ; BSR set to: 1
  1885                           ;main.c: 211:     I2C_Master_Stop();
  1886  00261E  EC28  F024         	call	_I2C_Master_Stop	;wreg free
  1887  002622                     l7733:
  1888                           
  1889                           ;main.c: 217:     while(!TXIF | !TRMT){
  1890  002622  B2AC               	btfsc	4012,1,c	;volatile
  1891  002624  D002               	goto	u10350
  1892  002626  0E01               	movlw	1
  1893  002628  D001               	goto	u10352
  1894  00262A                     u10350:
  1895  00262A  0E00               	movlw	0
  1896  00262C                     u10352:
  1897  00262C  0100               	movlb	0	; () banked
  1898  00262E  6FEE               	movwf	??_main& (0+255),b
  1899  002630  B89E               	btfsc	3998,4,c	;volatile
  1900  002632  D002               	goto	u10360
  1901  002634  0E01               	movlw	1
  1902  002636  D001               	goto	u10362
  1903  002638                     u10360:
  1904  002638  0E00               	movlw	0
  1905  00263A                     u10362:
  1906  00263A  11EE               	iorwf	??_main& (0+255),w,b
  1907  00263C  E1F2               	bnz	l7733
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;main.c: 221:     TXREG = 'A';
  1911  00263E  0E41               	movlw	65
  1912  002640  6EAD               	movwf	4013,c	;volatile
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;main.c: 222:     _delay((unsigned long)((1000)*(40000000/4000.0)));
  1916  002642  0E33               	movlw	51
  1917  002644  0100               	movlb	0	; () banked
  1918  002646  6FEF               	movwf	(??_main+1)& (0+255),b
  1919  002648  0EBB               	movlw	187
  1920  00264A  6FEE               	movwf	??_main& (0+255),b
  1921  00264C  0EDF               	movlw	223
  1922  00264E                     u10427:
  1923  00264E  2EE8               	decfsz	wreg,f,c
  1924  002650  D7FE               	bra	u10427
  1925  002652  2FEE               	decfsz	??_main& (0+255),f,b
  1926  002654  D7FC               	bra	u10427
  1927  002656  2FEF               	decfsz	(??_main+1)& (0+255),f,b
  1928  002658  D7FA               	bra	u10427
  1929  00265A  D000               	nop2	
  1930                           
  1931                           ;main.c: 225:     LATAbits.LATA2 = 1;
  1932  00265C  8489               	bsf	3977,2,c	;volatile
  1933                           
  1934                           ;main.c: 226:     INTCONbits.RBIE = 1;
  1935  00265E  86F2               	bsf	4082,3,c	;volatile
  1936  002660                     l7743:
  1937                           
  1938                           ;main.c: 235:         while(!TXIF | !TRMT){
  1939  002660  B2AC               	btfsc	4012,1,c	;volatile
  1940  002662  D002               	goto	u10370
  1941  002664  0E01               	movlw	1
  1942  002666  D001               	goto	u10372
  1943  002668                     u10370:
  1944  002668  0E00               	movlw	0
  1945  00266A                     u10372:
  1946  00266A  0100               	movlb	0	; () banked
  1947  00266C  6FEE               	movwf	??_main& (0+255),b
  1948  00266E  B89E               	btfsc	3998,4,c	;volatile
  1949  002670  D002               	goto	u10380
  1950  002672  0E01               	movlw	1
  1951  002674  D001               	goto	u10382
  1952  002676                     u10380:
  1953  002676  0E00               	movlw	0
  1954  002678                     u10382:
  1955  002678  11EE               	iorwf	??_main& (0+255),w,b
  1956  00267A  E1F2               	bnz	l7743
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;main.c: 239:         TXREG = distance_travelled;
  1960  00267C  C100  F011         	movff	_distance_travelled,___fltol@f1
  1961  002680  C101  F012         	movff	_distance_travelled+1,___fltol@f1+1
  1962  002684  C102  F013         	movff	_distance_travelled+2,___fltol@f1+2
  1963  002688  C103  F014         	movff	_distance_travelled+3,___fltol@f1+3
  1964  00268C  ECB7  F01E         	call	___fltol	;wreg free
  1965  002690  5011               	movf	?___fltol,w,c
  1966  002692  6EAD               	movwf	4013,c	;volatile
  1967                           
  1968                           ;main.c: 242:         if (status == 'A'){
  1969  002694  D7E5               	goto	l7743
  1970  002696                     __end_of_main:
  1971                           	opt callstack 0
  1972                           
  1973 ;; *************** function _time_elapsed *****************
  1974 ;; Defined at:
  1975 ;;		line 47 in file "timer.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  begin_min       1    wreg     unsigned char 
  1978 ;;  begin_sec       1   24[COMRAM] unsigned char 
  1979 ;;  end_min         1   25[COMRAM] unsigned char 
  1980 ;;  end_sec         1   26[COMRAM] unsigned char 
  1981 ;;  array           2   27[COMRAM] PTR int 
  1982 ;;		 -> main@op_time(4), 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  begin_min       1   29[COMRAM] unsigned char 
  1985 ;;  total_s         2   46[COMRAM] int 
  1986 ;;  seconds         2   44[COMRAM] int 
  1987 ;;  minutes         2   42[COMRAM] int 
  1988 ;;  end_s           2   40[COMRAM] int 
  1989 ;;  begin_s         2   38[COMRAM] int 
  1990 ;;  e_sec_int       2   36[COMRAM] int 
  1991 ;;  e_min_int       2   34[COMRAM] int 
  1992 ;;  b_sec_int       2   32[COMRAM] int 
  1993 ;;  b_min_int       2   30[COMRAM] int 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  2   24[COMRAM] int 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2003 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2007 ;;Total ram usage:       24 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    3
  2010 ;; This function calls:
  2011 ;;		___awdiv
  2012 ;;		___awmod
  2013 ;;		___wmul
  2014 ;;		_atohtoi
  2015 ;; This function is called by:
  2016 ;;		_main
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text1
  2021  003A22                     __ptext1:
  2022                           	opt callstack 0
  2023  003A22                     _time_elapsed:
  2024                           	opt callstack 27
  2025                           
  2026                           ;incstack = 0
  2027                           ;time_elapsed@begin_min stored from wreg
  2028  003A22  6E1E               	movwf	time_elapsed@begin_min,c
  2029                           
  2030                           ;timer.c: 48:     int b_min_int = atohtoi(begin_min);
  2031  003A24  501E               	movf	time_elapsed@begin_min,w,c
  2032  003A26  EC83  F01C         	call	_atohtoi
  2033  003A2A  C011  F01F         	movff	?_atohtoi,time_elapsed@b_min_int
  2034  003A2E  C012  F020         	movff	?_atohtoi+1,time_elapsed@b_min_int+1
  2035                           
  2036                           ;timer.c: 49:     int b_sec_int = atohtoi(begin_sec);
  2037  003A32  5019               	movf	time_elapsed@begin_sec,w,c
  2038  003A34  EC83  F01C         	call	_atohtoi
  2039  003A38  C011  F021         	movff	?_atohtoi,time_elapsed@b_sec_int
  2040  003A3C  C012  F022         	movff	?_atohtoi+1,time_elapsed@b_sec_int+1
  2041                           
  2042                           ;timer.c: 50:     int e_min_int = atohtoi(end_min);
  2043  003A40  501A               	movf	time_elapsed@end_min,w,c
  2044  003A42  EC83  F01C         	call	_atohtoi
  2045  003A46  C011  F023         	movff	?_atohtoi,time_elapsed@e_min_int
  2046  003A4A  C012  F024         	movff	?_atohtoi+1,time_elapsed@e_min_int+1
  2047                           
  2048                           ;timer.c: 51:     int e_sec_int = atohtoi(end_sec);
  2049  003A4E  501B               	movf	time_elapsed@end_sec,w,c
  2050  003A50  EC83  F01C         	call	_atohtoi
  2051  003A54  C011  F025         	movff	?_atohtoi,time_elapsed@e_sec_int
  2052  003A58  C012  F026         	movff	?_atohtoi+1,time_elapsed@e_sec_int+1
  2053                           
  2054                           ;timer.c: 52:     int begin_s = b_min_int*60+b_sec_int;
  2055  003A5C  C01F  F011         	movff	time_elapsed@b_min_int,___wmul@multiplier
  2056  003A60  C020  F012         	movff	time_elapsed@b_min_int+1,___wmul@multiplier+1
  2057  003A64  0E00               	movlw	0
  2058  003A66  6E14               	movwf	___wmul@multiplicand+1,c
  2059  003A68  0E3C               	movlw	60
  2060  003A6A  6E13               	movwf	___wmul@multiplicand,c
  2061  003A6C  ECD1  F023         	call	___wmul	;wreg free
  2062  003A70  5021               	movf	time_elapsed@b_sec_int,w,c
  2063  003A72  2411               	addwf	?___wmul,w,c
  2064  003A74  6E27               	movwf	time_elapsed@begin_s,c
  2065  003A76  5022               	movf	time_elapsed@b_sec_int+1,w,c
  2066  003A78  2012               	addwfc	?___wmul+1,w,c
  2067  003A7A  6E28               	movwf	time_elapsed@begin_s+1,c
  2068                           
  2069                           ;timer.c: 53:     int end_s = e_min_int*60+e_sec_int;
  2070  003A7C  C023  F011         	movff	time_elapsed@e_min_int,___wmul@multiplier
  2071  003A80  C024  F012         	movff	time_elapsed@e_min_int+1,___wmul@multiplier+1
  2072  003A84  0E00               	movlw	0
  2073  003A86  6E14               	movwf	___wmul@multiplicand+1,c
  2074  003A88  0E3C               	movlw	60
  2075  003A8A  6E13               	movwf	___wmul@multiplicand,c
  2076  003A8C  ECD1  F023         	call	___wmul	;wreg free
  2077  003A90  5025               	movf	time_elapsed@e_sec_int,w,c
  2078  003A92  2411               	addwf	?___wmul,w,c
  2079  003A94  6E29               	movwf	time_elapsed@end_s,c
  2080  003A96  5026               	movf	time_elapsed@e_sec_int+1,w,c
  2081  003A98  2012               	addwfc	?___wmul+1,w,c
  2082  003A9A  6E2A               	movwf	time_elapsed@end_s+1,c
  2083                           
  2084                           ;timer.c: 54:     int total_s = end_s - begin_s;
  2085  003A9C  5027               	movf	time_elapsed@begin_s,w,c
  2086  003A9E  5C29               	subwf	time_elapsed@end_s,w,c
  2087  003AA0  6E2F               	movwf	time_elapsed@total_s,c
  2088  003AA2  5028               	movf	time_elapsed@begin_s+1,w,c
  2089  003AA4  582A               	subwfb	time_elapsed@end_s+1,w,c
  2090  003AA6  6E30               	movwf	time_elapsed@total_s+1,c
  2091                           
  2092                           ;timer.c: 55:     int minutes = total_s/60;
  2093  003AA8  C02F  F011         	movff	time_elapsed@total_s,___awdiv@dividend
  2094  003AAC  C030  F012         	movff	time_elapsed@total_s+1,___awdiv@dividend+1
  2095  003AB0  0E00               	movlw	0
  2096  003AB2  6E14               	movwf	___awdiv@divisor+1,c
  2097  003AB4  0E3C               	movlw	60
  2098  003AB6  6E13               	movwf	___awdiv@divisor,c
  2099  003AB8  EC90  F020         	call	___awdiv	;wreg free
  2100  003ABC  C011  F02B         	movff	?___awdiv,time_elapsed@minutes
  2101  003AC0  C012  F02C         	movff	?___awdiv+1,time_elapsed@minutes+1
  2102                           
  2103                           ;timer.c: 56:     int seconds = total_s%60;
  2104  003AC4  C02F  F011         	movff	time_elapsed@total_s,___awmod@dividend
  2105  003AC8  C030  F012         	movff	time_elapsed@total_s+1,___awmod@dividend+1
  2106  003ACC  0E00               	movlw	0
  2107  003ACE  6E14               	movwf	___awmod@divisor+1,c
  2108  003AD0  0E3C               	movlw	60
  2109  003AD2  6E13               	movwf	___awmod@divisor,c
  2110  003AD4  EC13  F021         	call	___awmod	;wreg free
  2111  003AD8  C011  F02D         	movff	?___awmod,time_elapsed@seconds
  2112  003ADC  C012  F02E         	movff	?___awmod+1,time_elapsed@seconds+1
  2113                           
  2114                           ;timer.c: 57:     array[0] = seconds;
  2115  003AE0  C01C  FFD9         	movff	time_elapsed@array,fsr2l
  2116  003AE4  C01D  FFDA         	movff	time_elapsed@array+1,fsr2h
  2117  003AE8  C02D  FFDE         	movff	time_elapsed@seconds,postinc2
  2118  003AEC  C02E  FFDD         	movff	time_elapsed@seconds+1,postdec2
  2119                           
  2120                           ;timer.c: 58:     array[1] = minutes;
  2121  003AF0  EE20 F002          	lfsr	2,2
  2122  003AF4  501C               	movf	time_elapsed@array,w,c
  2123  003AF6  26D9               	addwf	fsr2l,f,c
  2124  003AF8  501D               	movf	time_elapsed@array+1,w,c
  2125  003AFA  22DA               	addwfc	fsr2h,f,c
  2126  003AFC  C02B  FFDE         	movff	time_elapsed@minutes,postinc2
  2127  003B00  C02C  FFDD         	movff	time_elapsed@minutes+1,postdec2
  2128  003B04  0012               	return		;funcret
  2129  003B06                     __end_of_time_elapsed:
  2130                           	opt callstack 0
  2131                           
  2132 ;; *************** function _atohtoi *****************
  2133 ;; Defined at:
  2134 ;;		line 12 in file "timer.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  ascii           1    wreg     unsigned char 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  ascii           1   18[COMRAM] unsigned char 
  2139 ;;  dec_ascii       2   19[COMRAM] int 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  2   16[COMRAM] int 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2150 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;Total ram usage:        5 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    2
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_time_elapsed
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text2
  2164  003906                     __ptext2:
  2165                           	opt callstack 0
  2166  003906                     _atohtoi:
  2167                           	opt callstack 27
  2168                           
  2169                           ;incstack = 0
  2170                           ;atohtoi@ascii stored from wreg
  2171  003906  6E13               	movwf	atohtoi@ascii,c
  2172                           
  2173                           ;timer.c: 13:    int dec_ascii = (int)ascii;
  2174  003908  C013  F014         	movff	atohtoi@ascii,atohtoi@dec_ascii
  2175  00390C  6A15               	clrf	atohtoi@dec_ascii+1,c
  2176                           
  2177                           ;timer.c: 14:    if (dec_ascii<10 && dec_ascii > 0){
  2178  00390E  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2179  003910  D006               	goto	u6570
  2180  003912  5015               	movf	atohtoi@dec_ascii+1,w,c
  2181  003914  E110               	bnz	l5243
  2182  003916  0E0A               	movlw	10
  2183  003918  5C14               	subwf	atohtoi@dec_ascii,w,c
  2184  00391A  B0D8               	btfsc	status,0,c
  2185  00391C  D00C               	goto	l5243
  2186  00391E                     u6570:
  2187  00391E  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2188  003920  D00A               	goto	l5243
  2189  003922  5015               	movf	atohtoi@dec_ascii+1,w,c
  2190  003924  E103               	bnz	u6580
  2191  003926  0414               	decf	atohtoi@dec_ascii,w,c
  2192  003928  A0D8               	btfss	status,0,c
  2193  00392A  D005               	goto	l5243
  2194  00392C                     u6580:
  2195                           
  2196                           ;timer.c: 15:      return dec_ascii;
  2197  00392C  C014  F011         	movff	atohtoi@dec_ascii,?_atohtoi
  2198  003930  C015  F012         	movff	atohtoi@dec_ascii+1,?_atohtoi+1
  2199  003934  0012               	return	
  2200  003936                     l5243:
  2201  003936  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2202  003938  D015               	goto	l5253
  2203  00393A  5015               	movf	atohtoi@dec_ascii+1,w,c
  2204  00393C  E104               	bnz	u6590
  2205  00393E  0E10               	movlw	16
  2206  003940  5C14               	subwf	atohtoi@dec_ascii,w,c
  2207  003942  A0D8               	btfss	status,0,c
  2208  003944  D00F               	goto	l5253
  2209  003946                     u6590:
  2210  003946  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2211  003948  D006               	goto	u6600
  2212  00394A  5015               	movf	atohtoi@dec_ascii+1,w,c
  2213  00394C  E10B               	bnz	l5253
  2214  00394E  0E1A               	movlw	26
  2215  003950  5C14               	subwf	atohtoi@dec_ascii,w,c
  2216  003952  B0D8               	btfsc	status,0,c
  2217  003954  D007               	goto	l5253
  2218  003956                     u6600:
  2219                           
  2220                           ;timer.c: 18:      return dec_ascii-6;
  2221  003956  0EFA               	movlw	250
  2222  003958  2414               	addwf	atohtoi@dec_ascii,w,c
  2223  00395A  6E11               	movwf	?_atohtoi,c
  2224  00395C  0EFF               	movlw	255
  2225  00395E  2015               	addwfc	atohtoi@dec_ascii+1,w,c
  2226  003960  6E12               	movwf	?_atohtoi+1,c
  2227  003962  0012               	return	
  2228  003964                     l5253:
  2229  003964  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2230  003966  D015               	goto	l5263
  2231  003968  5015               	movf	atohtoi@dec_ascii+1,w,c
  2232  00396A  E104               	bnz	u6610
  2233  00396C  0E20               	movlw	32
  2234  00396E  5C14               	subwf	atohtoi@dec_ascii,w,c
  2235  003970  A0D8               	btfss	status,0,c
  2236  003972  D00F               	goto	l5263
  2237  003974                     u6610:
  2238  003974  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2239  003976  D006               	goto	u6620
  2240  003978  5015               	movf	atohtoi@dec_ascii+1,w,c
  2241  00397A  E10B               	bnz	l5263
  2242  00397C  0E2A               	movlw	42
  2243  00397E  5C14               	subwf	atohtoi@dec_ascii,w,c
  2244  003980  B0D8               	btfsc	status,0,c
  2245  003982  D007               	goto	l5263
  2246  003984                     u6620:
  2247                           
  2248                           ;timer.c: 21:      return dec_ascii-12;
  2249  003984  0EF4               	movlw	244
  2250  003986  2414               	addwf	atohtoi@dec_ascii,w,c
  2251  003988  6E11               	movwf	?_atohtoi,c
  2252  00398A  0EFF               	movlw	255
  2253  00398C  2015               	addwfc	atohtoi@dec_ascii+1,w,c
  2254  00398E  6E12               	movwf	?_atohtoi+1,c
  2255  003990  0012               	return	
  2256  003992                     l5263:
  2257  003992  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2258  003994  D015               	goto	l5273
  2259  003996  5015               	movf	atohtoi@dec_ascii+1,w,c
  2260  003998  E104               	bnz	u6630
  2261  00399A  0E30               	movlw	48
  2262  00399C  5C14               	subwf	atohtoi@dec_ascii,w,c
  2263  00399E  A0D8               	btfss	status,0,c
  2264  0039A0  D00F               	goto	l5273
  2265  0039A2                     u6630:
  2266  0039A2  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2267  0039A4  D006               	goto	u6640
  2268  0039A6  5015               	movf	atohtoi@dec_ascii+1,w,c
  2269  0039A8  E10B               	bnz	l5273
  2270  0039AA  0E3A               	movlw	58
  2271  0039AC  5C14               	subwf	atohtoi@dec_ascii,w,c
  2272  0039AE  B0D8               	btfsc	status,0,c
  2273  0039B0  D007               	goto	l5273
  2274  0039B2                     u6640:
  2275                           
  2276                           ;timer.c: 24:      return dec_ascii-18;
  2277  0039B2  0EEE               	movlw	238
  2278  0039B4  2414               	addwf	atohtoi@dec_ascii,w,c
  2279  0039B6  6E11               	movwf	?_atohtoi,c
  2280  0039B8  0EFF               	movlw	255
  2281  0039BA  2015               	addwfc	atohtoi@dec_ascii+1,w,c
  2282  0039BC  6E12               	movwf	?_atohtoi+1,c
  2283  0039BE  0012               	return	
  2284  0039C0                     l5273:
  2285  0039C0  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2286  0039C2  D015               	goto	l236
  2287  0039C4  5015               	movf	atohtoi@dec_ascii+1,w,c
  2288  0039C6  E104               	bnz	u6650
  2289  0039C8  0E40               	movlw	64
  2290  0039CA  5C14               	subwf	atohtoi@dec_ascii,w,c
  2291  0039CC  A0D8               	btfss	status,0,c
  2292  0039CE  D00F               	goto	l236
  2293  0039D0                     u6650:
  2294  0039D0  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2295  0039D2  D006               	goto	u6660
  2296  0039D4  5015               	movf	atohtoi@dec_ascii+1,w,c
  2297  0039D6  E10B               	bnz	l236
  2298  0039D8  0E4A               	movlw	74
  2299  0039DA  5C14               	subwf	atohtoi@dec_ascii,w,c
  2300  0039DC  B0D8               	btfsc	status,0,c
  2301  0039DE  D007               	goto	l236
  2302  0039E0                     u6660:
  2303                           
  2304                           ;timer.c: 27:      return dec_ascii-24;
  2305  0039E0  0EE8               	movlw	232
  2306  0039E2  2414               	addwf	atohtoi@dec_ascii,w,c
  2307  0039E4  6E11               	movwf	?_atohtoi,c
  2308  0039E6  0EFF               	movlw	255
  2309  0039E8  2015               	addwfc	atohtoi@dec_ascii+1,w,c
  2310  0039EA  6E12               	movwf	?_atohtoi+1,c
  2311  0039EC  0012               	return	
  2312  0039EE                     l236:
  2313                           
  2314                           ;timer.c: 29:    if (dec_ascii > 79 && dec_ascii < 90){
  2315  0039EE  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2316  0039F0  D015               	goto	l242
  2317  0039F2  5015               	movf	atohtoi@dec_ascii+1,w,c
  2318  0039F4  E104               	bnz	u6670
  2319  0039F6  0E50               	movlw	80
  2320  0039F8  5C14               	subwf	atohtoi@dec_ascii,w,c
  2321  0039FA  A0D8               	btfss	status,0,c
  2322  0039FC  D00F               	goto	l242
  2323  0039FE                     u6670:
  2324  0039FE  BE15               	btfsc	atohtoi@dec_ascii+1,7,c
  2325  003A00  D006               	goto	u6680
  2326  003A02  5015               	movf	atohtoi@dec_ascii+1,w,c
  2327  003A04  E10B               	bnz	l242
  2328  003A06  0E5A               	movlw	90
  2329  003A08  5C14               	subwf	atohtoi@dec_ascii,w,c
  2330  003A0A  B0D8               	btfsc	status,0,c
  2331  003A0C  D007               	goto	l242
  2332  003A0E                     u6680:
  2333                           
  2334                           ;timer.c: 30:      return dec_ascii-30;
  2335  003A0E  0EE2               	movlw	226
  2336  003A10  2414               	addwf	atohtoi@dec_ascii,w,c
  2337  003A12  6E11               	movwf	?_atohtoi,c
  2338  003A14  0EFF               	movlw	255
  2339  003A16  2015               	addwfc	atohtoi@dec_ascii+1,w,c
  2340  003A18  6E12               	movwf	?_atohtoi+1,c
  2341  003A1A  0012               	return	
  2342  003A1C                     l242:
  2343                           
  2344                           ;timer.c: 33:      return -1;
  2345  003A1C  6811               	setf	?_atohtoi,c
  2346  003A1E  6812               	setf	?_atohtoi+1,c
  2347  003A20  0012               	return		;funcret
  2348  003A22                     __end_of_atohtoi:
  2349                           	opt callstack 0
  2350                           
  2351 ;; *************** function _printf *****************
  2352 ;; Defined at:
  2353 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  fmt             2   98[BANK0 ] PTR const unsigned char 
  2356 ;;		 -> STR_13(14), STR_12(14), STR_11(15), STR_10(15), 
  2357 ;;		 -> STR_9(10), STR_8(11), STR_7(10), STR_6(16), 
  2358 ;;		 -> STR_5(9), STR_4(10), STR_3(3), STR_2(15), 
  2359 ;;		 -> STR_1(15), 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  ap              2  108[BANK0 ] PTR void [1]
  2362 ;;		 -> ?_printf(2), 
  2363 ;;  ret             2    0        int 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  2   98[BANK0 ] int 
  2366 ;; Registers used:
  2367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2373 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2374 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;Total ram usage:       12 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:   10
  2380 ;; This function calls:
  2381 ;;		_vfprintf
  2382 ;; This function is called by:
  2383 ;;		_main
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text3
  2388  00477A                     __ptext3:
  2389                           	opt callstack 0
  2390  00477A                     _printf:
  2391                           	opt callstack 20
  2392                           
  2393                           ;incstack = 0
  2394  00477A  0EE4               	movlw	low (?_printf+2)
  2395  00477C  0100               	movlb	0	; () banked
  2396  00477E  6FEC               	movwf	printf@ap& (0+255),b
  2397  004780  0E00               	movlw	high (?_printf+2)
  2398  004782  6FED               	movwf	(printf@ap+1)& (0+255),b
  2399                           
  2400                           ; BSR set to: 0
  2401  004784  0E00               	movlw	0
  2402  004786  6FDC               	movwf	vfprintf@fp& (0+255),b
  2403  004788  0E00               	movlw	0
  2404  00478A  6FDD               	movwf	(vfprintf@fp+1)& (0+255),b
  2405  00478C  C0E2  F0DE         	movff	printf@fmt,vfprintf@fmt
  2406  004790  C0E3  F0DF         	movff	printf@fmt+1,vfprintf@fmt+1
  2407  004794  0EEC               	movlw	low printf@ap
  2408  004796  6FE0               	movwf	vfprintf@ap& (0+255),b
  2409  004798  0E00               	movlw	high printf@ap
  2410  00479A  6FE1               	movwf	(vfprintf@ap+1)& (0+255),b
  2411  00479C  ECB2  F021         	call	_vfprintf	;wreg free
  2412  0047A0  0012               	return		;funcret
  2413  0047A2                     __end_of_printf:
  2414                           	opt callstack 0
  2415                           
  2416 ;; *************** function _vfprintf *****************
  2417 ;; Defined at:
  2418 ;;		line 1368 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  fp              2   92[BANK0 ] PTR struct _IO_FILE
  2421 ;;		 -> NULL(0), 
  2422 ;;  fmt             2   94[BANK0 ] PTR const unsigned char 
  2423 ;;		 -> STR_13(14), STR_12(14), STR_11(15), STR_10(15), 
  2424 ;;		 -> STR_9(10), STR_8(11), STR_7(10), STR_6(16), 
  2425 ;;		 -> STR_5(9), STR_4(10), STR_3(3), STR_2(15), 
  2426 ;;		 -> STR_1(15), 
  2427 ;;  ap              2   96[BANK0 ] PTR PTR void 
  2428 ;;		 -> printf@ap(2), 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  2431 ;;		 -> STR_13(14), STR_12(14), STR_11(15), STR_10(15), 
  2432 ;;		 -> STR_9(10), STR_8(11), STR_7(10), STR_6(16), 
  2433 ;;		 -> STR_5(9), STR_4(10), STR_3(3), STR_2(15), 
  2434 ;;		 -> STR_1(15), 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  2   92[BANK0 ] int 
  2437 ;; Registers used:
  2438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2444 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;Total ram usage:        8 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    9
  2451 ;; This function calls:
  2452 ;;		_vfpfcnvrt
  2453 ;; This function is called by:
  2454 ;;		_printf
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text4
  2459  004364                     __ptext4:
  2460                           	opt callstack 0
  2461  004364                     _vfprintf:
  2462                           	opt callstack 20
  2463                           
  2464                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
  2465                           
  2466                           ;incstack = 0
  2467  004364  C0DE  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
  2468  004368  C0DF  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2469                           
  2470                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2471  00436C  0E00               	movlw	0
  2472  00436E  0100               	movlb	0	; () banked
  2473  004370  6FF3               	movwf	(_nout+1)& (0+255),b
  2474  004372  0E00               	movlw	0
  2475  004374  6FF2               	movwf	_nout& (0+255),b
  2476                           
  2477                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  2478  004376  D013               	goto	l7561
  2479  004378                     l7559:
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  2483  004378  C0DC  F0B8         	movff	vfprintf@fp,vfpfcnvrt@fp
  2484  00437C  C0DD  F0B9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2485  004380  0E5A               	movlw	low vfprintf@cfmt
  2486  004382  6FBA               	movwf	vfpfcnvrt@fmt& (0+255),b
  2487  004384  0E00               	movlw	high vfprintf@cfmt
  2488  004386  6FBB               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2489  004388  C0E0  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  2490  00438C  C0E1  F0BD         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2491  004390  EC3E  F00D         	call	_vfpfcnvrt	;wreg free
  2492  004394  0100               	movlb	0	; () banked
  2493  004396  51B8               	movf	?_vfpfcnvrt& (0+255),w,b
  2494  004398  27F2               	addwf	_nout& (0+255),f,b
  2495  00439A  51B9               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2496  00439C  23F3               	addwfc	(_nout+1)& (0+255),f,b
  2497  00439E                     l7561:
  2498                           
  2499                           ; BSR set to: 0
  2500                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  2501  00439E  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
  2502  0043A2  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2503  0043A6                     	if	0	;tblptru may be non-zero
  2504  0043A6                     	endif
  2505  0043A6                     	if	0	;tblptru may be non-zero
  2506  0043A6                     	endif
  2507  0043A6  0008               	tblrd		*
  2508  0043A8  50F5               	movf	tablat,w,c
  2509  0043AA  0900               	iorlw	0
  2510  0043AC  A4D8               	btfss	status,2,c
  2511  0043AE  D7E4               	goto	l7559
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
  2515  0043B0  C0F2  F0DC         	movff	_nout,?_vfprintf
  2516  0043B4  C0F3  F0DD         	movff	_nout+1,?_vfprintf+1
  2517                           
  2518                           ; BSR set to: 0
  2519  0043B8  0012               	return		;funcret
  2520  0043BA                     __end_of_vfprintf:
  2521                           	opt callstack 0
  2522                           
  2523 ;; *************** function _vfpfcnvrt *****************
  2524 ;; Defined at:
  2525 ;;		line 670 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  2528 ;;		 -> NULL(0), 
  2529 ;;  fmt             2   58[BANK0 ] PTR PTR unsigned char 
  2530 ;;		 -> vfprintf@cfmt(2), 
  2531 ;;  ap              2   60[BANK0 ] PTR PTR void 
  2532 ;;		 -> printf@ap(2), 
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;  llu             8   70[BANK0 ] unsigned long long 
  2535 ;;  ll              8   62[BANK0 ] long long 
  2536 ;;  f               4   84[BANK0 ] long long 
  2537 ;;  ct              3   88[BANK0 ] unsigned char [3]
  2538 ;;  vp              3    0        PTR void 
  2539 ;;  cp              3    0        PTR unsigned char 
  2540 ;;  done            2   78[BANK0 ] int 
  2541 ;;  i               2    0        int 
  2542 ;;  c               1   91[BANK0 ] unsigned char 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  2   56[BANK0 ] int 
  2545 ;; Registers used:
  2546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2552 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2553 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Totals:         4      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;Total ram usage:       40 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    8
  2559 ;; This function calls:
  2560 ;;		_atoi
  2561 ;;		_dtoa
  2562 ;;		_efgtoa
  2563 ;;		_fputc
  2564 ;;		_isdigit
  2565 ;;		_isupper
  2566 ;;		_strncmp
  2567 ;;		_tolower
  2568 ;;		_xtoa
  2569 ;; This function is called by:
  2570 ;;		_vfprintf
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text5
  2575  001A7C                     __ptext5:
  2576                           	opt callstack 0
  2577  001A7C                     _vfpfcnvrt:
  2578                           	opt callstack 20
  2579                           
  2580                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.05/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;incstack = 0
  2584  001A7C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2585  001A80  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2586  001A84  CFDE FFF6          	movff	postinc2,tblptrl
  2587  001A88  CFDD FFF7          	movff	postdec2,tblptrh
  2588  001A8C                     	if	0	;tblptru may be non-zero
  2589  001A8C                     	endif
  2590  001A8C                     	if	0	;tblptru may be non-zero
  2591  001A8C                     	endif
  2592  001A8C  0008               	tblrd		*
  2593  001A8E  50F5               	movf	tablat,w,c
  2594  001A90  0A25               	xorlw	37
  2595  001A92  A4D8               	btfss	status,2,c
  2596  001A94  D2B7               	goto	l7533
  2597                           
  2598                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2599  001A96  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2600  001A9A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2601  001A9E  2ADE               	incf	postinc2,f,c
  2602  001AA0  0E00               	movlw	0
  2603  001AA2  22DD               	addwfc	postdec2,f,c
  2604                           
  2605                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
  2606  001AA4  0E00               	movlw	0
  2607  001AA6  6E65               	movwf	_width+1,c
  2608  001AA8  0E00               	movlw	0
  2609  001AAA  6E64               	movwf	_width,c
  2610  001AAC  C064  F068         	movff	_width,_flags
  2611  001AB0  C065  F069         	movff	_width+1,_flags+1
  2612                           
  2613                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
  2614  001AB4  6866               	setf	_prec,c
  2615  001AB6  6867               	setf	_prec+1,c
  2616                           
  2617                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 
      +                          0;
  2618  001AB8  0E00               	movlw	0
  2619  001ABA  0100               	movlb	0	; () banked
  2620  001ABC  6FCF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2621  001ABE  0E00               	movlw	0
  2622  001AC0  D014               	goto	L1
  2623  001AC2                     l7407:
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                
      +                               flags |= (1 << 0);
  2627  001AC2  8068               	bsf	_flags,0,c
  2628  001AC4                     l7409:
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                
      +                               ++*fmt;
  2632  001AC4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2633  001AC8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2634  001ACC  2ADE               	incf	postinc2,f,c
  2635  001ACE  0E00               	movlw	0
  2636  001AD0  22DD               	addwfc	postdec2,f,c
  2637                           
  2638                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                
      +                               break;
  2639  001AD2  D02E               	goto	l7433
  2640  001AD4                     l7411:
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                
      +                               flags |= (1 << 1);
  2644  001AD4  8268               	bsf	_flags,1,c
  2645  001AD6  D7F6               	goto	l7409
  2646  001AD8                     l7415:
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                
      +                               flags |= (1 << 2);
  2650  001AD8  8468               	bsf	_flags,2,c
  2651  001ADA  D7F4               	goto	l7409
  2652  001ADC                     l7419:
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                
      +                               flags |= (1 << 3);
  2656  001ADC  8668               	bsf	_flags,3,c
  2657  001ADE  D7F2               	goto	l7409
  2658  001AE0                     l7423:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                
      +                               flags |= (1 << 4);
  2662  001AE0  8868               	bsf	_flags,4,c
  2663  001AE2  D7F0               	goto	l7409
  2664  001AE4                     l7427:
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                
      +                               done = 1;
  2668  001AE4  0E00               	movlw	0
  2669  001AE6  6FCF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2670  001AE8  0E01               	movlw	1
  2671  001AEA                     L1:
  2672  001AEA  6FCE               	movwf	vfpfcnvrt@done& (0+255),b
  2673                           
  2674                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                
      +                               break;
  2675  001AEC  D021               	goto	l7433
  2676  001AEE                     l7431:
  2677                           
  2678                           ; BSR set to: 0
  2679  001AEE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2680  001AF2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2681  001AF6  CFDE FFF6          	movff	postinc2,tblptrl
  2682  001AFA  CFDD FFF7          	movff	postdec2,tblptrh
  2683  001AFE                     	if	0	;tblptru may be non-zero
  2684  001AFE                     	endif
  2685  001AFE                     	if	0	;tblptru may be non-zero
  2686  001AFE                     	endif
  2687  001AFE  0008               	tblrd		*
  2688  001B00  50F5               	movf	tablat,w,c
  2689  001B02  6E56               	movwf	??_vfpfcnvrt& (0+255),c
  2690  001B04  6A57               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  2691                           
  2692                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2693                           ; Switch size 1, requested type "simple"
  2694                           ; Number of cases is 1, Range of values is 0 to 0
  2695                           ; switch strategies available:
  2696                           ; Name         Instructions Cycles
  2697                           ; simple_byte            4     3 (average)
  2698                           ;	Chosen strategy is simple_byte
  2699  001B06  5057               	movf	??_vfpfcnvrt+1,w,c
  2700  001B08  0A00               	xorlw	0	; case 0
  2701  001B0A  A4D8               	btfss	status,2,c
  2702  001B0C  D7EB               	goto	l7427
  2703                           
  2704                           ; BSR set to: 0
  2705                           ; Switch size 1, requested type "simple"
  2706                           ; Number of cases is 5, Range of values is 32 to 48
  2707                           ; switch strategies available:
  2708                           ; Name         Instructions Cycles
  2709                           ; simple_byte           16     9 (average)
  2710                           ;	Chosen strategy is simple_byte
  2711  001B0E  5056               	movf	??_vfpfcnvrt,w,c
  2712  001B10  0A20               	xorlw	32	; case 32
  2713  001B12  B4D8               	btfsc	status,2,c
  2714  001B14  D7E3               	goto	l7419
  2715  001B16  0A03               	xorlw	3	; case 35
  2716  001B18  B4D8               	btfsc	status,2,c
  2717  001B1A  D7E2               	goto	l7423
  2718  001B1C  0A08               	xorlw	8	; case 43
  2719  001B1E  B4D8               	btfsc	status,2,c
  2720  001B20  D7DB               	goto	l7415
  2721  001B22  0A06               	xorlw	6	; case 45
  2722  001B24  B4D8               	btfsc	status,2,c
  2723  001B26  D7CD               	goto	l7407
  2724  001B28  0A1D               	xorlw	29	; case 48
  2725  001B2A  B4D8               	btfsc	status,2,c
  2726  001B2C  D7D3               	goto	l7411
  2727  001B2E  D7DA               	goto	l7427
  2728  001B30                     l7433:
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (
      +                          !done) {
  2732  001B30  51CE               	movf	vfpfcnvrt@done& (0+255),w,b
  2733  001B32  11CF               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2734  001B34  B4D8               	btfsc	status,2,c
  2735  001B36  D7DB               	goto	l7431
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (fla
      +                          gs & (1 << 0)) {
  2739  001B38  B068               	btfsc	_flags,0,c
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             fla
      +                          gs &= ~(1 << 1);
  2743  001B3A  9268               	bcf	_flags,1,c
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*f
      +                          mt)[0] == '*') {
  2747  001B3C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2748  001B40  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2749  001B44  CFDE FFF6          	movff	postinc2,tblptrl
  2750  001B48  CFDD FFF7          	movff	postdec2,tblptrh
  2751  001B4C                     	if	0	;tblptru may be non-zero
  2752  001B4C                     	endif
  2753  001B4C                     	if	0	;tblptru may be non-zero
  2754  001B4C                     	endif
  2755  001B4C  0008               	tblrd		*
  2756  001B4E  50F5               	movf	tablat,w,c
  2757  001B50  0A2A               	xorlw	42
  2758  001B52  A4D8               	btfss	status,2,c
  2759  001B54  D023               	goto	l7445
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*
      +                          fmt;
  2763  001B56  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2764  001B5A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2765  001B5E  2ADE               	incf	postinc2,f,c
  2766  001B60  0E00               	movlw	0
  2767  001B62  22DD               	addwfc	postdec2,f,c
  2768                           
  2769                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             wid
      +                          th = (*(int *)__va_arg(*(int **)ap, (int)0));
  2770  001B64  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2771  001B68  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2772  001B6C  CFDF F056          	movff	indf2,??_vfpfcnvrt
  2773  001B70  0E02               	movlw	2
  2774  001B72  26DE               	addwf	postinc2,f,c
  2775  001B74  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  2776  001B78  0E00               	movlw	0
  2777  001B7A  22DD               	addwfc	postdec2,f,c
  2778  001B7C  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2779  001B80  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2780  001B84  CFDE F064          	movff	postinc2,_width
  2781  001B88  CFDD F065          	movff	postdec2,_width+1
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if 
      +                          (width < 0) {
  2785  001B8C  AE65               	btfss	_width+1,7,c
  2786  001B8E  D040               	goto	u10120
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                
      +                           flags |= (1 << 0);
  2790  001B90  8068               	bsf	_flags,0,c
  2791                           
  2792                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                
      +                           width = -width;
  2793  001B92  6C64               	negf	_width,c
  2794  001B94  1E65               	comf	_width+1,f,c
  2795  001B96  B0D8               	btfsc	status,0,c
  2796  001B98  2A65               	incf	_width+1,f,c
  2797  001B9A  D03A               	goto	u10120
  2798  001B9C                     l7445:
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             wid
      +                          th = atoi(*fmt);
  2802  001B9C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2803  001BA0  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2804  001BA4  CFDE F018          	movff	postinc2,atoi@s
  2805  001BA8  CFDD F019          	movff	postdec2,atoi@s+1
  2806  001BAC  EC51  F01B         	call	_atoi	;wreg free
  2807  001BB0  C018  F064         	movff	?_atoi,_width
  2808  001BB4  C019  F065         	movff	?_atoi+1,_width+1
  2809                           
  2810                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             whi
      +                          le ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2811  001BB8  D007               	goto	l7449
  2812  001BBA                     l7447:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                
      +                           ++*fmt;
  2816  001BBA  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2817  001BBE  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2818  001BC2  2ADE               	incf	postinc2,f,c
  2819  001BC4  0E00               	movlw	0
  2820  001BC6  22DD               	addwfc	postdec2,f,c
  2821  001BC8                     l7449:
  2822  001BC8  0ED0               	movlw	208
  2823  001BCA  6E56               	movwf	??_vfpfcnvrt& (0+255),c
  2824  001BCC  0EFF               	movlw	255
  2825  001BCE  6E57               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2826  001BD0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2827  001BD4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2828  001BD8  CFDE FFF6          	movff	postinc2,tblptrl
  2829  001BDC  CFDD FFF7          	movff	postdec2,tblptrh
  2830  001BE0                     	if	0	;tblptru may be non-zero
  2831  001BE0                     	endif
  2832  001BE0                     	if	0	;tblptru may be non-zero
  2833  001BE0                     	endif
  2834  001BE0  0008               	tblrd		*
  2835  001BE2  50F5               	movf	tablat,w,c
  2836  001BE4  6E58               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2837  001BE6  6A59               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2838  001BE8  5056               	movf	??_vfpfcnvrt,w,c
  2839  001BEA  2658               	addwf	??_vfpfcnvrt+2,f,c
  2840  001BEC  5057               	movf	??_vfpfcnvrt+1,w,c
  2841  001BEE  2259               	addwfc	??_vfpfcnvrt+3,f,c
  2842  001BF0  5059               	movf	??_vfpfcnvrt+3,w,c
  2843  001BF2  E106               	bnz	u10100
  2844  001BF4  0E0A               	movlw	10
  2845  001BF6  5C58               	subwf	??_vfpfcnvrt+2,w,c
  2846  001BF8  B0D8               	btfsc	status,0,c
  2847  001BFA  D002               	goto	u10100
  2848  001BFC  0E01               	movlw	1
  2849  001BFE  D001               	goto	u10110
  2850  001C00                     u10100:
  2851  001C00  0E00               	movlw	0
  2852  001C02                     u10110:
  2853  001C02  0100               	movlb	0	; () banked
  2854  001C04  6FD0               	movwf	_vfpfcnvrt$918& (0+255),b
  2855  001C06  6BD1               	clrf	(_vfpfcnvrt$918+1)& (0+255),b
  2856                           
  2857                           ; BSR set to: 0
  2858  001C08  51D0               	movf	_vfpfcnvrt$918& (0+255),w,b
  2859  001C0A  11D1               	iorwf	(_vfpfcnvrt$918+1)& (0+255),w,b
  2860  001C0C  A4D8               	btfss	status,2,c
  2861  001C0E  D7D5               	goto	l7447
  2862  001C10                     u10120:
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 757:         ct[0] =
      +                           tolower((int)(*fmt)[0]);
  2866  001C10  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2867  001C14  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2868  001C18  CFDE FFF6          	movff	postinc2,tblptrl
  2869  001C1C  CFDD FFF7          	movff	postdec2,tblptrh
  2870  001C20                     	if	0	;tblptru may be non-zero
  2871  001C20                     	endif
  2872  001C20                     	if	0	;tblptru may be non-zero
  2873  001C20                     	endif
  2874  001C20  0008               	tblrd		*
  2875  001C22  50F5               	movf	tablat,w,c
  2876  001C24  6E17               	movwf	tolower@c,c
  2877  001C26  6A18               	clrf	tolower@c+1,c
  2878  001C28  EC32  F022         	call	_tolower	;wreg free
  2879  001C2C  5017               	movf	?_tolower,w,c
  2880  001C2E  0100               	movlb	0	; () banked
  2881  001C30  6FD8               	movwf	vfpfcnvrt@ct& (0+255),b
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 758:         if (ct[
      +                          0]) {
  2885  001C32  51D8               	movf	vfpfcnvrt@ct& (0+255),w,b
  2886  001C34  B4D8               	btfsc	status,2,c
  2887  001C36  D035               	goto	l7465
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 759:             ct[
      +                          1] = tolower((int)(*fmt)[1]);
  2891  001C38  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2892  001C3C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2893  001C40  CFDE F056          	movff	postinc2,??_vfpfcnvrt
  2894  001C44  CFDD F057          	movff	postdec2,??_vfpfcnvrt+1
  2895  001C48  0E01               	movlw	1
  2896  001C4A  2656               	addwf	??_vfpfcnvrt,f,c
  2897  001C4C  0E00               	movlw	0
  2898  001C4E  2257               	addwfc	??_vfpfcnvrt+1,f,c
  2899  001C50  C056  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2900  001C54  C057  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2901  001C58                     	if	0	;tblptru may be non-zero
  2902  001C58                     	endif
  2903  001C58                     	if	0	;tblptru may be non-zero
  2904  001C58                     	endif
  2905  001C58  0008               	tblrd		*
  2906  001C5A  50F5               	movf	tablat,w,c
  2907  001C5C  6E17               	movwf	tolower@c,c
  2908  001C5E  6A18               	clrf	tolower@c+1,c
  2909  001C60  EC32  F022         	call	_tolower	;wreg free
  2910  001C64  5017               	movf	?_tolower,w,c
  2911  001C66  0100               	movlb	0	; () banked
  2912  001C68  6FD9               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 760:             if 
      +                          (ct[1]) {
  2916  001C6A  51D9               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2917  001C6C  B4D8               	btfsc	status,2,c
  2918  001C6E  D019               	goto	l7465
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 761:                
      +                           ct[2] = tolower((int)(*fmt)[2]);
  2922  001C70  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2923  001C74  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2924  001C78  CFDE F056          	movff	postinc2,??_vfpfcnvrt
  2925  001C7C  CFDD F057          	movff	postdec2,??_vfpfcnvrt+1
  2926  001C80  0E02               	movlw	2
  2927  001C82  2656               	addwf	??_vfpfcnvrt,f,c
  2928  001C84  0E00               	movlw	0
  2929  001C86  2257               	addwfc	??_vfpfcnvrt+1,f,c
  2930  001C88  C056  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2931  001C8C  C057  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2932  001C90                     	if	0	;tblptru may be non-zero
  2933  001C90                     	endif
  2934  001C90                     	if	0	;tblptru may be non-zero
  2935  001C90                     	endif
  2936  001C90  0008               	tblrd		*
  2937  001C92  50F5               	movf	tablat,w,c
  2938  001C94  6E17               	movwf	tolower@c,c
  2939  001C96  6A18               	clrf	tolower@c+1,c
  2940  001C98  EC32  F022         	call	_tolower	;wreg free
  2941  001C9C  5017               	movf	?_tolower,w,c
  2942  001C9E  0100               	movlb	0	; () banked
  2943  001CA0  6FDA               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2944  001CA2                     l7465:
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  2948  001CA2  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2949  001CA6  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2950  001CAA  CFDE FFF6          	movff	postinc2,tblptrl
  2951  001CAE  CFDD FFF7          	movff	postdec2,tblptrh
  2952  001CB2                     	if	0	;tblptru may be non-zero
  2953  001CB2                     	endif
  2954  001CB2                     	if	0	;tblptru may be non-zero
  2955  001CB2                     	endif
  2956  001CB2  0008               	tblrd		*
  2957  001CB4  50F5               	movf	tablat,w,c
  2958  001CB6  0A64               	xorlw	100
  2959  001CB8  B4D8               	btfsc	status,2,c
  2960  001CBA  D00D               	goto	u10160
  2961                           
  2962                           ; BSR set to: 0
  2963  001CBC  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2964  001CC0  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2965  001CC4  CFDE FFF6          	movff	postinc2,tblptrl
  2966  001CC8  CFDD FFF7          	movff	postdec2,tblptrh
  2967  001CCC                     	if	0	;tblptru may be non-zero
  2968  001CCC                     	endif
  2969  001CCC                     	if	0	;tblptru may be non-zero
  2970  001CCC                     	endif
  2971  001CCC  0008               	tblrd		*
  2972  001CCE  50F5               	movf	tablat,w,c
  2973  001CD0  0A69               	xorlw	105
  2974  001CD2  A4D8               	btfss	status,2,c
  2975  001CD4  D03F               	goto	l7475
  2976  001CD6                     u10160:
  2977                           
  2978                           ; BSR set to: 0
  2979                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
  2980  001CD6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2981  001CDA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2982  001CDE  2ADE               	incf	postinc2,f,c
  2983  001CE0  0E00               	movlw	0
  2984  001CE2  22DD               	addwfc	postdec2,f,c
  2985                           
  2986                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2987  001CE4  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2988  001CE8  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2989  001CEC  CFDF F056          	movff	indf2,??_vfpfcnvrt
  2990  001CF0  0E02               	movlw	2
  2991  001CF2  26DE               	addwf	postinc2,f,c
  2992  001CF4  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  2993  001CF8  0E00               	movlw	0
  2994  001CFA  22DD               	addwfc	postdec2,f,c
  2995  001CFC  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2996  001D00  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2997  001D04  CFDE F0BE          	movff	postinc2,vfpfcnvrt@ll
  2998  001D08  CFDD F0BF          	movff	postdec2,vfpfcnvrt@ll+1
  2999  001D0C  0E00               	movlw	0
  3000  001D0E  BFBF               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3001  001D10  0EFF               	movlw	-1
  3002  001D12  6FC0               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3003  001D14  6FC1               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3004  001D16  6FC2               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3005  001D18  6FC3               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3006  001D1A  6FC4               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3007  001D1C  6FC5               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
  3011  001D1E  C0B8  F02F         	movff	vfpfcnvrt@fp,dtoa@fp
  3012  001D22  C0B9  F030         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3013  001D26  C0BE  F031         	movff	vfpfcnvrt@ll,dtoa@d
  3014  001D2A  C0BF  F032         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3015  001D2E  C0C0  F033         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3016  001D32  C0C1  F034         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3017  001D36  C0C2  F035         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3018  001D3A  C0C3  F036         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3019  001D3E  C0C4  F037         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3020  001D42  C0C5  F038         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3021  001D46  EC9B  F017         	call	_dtoa	;wreg free
  3022  001D4A  C02F  F0B8         	movff	?_dtoa,?_vfpfcnvrt
  3023  001D4E  C030  F0B9         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3024  001D52  0012               	return	
  3025  001D54                     l7475:
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 920:         if (ct[
      +                          0] == 'f') {
  3029  001D54  0E66               	movlw	102
  3030  001D56  19D8               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3031  001D58  A4D8               	btfss	status,2,c
  3032  001D5A  D03F               	goto	l7487
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 922:             c =
      +                           (*fmt)[0];
  3036  001D5C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3037  001D60  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3038  001D64  CFDE FFF6          	movff	postinc2,tblptrl
  3039  001D68  CFDD FFF7          	movff	postdec2,tblptrh
  3040  001D6C                     	if	0	;tblptru may be non-zero
  3041  001D6C                     	endif
  3042  001D6C                     	if	0	;tblptru may be non-zero
  3043  001D6C                     	endif
  3044  001D6C  0008               	tblrd		*
  3045  001D6E  CFF5 F0DB          	movff	tablat,vfpfcnvrt@c
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 923:             ++*
      +                          fmt;
  3049  001D72  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3050  001D76  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3051  001D7A  2ADE               	incf	postinc2,f,c
  3052  001D7C  0E00               	movlw	0
  3053  001D7E  22DD               	addwfc	postdec2,f,c
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 924:             f =
      +                           (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3057  001D80  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3058  001D84  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3059  001D88  CFDF F056          	movff	indf2,??_vfpfcnvrt
  3060  001D8C  0E04               	movlw	4
  3061  001D8E  26DE               	addwf	postinc2,f,c
  3062  001D90  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  3063  001D94  0E00               	movlw	0
  3064  001D96  22DD               	addwfc	postdec2,f,c
  3065  001D98  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3066  001D9C  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3067  001DA0  CFDE F0D4          	movff	postinc2,vfpfcnvrt@f
  3068  001DA4  CFDE F0D5          	movff	postinc2,vfpfcnvrt@f+1
  3069  001DA8  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f+2
  3070  001DAC  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+3
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 926:             ret
      +                          urn efgtoa(fp, f, c);
  3074  001DB0  C0B8  F03E         	movff	vfpfcnvrt@fp,efgtoa@fp
  3075  001DB4  C0B9  F03F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3076  001DB8  C0D4  F040         	movff	vfpfcnvrt@f,efgtoa@f
  3077  001DBC  C0D5  F041         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3078  001DC0  C0D6  F042         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3079  001DC4  C0D7  F043         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3080  001DC8  C0DB  F044         	movff	vfpfcnvrt@c,efgtoa@c
  3081  001DCC  EC57  F008         	call	_efgtoa	;wreg free
  3082  001DD0  C03E  F0B8         	movff	?_efgtoa,?_vfpfcnvrt
  3083  001DD4  C03F  F0B9         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3084  001DD8  0012               	return	
  3085  001DDA                     l7487:
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 928:         if (!st
      +                          rncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3089  001DDA  0ED8               	movlw	low vfpfcnvrt@ct
  3090  001DDC  6E11               	movwf	strncmp@_l,c
  3091  001DDE  0E00               	movlw	high vfpfcnvrt@ct
  3092  001DE0  6E12               	movwf	strncmp@_l+1,c
  3093  001DE2  0EA6               	movlw	low STR_22
  3094  001DE4  6E13               	movwf	strncmp@_r,c
  3095  001DE6  0E10               	movlw	high STR_22
  3096  001DE8  6E14               	movwf	strncmp@_r+1,c
  3097  001DEA  0E00               	movlw	0
  3098  001DEC  6E16               	movwf	strncmp@n+1,c
  3099  001DEE  0E02               	movlw	2
  3100  001DF0  6E15               	movwf	strncmp@n,c
  3101  001DF2  EC66  F01F         	call	_strncmp	;wreg free
  3102  001DF6  5011               	movf	?_strncmp,w,c
  3103  001DF8  1012               	iorwf	?_strncmp+1,w,c
  3104  001DFA  A4D8               	btfss	status,2,c
  3105  001DFC  D06A               	goto	l7503
  3106                           
  3107                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 931:             if 
      +                          ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3108  001DFE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3109  001E02  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3110  001E06  CFDE F056          	movff	postinc2,??_vfpfcnvrt
  3111  001E0A  CFDD F057          	movff	postdec2,??_vfpfcnvrt+1
  3112  001E0E  0E01               	movlw	1
  3113  001E10  2656               	addwf	??_vfpfcnvrt,f,c
  3114  001E12  0E00               	movlw	0
  3115  001E14  2257               	addwfc	??_vfpfcnvrt+1,f,c
  3116  001E16  C056  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3117  001E1A  C057  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3118  001E1E                     	if	0	;tblptru may be non-zero
  3119  001E1E                     	endif
  3120  001E1E                     	if	0	;tblptru may be non-zero
  3121  001E1E                     	endif
  3122  001E1E  0008               	tblrd		*
  3123  001E20  CFF5 F0DB          	movff	tablat,vfpfcnvrt@c
  3124  001E24  0EBF               	movlw	191
  3125  001E26  6E56               	movwf	??_vfpfcnvrt& (0+255),c
  3126  001E28  0EFF               	movlw	255
  3127  001E2A  6E57               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  3128  001E2C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3129  001E30  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3130  001E34  CFDE FFF6          	movff	postinc2,tblptrl
  3131  001E38  CFDD FFF7          	movff	postdec2,tblptrh
  3132  001E3C                     	if	0	;tblptru may be non-zero
  3133  001E3C                     	endif
  3134  001E3C                     	if	0	;tblptru may be non-zero
  3135  001E3C                     	endif
  3136  001E3C  0008               	tblrd		*
  3137  001E3E  50F5               	movf	tablat,w,c
  3138  001E40  6E58               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3139  001E42  6A59               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3140  001E44  5056               	movf	??_vfpfcnvrt,w,c
  3141  001E46  2658               	addwf	??_vfpfcnvrt+2,f,c
  3142  001E48  5057               	movf	??_vfpfcnvrt+1,w,c
  3143  001E4A  2259               	addwfc	??_vfpfcnvrt+3,f,c
  3144  001E4C  5059               	movf	??_vfpfcnvrt+3,w,c
  3145  001E4E  E106               	bnz	u10190
  3146  001E50  0E1A               	movlw	26
  3147  001E52  5C58               	subwf	??_vfpfcnvrt+2,w,c
  3148  001E54  B0D8               	btfsc	status,0,c
  3149  001E56  D002               	goto	u10190
  3150  001E58  0E01               	movlw	1
  3151  001E5A  D001               	goto	u10200
  3152  001E5C                     u10190:
  3153  001E5C  0E00               	movlw	0
  3154  001E5E                     u10200:
  3155  001E5E  0100               	movlb	0	; () banked
  3156  001E60  6FD2               	movwf	_vfpfcnvrt$923& (0+255),b
  3157  001E62  6BD3               	clrf	(_vfpfcnvrt$923+1)& (0+255),b
  3158                           
  3159                           ; BSR set to: 0
  3160  001E64  51D2               	movf	_vfpfcnvrt$923& (0+255),w,b
  3161  001E66  11D3               	iorwf	(_vfpfcnvrt$923+1)& (0+255),w,b
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 934:                
      +                           f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3165                           
  3166                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 933:             } e
      +                          lse {
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 932:                
      +                           f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3170  001E68  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3171  001E6C  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3172  001E70  CFDF F056          	movff	indf2,??_vfpfcnvrt
  3173  001E74  0E04               	movlw	4
  3174  001E76  26DE               	addwf	postinc2,f,c
  3175  001E78  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  3176  001E7C  0E00               	movlw	0
  3177  001E7E  22DD               	addwfc	postdec2,f,c
  3178  001E80  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3179  001E84  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3180  001E88  CFDE F0D4          	movff	postinc2,vfpfcnvrt@f
  3181  001E8C  CFDE F0D5          	movff	postinc2,vfpfcnvrt@f+1
  3182  001E90  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f+2
  3183  001E94  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+3
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 936:             *fm
      +                          t += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3187                           
  3188                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 935:             }
  3189  001E98  0E02               	movlw	2
  3190  001E9A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3191  001E9E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3192  001EA2  26DE               	addwf	postinc2,f,c
  3193  001EA4  0E00               	movlw	0
  3194  001EA6  22DD               	addwfc	postdec2,f,c
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 938:             ret
      +                          urn efgtoa(fp, f, c);
  3198  001EA8  C0B8  F03E         	movff	vfpfcnvrt@fp,efgtoa@fp
  3199  001EAC  C0B9  F03F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3200  001EB0  C0D4  F040         	movff	vfpfcnvrt@f,efgtoa@f
  3201  001EB4  C0D5  F041         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3202  001EB8  C0D6  F042         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3203  001EBC  C0D7  F043         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3204  001EC0  C0DB  F044         	movff	vfpfcnvrt@c,efgtoa@c
  3205  001EC4  EC57  F008         	call	_efgtoa	;wreg free
  3206  001EC8  C03E  F0B8         	movff	?_efgtoa,?_vfpfcnvrt
  3207  001ECC  C03F  F0B9         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3208  001ED0  0012               	return	
  3209  001ED2                     l7503:
  3210                           
  3211                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*
      +                          fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3212  001ED2  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3213  001ED6  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3214  001EDA  CFDE FFF6          	movff	postinc2,tblptrl
  3215  001EDE  CFDD FFF7          	movff	postdec2,tblptrh
  3216  001EE2                     	if	0	;tblptru may be non-zero
  3217  001EE2                     	endif
  3218  001EE2                     	if	0	;tblptru may be non-zero
  3219  001EE2                     	endif
  3220  001EE2  0008               	tblrd		*
  3221  001EE4  50F5               	movf	tablat,w,c
  3222  001EE6  0A78               	xorlw	120
  3223  001EE8  B4D8               	btfsc	status,2,c
  3224  001EEA  D00D               	goto	u10230
  3225  001EEC  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3226  001EF0  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3227  001EF4  CFDE FFF6          	movff	postinc2,tblptrl
  3228  001EF8  CFDD FFF7          	movff	postdec2,tblptrh
  3229  001EFC                     	if	0	;tblptru may be non-zero
  3230  001EFC                     	endif
  3231  001EFC                     	if	0	;tblptru may be non-zero
  3232  001EFC                     	endif
  3233  001EFC  0008               	tblrd		*
  3234  001EFE  50F5               	movf	tablat,w,c
  3235  001F00  0A58               	xorlw	88
  3236  001F02  A4D8               	btfss	status,2,c
  3237  001F04  D04E               	goto	l7517
  3238  001F06                     u10230:
  3239                           
  3240                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c 
      +                          = (*fmt)[0];
  3241  001F06  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3242  001F0A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3243  001F0E  CFDE FFF6          	movff	postinc2,tblptrl
  3244  001F12  CFDD FFF7          	movff	postdec2,tblptrh
  3245  001F16                     	if	0	;tblptru may be non-zero
  3246  001F16                     	endif
  3247  001F16                     	if	0	;tblptru may be non-zero
  3248  001F16                     	endif
  3249  001F16  0008               	tblrd		*
  3250  001F18  CFF5 F0DB          	movff	tablat,vfpfcnvrt@c
  3251                           
  3252                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++
      +                          *fmt;
  3253  001F1C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3254  001F20  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3255  001F24  2ADE               	incf	postinc2,f,c
  3256  001F26  0E00               	movlw	0
  3257  001F28  22DD               	addwfc	postdec2,f,c
  3258                           
  3259                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1278:             ll
      +                          u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
  3260  001F2A  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3261  001F2E  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3262  001F32  CFDF F056          	movff	indf2,??_vfpfcnvrt
  3263  001F36  0E02               	movlw	2
  3264  001F38  26DE               	addwf	postinc2,f,c
  3265  001F3A  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  3266  001F3E  0E00               	movlw	0
  3267  001F40  22DD               	addwfc	postdec2,f,c
  3268  001F42  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3269  001F46  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3270  001F4A  CFDE F058          	movff	postinc2,??_vfpfcnvrt+2
  3271  001F4E  CFDD F059          	movff	postdec2,??_vfpfcnvrt+3
  3272  001F52  C058  F0C6         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3273  001F56  C059  F0C7         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3274  001F5A  0100               	movlb	0	; () banked
  3275  001F5C  6BC8               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3276  001F5E  6BC9               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3277  001F60  6BCA               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3278  001F62  6BCB               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3279  001F64  6BCC               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3280  001F66  6BCD               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1280:             re
      +                          turn xtoa(fp, llu, c);
  3284  001F68  C0B8  F02F         	movff	vfpfcnvrt@fp,xtoa@fp
  3285  001F6C  C0B9  F030         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3286  001F70  C0C6  F031         	movff	vfpfcnvrt@llu,xtoa@d
  3287  001F74  C0C7  F032         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3288  001F78  C0C8  F033         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3289  001F7C  C0C9  F034         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3290  001F80  C0CA  F035         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3291  001F84  C0CB  F036         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3292  001F88  C0CC  F037         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3293  001F8C  C0CD  F038         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3294  001F90  C0DB  F039         	movff	vfpfcnvrt@c,xtoa@x
  3295  001F94  ECBC  F018         	call	_xtoa	;wreg free
  3296  001F98  C02F  F0B8         	movff	?_xtoa,?_vfpfcnvrt
  3297  001F9C  C030  F0B9         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3298  001FA0  0012               	return	
  3299  001FA2                     l7517:
  3300                           
  3301                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
  3302  001FA2  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3303  001FA6  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3304  001FAA  CFDE FFF6          	movff	postinc2,tblptrl
  3305  001FAE  CFDD FFF7          	movff	postdec2,tblptrh
  3306  001FB2                     	if	0	;tblptru may be non-zero
  3307  001FB2                     	endif
  3308  001FB2                     	if	0	;tblptru may be non-zero
  3309  001FB2                     	endif
  3310  001FB2  0008               	tblrd		*
  3311  001FB4  50F5               	movf	tablat,w,c
  3312  001FB6  0A25               	xorlw	37
  3313  001FB8  A4D8               	btfss	status,2,c
  3314  001FBA  D017               	goto	l7527
  3315                           
  3316                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
  3317  001FBC  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3318  001FC0  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3319  001FC4  2ADE               	incf	postinc2,f,c
  3320  001FC6  0E00               	movlw	0
  3321  001FC8  22DD               	addwfc	postdec2,f,c
  3322                           
  3323                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
  3324  001FCA  0E00               	movlw	0
  3325  001FCC  6E15               	movwf	fputc@c+1,c
  3326  001FCE  0E25               	movlw	37
  3327  001FD0  6E14               	movwf	fputc@c,c
  3328  001FD2  C0B8  F016         	movff	vfpfcnvrt@fp,fputc@fp
  3329  001FD6  C0B9  F017         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3330  001FDA  EC4B  F021         	call	_fputc	;wreg free
  3331  001FDE                     l7523:
  3332                           
  3333                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
  3334  001FDE  0E00               	movlw	0
  3335  001FE0  0100               	movlb	0	; () banked
  3336  001FE2  6FB9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3337  001FE4  0E01               	movlw	1
  3338  001FE6  6FB8               	movwf	?_vfpfcnvrt& (0+255),b
  3339  001FE8  0012               	return	
  3340  001FEA                     l7527:
  3341                           
  3342                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
  3343  001FEA  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3344  001FEE  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3345  001FF2  2ADE               	incf	postinc2,f,c
  3346  001FF4  0E00               	movlw	0
  3347  001FF6  22DD               	addwfc	postdec2,f,c
  3348                           
  3349                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
  3350  001FF8  0E00               	movlw	0
  3351  001FFA  0100               	movlb	0	; () banked
  3352  001FFC  6FB9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3353  001FFE  0E00               	movlw	0
  3354  002000  6FB8               	movwf	?_vfpfcnvrt& (0+255),b
  3355  002002  0012               	return	
  3356  002004                     l7533:
  3357                           
  3358                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
  3359  002004  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3360  002008  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3361  00200C  CFDE FFF6          	movff	postinc2,tblptrl
  3362  002010  CFDD FFF7          	movff	postdec2,tblptrh
  3363  002014                     	if	0	;tblptru may be non-zero
  3364  002014                     	endif
  3365  002014                     	if	0	;tblptru may be non-zero
  3366  002014                     	endif
  3367  002014  0008               	tblrd		*
  3368  002016  50F5               	movf	tablat,w,c
  3369  002018  6E14               	movwf	fputc@c,c
  3370  00201A  6A15               	clrf	fputc@c+1,c
  3371  00201C  C0B8  F016         	movff	vfpfcnvrt@fp,fputc@fp
  3372  002020  C0B9  F017         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3373  002024  EC4B  F021         	call	_fputc	;wreg free
  3374                           
  3375                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  3376  002028  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3377  00202C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3378  002030  2ADE               	incf	postinc2,f,c
  3379  002032  0E00               	movlw	0
  3380  002034  22DD               	addwfc	postdec2,f,c
  3381  002036  D7D3               	goto	l7523
  3382  002038                     __end_of_vfpfcnvrt:
  3383                           	opt callstack 0
  3384                           
  3385 ;; *************** function _xtoa *****************
  3386 ;; Defined at:
  3387 ;;		line 623 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  fp              2   46[COMRAM] PTR struct _IO_FILE
  3390 ;;		 -> NULL(0), 
  3391 ;;  d               8   48[COMRAM] unsigned long long 
  3392 ;;  x               1   56[COMRAM] unsigned char 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  n               8   73[COMRAM] unsigned long long 
  3395 ;;  c               2   83[COMRAM] int 
  3396 ;;  i               2   81[COMRAM] int 
  3397 ;;  w               2   71[COMRAM] int 
  3398 ;;  p               2   69[COMRAM] int 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  2   46[COMRAM] int 
  3401 ;; Registers used:
  3402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3408 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3409 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3410 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;Total ram usage:       39 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:    7
  3415 ;; This function calls:
  3416 ;;		_isalpha
  3417 ;;		_isupper
  3418 ;;		_pad
  3419 ;;		_toupper
  3420 ;; This function is called by:
  3421 ;;		_vfpfcnvrt
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text6
  3426  003178                     __ptext6:
  3427                           	opt callstack 0
  3428  003178                     _xtoa:
  3429                           	opt callstack 20
  3430                           
  3431                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa
      +                          (FILE *fp, unsigned long long d, char x);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 624: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 625:     int c, i, p, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/
      +                          doprnt.c: 626:     unsigned long long n;;/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 629:     if (!(prec < 0)) {
  3432                           
  3433                           ;incstack = 0
  3434  003178  AE67               	btfss	_prec+1,7,c
  3435                           
  3436                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &
      +                          = ~(1 << 1);
  3437  00317A  9268               	bcf	_flags,1,c
  3438                           
  3439                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < pr
      +                          ec) ? prec : 1;
  3440  00317C  BE67               	btfsc	_prec+1,7,c
  3441  00317E  D005               	goto	u9770
  3442  003180  5067               	movf	_prec+1,w,c
  3443  003182  E108               	bnz	l423
  3444  003184  0466               	decf	_prec,w,c
  3445  003186  B0D8               	btfsc	status,0,c
  3446  003188  D005               	goto	l423
  3447  00318A                     u9770:
  3448  00318A  0E00               	movlw	0
  3449  00318C  6E47               	movwf	xtoa@p+1,c
  3450  00318E  0E01               	movlw	1
  3451  003190  6E46               	movwf	xtoa@p,c
  3452  003192  D004               	goto	l425
  3453  003194                     l423:
  3454  003194  C066  F046         	movff	_prec,xtoa@p
  3455  003198  C067  F047         	movff	_prec+1,xtoa@p+1
  3456  00319C                     l425:
  3457                           
  3458                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  3459  00319C  C064  F048         	movff	_width,xtoa@w
  3460  0031A0  C065  F049         	movff	_width+1,xtoa@w+1
  3461                           
  3462                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags &
      +                           (1 << 4)) {
  3463  0031A4  A868               	btfss	_flags,4,c
  3464  0031A6  D004               	goto	l7279
  3465                           
  3466                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  3467  0031A8  0EFE               	movlw	254
  3468  0031AA  2648               	addwf	xtoa@w,f,c
  3469  0031AC  0EFF               	movlw	255
  3470  0031AE  2249               	addwfc	xtoa@w+1,f,c
  3471  0031B0                     l7279:
  3472                           
  3473                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  3474  0031B0  C031  F04A         	movff	xtoa@d,xtoa@n
  3475  0031B4  C032  F04B         	movff	xtoa@d+1,xtoa@n+1
  3476  0031B8  C033  F04C         	movff	xtoa@d+2,xtoa@n+2
  3477  0031BC  C034  F04D         	movff	xtoa@d+3,xtoa@n+3
  3478  0031C0  C035  F04E         	movff	xtoa@d+4,xtoa@n+4
  3479  0031C4  C036  F04F         	movff	xtoa@d+5,xtoa@n+5
  3480  0031C8  C037  F050         	movff	xtoa@d+6,xtoa@n+6
  3481  0031CC  C038  F051         	movff	xtoa@d+7,xtoa@n+7
  3482                           
  3483                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(
      +                          dbuf) - 1;
  3484  0031D0  0E00               	movlw	0
  3485  0031D2  6E53               	movwf	xtoa@i+1,c
  3486  0031D4  0E4F               	movlw	79
  3487  0031D6  6E52               	movwf	xtoa@i,c
  3488                           
  3489                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '
      +                          \0';
  3490  0031D8  0E00               	movlw	0
  3491  0031DA  0101               	movlb	1	; () banked
  3492  0031DC  6F5B               	movwf	(_dbuf+79)& (0+255),b
  3493                           
  3494                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3495  0031DE  D093               	goto	l7315
  3496  0031E0                     l7285:
  3497                           
  3498                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  3499  0031E0  0652               	decf	xtoa@i,f,c
  3500  0031E2  A0D8               	btfss	status,0,c
  3501  0031E4  0653               	decf	xtoa@i+1,f,c
  3502                           
  3503                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n &
      +                           0x0f;
  3504  0031E6  0E0F               	movlw	15
  3505  0031E8  144A               	andwf	xtoa@n,w,c
  3506  0031EA  6E54               	movwf	xtoa@c,c
  3507  0031EC  6A55               	clrf	xtoa@c+1,c
  3508                           
  3509                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c 
      +                          < 10) ? '0' + c : 'a' + (c - 10);
  3510  0031EE  BE55               	btfsc	xtoa@c+1,7,c
  3511  0031F0  D008               	goto	l7293
  3512  0031F2  5055               	movf	xtoa@c+1,w,c
  3513  0031F4  E104               	bnz	u9790
  3514  0031F6  0E0A               	movlw	10
  3515  0031F8  5C54               	subwf	xtoa@c,w,c
  3516  0031FA  A0D8               	btfss	status,0,c
  3517  0031FC  D002               	goto	l7293
  3518  0031FE                     u9790:
  3519  0031FE  0E57               	movlw	87
  3520  003200  D001               	goto	L2
  3521  003202                     l7293:
  3522  003202  0E30               	movlw	48
  3523  003204                     L2:
  3524  003204  2454               	addwf	xtoa@c,w,c
  3525  003206  6E54               	movwf	xtoa@c,c
  3526  003208  0E00               	movlw	0
  3527  00320A  2055               	addwfc	xtoa@c+1,w,c
  3528  00320C  6E55               	movwf	xtoa@c+1,c
  3529                           
  3530                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 
      +                          ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|
      +                          32)-'a') < 26)) {
  3531  00320E  0EBF               	movlw	191
  3532  003210  6E3A               	movwf	??_xtoa& (0+255),c
  3533  003212  0EFF               	movlw	255
  3534  003214  6E3B               	movwf	(??_xtoa+1)& (0+255),c
  3535  003216  5039               	movf	xtoa@x,w,c
  3536  003218  6E3C               	movwf	(??_xtoa+2)& (0+255),c
  3537  00321A  6A3D               	clrf	(??_xtoa+3)& (0+255),c
  3538  00321C  503A               	movf	??_xtoa,w,c
  3539  00321E  263C               	addwf	??_xtoa+2,f,c
  3540  003220  503B               	movf	??_xtoa+1,w,c
  3541  003222  223D               	addwfc	??_xtoa+3,f,c
  3542  003224  503D               	movf	??_xtoa+3,w,c
  3543  003226  E106               	bnz	u9800
  3544  003228  0E1A               	movlw	26
  3545  00322A  5C3C               	subwf	??_xtoa+2,w,c
  3546  00322C  B0D8               	btfsc	status,0,c
  3547  00322E  D002               	goto	u9800
  3548  003230  0E01               	movlw	1
  3549  003232  D001               	goto	u9810
  3550  003234                     u9800:
  3551  003234  0E00               	movlw	0
  3552  003236                     u9810:
  3553  003236  6E42               	movwf	_xtoa$903,c
  3554  003238  6A43               	clrf	_xtoa$903+1,c
  3555  00323A  5042               	movf	_xtoa$903,w,c
  3556  00323C  1043               	iorwf	_xtoa$903+1,w,c
  3557  00323E  B4D8               	btfsc	status,2,c
  3558  003240  D027               	goto	l7307
  3559  003242  0E9F               	movlw	159
  3560  003244  6E3A               	movwf	??_xtoa& (0+255),c
  3561  003246  0EFF               	movlw	255
  3562  003248  6E3B               	movwf	(??_xtoa+1)& (0+255),c
  3563  00324A  0E20               	movlw	32
  3564  00324C  1054               	iorwf	xtoa@c,w,c
  3565  00324E  6E3C               	movwf	(??_xtoa+2)& (0+255),c
  3566  003250  0E00               	movlw	0
  3567  003252  1055               	iorwf	xtoa@c+1,w,c
  3568  003254  6E3D               	movwf	(??_xtoa+3)& (0+255),c
  3569  003256  503A               	movf	??_xtoa,w,c
  3570  003258  263C               	addwf	??_xtoa+2,f,c
  3571  00325A  503B               	movf	??_xtoa+1,w,c
  3572  00325C  223D               	addwfc	??_xtoa+3,f,c
  3573  00325E  503D               	movf	??_xtoa+3,w,c
  3574  003260  E106               	bnz	u9830
  3575  003262  0E1A               	movlw	26
  3576  003264  5C3C               	subwf	??_xtoa+2,w,c
  3577  003266  B0D8               	btfsc	status,0,c
  3578  003268  D002               	goto	u9830
  3579  00326A  0E01               	movlw	1
  3580  00326C  D001               	goto	u9840
  3581  00326E                     u9830:
  3582  00326E  0E00               	movlw	0
  3583  003270                     u9840:
  3584  003270  6E44               	movwf	_xtoa$904,c
  3585  003272  6A45               	clrf	_xtoa$904+1,c
  3586  003274  5044               	movf	_xtoa$904,w,c
  3587  003276  1045               	iorwf	_xtoa$904+1,w,c
  3588  003278  B4D8               	btfsc	status,2,c
  3589  00327A  D00A               	goto	l7307
  3590                           
  3591                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c =
      +                           toupper(c);
  3592  00327C  C054  F017         	movff	xtoa@c,toupper@c
  3593  003280  C055  F018         	movff	xtoa@c+1,toupper@c+1
  3594  003284  EC58  F022         	call	_toupper	;wreg free
  3595  003288  C017  F054         	movff	?_toupper,xtoa@c
  3596  00328C  C018  F055         	movff	?_toupper+1,xtoa@c+1
  3597  003290                     l7307:
  3598                           
  3599                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i]
      +                           = (char)c;
  3600  003290  0E0C               	movlw	low _dbuf
  3601  003292  2452               	addwf	xtoa@i,w,c
  3602  003294  6ED9               	movwf	fsr2l,c
  3603  003296  0E01               	movlw	high _dbuf
  3604  003298  2053               	addwfc	xtoa@i+1,w,c
  3605  00329A  6EDA               	movwf	fsr2h,c
  3606  00329C  C054  FFDF         	movff	xtoa@c,indf2
  3607                           
  3608                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  3609  0032A0  0646               	decf	xtoa@p,f,c
  3610  0032A2  A0D8               	btfss	status,0,c
  3611  0032A4  0647               	decf	xtoa@p+1,f,c
  3612                           
  3613                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  3614  0032A6  0648               	decf	xtoa@w,f,c
  3615  0032A8  A0D8               	btfss	status,0,c
  3616  0032AA  0649               	decf	xtoa@w+1,f,c
  3617                           
  3618                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >
      +                          > 4;
  3619  0032AC  C04A  F03A         	movff	xtoa@n,??_xtoa
  3620  0032B0  C04B  F03B         	movff	xtoa@n+1,??_xtoa+1
  3621  0032B4  C04C  F03C         	movff	xtoa@n+2,??_xtoa+2
  3622  0032B8  C04D  F03D         	movff	xtoa@n+3,??_xtoa+3
  3623  0032BC  C04E  F03E         	movff	xtoa@n+4,??_xtoa+4
  3624  0032C0  C04F  F03F         	movff	xtoa@n+5,??_xtoa+5
  3625  0032C4  C050  F040         	movff	xtoa@n+6,??_xtoa+6
  3626  0032C8  C051  F041         	movff	xtoa@n+7,??_xtoa+7
  3627  0032CC  0E05               	movlw	5
  3628  0032CE  D009               	goto	u9860
  3629  0032D0                     u9865:
  3630  0032D0  90D8               	bcf	status,0,c
  3631  0032D2  3241               	rrcf	??_xtoa+7,f,c
  3632  0032D4  3240               	rrcf	??_xtoa+6,f,c
  3633  0032D6  323F               	rrcf	??_xtoa+5,f,c
  3634  0032D8  323E               	rrcf	??_xtoa+4,f,c
  3635  0032DA  323D               	rrcf	??_xtoa+3,f,c
  3636  0032DC  323C               	rrcf	??_xtoa+2,f,c
  3637  0032DE  323B               	rrcf	??_xtoa+1,f,c
  3638  0032E0  323A               	rrcf	??_xtoa,f,c
  3639  0032E2                     u9860:
  3640  0032E2  2EE8               	decfsz	wreg,f,c
  3641  0032E4  D7F5               	goto	u9865
  3642  0032E6  C03A  F04A         	movff	??_xtoa,xtoa@n
  3643  0032EA  C03B  F04B         	movff	??_xtoa+1,xtoa@n+1
  3644  0032EE  C03C  F04C         	movff	??_xtoa+2,xtoa@n+2
  3645  0032F2  C03D  F04D         	movff	??_xtoa+3,xtoa@n+3
  3646  0032F6  C03E  F04E         	movff	??_xtoa+4,xtoa@n+4
  3647  0032FA  C03F  F04F         	movff	??_xtoa+5,xtoa@n+5
  3648  0032FE  C040  F050         	movff	??_xtoa+6,xtoa@n+6
  3649  003302  C041  F051         	movff	??_xtoa+7,xtoa@n+7
  3650  003306                     l7315:
  3651                           
  3652                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3653  003306  BE53               	btfsc	xtoa@i+1,7,c
  3654  003308  D020               	goto	u9910
  3655  00330A  5053               	movf	xtoa@i+1,w,c
  3656  00330C  E104               	bnz	u9870
  3657  00330E  0E02               	movlw	2
  3658  003310  5C52               	subwf	xtoa@i,w,c
  3659  003312  A0D8               	btfss	status,0,c
  3660  003314  D01A               	goto	u9910
  3661  003316                     u9870:
  3662  003316  504A               	movf	xtoa@n,w,c
  3663  003318  104B               	iorwf	xtoa@n+1,w,c
  3664  00331A  104C               	iorwf	xtoa@n+2,w,c
  3665  00331C  104D               	iorwf	xtoa@n+3,w,c
  3666  00331E  104E               	iorwf	xtoa@n+4,w,c
  3667  003320  104F               	iorwf	xtoa@n+5,w,c
  3668  003322  1050               	iorwf	xtoa@n+6,w,c
  3669  003324  1051               	iorwf	xtoa@n+7,w,c
  3670  003326  A4D8               	btfss	status,2,c
  3671  003328  D75B               	goto	l7285
  3672  00332A  BE47               	btfsc	xtoa@p+1,7,c
  3673  00332C  D005               	goto	u9890
  3674  00332E  5047               	movf	xtoa@p+1,w,c
  3675  003330  E102               	bnz	u9891
  3676  003332  0446               	decf	xtoa@p,w,c
  3677  003334  B0D8               	btfsc	status,0,c
  3678  003336                     u9891:
  3679  003336  D754               	goto	l7285
  3680  003338                     u9890:
  3681  003338  BE49               	btfsc	xtoa@w+1,7,c
  3682  00333A  D007               	goto	u9910
  3683  00333C  5049               	movf	xtoa@w+1,w,c
  3684  00333E  E103               	bnz	u9900
  3685  003340  0448               	decf	xtoa@w,w,c
  3686  003342  A0D8               	btfss	status,0,c
  3687  003344  D002               	goto	u9910
  3688  003346                     u9900:
  3689  003346  B268               	btfsc	_flags,1,c
  3690  003348  D74B               	goto	l7285
  3691  00334A                     u9910:
  3692                           
  3693                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags &
      +                           (1 << 4)) {
  3694  00334A  A868               	btfss	_flags,4,c
  3695  00334C  D016               	goto	l7331
  3696                           
  3697                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  3698  00334E  0652               	decf	xtoa@i,f,c
  3699  003350  A0D8               	btfss	status,0,c
  3700  003352  0653               	decf	xtoa@i+1,f,c
  3701                           
  3702                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i]
      +                           = x;
  3703  003354  0E0C               	movlw	low _dbuf
  3704  003356  2452               	addwf	xtoa@i,w,c
  3705  003358  6ED9               	movwf	fsr2l,c
  3706  00335A  0E01               	movlw	high _dbuf
  3707  00335C  2053               	addwfc	xtoa@i+1,w,c
  3708  00335E  6EDA               	movwf	fsr2h,c
  3709  003360  C039  FFDF         	movff	xtoa@x,indf2
  3710                           
  3711                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  3712  003364  0652               	decf	xtoa@i,f,c
  3713  003366  A0D8               	btfss	status,0,c
  3714  003368  0653               	decf	xtoa@i+1,f,c
  3715                           
  3716                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i]
      +                           = '0';
  3717  00336A  0E0C               	movlw	low _dbuf
  3718  00336C  2452               	addwf	xtoa@i,w,c
  3719  00336E  6ED9               	movwf	fsr2l,c
  3720  003370  0E01               	movlw	high _dbuf
  3721  003372  2053               	addwfc	xtoa@i+1,w,c
  3722  003374  6EDA               	movwf	fsr2h,c
  3723  003376  0E30               	movlw	48
  3724  003378  6EDF               	movwf	indf2,c
  3725  00337A                     l7331:
  3726                           
  3727                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(
      +                          fp, &dbuf[i], w);
  3728  00337A  C02F  F024         	movff	xtoa@fp,pad@fp
  3729  00337E  C030  F025         	movff	xtoa@fp+1,pad@fp+1
  3730  003382  0E0C               	movlw	low _dbuf
  3731  003384  2452               	addwf	xtoa@i,w,c
  3732  003386  6E26               	movwf	pad@buf,c
  3733  003388  0E01               	movlw	high _dbuf
  3734  00338A  2053               	addwfc	xtoa@i+1,w,c
  3735  00338C  6E27               	movwf	pad@buf+1,c
  3736  00338E  C048  F028         	movff	xtoa@w,pad@p
  3737  003392  C049  F029         	movff	xtoa@w+1,pad@p+1
  3738  003396  ECB7  F01F         	call	_pad	;wreg free
  3739  00339A  C024  F02F         	movff	?_pad,?_xtoa
  3740  00339E  C025  F030         	movff	?_pad+1,?_xtoa+1
  3741  0033A2  0012               	return		;funcret
  3742  0033A4                     __end_of_xtoa:
  3743                           	opt callstack 0
  3744                           
  3745 ;; *************** function _toupper *****************
  3746 ;; Defined at:
  3747 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  c               2   22[COMRAM] int 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  2   22[COMRAM] int 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2, status,0
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3763 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3764 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;Total ram usage:        8 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    3
  3768 ;; This function calls:
  3769 ;;		_islower
  3770 ;; This function is called by:
  3771 ;;		_xtoa
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           	psect	text7
  3776  0044B0                     __ptext7:
  3777                           	opt callstack 0
  3778  0044B0                     _toupper:
  3779                           	opt callstack 23
  3780                           
  3781                           ;incstack = 0
  3782  0044B0  0E9F               	movlw	159
  3783  0044B2  6E19               	movwf	??_toupper& (0+255),c
  3784  0044B4  0EFF               	movlw	255
  3785  0044B6  6E1A               	movwf	(??_toupper+1)& (0+255),c
  3786  0044B8  C017  F01B         	movff	toupper@c,??_toupper+2
  3787  0044BC  C018  F01C         	movff	toupper@c+1,??_toupper+3
  3788  0044C0  5019               	movf	??_toupper,w,c
  3789  0044C2  261B               	addwf	??_toupper+2,f,c
  3790  0044C4  501A               	movf	??_toupper+1,w,c
  3791  0044C6  221C               	addwfc	??_toupper+3,f,c
  3792  0044C8  501C               	movf	??_toupper+3,w,c
  3793  0044CA  E106               	bnz	u8190
  3794  0044CC  0E1A               	movlw	26
  3795  0044CE  5C1B               	subwf	??_toupper+2,w,c
  3796  0044D0  B0D8               	btfsc	status,0,c
  3797  0044D2  D002               	goto	u8190
  3798  0044D4  0E01               	movlw	1
  3799  0044D6  D001               	goto	u8200
  3800  0044D8                     u8190:
  3801  0044D8  0E00               	movlw	0
  3802  0044DA                     u8200:
  3803  0044DA  6E1D               	movwf	_toupper$1526,c
  3804  0044DC  6A1E               	clrf	_toupper$1526+1,c
  3805  0044DE  501D               	movf	_toupper$1526,w,c
  3806  0044E0  101E               	iorwf	_toupper$1526+1,w,c
  3807  0044E2  B4D8               	btfsc	status,2,c
  3808  0044E4  D005               	goto	l1325
  3809  0044E6  0E5F               	movlw	95
  3810  0044E8  1417               	andwf	toupper@c,w,c
  3811  0044EA  6E17               	movwf	?_toupper,c
  3812  0044EC  6A18               	clrf	?_toupper+1,c
  3813  0044EE  0012               	return	
  3814  0044F0                     l1325:
  3815  0044F0  C017  F017         	movff	toupper@c,?_toupper
  3816  0044F4  C018  F018         	movff	toupper@c+1,?_toupper+1
  3817  0044F8  0012               	return		;funcret
  3818  0044FA                     __end_of_toupper:
  3819                           	opt callstack 0
  3820                           
  3821 ;; *************** function _islower *****************
  3822 ;; Defined at:
  3823 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  c               2   16[COMRAM] int 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;		None
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  2   16[COMRAM] int 
  3830 ;; Registers used:
  3831 ;;		wreg, status,2, status,0
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3840 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3841 ;;Total ram usage:        6 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    2
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_toupper
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text8
  3852  004662                     __ptext8:
  3853                           	opt callstack 0
  3854  004662                     _islower:
  3855                           	opt callstack 23
  3856                           
  3857                           ;incstack = 0
  3858  004662  0E9F               	movlw	159
  3859  004664  6E13               	movwf	??_islower& (0+255),c
  3860  004666  0EFF               	movlw	255
  3861  004668  6E14               	movwf	(??_islower+1)& (0+255),c
  3862  00466A  C011  F015         	movff	islower@c,??_islower+2
  3863  00466E  C012  F016         	movff	islower@c+1,??_islower+3
  3864  004672  5013               	movf	??_islower,w,c
  3865  004674  2615               	addwf	??_islower+2,f,c
  3866  004676  5014               	movf	??_islower+1,w,c
  3867  004678  2216               	addwfc	??_islower+3,f,c
  3868  00467A  5016               	movf	??_islower+3,w,c
  3869  00467C  E106               	bnz	u7880
  3870  00467E  0E1A               	movlw	26
  3871  004680  5C15               	subwf	??_islower+2,w,c
  3872  004682  B0D8               	btfsc	status,0,c
  3873  004684  D002               	goto	u7880
  3874  004686  0E01               	movlw	1
  3875  004688  D001               	goto	u7890
  3876  00468A                     u7880:
  3877  00468A  0E00               	movlw	0
  3878  00468C                     u7890:
  3879  00468C  6E11               	movwf	?_islower,c
  3880  00468E  6A12               	clrf	?_islower+1,c
  3881  004690  0012               	return		;funcret
  3882  004692                     __end_of_islower:
  3883                           	opt callstack 0
  3884                           
  3885 ;; *************** function _isalpha *****************
  3886 ;; Defined at:
  3887 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  c               2   16[COMRAM] int 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;		None
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  2   16[COMRAM] int 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3901 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;Total ram usage:        6 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    2
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_xtoa
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text9
  3916  0045FC                     __ptext9:
  3917                           	opt callstack 0
  3918  0045FC                     _isalpha:
  3919                           	opt callstack 24
  3920                           
  3921                           ;incstack = 0
  3922  0045FC  0E9F               	movlw	159
  3923  0045FE  6E13               	movwf	??_isalpha& (0+255),c
  3924  004600  0EFF               	movlw	255
  3925  004602  6E14               	movwf	(??_isalpha+1)& (0+255),c
  3926  004604  0E20               	movlw	32
  3927  004606  1011               	iorwf	isalpha@c,w,c
  3928  004608  6E15               	movwf	(??_isalpha+2)& (0+255),c
  3929  00460A  0E00               	movlw	0
  3930  00460C  1012               	iorwf	isalpha@c+1,w,c
  3931  00460E  6E16               	movwf	(??_isalpha+3)& (0+255),c
  3932  004610  5013               	movf	??_isalpha,w,c
  3933  004612  2615               	addwf	??_isalpha+2,f,c
  3934  004614  5014               	movf	??_isalpha+1,w,c
  3935  004616  2216               	addwfc	??_isalpha+3,f,c
  3936  004618  5016               	movf	??_isalpha+3,w,c
  3937  00461A  E106               	bnz	u8170
  3938  00461C  0E1A               	movlw	26
  3939  00461E  5C15               	subwf	??_isalpha+2,w,c
  3940  004620  B0D8               	btfsc	status,0,c
  3941  004622  D002               	goto	u8170
  3942  004624  0E01               	movlw	1
  3943  004626  D001               	goto	u8180
  3944  004628                     u8170:
  3945  004628  0E00               	movlw	0
  3946  00462A                     u8180:
  3947  00462A  6E11               	movwf	?_isalpha,c
  3948  00462C  6A12               	clrf	?_isalpha+1,c
  3949  00462E  0012               	return		;funcret
  3950  004630                     __end_of_isalpha:
  3951                           	opt callstack 0
  3952                           
  3953 ;; *************** function _strncmp *****************
  3954 ;; Defined at:
  3955 ;;		line 3 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;  _l              2   16[COMRAM] PTR const unsigned char 
  3958 ;;		 -> vfpfcnvrt@ct(3), 
  3959 ;;  _r              2   18[COMRAM] PTR const unsigned char 
  3960 ;;		 -> STR_24(3), 
  3961 ;;  n               2   20[COMRAM] unsigned int 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  r               2   25[COMRAM] PTR const unsigned char 
  3964 ;;		 -> STR_24(3), 
  3965 ;;  l               2   23[COMRAM] PTR const unsigned char 
  3966 ;;		 -> vfpfcnvrt@ct(3), 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  2   16[COMRAM] int 
  3969 ;; Registers used:
  3970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3976 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;Total ram usage:       11 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    2
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_vfpfcnvrt
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text10
  3991  003ECC                     __ptext10:
  3992                           	opt callstack 0
  3993  003ECC                     _strncmp:
  3994                           	opt callstack 25
  3995                           
  3996                           ;incstack = 0
  3997  003ECC  C011  F018         	movff	strncmp@_l,strncmp@l
  3998  003ED0  C012  F019         	movff	strncmp@_l+1,strncmp@l+1
  3999  003ED4  C013  F01A         	movff	strncmp@_r,strncmp@r
  4000  003ED8  C014  F01B         	movff	strncmp@_r+1,strncmp@r+1
  4001  003EDC  0615               	decf	strncmp@n,f,c
  4002  003EDE  A0D8               	btfss	status,0,c
  4003  003EE0  0616               	decf	strncmp@n+1,f,c
  4004  003EE2  2815               	incf	strncmp@n,w,c
  4005  003EE4  E10F               	bnz	l7385
  4006  003EE6  2816               	incf	strncmp@n+1,w,c
  4007  003EE8  A4D8               	btfss	status,2,c
  4008  003EEA  D00C               	goto	l7385
  4009  003EEC  0E00               	movlw	0
  4010  003EEE  6E12               	movwf	?_strncmp+1,c
  4011  003EF0  0E00               	movlw	0
  4012  003EF2  6E11               	movwf	?_strncmp,c
  4013  003EF4  0012               	return	
  4014  003EF6                     l7383:
  4015  003EF6  4A18               	infsnz	strncmp@l,f,c
  4016  003EF8  2A19               	incf	strncmp@l+1,f,c
  4017  003EFA  4A1A               	infsnz	strncmp@r,f,c
  4018  003EFC  2A1B               	incf	strncmp@r+1,f,c
  4019  003EFE  0615               	decf	strncmp@n,f,c
  4020  003F00  A0D8               	btfss	status,0,c
  4021  003F02  0616               	decf	strncmp@n+1,f,c
  4022  003F04                     l7385:
  4023  003F04  C018  FFD9         	movff	strncmp@l,fsr2l
  4024  003F08  C019  FFDA         	movff	strncmp@l+1,fsr2h
  4025  003F0C  50DF               	movf	indf2,w,c
  4026  003F0E  B4D8               	btfsc	status,2,c
  4027  003F10  D01C               	goto	u10040
  4028  003F12  C01A  FFF6         	movff	strncmp@r,tblptrl
  4029  003F16  C01B  FFF7         	movff	strncmp@r+1,tblptrh
  4030  003F1A                     	if	0	;tblptru may be non-zero
  4031  003F1A                     	endif
  4032  003F1A                     	if	0	;tblptru may be non-zero
  4033  003F1A                     	endif
  4034  003F1A  0008               	tblrd		*
  4035  003F1C  50F5               	movf	tablat,w,c
  4036  003F1E  0900               	iorlw	0
  4037  003F20  B4D8               	btfsc	status,2,c
  4038  003F22  D013               	goto	u10040
  4039  003F24  5015               	movf	strncmp@n,w,c
  4040  003F26  1016               	iorwf	strncmp@n+1,w,c
  4041  003F28  B4D8               	btfsc	status,2,c
  4042  003F2A  D00F               	goto	u10040
  4043  003F2C  C018  FFD9         	movff	strncmp@l,fsr2l
  4044  003F30  C019  FFDA         	movff	strncmp@l+1,fsr2h
  4045  003F34  50DF               	movf	indf2,w,c
  4046  003F36  6E17               	movwf	??_strncmp& (0+255),c
  4047  003F38  C01A  FFF6         	movff	strncmp@r,tblptrl
  4048  003F3C  C01B  FFF7         	movff	strncmp@r+1,tblptrh
  4049  003F40                     	if	0	;tblptru may be non-zero
  4050  003F40                     	endif
  4051  003F40                     	if	0	;tblptru may be non-zero
  4052  003F40                     	endif
  4053  003F40  0008               	tblrd		*
  4054  003F42  50F5               	movf	tablat,w,c
  4055  003F44  1817               	xorwf	??_strncmp,w,c
  4056  003F46  B4D8               	btfsc	status,2,c
  4057  003F48  D7D6               	goto	l7383
  4058  003F4A                     u10040:
  4059  003F4A  C018  FFD9         	movff	strncmp@l,fsr2l
  4060  003F4E  C019  FFDA         	movff	strncmp@l+1,fsr2h
  4061  003F52  50DF               	movf	indf2,w,c
  4062  003F54  6E17               	movwf	??_strncmp& (0+255),c
  4063  003F56  C01A  FFF6         	movff	strncmp@r,tblptrl
  4064  003F5A  C01B  FFF7         	movff	strncmp@r+1,tblptrh
  4065  003F5E                     	if	0	;tblptru may be non-zero
  4066  003F5E                     	endif
  4067  003F5E                     	if	0	;tblptru may be non-zero
  4068  003F5E                     	endif
  4069  003F5E  0008               	tblrd		*
  4070  003F60  50F5               	movf	tablat,w,c
  4071  003F62  5C17               	subwf	??_strncmp,w,c
  4072  003F64  6E11               	movwf	?_strncmp,c
  4073  003F66  6A12               	clrf	?_strncmp+1,c
  4074  003F68  A0D8               	btfss	status,0,c
  4075  003F6A  0612               	decf	?_strncmp+1,f,c
  4076  003F6C  0012               	return		;funcret
  4077  003F6E                     __end_of_strncmp:
  4078                           	opt callstack 0
  4079                           
  4080 ;; *************** function _efgtoa *****************
  4081 ;; Defined at:
  4082 ;;		line 319 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  fp              2   61[COMRAM] PTR struct _IO_FILE
  4085 ;;		 -> NULL(0), 
  4086 ;;  f               4   63[COMRAM] PTR struct _IO_FILE
  4087 ;;  c               1   67[COMRAM] unsigned char 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;  u               4   52[BANK0 ] unsigned char 
  4090 ;;  g               4   44[BANK0 ] unsigned char 
  4091 ;;  l               4   38[BANK0 ] unsigned char 
  4092 ;;  h               4   34[BANK0 ] unsigned char 
  4093 ;;  ou              4    0[BANK0 ] unsigned char 
  4094 ;;  n               2   50[BANK0 ] int 
  4095 ;;  e               2   48[BANK0 ] int 
  4096 ;;  i               2   42[BANK0 ] int 
  4097 ;;  w               2   31[BANK0 ] int 
  4098 ;;  p               2   28[BANK0 ] int 
  4099 ;;  sign            2   26[BANK0 ] int 
  4100 ;;  d               2   24[BANK0 ] int 
  4101 ;;  ne              2   22[BANK0 ] int 
  4102 ;;  m               2   20[BANK0 ] int 
  4103 ;;  pp              2   18[BANK0 ] int 
  4104 ;;  t               2   16[BANK0 ] int 
  4105 ;;  mode            1   33[BANK0 ] unsigned char 
  4106 ;;  nmode           1   30[BANK0 ] unsigned char 
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  2   61[COMRAM] int 
  4109 ;; Registers used:
  4110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4116 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4118 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4119 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;Total ram usage:       68 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; Hardware stack levels required when called:    7
  4123 ;; This function calls:
  4124 ;;		___awdiv
  4125 ;;		___awmod
  4126 ;;		___fladd
  4127 ;;		___fldiv
  4128 ;;		___fleq
  4129 ;;		___flge
  4130 ;;		___flmul
  4131 ;;		___flneg
  4132 ;;		___flsub
  4133 ;;		___fltol
  4134 ;;		___fpclassifyf
  4135 ;;		_floorf
  4136 ;;		_isupper
  4137 ;;		_pad
  4138 ;;		_strcpy
  4139 ;;		_tolower
  4140 ;; This function is called by:
  4141 ;;		_vfpfcnvrt
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           	psect	text11
  4146  0010AE                     __ptext11:
  4147                           	opt callstack 0
  4148  0010AE                     _efgtoa:
  4149                           	opt callstack 20
  4150                           
  4151                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 319: static int efgt
      +                          oa(FILE *fp, long double f, char c);/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 320: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c:
      +                           321:     char mode, nmode;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dop
      +                          rnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;/Applications/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 323:     long double g, h, l, ou, u;
  4152                           
  4153                           ;incstack = 0
  4154  0010AE  0E00               	movlw	0
  4155  0010B0  0100               	movlb	0	; () banked
  4156  0010B2  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4157  0010B4  0E00               	movlw	0
  4158  0010B6  6F9A               	movwf	efgtoa@sign& (0+255),b
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 327:     g = f;
  4162  0010B8  C040  F0AC         	movff	efgtoa@f,efgtoa@g
  4163  0010BC  C041  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
  4164  0010C0  C042  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
  4165  0010C4  C043  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0
      +                          ) {
  4169  0010C8  AFAF               	btfss	(efgtoa@g+3)& (0+255),7,b
  4170  0010CA  D016               	goto	l6981
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 329:         sign = 
      +                          1;
  4174  0010CC  0E00               	movlw	0
  4175  0010CE  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4176  0010D0  0E01               	movlw	1
  4177  0010D2  6F9A               	movwf	efgtoa@sign& (0+255),b
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  4181  0010D4  C0AC  F011         	movff	efgtoa@g,___flneg@f1
  4182  0010D8  C0AD  F012         	movff	efgtoa@g+1,___flneg@f1+1
  4183  0010DC  C0AE  F013         	movff	efgtoa@g+2,___flneg@f1+2
  4184  0010E0  C0AF  F014         	movff	efgtoa@g+3,___flneg@f1+3
  4185  0010E4  EC91  F023         	call	___flneg	;wreg free
  4186  0010E8  C011  F0AC         	movff	?___flneg,efgtoa@g
  4187  0010EC  C012  F0AD         	movff	?___flneg+1,efgtoa@g+1
  4188  0010F0  C013  F0AE         	movff	?___flneg+2,efgtoa@g+2
  4189  0010F4  C014  F0AF         	movff	?___flneg+3,efgtoa@g+3
  4190  0010F8                     l6981:
  4191                           
  4192                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  4193  0010F8  0E00               	movlw	0
  4194  0010FA  0100               	movlb	0	; () banked
  4195  0010FC  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
  4196  0010FE  0E00               	movlw	0
  4197  001100  6FB2               	movwf	efgtoa@n& (0+255),b
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 335:     w = width;
  4201  001102  C064  F09F         	movff	_width,efgtoa@w
  4202  001106  C065  F0A0         	movff	_width+1,efgtoa@w+1
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 336:     if (sign ||
      +                           (flags & (1 << 2))) {
  4206  00110A  519A               	movf	efgtoa@sign& (0+255),w,b
  4207  00110C  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4208  00110E  A4D8               	btfss	status,2,c
  4209  001110  D002               	goto	u9260
  4210                           
  4211                           ; BSR set to: 0
  4212  001112  A468               	btfss	_flags,2,c
  4213  001114  D013               	goto	l7001
  4214  001116                     u9260:
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 337:         dbuf[n]
      +                           = sign ? '-' : '+';
  4218  001116  519A               	movf	efgtoa@sign& (0+255),w,b
  4219  001118  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4220  00111A  A4D8               	btfss	status,2,c
  4221  00111C  D004               	goto	l6993
  4222                           
  4223                           ; BSR set to: 0
  4224  00111E  0E00               	movlw	0
  4225  001120  6F85               	movwf	(_efgtoa$882+1)& (0+255),b
  4226  001122  0E2B               	movlw	43
  4227  001124  D003               	goto	L3
  4228  001126                     l6993:
  4229                           
  4230                           ; BSR set to: 0
  4231  001126  0E00               	movlw	0
  4232  001128  6F85               	movwf	(_efgtoa$882+1)& (0+255),b
  4233  00112A  0E2D               	movlw	45
  4234  00112C                     L3:
  4235  00112C  6F84               	movwf	_efgtoa$882& (0+255),b
  4236                           
  4237                           ; BSR set to: 0
  4238  00112E  C084  F10C         	movff	_efgtoa$882,_dbuf
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 338:         ++n;
  4242  001132  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4243  001134  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 339:         --w;
  4247  001136  079F               	decf	efgtoa@w& (0+255),f,b
  4248  001138  A0D8               	btfss	status,0,c
  4249  00113A  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4250  00113C                     l7001:
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 344:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4254  00113C  C0AC  F011         	movff	efgtoa@g,___fpclassifyf@x
  4255  001140  C0AD  F012         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4256  001144  C0AE  F013         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4257  001148  C0AF  F014         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4258  00114C  ECEB  F01D         	call	___fpclassifyf	;wreg free
  4259  001150  0411               	decf	?___fpclassifyf,w,c
  4260  001152  1012               	iorwf	?___fpclassifyf+1,w,c
  4261  001154  A4D8               	btfss	status,2,c
  4262  001156  D04C               	goto	l7019
  4263  001158  0EBF               	movlw	191
  4264  00115A  6E45               	movwf	??_efgtoa& (0+255),c
  4265  00115C  0EFF               	movlw	255
  4266  00115E  6E46               	movwf	(??_efgtoa+1)& (0+255),c
  4267  001160  5044               	movf	efgtoa@c,w,c
  4268  001162  6E47               	movwf	(??_efgtoa+2)& (0+255),c
  4269  001164  6A48               	clrf	(??_efgtoa+3)& (0+255),c
  4270  001166  5045               	movf	??_efgtoa,w,c
  4271  001168  2647               	addwf	??_efgtoa+2,f,c
  4272  00116A  5046               	movf	??_efgtoa+1,w,c
  4273  00116C  2248               	addwfc	??_efgtoa+3,f,c
  4274  00116E  5048               	movf	??_efgtoa+3,w,c
  4275  001170  E106               	bnz	u9290
  4276  001172  0E1A               	movlw	26
  4277  001174  5C47               	subwf	??_efgtoa+2,w,c
  4278  001176  B0D8               	btfsc	status,0,c
  4279  001178  D002               	goto	u9290
  4280  00117A  0E01               	movlw	1
  4281  00117C  D001               	goto	u9300
  4282  00117E                     u9290:
  4283  00117E  0E00               	movlw	0
  4284  001180                     u9300:
  4285  001180  0100               	movlb	0	; () banked
  4286  001182  6F86               	movwf	_efgtoa$883& (0+255),b
  4287  001184  6B87               	clrf	(_efgtoa$883+1)& (0+255),b
  4288                           
  4289                           ; BSR set to: 0
  4290  001186  5186               	movf	_efgtoa$883& (0+255),w,b
  4291  001188  1187               	iorwf	(_efgtoa$883+1)& (0+255),w,b
  4292  00118A  B4D8               	btfsc	status,2,c
  4293  00118C  D00D               	goto	l7011
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 345:             str
      +                          cpy(&dbuf[n], "INF");
  4297  00118E  0E0C               	movlw	low _dbuf
  4298  001190  25B2               	addwf	efgtoa@n& (0+255),w,b
  4299  001192  6E11               	movwf	strcpy@dest,c
  4300  001194  0E01               	movlw	high _dbuf
  4301  001196  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4302  001198  6E12               	movwf	strcpy@dest+1,c
  4303  00119A  0E96               	movlw	low STR_14
  4304  00119C  6E13               	movwf	strcpy@src,c
  4305  00119E  0E10               	movlw	high STR_14
  4306  0011A0  6E14               	movwf	strcpy@src+1,c
  4307  0011A2  EC08  F022         	call	_strcpy	;wreg free
  4308                           
  4309                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 346:         } else 
      +                          {
  4310  0011A6  D00C               	goto	l7013
  4311  0011A8                     l7011:
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 347:             str
      +                          cpy(&dbuf[n], "inf");
  4315  0011A8  0E0C               	movlw	low _dbuf
  4316  0011AA  25B2               	addwf	efgtoa@n& (0+255),w,b
  4317  0011AC  6E11               	movwf	strcpy@dest,c
  4318  0011AE  0E01               	movlw	high _dbuf
  4319  0011B0  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4320  0011B2  6E12               	movwf	strcpy@dest+1,c
  4321  0011B4  0E9E               	movlw	low STR_15
  4322  0011B6  6E13               	movwf	strcpy@src,c
  4323  0011B8  0E10               	movlw	high STR_15
  4324  0011BA  6E14               	movwf	strcpy@src+1,c
  4325  0011BC  EC08  F022         	call	_strcpy	;wreg free
  4326  0011C0                     l7013:
  4327                           
  4328                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 349:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  4329  0011C0  0100               	movlb	0	; () banked
  4330  0011C2  0EFD               	movlw	253
  4331  0011C4  279F               	addwf	efgtoa@w& (0+255),f,b
  4332  0011C6  0EFF               	movlw	255
  4333  0011C8  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 350:         return 
      +                          pad(fp, &dbuf[0], w);
  4337  0011CA  C03E  F024         	movff	efgtoa@fp,pad@fp
  4338  0011CE  C03F  F025         	movff	efgtoa@fp+1,pad@fp+1
  4339  0011D2  0E0C               	movlw	low _dbuf
  4340  0011D4  6E26               	movwf	pad@buf,c
  4341  0011D6  0E01               	movlw	high _dbuf
  4342  0011D8  6E27               	movwf	pad@buf+1,c
  4343  0011DA  C09F  F028         	movff	efgtoa@w,pad@p
  4344  0011DE  C0A0  F029         	movff	efgtoa@w+1,pad@p+1
  4345  0011E2  ECB7  F01F         	call	_pad	;wreg free
  4346  0011E6  C024  F03E         	movff	?_pad,?_efgtoa
  4347  0011EA  C025  F03F         	movff	?_pad+1,?_efgtoa+1
  4348  0011EE  0012               	return	
  4349  0011F0                     l7019:
  4350                           
  4351                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 353:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4352  0011F0  C0AC  F011         	movff	efgtoa@g,___fpclassifyf@x
  4353  0011F4  C0AD  F012         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4354  0011F8  C0AE  F013         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4355  0011FC  C0AF  F014         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4356  001200  ECEB  F01D         	call	___fpclassifyf	;wreg free
  4357  001204  5011               	movf	?___fpclassifyf,w,c
  4358  001206  1012               	iorwf	?___fpclassifyf+1,w,c
  4359  001208  A4D8               	btfss	status,2,c
  4360  00120A  D04C               	goto	l7037
  4361  00120C  0EBF               	movlw	191
  4362  00120E  6E45               	movwf	??_efgtoa& (0+255),c
  4363  001210  0EFF               	movlw	255
  4364  001212  6E46               	movwf	(??_efgtoa+1)& (0+255),c
  4365  001214  5044               	movf	efgtoa@c,w,c
  4366  001216  6E47               	movwf	(??_efgtoa+2)& (0+255),c
  4367  001218  6A48               	clrf	(??_efgtoa+3)& (0+255),c
  4368  00121A  5045               	movf	??_efgtoa,w,c
  4369  00121C  2647               	addwf	??_efgtoa+2,f,c
  4370  00121E  5046               	movf	??_efgtoa+1,w,c
  4371  001220  2248               	addwfc	??_efgtoa+3,f,c
  4372  001222  5048               	movf	??_efgtoa+3,w,c
  4373  001224  E106               	bnz	u9330
  4374  001226  0E1A               	movlw	26
  4375  001228  5C47               	subwf	??_efgtoa+2,w,c
  4376  00122A  B0D8               	btfsc	status,0,c
  4377  00122C  D002               	goto	u9330
  4378  00122E  0E01               	movlw	1
  4379  001230  D001               	goto	u9340
  4380  001232                     u9330:
  4381  001232  0E00               	movlw	0
  4382  001234                     u9340:
  4383  001234  0100               	movlb	0	; () banked
  4384  001236  6F88               	movwf	_efgtoa$887& (0+255),b
  4385  001238  6B89               	clrf	(_efgtoa$887+1)& (0+255),b
  4386                           
  4387                           ; BSR set to: 0
  4388  00123A  5188               	movf	_efgtoa$887& (0+255),w,b
  4389  00123C  1189               	iorwf	(_efgtoa$887+1)& (0+255),w,b
  4390  00123E  B4D8               	btfsc	status,2,c
  4391  001240  D00D               	goto	l7029
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 354:             str
      +                          cpy(&dbuf[n], "NAN");
  4395  001242  0E0C               	movlw	low _dbuf
  4396  001244  25B2               	addwf	efgtoa@n& (0+255),w,b
  4397  001246  6E11               	movwf	strcpy@dest,c
  4398  001248  0E01               	movlw	high _dbuf
  4399  00124A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4400  00124C  6E12               	movwf	strcpy@dest+1,c
  4401  00124E  0E9A               	movlw	low STR_18
  4402  001250  6E13               	movwf	strcpy@src,c
  4403  001252  0E10               	movlw	high STR_18
  4404  001254  6E14               	movwf	strcpy@src+1,c
  4405  001256  EC08  F022         	call	_strcpy	;wreg free
  4406                           
  4407                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 355:         } else 
      +                          {
  4408  00125A  D00C               	goto	l7031
  4409  00125C                     l7029:
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 356:             str
      +                          cpy(&dbuf[n], "nan");
  4413  00125C  0E0C               	movlw	low _dbuf
  4414  00125E  25B2               	addwf	efgtoa@n& (0+255),w,b
  4415  001260  6E11               	movwf	strcpy@dest,c
  4416  001262  0E01               	movlw	high _dbuf
  4417  001264  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4418  001266  6E12               	movwf	strcpy@dest+1,c
  4419  001268  0EA2               	movlw	low STR_19
  4420  00126A  6E13               	movwf	strcpy@src,c
  4421  00126C  0E10               	movlw	high STR_19
  4422  00126E  6E14               	movwf	strcpy@src+1,c
  4423  001270  EC08  F022         	call	_strcpy	;wreg free
  4424  001274                     l7031:
  4425                           
  4426                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 358:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  4427  001274  0100               	movlb	0	; () banked
  4428  001276  0EFD               	movlw	253
  4429  001278  279F               	addwf	efgtoa@w& (0+255),f,b
  4430  00127A  0EFF               	movlw	255
  4431  00127C  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 359:         return 
      +                          pad(fp, &dbuf[0], w);
  4435  00127E  C03E  F024         	movff	efgtoa@fp,pad@fp
  4436  001282  C03F  F025         	movff	efgtoa@fp+1,pad@fp+1
  4437  001286  0E0C               	movlw	low _dbuf
  4438  001288  6E26               	movwf	pad@buf,c
  4439  00128A  0E01               	movlw	high _dbuf
  4440  00128C  6E27               	movwf	pad@buf+1,c
  4441  00128E  C09F  F028         	movff	efgtoa@w,pad@p
  4442  001292  C0A0  F029         	movff	efgtoa@w+1,pad@p+1
  4443  001296  ECB7  F01F         	call	_pad	;wreg free
  4444  00129A  C024  F03E         	movff	?_pad,?_efgtoa
  4445  00129E  C025  F03F         	movff	?_pad+1,?_efgtoa+1
  4446  0012A2  0012               	return	
  4447  0012A4                     l7037:
  4448                           
  4449                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  4450  0012A4  0E00               	movlw	0
  4451  0012A6  0100               	movlb	0	; () banked
  4452  0012A8  6FB4               	movwf	efgtoa@u& (0+255),b
  4453  0012AA  0E00               	movlw	0
  4454  0012AC  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  4455  0012AE  0E80               	movlw	128
  4456  0012B0  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  4457  0012B2  0E3F               	movlw	63
  4458  0012B4  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  4459                           
  4460                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  4461  0012B6  0E00               	movlw	0
  4462  0012B8  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  4463  0012BA  0E00               	movlw	0
  4464  0012BC  6FB0               	movwf	efgtoa@e& (0+255),b
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 
      +                          0.0)) {
  4468  0012BE  C0AC  F011         	movff	efgtoa@g,___fleq@ff1
  4469  0012C2  C0AD  F012         	movff	efgtoa@g+1,___fleq@ff1+1
  4470  0012C6  C0AE  F013         	movff	efgtoa@g+2,___fleq@ff1+2
  4471  0012CA  C0AF  F014         	movff	efgtoa@g+3,___fleq@ff1+3
  4472  0012CE  0E00               	movlw	0
  4473  0012D0  6E15               	movwf	___fleq@ff2,c
  4474  0012D2  0E00               	movlw	0
  4475  0012D4  6E16               	movwf	___fleq@ff2+1,c
  4476  0012D6  0E00               	movlw	0
  4477  0012D8  6E17               	movwf	___fleq@ff2+2,c
  4478  0012DA  0E00               	movlw	0
  4479  0012DC  6E18               	movwf	___fleq@ff2+3,c
  4480  0012DE  EC4B  F020         	call	___fleq	;wreg free
  4481  0012E2  A0D8               	btfss	status,0,c
  4482  0012E4  D01E               	goto	l7047
  4483  0012E6  D076               	goto	u9380
  4484  0012E8                     l7043:
  4485                           
  4486                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 367:             u =
      +                           u*10.0;
  4487  0012E8  C0B4  F011         	movff	efgtoa@u,___flmul@b
  4488  0012EC  C0B5  F012         	movff	efgtoa@u+1,___flmul@b+1
  4489  0012F0  C0B6  F013         	movff	efgtoa@u+2,___flmul@b+2
  4490  0012F4  C0B7  F014         	movff	efgtoa@u+3,___flmul@b+3
  4491  0012F8  0E00               	movlw	0
  4492  0012FA  6E15               	movwf	___flmul@a,c
  4493  0012FC  0E00               	movlw	0
  4494  0012FE  6E16               	movwf	___flmul@a+1,c
  4495  001300  0E20               	movlw	32
  4496  001302  6E17               	movwf	___flmul@a+2,c
  4497  001304  0E41               	movlw	65
  4498  001306  6E18               	movwf	___flmul@a+3,c
  4499  001308  EC1C  F010         	call	___flmul	;wreg free
  4500  00130C  C011  F0B4         	movff	?___flmul,efgtoa@u
  4501  001310  C012  F0B5         	movff	?___flmul+1,efgtoa@u+1
  4502  001314  C013  F0B6         	movff	?___flmul+2,efgtoa@u+2
  4503  001318  C014  F0B7         	movff	?___flmul+3,efgtoa@u+3
  4504                           
  4505                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 368:             ++e
      +                          ;
  4506  00131C  0100               	movlb	0	; () banked
  4507  00131E  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  4508  001320  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  4509  001322                     l7047:
  4510                           
  4511                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 366:         while (
      +                          !(g < (u*10.0))) {
  4512  001322  C0AC  F02A         	movff	efgtoa@g,___flge@ff1
  4513  001326  C0AD  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  4514  00132A  C0AE  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  4515  00132E  C0AF  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  4516  001332  0E00               	movlw	0
  4517  001334  6E15               	movwf	___flmul@a,c
  4518  001336  0E00               	movlw	0
  4519  001338  6E16               	movwf	___flmul@a+1,c
  4520  00133A  0E20               	movlw	32
  4521  00133C  6E17               	movwf	___flmul@a+2,c
  4522  00133E  0E41               	movlw	65
  4523  001340  6E18               	movwf	___flmul@a+3,c
  4524  001342  C0B4  F011         	movff	efgtoa@u,___flmul@b
  4525  001346  C0B5  F012         	movff	efgtoa@u+1,___flmul@b+1
  4526  00134A  C0B6  F013         	movff	efgtoa@u+2,___flmul@b+2
  4527  00134E  C0B7  F014         	movff	efgtoa@u+3,___flmul@b+3
  4528  001352  EC1C  F010         	call	___flmul	;wreg free
  4529  001356  C011  F02E         	movff	?___flmul,___flge@ff2
  4530  00135A  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  4531  00135E  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  4532  001362  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  4533  001366  EC83  F01D         	call	___flge	;wreg free
  4534  00136A  A0D8               	btfss	status,0,c
  4535  00136C  D01F               	goto	l7053
  4536  00136E  D7BC               	goto	l7043
  4537  001370                     l7049:
  4538                           
  4539                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 371:             u =
      +                           u/10.0;
  4540  001370  C0B4  F011         	movff	efgtoa@u,___fldiv@b
  4541  001374  C0B5  F012         	movff	efgtoa@u+1,___fldiv@b+1
  4542  001378  C0B6  F013         	movff	efgtoa@u+2,___fldiv@b+2
  4543  00137C  C0B7  F014         	movff	efgtoa@u+3,___fldiv@b+3
  4544  001380  0E00               	movlw	0
  4545  001382  6E15               	movwf	___fldiv@a,c
  4546  001384  0E00               	movlw	0
  4547  001386  6E16               	movwf	___fldiv@a+1,c
  4548  001388  0E20               	movlw	32
  4549  00138A  6E17               	movwf	___fldiv@a+2,c
  4550  00138C  0E41               	movlw	65
  4551  00138E  6E18               	movwf	___fldiv@a+3,c
  4552  001390  EC57  F016         	call	___fldiv	;wreg free
  4553  001394  C011  F0B4         	movff	?___fldiv,efgtoa@u
  4554  001398  C012  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  4555  00139C  C013  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  4556  0013A0  C014  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  4557                           
  4558                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 372:             --e
      +                          ;
  4559  0013A4  0100               	movlb	0	; () banked
  4560  0013A6  07B0               	decf	efgtoa@e& (0+255),f,b
  4561  0013A8  A0D8               	btfss	status,0,c
  4562  0013AA  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
  4563  0013AC                     l7053:
  4564                           
  4565                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 370:         while (
      +                          g < u) {
  4566  0013AC  C0AC  F02A         	movff	efgtoa@g,___flge@ff1
  4567  0013B0  C0AD  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  4568  0013B4  C0AE  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  4569  0013B8  C0AF  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  4570  0013BC  C0B4  F02E         	movff	efgtoa@u,___flge@ff2
  4571  0013C0  C0B5  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  4572  0013C4  C0B6  F030         	movff	efgtoa@u+2,___flge@ff2+2
  4573  0013C8  C0B7  F031         	movff	efgtoa@u+3,___flge@ff2+3
  4574  0013CC  EC83  F01D         	call	___flge	;wreg free
  4575  0013D0  A0D8               	btfss	status,0,c
  4576  0013D2  D7CE               	goto	l7049
  4577  0013D4                     u9380:
  4578                           
  4579                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 377:     mode = tolo
      +                          wer((int)c);
  4580  0013D4  C044  F017         	movff	efgtoa@c,tolower@c
  4581  0013D8  6A18               	clrf	tolower@c+1,c
  4582  0013DA  EC32  F022         	call	_tolower	;wreg free
  4583  0013DE  5017               	movf	?_tolower,w,c
  4584  0013E0  0100               	movlb	0	; () banked
  4585  0013E2  6FA1               	movwf	efgtoa@mode& (0+255),b
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 378:     nmode = mod
      +                          e;
  4589  0013E4  C0A1  F09E         	movff	efgtoa@mode,efgtoa@nmode
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 379:     if (mode ==
      +                           'g') {
  4593  0013E8  0E67               	movlw	103
  4594  0013EA  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4595  0013EC  A4D8               	btfss	status,2,c
  4596  0013EE  D019               	goto	l7069
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0
      +                          ) {
  4600  0013F0  5066               	movf	_prec,w,c
  4601  0013F2  1067               	iorwf	_prec+1,w,c
  4602  0013F4  A4D8               	btfss	status,2,c
  4603  0013F6  D004               	goto	l7065
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  4607  0013F8  0E00               	movlw	0
  4608  0013FA  6E67               	movwf	_prec+1,c
  4609  0013FC  0E01               	movlw	1
  4610  0013FE  6E66               	movwf	_prec,c
  4611  001400                     l7065:
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 383:         p = (0 
      +                          < prec) ? prec : 6;
  4615  001400  BE67               	btfsc	_prec+1,7,c
  4616  001402  D005               	goto	u9410
  4617  001404  5067               	movf	_prec+1,w,c
  4618  001406  E108               	bnz	l363
  4619  001408  0466               	decf	_prec,w,c
  4620  00140A  B0D8               	btfsc	status,0,c
  4621  00140C  D005               	goto	l363
  4622  00140E                     u9410:
  4623                           
  4624                           ; BSR set to: 0
  4625  00140E  0E00               	movlw	0
  4626  001410  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  4627  001412  0E06               	movlw	6
  4628  001414  6F9C               	movwf	efgtoa@p& (0+255),b
  4629  001416  D008               	goto	l7075
  4630  001418                     l363:
  4631                           
  4632                           ; BSR set to: 0
  4633  001418  C066  F09C         	movff	_prec,efgtoa@p
  4634  00141C  C067  F09D         	movff	_prec+1,efgtoa@p+1
  4635  001420  D003               	goto	l7075
  4636  001422                     l7069:
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 385:         p = (pr
      +                          ec < 0) ? 6 : prec;
  4640  001422  AE67               	btfss	_prec+1,7,c
  4641  001424  D7F9               	goto	l363
  4642  001426  D7F3               	goto	u9410
  4643  001428                     l7075:
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 389:     if (mode ==
      +                           'g') {
  4647  001428  0E67               	movlw	103
  4648  00142A  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4649  00142C  A4D8               	btfss	status,2,c
  4650  00142E  D022               	goto	l7085
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 390:         if (!(e
      +                           < -4) && !((p - 1) < e)) {
  4654  001430  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  4655  001432  D006               	goto	u9440
  4656  001434  0EFC               	movlw	252
  4657  001436  5DB0               	subwf	efgtoa@e& (0+255),w,b
  4658  001438  0EFF               	movlw	255
  4659  00143A  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4660  00143C  A0D8               	btfss	status,0,c
  4661  00143E  D018               	goto	l7083
  4662  001440                     u9440:
  4663                           
  4664                           ; BSR set to: 0
  4665  001440  0EFF               	movlw	255
  4666  001442  6E45               	movwf	??_efgtoa& (0+255),c
  4667  001444  0EFF               	movlw	255
  4668  001446  6E46               	movwf	(??_efgtoa+1)& (0+255),c
  4669  001448  C09C  F047         	movff	efgtoa@p,??_efgtoa+2
  4670  00144C  C09D  F048         	movff	efgtoa@p+1,??_efgtoa+3
  4671  001450  5045               	movf	??_efgtoa,w,c
  4672  001452  2647               	addwf	??_efgtoa+2,f,c
  4673  001454  5046               	movf	??_efgtoa+1,w,c
  4674  001456  2248               	addwfc	??_efgtoa+3,f,c
  4675  001458  51B0               	movf	efgtoa@e& (0+255),w,b
  4676  00145A  5C47               	subwf	??_efgtoa+2,w,c
  4677  00145C  5048               	movf	??_efgtoa+3,w,c
  4678  00145E  0A80               	xorlw	128
  4679  001460  6E49               	movwf	(??_efgtoa+4)& (0+255),c
  4680  001462  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  4681  001464  0A80               	xorlw	128
  4682  001466  5849               	subwfb	(??_efgtoa+4)& (0+255),w,c
  4683  001468  A0D8               	btfss	status,0,c
  4684  00146A  D002               	goto	l7083
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 391:             nmo
      +                          de = 'f';
  4688  00146C  0E66               	movlw	102
  4689  00146E  D001               	goto	L4
  4690  001470                     l7083:
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 393:             nmo
      +                          de = 'e';
  4694  001470  0E65               	movlw	101
  4695  001472                     L4:
  4696  001472  6F9E               	movwf	efgtoa@nmode& (0+255),b
  4697  001474                     l7085:
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 398:     m = p;
  4701  001474  C09C  F094         	movff	efgtoa@p,efgtoa@m
  4702  001478  C09D  F095         	movff	efgtoa@p+1,efgtoa@m+1
  4703                           
  4704                           ; BSR set to: 0
  4705                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 399:     if (!(mode 
      +                          == 'g') || ((nmode == 'f') && (e < 0))) {
  4706  00147C  0E67               	movlw	103
  4707  00147E  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4708  001480  A4D8               	btfss	status,2,c
  4709  001482  D005               	goto	u9480
  4710                           
  4711                           ; BSR set to: 0
  4712  001484  0E66               	movlw	102
  4713  001486  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4714  001488  B4D8               	btfsc	status,2,c
  4715                           
  4716                           ; BSR set to: 0
  4717  00148A  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  4718  00148C  D002               	goto	l7095
  4719  00148E                     u9480:
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 400:         ++m;
  4723  00148E  4B94               	infsnz	efgtoa@m& (0+255),f,b
  4724  001490  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  4725  001492                     l7095:
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 404:     if (nmode =
      +                          = 'f') {
  4729  001492  0E66               	movlw	102
  4730  001494  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4731  001496  A4D8               	btfss	status,2,c
  4732  001498  D016               	goto	l7105
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 405:         if (e <
      +                           0) {
  4736  00149A  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  4737  00149C  D00C               	goto	l7101
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 406:             u =
      +                           1.0;
  4741  00149E  0E00               	movlw	0
  4742  0014A0  6FB4               	movwf	efgtoa@u& (0+255),b
  4743  0014A2  0E00               	movlw	0
  4744  0014A4  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  4745  0014A6  0E80               	movlw	128
  4746  0014A8  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  4747  0014AA  0E3F               	movlw	63
  4748  0014AC  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  4749                           
  4750                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 407:             e =
      +                           0;
  4751  0014AE  0E00               	movlw	0
  4752  0014B0  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  4753  0014B2  0E00               	movlw	0
  4754  0014B4  6FB0               	movwf	efgtoa@e& (0+255),b
  4755  0014B6                     l7101:
  4756                           
  4757                           ; BSR set to: 0
  4758                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 409:         if (!(m
      +                          ode == 'g')) {
  4759  0014B6  0E67               	movlw	103
  4760  0014B8  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4761  0014BA  B4D8               	btfsc	status,2,c
  4762  0014BC  D004               	goto	l7105
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 410:             m +
      +                          = e;
  4766  0014BE  51B0               	movf	efgtoa@e& (0+255),w,b
  4767  0014C0  2794               	addwf	efgtoa@m& (0+255),f,b
  4768  0014C2  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  4769  0014C4  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4770  0014C6                     l7105:
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  4774  0014C6  0E00               	movlw	0
  4775  0014C8  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4776  0014CA  0E00               	movlw	0
  4777  0014CC  6FAA               	movwf	efgtoa@i& (0+255),b
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 416:     h = g;
  4781  0014CE  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
  4782  0014D2  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
  4783  0014D6  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
  4784  0014DA  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  4788  0014DE  C0B4  F080         	movff	efgtoa@u,efgtoa@ou
  4789  0014E2  C0B5  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  4790  0014E6  C0B6  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  4791  0014EA  C0B7  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  4792                           
  4793                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < 
      +                          m) {
  4794  0014EE  D07B               	goto	l7119
  4795  0014F0                     l7111:
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 419:         l = flo
      +                          orf(h/u);
  4799  0014F0  C0A2  F011         	movff	efgtoa@h,___fldiv@b
  4800  0014F4  C0A3  F012         	movff	efgtoa@h+1,___fldiv@b+1
  4801  0014F8  C0A4  F013         	movff	efgtoa@h+2,___fldiv@b+2
  4802  0014FC  C0A5  F014         	movff	efgtoa@h+3,___fldiv@b+3
  4803  001500  C0B4  F015         	movff	efgtoa@u,___fldiv@a
  4804  001504  C0B5  F016         	movff	efgtoa@u+1,___fldiv@a+1
  4805  001508  C0B6  F017         	movff	efgtoa@u+2,___fldiv@a+2
  4806  00150C  C0B7  F018         	movff	efgtoa@u+3,___fldiv@a+3
  4807  001510  EC57  F016         	call	___fldiv	;wreg free
  4808  001514  C011  F02A         	movff	?___fldiv,floorf@x
  4809  001518  C012  F02B         	movff	?___fldiv+1,floorf@x+1
  4810  00151C  C013  F02C         	movff	?___fldiv+2,floorf@x+2
  4811  001520  C014  F02D         	movff	?___fldiv+3,floorf@x+3
  4812  001524  ECD2  F019         	call	_floorf	;wreg free
  4813  001528  C02A  F0A6         	movff	?_floorf,efgtoa@l
  4814  00152C  C02B  F0A7         	movff	?_floorf+1,efgtoa@l+1
  4815  001530  C02C  F0A8         	movff	?_floorf+2,efgtoa@l+2
  4816  001534  C02D  F0A9         	movff	?_floorf+3,efgtoa@l+3
  4817                           
  4818                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 420:         d = (in
      +                          t)l;
  4819  001538  C0A6  F011         	movff	efgtoa@l,___fltol@f1
  4820  00153C  C0A7  F012         	movff	efgtoa@l+1,___fltol@f1+1
  4821  001540  C0A8  F013         	movff	efgtoa@l+2,___fltol@f1+2
  4822  001544  C0A9  F014         	movff	efgtoa@l+3,___fltol@f1+3
  4823  001548  ECB7  F01E         	call	___fltol	;wreg free
  4824  00154C  C011  F098         	movff	?___fltol,efgtoa@d
  4825  001550  C012  F099         	movff	?___fltol+1,efgtoa@d+1
  4826                           
  4827                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 421:         h -= l*
      +                          u;
  4828  001554  C0A2  F02A         	movff	efgtoa@h,___flsub@b
  4829  001558  C0A3  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4830  00155C  C0A4  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4831  001560  C0A5  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4832  001564  C0B4  F015         	movff	efgtoa@u,___flmul@a
  4833  001568  C0B5  F016         	movff	efgtoa@u+1,___flmul@a+1
  4834  00156C  C0B6  F017         	movff	efgtoa@u+2,___flmul@a+2
  4835  001570  C0B7  F018         	movff	efgtoa@u+3,___flmul@a+3
  4836  001574  C0A6  F011         	movff	efgtoa@l,___flmul@b
  4837  001578  C0A7  F012         	movff	efgtoa@l+1,___flmul@b+1
  4838  00157C  C0A8  F013         	movff	efgtoa@l+2,___flmul@b+2
  4839  001580  C0A9  F014         	movff	efgtoa@l+3,___flmul@b+3
  4840  001584  EC1C  F010         	call	___flmul	;wreg free
  4841  001588  C011  F02E         	movff	?___flmul,___flsub@a
  4842  00158C  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4843  001590  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4844  001594  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4845  001598  EC7D  F022         	call	___flsub	;wreg free
  4846  00159C  C02A  F0A2         	movff	?___flsub,efgtoa@h
  4847  0015A0  C02B  F0A3         	movff	?___flsub+1,efgtoa@h+1
  4848  0015A4  C02C  F0A4         	movff	?___flsub+2,efgtoa@h+2
  4849  0015A8  C02D  F0A5         	movff	?___flsub+3,efgtoa@h+3
  4850                           
  4851                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 422:         u = u/1
      +                          0.0;
  4852  0015AC  C0B4  F011         	movff	efgtoa@u,___fldiv@b
  4853  0015B0  C0B5  F012         	movff	efgtoa@u+1,___fldiv@b+1
  4854  0015B4  C0B6  F013         	movff	efgtoa@u+2,___fldiv@b+2
  4855  0015B8  C0B7  F014         	movff	efgtoa@u+3,___fldiv@b+3
  4856  0015BC  0E00               	movlw	0
  4857  0015BE  6E15               	movwf	___fldiv@a,c
  4858  0015C0  0E00               	movlw	0
  4859  0015C2  6E16               	movwf	___fldiv@a+1,c
  4860  0015C4  0E20               	movlw	32
  4861  0015C6  6E17               	movwf	___fldiv@a+2,c
  4862  0015C8  0E41               	movlw	65
  4863  0015CA  6E18               	movwf	___fldiv@a+3,c
  4864  0015CC  EC57  F016         	call	___fldiv	;wreg free
  4865  0015D0  C011  F0B4         	movff	?___fldiv,efgtoa@u
  4866  0015D4  C012  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  4867  0015D8  C013  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  4868  0015DC  C014  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  4869                           
  4870                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 423:         ++i;
  4871  0015E0  0100               	movlb	0	; () banked
  4872  0015E2  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  4873  0015E4  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  4874  0015E6                     l7119:
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < 
      +                          m) {
  4878  0015E6  5194               	movf	efgtoa@m& (0+255),w,b
  4879  0015E8  5DAA               	subwf	efgtoa@i& (0+255),w,b
  4880  0015EA  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  4881  0015EC  0A80               	xorlw	128
  4882  0015EE  6E45               	movwf	??_efgtoa& (0+255),c
  4883  0015F0  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  4884  0015F2  0A80               	xorlw	128
  4885  0015F4  5845               	subwfb	??_efgtoa& (0+255),w,c
  4886  0015F6  A0D8               	btfss	status,0,c
  4887  0015F8  D77B               	goto	l7111
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  4891  0015FA  C0B4  F011         	movff	efgtoa@u,___flmul@b
  4892  0015FE  C0B5  F012         	movff	efgtoa@u+1,___flmul@b+1
  4893  001602  C0B6  F013         	movff	efgtoa@u+2,___flmul@b+2
  4894  001606  C0B7  F014         	movff	efgtoa@u+3,___flmul@b+3
  4895  00160A  0E00               	movlw	0
  4896  00160C  6E15               	movwf	___flmul@a,c
  4897  00160E  0E00               	movlw	0
  4898  001610  6E16               	movwf	___flmul@a+1,c
  4899  001612  0EA0               	movlw	160
  4900  001614  6E17               	movwf	___flmul@a+2,c
  4901  001616  0E40               	movlw	64
  4902  001618  6E18               	movwf	___flmul@a+3,c
  4903  00161A  EC1C  F010         	call	___flmul	;wreg free
  4904  00161E  C011  F0A6         	movff	?___flmul,efgtoa@l
  4905  001622  C012  F0A7         	movff	?___flmul+1,efgtoa@l+1
  4906  001626  C013  F0A8         	movff	?___flmul+2,efgtoa@l+2
  4907  00162A  C014  F0A9         	movff	?___flmul+3,efgtoa@l+3
  4908                           
  4909                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 428:     if (h < l) 
      +                          {
  4910  00162E  C0A2  F02A         	movff	efgtoa@h,___flge@ff1
  4911  001632  C0A3  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4912  001636  C0A4  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4913  00163A  C0A5  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4914  00163E  C0A6  F02E         	movff	efgtoa@l,___flge@ff2
  4915  001642  C0A7  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  4916  001646  C0A8  F030         	movff	efgtoa@l+2,___flge@ff2+2
  4917  00164A  C0A9  F031         	movff	efgtoa@l+3,___flge@ff2+3
  4918  00164E  EC83  F01D         	call	___flge	;wreg free
  4919  001652  B0D8               	btfsc	status,0,c
  4920  001654  D003               	goto	l7127
  4921                           
  4922                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 429:         l = 0.0
      +                          ;
  4923  001656  0E00               	movlw	0
  4924  001658  0100               	movlb	0	; () banked
  4925  00165A  D018               	goto	L5
  4926  00165C                     l7127:
  4927                           
  4928                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 432:         if ((h 
      +                          == l) && !(d % 2)) {
  4929  00165C  C0A2  F011         	movff	efgtoa@h,___fleq@ff1
  4930  001660  C0A3  F012         	movff	efgtoa@h+1,___fleq@ff1+1
  4931  001664  C0A4  F013         	movff	efgtoa@h+2,___fleq@ff1+2
  4932  001668  C0A5  F014         	movff	efgtoa@h+3,___fleq@ff1+3
  4933  00166C  C0A6  F015         	movff	efgtoa@l,___fleq@ff2
  4934  001670  C0A7  F016         	movff	efgtoa@l+1,___fleq@ff2+1
  4935  001674  C0A8  F017         	movff	efgtoa@l+2,___fleq@ff2+2
  4936  001678  C0A9  F018         	movff	efgtoa@l+3,___fleq@ff2+3
  4937  00167C  EC4B  F020         	call	___fleq	;wreg free
  4938  001680  A0D8               	btfss	status,0,c
  4939  001682  D00B               	goto	l7133
  4940  001684  0100               	movlb	0	; () banked
  4941  001686  B198               	btfsc	efgtoa@d& (0+255),0,b
  4942  001688  D008               	goto	l7133
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 433:             l =
      +                           0.0;
  4946  00168A  0E00               	movlw	0
  4947  00168C                     L5:
  4948  00168C  6FA6               	movwf	efgtoa@l& (0+255),b
  4949  00168E  0E00               	movlw	0
  4950  001690  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  4951  001692  0E00               	movlw	0
  4952  001694  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  4953  001696  0E00               	movlw	0
  4954  001698  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  4955  00169A                     l7133:
  4956                           
  4957                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  4958  00169A  C0AC  F011         	movff	efgtoa@g,___fladd@b
  4959  00169E  C0AD  F012         	movff	efgtoa@g+1,___fladd@b+1
  4960  0016A2  C0AE  F013         	movff	efgtoa@g+2,___fladd@b+2
  4961  0016A6  C0AF  F014         	movff	efgtoa@g+3,___fladd@b+3
  4962  0016AA  C0A6  F015         	movff	efgtoa@l,___fladd@a
  4963  0016AE  C0A7  F016         	movff	efgtoa@l+1,___fladd@a+1
  4964  0016B2  C0A8  F017         	movff	efgtoa@l+2,___fladd@a+2
  4965  0016B6  C0A9  F018         	movff	efgtoa@l+3,___fladd@a+3
  4966  0016BA  EC4B  F013         	call	___fladd	;wreg free
  4967  0016BE  C011  F0A2         	movff	?___fladd,efgtoa@h
  4968  0016C2  C012  F0A3         	movff	?___fladd+1,efgtoa@h+1
  4969  0016C6  C013  F0A4         	movff	?___fladd+2,efgtoa@h+2
  4970  0016CA  C014  F0A5         	movff	?___fladd+3,efgtoa@h+3
  4971                           
  4972                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  4973  0016CE  C080  F0B4         	movff	efgtoa@ou,efgtoa@u
  4974  0016D2  C081  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
  4975  0016D6  C082  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
  4976  0016DA  C083  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
  4977                           
  4978                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode
      +                           == 'e') ? 0 : e;
  4979  0016DE  0E65               	movlw	101
  4980  0016E0  0100               	movlb	0	; () banked
  4981  0016E2  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4982  0016E4  B4D8               	btfsc	status,2,c
  4983  0016E6  D005               	goto	l7141
  4984                           
  4985                           ; BSR set to: 0
  4986  0016E8  C0B0  F096         	movff	efgtoa@e,efgtoa@ne
  4987  0016EC  C0B1  F097         	movff	efgtoa@e+1,efgtoa@ne+1
  4988  0016F0  D004               	goto	l389
  4989  0016F2                     l7141:
  4990                           
  4991                           ; BSR set to: 0
  4992  0016F2  0E00               	movlw	0
  4993  0016F4  6F97               	movwf	(efgtoa@ne+1)& (0+255),b
  4994  0016F6  0E00               	movlw	0
  4995  0016F8  6F96               	movwf	efgtoa@ne& (0+255),b
  4996  0016FA                     l389:
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  5000  0016FA  0E00               	movlw	0
  5001  0016FC  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  5002  0016FE  0E00               	movlw	0
  5003  001700  6F92               	movwf	efgtoa@pp& (0+255),b
  5004                           
  5005                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  5006  001702  0E00               	movlw	0
  5007  001704  6F91               	movwf	(efgtoa@t+1)& (0+255),b
  5008  001706  0E00               	movlw	0
  5009  001708  6F90               	movwf	efgtoa@t& (0+255),b
  5010                           
  5011                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  5012  00170A  0E00               	movlw	0
  5013  00170C  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  5014  00170E  0E00               	movlw	0
  5015  001710  6FAA               	movwf	efgtoa@i& (0+255),b
  5016                           
  5017                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i <
      +                           m) && (n < (80 - 5))) {
  5018  001712  D0C7               	goto	l7191
  5019  001714                     l7143:
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 447:         l = flo
      +                          orf(h/u);
  5023  001714  C0A2  F011         	movff	efgtoa@h,___fldiv@b
  5024  001718  C0A3  F012         	movff	efgtoa@h+1,___fldiv@b+1
  5025  00171C  C0A4  F013         	movff	efgtoa@h+2,___fldiv@b+2
  5026  001720  C0A5  F014         	movff	efgtoa@h+3,___fldiv@b+3
  5027  001724  C0B4  F015         	movff	efgtoa@u,___fldiv@a
  5028  001728  C0B5  F016         	movff	efgtoa@u+1,___fldiv@a+1
  5029  00172C  C0B6  F017         	movff	efgtoa@u+2,___fldiv@a+2
  5030  001730  C0B7  F018         	movff	efgtoa@u+3,___fldiv@a+3
  5031  001734  EC57  F016         	call	___fldiv	;wreg free
  5032  001738  C011  F02A         	movff	?___fldiv,floorf@x
  5033  00173C  C012  F02B         	movff	?___fldiv+1,floorf@x+1
  5034  001740  C013  F02C         	movff	?___fldiv+2,floorf@x+2
  5035  001744  C014  F02D         	movff	?___fldiv+3,floorf@x+3
  5036  001748  ECD2  F019         	call	_floorf	;wreg free
  5037  00174C  C02A  F0A6         	movff	?_floorf,efgtoa@l
  5038  001750  C02B  F0A7         	movff	?_floorf+1,efgtoa@l+1
  5039  001754  C02C  F0A8         	movff	?_floorf+2,efgtoa@l+2
  5040  001758  C02D  F0A9         	movff	?_floorf+3,efgtoa@l+3
  5041                           
  5042                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 448:         d = (in
      +                          t)l;
  5043  00175C  C0A6  F011         	movff	efgtoa@l,___fltol@f1
  5044  001760  C0A7  F012         	movff	efgtoa@l+1,___fltol@f1+1
  5045  001764  C0A8  F013         	movff	efgtoa@l+2,___fltol@f1+2
  5046  001768  C0A9  F014         	movff	efgtoa@l+3,___fltol@f1+3
  5047  00176C  ECB7  F01E         	call	___fltol	;wreg free
  5048  001770  C011  F098         	movff	?___fltol,efgtoa@d
  5049  001774  C012  F099         	movff	?___fltol+1,efgtoa@d+1
  5050                           
  5051                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 449:         if (!(f
      +                          lags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5052  001778  B868               	btfsc	_flags,4,c
  5053  00177A  D00D               	goto	l7155
  5054  00177C  0100               	movlb	0	; () banked
  5055  00177E  5198               	movf	efgtoa@d& (0+255),w,b
  5056  001780  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5057  001782  A4D8               	btfss	status,2,c
  5058  001784  D008               	goto	l7155
  5059                           
  5060                           ; BSR set to: 0
  5061  001786  0E67               	movlw	103
  5062  001788  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5063  00178A  B4D8               	btfsc	status,2,c
  5064                           
  5065                           ; BSR set to: 0
  5066  00178C  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5067  00178E  D003               	goto	l7155
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 450:             ++t
      +                          ;
  5071  001790  4B90               	infsnz	efgtoa@t& (0+255),f,b
  5072  001792  2B91               	incf	(efgtoa@t+1)& (0+255),f,b
  5073                           
  5074                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 451:         } else 
      +                          {
  5075  001794  D03A               	goto	l7183
  5076  001796                     l7155:
  5077                           
  5078                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 452:             if 
      +                          (!pp && (ne < 0)) {
  5079  001796  0100               	movlb	0	; () banked
  5080  001798  5192               	movf	efgtoa@pp& (0+255),w,b
  5081  00179A  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5082  00179C  B4D8               	btfsc	status,2,c
  5083                           
  5084                           ; BSR set to: 0
  5085  00179E  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5086  0017A0  D022               	goto	l7175
  5087                           
  5088                           ; BSR set to: 0
  5089                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 453:                
      +                           dbuf[n++] = '.';
  5090  0017A2  0E0C               	movlw	low _dbuf
  5091  0017A4  25B2               	addwf	efgtoa@n& (0+255),w,b
  5092  0017A6  6ED9               	movwf	fsr2l,c
  5093  0017A8  0E01               	movlw	high _dbuf
  5094  0017AA  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5095  0017AC  6EDA               	movwf	fsr2h,c
  5096  0017AE  0E2E               	movlw	46
  5097  0017B0  6EDF               	movwf	indf2,c
  5098                           
  5099                           ; BSR set to: 0
  5100  0017B2  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5101  0017B4  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 454:                
      +                           --w;
  5105  0017B6  079F               	decf	efgtoa@w& (0+255),f,b
  5106  0017B8  A0D8               	btfss	status,0,c
  5107  0017BA  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 455:                
      +                           pp = 1;
  5111  0017BC  0E00               	movlw	0
  5112  0017BE  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  5113  0017C0  0E01               	movlw	1
  5114  0017C2  6F92               	movwf	efgtoa@pp& (0+255),b
  5115  0017C4  D010               	goto	l7175
  5116  0017C6                     l7167:
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 458:                
      +                           dbuf[n++] = '0';
  5120  0017C6  0E0C               	movlw	low _dbuf
  5121  0017C8  25B2               	addwf	efgtoa@n& (0+255),w,b
  5122  0017CA  6ED9               	movwf	fsr2l,c
  5123  0017CC  0E01               	movlw	high _dbuf
  5124  0017CE  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5125  0017D0  6EDA               	movwf	fsr2h,c
  5126  0017D2  0E30               	movlw	48
  5127  0017D4  6EDF               	movwf	indf2,c
  5128                           
  5129                           ; BSR set to: 0
  5130  0017D6  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5131  0017D8  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 459:                
      +                           --w;
  5135  0017DA  079F               	decf	efgtoa@w& (0+255),f,b
  5136  0017DC  A0D8               	btfss	status,0,c
  5137  0017DE  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 460:                
      +                           --t;
  5141  0017E0  0790               	decf	efgtoa@t& (0+255),f,b
  5142  0017E2  A0D8               	btfss	status,0,c
  5143  0017E4  0791               	decf	(efgtoa@t+1)& (0+255),f,b
  5144  0017E6                     l7175:
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 457:             whi
      +                          le (t) {
  5148  0017E6  5190               	movf	efgtoa@t& (0+255),w,b
  5149  0017E8  1191               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5150  0017EA  A4D8               	btfss	status,2,c
  5151  0017EC  D7EC               	goto	l7167
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 462:             dbu
      +                          f[n++] = '0' + d;
  5155  0017EE  0E0C               	movlw	low _dbuf
  5156  0017F0  25B2               	addwf	efgtoa@n& (0+255),w,b
  5157  0017F2  6ED9               	movwf	fsr2l,c
  5158  0017F4  0E01               	movlw	high _dbuf
  5159  0017F6  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5160  0017F8  6EDA               	movwf	fsr2h,c
  5161  0017FA  5198               	movf	efgtoa@d& (0+255),w,b
  5162  0017FC  0F30               	addlw	48
  5163  0017FE  6EDF               	movwf	indf2,c
  5164                           
  5165                           ; BSR set to: 0
  5166  001800  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5167  001802  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5168                           
  5169                           ; BSR set to: 0
  5170                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 463:             --w
      +                          ;
  5171  001804  079F               	decf	efgtoa@w& (0+255),f,b
  5172  001806  A0D8               	btfss	status,0,c
  5173  001808  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5174  00180A                     l7183:
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 465:         h -= l*
      +                          u;
  5178  00180A  C0A2  F02A         	movff	efgtoa@h,___flsub@b
  5179  00180E  C0A3  F02B         	movff	efgtoa@h+1,___flsub@b+1
  5180  001812  C0A4  F02C         	movff	efgtoa@h+2,___flsub@b+2
  5181  001816  C0A5  F02D         	movff	efgtoa@h+3,___flsub@b+3
  5182  00181A  C0B4  F015         	movff	efgtoa@u,___flmul@a
  5183  00181E  C0B5  F016         	movff	efgtoa@u+1,___flmul@a+1
  5184  001822  C0B6  F017         	movff	efgtoa@u+2,___flmul@a+2
  5185  001826  C0B7  F018         	movff	efgtoa@u+3,___flmul@a+3
  5186  00182A  C0A6  F011         	movff	efgtoa@l,___flmul@b
  5187  00182E  C0A7  F012         	movff	efgtoa@l+1,___flmul@b+1
  5188  001832  C0A8  F013         	movff	efgtoa@l+2,___flmul@b+2
  5189  001836  C0A9  F014         	movff	efgtoa@l+3,___flmul@b+3
  5190  00183A  EC1C  F010         	call	___flmul	;wreg free
  5191  00183E  C011  F02E         	movff	?___flmul,___flsub@a
  5192  001842  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  5193  001846  C013  F030         	movff	?___flmul+2,___flsub@a+2
  5194  00184A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  5195  00184E  EC7D  F022         	call	___flsub	;wreg free
  5196  001852  C02A  F0A2         	movff	?___flsub,efgtoa@h
  5197  001856  C02B  F0A3         	movff	?___flsub+1,efgtoa@h+1
  5198  00185A  C02C  F0A4         	movff	?___flsub+2,efgtoa@h+2
  5199  00185E  C02D  F0A5         	movff	?___flsub+3,efgtoa@h+3
  5200                           
  5201                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 466:         u = u/1
      +                          0.0;
  5202  001862  C0B4  F011         	movff	efgtoa@u,___fldiv@b
  5203  001866  C0B5  F012         	movff	efgtoa@u+1,___fldiv@b+1
  5204  00186A  C0B6  F013         	movff	efgtoa@u+2,___fldiv@b+2
  5205  00186E  C0B7  F014         	movff	efgtoa@u+3,___fldiv@b+3
  5206  001872  0E00               	movlw	0
  5207  001874  6E15               	movwf	___fldiv@a,c
  5208  001876  0E00               	movlw	0
  5209  001878  6E16               	movwf	___fldiv@a+1,c
  5210  00187A  0E20               	movlw	32
  5211  00187C  6E17               	movwf	___fldiv@a+2,c
  5212  00187E  0E41               	movlw	65
  5213  001880  6E18               	movwf	___fldiv@a+3,c
  5214  001882  EC57  F016         	call	___fldiv	;wreg free
  5215  001886  C011  F0B4         	movff	?___fldiv,efgtoa@u
  5216  00188A  C012  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  5217  00188E  C013  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  5218  001892  C014  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  5219                           
  5220                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 467:         --ne;
  5221  001896  0100               	movlb	0	; () banked
  5222  001898  0796               	decf	efgtoa@ne& (0+255),f,b
  5223  00189A  A0D8               	btfss	status,0,c
  5224  00189C  0797               	decf	(efgtoa@ne+1)& (0+255),f,b
  5225                           
  5226                           ; BSR set to: 0
  5227                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 468:         ++i;
  5228  00189E  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  5229  0018A0  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  5230  0018A2                     l7191:
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i <
      +                           m) && (n < (80 - 5))) {
  5234  0018A2  5194               	movf	efgtoa@m& (0+255),w,b
  5235  0018A4  5DAA               	subwf	efgtoa@i& (0+255),w,b
  5236  0018A6  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  5237  0018A8  0A80               	xorlw	128
  5238  0018AA  6E45               	movwf	??_efgtoa& (0+255),c
  5239  0018AC  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  5240  0018AE  0A80               	xorlw	128
  5241  0018B0  5845               	subwfb	??_efgtoa& (0+255),w,c
  5242  0018B2  B0D8               	btfsc	status,0,c
  5243  0018B4  D008               	goto	u9650
  5244                           
  5245                           ; BSR set to: 0
  5246  0018B6  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5247  0018B8  D72D               	goto	l7143
  5248  0018BA  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
  5249  0018BC  E104               	bnz	u9650
  5250  0018BE  0E4B               	movlw	75
  5251  0018C0  5DB2               	subwf	efgtoa@n& (0+255),w,b
  5252  0018C2  A0D8               	btfss	status,0,c
  5253  0018C4  D727               	goto	l7143
  5254  0018C6                     u9650:
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 470:     if (!pp && 
      +                          (flags & (1 << 4))) {
  5258  0018C6  5192               	movf	efgtoa@pp& (0+255),w,b
  5259  0018C8  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5260  0018CA  B4D8               	btfsc	status,2,c
  5261                           
  5262                           ; BSR set to: 0
  5263  0018CC  A868               	btfss	_flags,4,c
  5264  0018CE  D00A               	goto	l7203
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 471:         dbuf[n+
      +                          +] = '.';
  5268  0018D0  0E0C               	movlw	low _dbuf
  5269  0018D2  25B2               	addwf	efgtoa@n& (0+255),w,b
  5270  0018D4  6ED9               	movwf	fsr2l,c
  5271  0018D6  0E01               	movlw	high _dbuf
  5272  0018D8  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5273  0018DA  6EDA               	movwf	fsr2h,c
  5274  0018DC  0E2E               	movlw	46
  5275  0018DE  6EDF               	movwf	indf2,c
  5276                           
  5277                           ; BSR set to: 0
  5278  0018E0  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5279  0018E2  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5280  0018E4                     l7203:
  5281                           
  5282                           ; BSR set to: 0
  5283                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '
      +                          \0';
  5284  0018E4  0E0C               	movlw	low _dbuf
  5285  0018E6  25B2               	addwf	efgtoa@n& (0+255),w,b
  5286  0018E8  6ED9               	movwf	fsr2l,c
  5287  0018EA  0E01               	movlw	high _dbuf
  5288  0018EC  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5289  0018EE  6EDA               	movwf	fsr2h,c
  5290  0018F0  0E00               	movlw	0
  5291  0018F2  6EDF               	movwf	indf2,c
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 476:     if (nmode =
      +                          = 'e') {
  5295  0018F4  0E65               	movlw	101
  5296  0018F6  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  5297  0018F8  A4D8               	btfss	status,2,c
  5298  0018FA  D0AD               	goto	l7265
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 477:         i = siz
      +                          eof(dbuf) - 1;
  5302  0018FC  0E00               	movlw	0
  5303  0018FE  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  5304  001900  0E4F               	movlw	79
  5305  001902  6FAA               	movwf	efgtoa@i& (0+255),b
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 478:         dbuf[i]
      +                           = '\0';
  5309  001904  0E0C               	movlw	low _dbuf
  5310  001906  25AA               	addwf	efgtoa@i& (0+255),w,b
  5311  001908  6ED9               	movwf	fsr2l,c
  5312  00190A  0E01               	movlw	high _dbuf
  5313  00190C  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5314  00190E  6EDA               	movwf	fsr2h,c
  5315  001910  0E00               	movlw	0
  5316  001912  6EDF               	movwf	indf2,c
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 479:         sign = 
      +                          0;
  5320  001914  0E00               	movlw	0
  5321  001916  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  5322  001918  0E00               	movlw	0
  5323  00191A  6F9A               	movwf	efgtoa@sign& (0+255),b
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 480:         if (e <
      +                           0) {
  5327  00191C  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  5328  00191E  D008               	goto	l7219
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 481:             sig
      +                          n = 1;
  5332  001920  0E00               	movlw	0
  5333  001922  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  5334  001924  0E01               	movlw	1
  5335  001926  6F9A               	movwf	efgtoa@sign& (0+255),b
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 482:             e =
      +                           -e;
  5339  001928  6DB0               	negf	efgtoa@e& (0+255),b
  5340  00192A  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
  5341  00192C  B0D8               	btfsc	status,0,c
  5342  00192E  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  5343  001930                     l7219:
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  5347  001930  0E00               	movlw	0
  5348  001932  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  5349  001934  0E02               	movlw	2
  5350  001936  6F9C               	movwf	efgtoa@p& (0+255),b
  5351                           
  5352                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (
      +                          e || (0 < p)) {
  5353  001938  D02B               	goto	l7231
  5354  00193A                     l7221:
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 486:             --i
      +                          ;
  5358  00193A  07AA               	decf	efgtoa@i& (0+255),f,b
  5359  00193C  A0D8               	btfss	status,0,c
  5360  00193E  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 487:             dbu
      +                          f[i] = '0' + (e % 10);
  5364  001940  0E0C               	movlw	low _dbuf
  5365  001942  25AA               	addwf	efgtoa@i& (0+255),w,b
  5366  001944  6ED9               	movwf	fsr2l,c
  5367  001946  0E01               	movlw	high _dbuf
  5368  001948  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5369  00194A  6EDA               	movwf	fsr2h,c
  5370  00194C  C0B0  F011         	movff	efgtoa@e,___awmod@dividend
  5371  001950  C0B1  F012         	movff	efgtoa@e+1,___awmod@dividend+1
  5372  001954  0E00               	movlw	0
  5373  001956  6E14               	movwf	___awmod@divisor+1,c
  5374  001958  0E0A               	movlw	10
  5375  00195A  6E13               	movwf	___awmod@divisor,c
  5376  00195C  EC13  F021         	call	___awmod	;wreg free
  5377  001960  5011               	movf	?___awmod,w,c
  5378  001962  0F30               	addlw	48
  5379  001964  6EDF               	movwf	indf2,c
  5380                           
  5381                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 488:             e =
      +                           e / 10;
  5382  001966  C0B0  F011         	movff	efgtoa@e,___awdiv@dividend
  5383  00196A  C0B1  F012         	movff	efgtoa@e+1,___awdiv@dividend+1
  5384  00196E  0E00               	movlw	0
  5385  001970  6E14               	movwf	___awdiv@divisor+1,c
  5386  001972  0E0A               	movlw	10
  5387  001974  6E13               	movwf	___awdiv@divisor,c
  5388  001976  EC90  F020         	call	___awdiv	;wreg free
  5389  00197A  C011  F0B0         	movff	?___awdiv,efgtoa@e
  5390  00197E  C012  F0B1         	movff	?___awdiv+1,efgtoa@e+1
  5391                           
  5392                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 489:             --p
      +                          ;
  5393  001982  0100               	movlb	0	; () banked
  5394  001984  079C               	decf	efgtoa@p& (0+255),f,b
  5395  001986  A0D8               	btfss	status,0,c
  5396  001988  079D               	decf	(efgtoa@p+1)& (0+255),f,b
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 490:             --w
      +                          ;
  5400  00198A  079F               	decf	efgtoa@w& (0+255),f,b
  5401  00198C  A0D8               	btfss	status,0,c
  5402  00198E  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5403  001990                     l7231:
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (
      +                          e || (0 < p)) {
  5407  001990  51B0               	movf	efgtoa@e& (0+255),w,b
  5408  001992  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5409  001994  A4D8               	btfss	status,2,c
  5410  001996  D7D1               	goto	l7221
  5411                           
  5412                           ; BSR set to: 0
  5413  001998  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5414  00199A  D005               	goto	u9710
  5415  00199C  519D               	movf	(efgtoa@p+1)& (0+255),w,b
  5416  00199E  E1CD               	bnz	l7221
  5417  0019A0  059C               	decf	efgtoa@p& (0+255),w,b
  5418  0019A2  B0D8               	btfsc	status,0,c
  5419  0019A4  D7CA               	goto	l7221
  5420  0019A6                     u9710:
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 492:         --i;
  5424  0019A6  07AA               	decf	efgtoa@i& (0+255),f,b
  5425  0019A8  A0D8               	btfss	status,0,c
  5426  0019AA  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  5427                           
  5428                           ; BSR set to: 0
  5429                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 493:         dbuf[i]
      +                           = sign ? '-' : '+';
  5430  0019AC  519A               	movf	efgtoa@sign& (0+255),w,b
  5431  0019AE  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5432  0019B0  A4D8               	btfss	status,2,c
  5433  0019B2  D004               	goto	l7241
  5434                           
  5435                           ; BSR set to: 0
  5436  0019B4  0E00               	movlw	0
  5437  0019B6  6F8B               	movwf	(_efgtoa$891+1)& (0+255),b
  5438  0019B8  0E2B               	movlw	43
  5439  0019BA  D003               	goto	L6
  5440  0019BC                     l7241:
  5441                           
  5442                           ; BSR set to: 0
  5443  0019BC  0E00               	movlw	0
  5444  0019BE  6F8B               	movwf	(_efgtoa$891+1)& (0+255),b
  5445  0019C0  0E2D               	movlw	45
  5446  0019C2                     L6:
  5447  0019C2  6F8A               	movwf	_efgtoa$891& (0+255),b
  5448                           
  5449                           ; BSR set to: 0
  5450  0019C4  0E0C               	movlw	low _dbuf
  5451  0019C6  25AA               	addwf	efgtoa@i& (0+255),w,b
  5452  0019C8  6ED9               	movwf	fsr2l,c
  5453  0019CA  0E01               	movlw	high _dbuf
  5454  0019CC  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5455  0019CE  6EDA               	movwf	fsr2h,c
  5456  0019D0  C08A  FFDF         	movff	_efgtoa$891,indf2
  5457                           
  5458                           ; BSR set to: 0
  5459                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 494:         --w;
  5460  0019D4  079F               	decf	efgtoa@w& (0+255),f,b
  5461  0019D6  A0D8               	btfss	status,0,c
  5462  0019D8  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 496:         dbuf[i]
      +                           = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5466  0019DA  07AA               	decf	efgtoa@i& (0+255),f,b
  5467  0019DC  A0D8               	btfss	status,0,c
  5468  0019DE  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  5469                           
  5470                           ; BSR set to: 0
  5471  0019E0  0EBF               	movlw	191
  5472  0019E2  6E45               	movwf	??_efgtoa& (0+255),c
  5473  0019E4  0EFF               	movlw	255
  5474  0019E6  6E46               	movwf	(??_efgtoa+1)& (0+255),c
  5475  0019E8  5044               	movf	efgtoa@c,w,c
  5476  0019EA  6E47               	movwf	(??_efgtoa+2)& (0+255),c
  5477  0019EC  6A48               	clrf	(??_efgtoa+3)& (0+255),c
  5478  0019EE  5045               	movf	??_efgtoa,w,c
  5479  0019F0  2647               	addwf	??_efgtoa+2,f,c
  5480  0019F2  5046               	movf	??_efgtoa+1,w,c
  5481  0019F4  2248               	addwfc	??_efgtoa+3,f,c
  5482  0019F6  5048               	movf	??_efgtoa+3,w,c
  5483  0019F8  E106               	bnz	u9730
  5484  0019FA  0E1A               	movlw	26
  5485  0019FC  5C47               	subwf	??_efgtoa+2,w,c
  5486  0019FE  B0D8               	btfsc	status,0,c
  5487  001A00  D002               	goto	u9730
  5488  001A02  0E01               	movlw	1
  5489  001A04  D001               	goto	u9740
  5490  001A06                     u9730:
  5491  001A06  0E00               	movlw	0
  5492  001A08                     u9740:
  5493  001A08  6F8E               	movwf	_efgtoa$893& (0+255),b
  5494  001A0A  6B8F               	clrf	(_efgtoa$893+1)& (0+255),b
  5495                           
  5496                           ; BSR set to: 0
  5497  001A0C  518E               	movf	_efgtoa$893& (0+255),w,b
  5498  001A0E  118F               	iorwf	(_efgtoa$893+1)& (0+255),w,b
  5499  001A10  A4D8               	btfss	status,2,c
  5500  001A12  D004               	goto	l7257
  5501                           
  5502                           ; BSR set to: 0
  5503  001A14  0E00               	movlw	0
  5504  001A16  6F8D               	movwf	(_efgtoa$892+1)& (0+255),b
  5505  001A18  0E65               	movlw	101
  5506  001A1A  D003               	goto	L7
  5507  001A1C                     l7257:
  5508                           
  5509                           ; BSR set to: 0
  5510  001A1C  0E00               	movlw	0
  5511  001A1E  6F8D               	movwf	(_efgtoa$892+1)& (0+255),b
  5512  001A20  0E45               	movlw	69
  5513  001A22                     L7:
  5514  001A22  6F8C               	movwf	_efgtoa$892& (0+255),b
  5515                           
  5516                           ; BSR set to: 0
  5517  001A24  0E0C               	movlw	low _dbuf
  5518  001A26  25AA               	addwf	efgtoa@i& (0+255),w,b
  5519  001A28  6ED9               	movwf	fsr2l,c
  5520  001A2A  0E01               	movlw	high _dbuf
  5521  001A2C  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5522  001A2E  6EDA               	movwf	fsr2h,c
  5523  001A30  C08C  FFDF         	movff	_efgtoa$892,indf2
  5524                           
  5525                           ; BSR set to: 0
  5526                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 497:         --w;
  5527  001A34  079F               	decf	efgtoa@w& (0+255),f,b
  5528  001A36  A0D8               	btfss	status,0,c
  5529  001A38  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 498:         strcpy(
      +                          &dbuf[n], &dbuf[i]);
  5533  001A3A  0E0C               	movlw	low _dbuf
  5534  001A3C  25B2               	addwf	efgtoa@n& (0+255),w,b
  5535  001A3E  6E11               	movwf	strcpy@dest,c
  5536  001A40  0E01               	movlw	high _dbuf
  5537  001A42  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5538  001A44  6E12               	movwf	strcpy@dest+1,c
  5539  001A46  0E0C               	movlw	low _dbuf
  5540  001A48  25AA               	addwf	efgtoa@i& (0+255),w,b
  5541  001A4A  6E13               	movwf	strcpy@src,c
  5542  001A4C  0E01               	movlw	high _dbuf
  5543  001A4E  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5544  001A50  6E14               	movwf	strcpy@src+1,c
  5545  001A52  EC08  F022         	call	_strcpy	;wreg free
  5546  001A56                     l7265:
  5547                           
  5548                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 502:     return pad(
      +                          fp, &dbuf[0], w);
  5549  001A56  C03E  F024         	movff	efgtoa@fp,pad@fp
  5550  001A5A  C03F  F025         	movff	efgtoa@fp+1,pad@fp+1
  5551  001A5E  0E0C               	movlw	low _dbuf
  5552  001A60  6E26               	movwf	pad@buf,c
  5553  001A62  0E01               	movlw	high _dbuf
  5554  001A64  6E27               	movwf	pad@buf+1,c
  5555  001A66  C09F  F028         	movff	efgtoa@w,pad@p
  5556  001A6A  C0A0  F029         	movff	efgtoa@w+1,pad@p+1
  5557  001A6E  ECB7  F01F         	call	_pad	;wreg free
  5558  001A72  C024  F03E         	movff	?_pad,?_efgtoa
  5559  001A76  C025  F03F         	movff	?_pad+1,?_efgtoa+1
  5560  001A7A  0012               	return		;funcret
  5561  001A7C                     __end_of_efgtoa:
  5562                           	opt callstack 0
  5563                           
  5564 ;; *************** function _tolower *****************
  5565 ;; Defined at:
  5566 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/tolower.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;  c               2   22[COMRAM] int 
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;		None
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  2   22[COMRAM] int 
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, status,0
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5582 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5583 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5584 ;;Total ram usage:        8 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:    3
  5587 ;; This function calls:
  5588 ;;		_isupper
  5589 ;; This function is called by:
  5590 ;;		_efgtoa
  5591 ;;		_vfpfcnvrt
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text12
  5596  004464                     __ptext12:
  5597                           	opt callstack 0
  5598  004464                     _tolower:
  5599                           	opt callstack 24
  5600                           
  5601                           ;incstack = 0
  5602  004464  0EBF               	movlw	191
  5603  004466  6E19               	movwf	??_tolower& (0+255),c
  5604  004468  0EFF               	movlw	255
  5605  00446A  6E1A               	movwf	(??_tolower+1)& (0+255),c
  5606  00446C  C017  F01B         	movff	tolower@c,??_tolower+2
  5607  004470  C018  F01C         	movff	tolower@c+1,??_tolower+3
  5608  004474  5019               	movf	??_tolower,w,c
  5609  004476  261B               	addwf	??_tolower+2,f,c
  5610  004478  501A               	movf	??_tolower+1,w,c
  5611  00447A  221C               	addwfc	??_tolower+3,f,c
  5612  00447C  501C               	movf	??_tolower+3,w,c
  5613  00447E  E106               	bnz	u8040
  5614  004480  0E1A               	movlw	26
  5615  004482  5C1B               	subwf	??_tolower+2,w,c
  5616  004484  B0D8               	btfsc	status,0,c
  5617  004486  D002               	goto	u8040
  5618  004488  0E01               	movlw	1
  5619  00448A  D001               	goto	u8050
  5620  00448C                     u8040:
  5621  00448C  0E00               	movlw	0
  5622  00448E                     u8050:
  5623  00448E  6E1D               	movwf	_tolower$1511,c
  5624  004490  6A1E               	clrf	_tolower$1511+1,c
  5625  004492  501D               	movf	_tolower$1511,w,c
  5626  004494  101E               	iorwf	_tolower$1511+1,w,c
  5627  004496  B4D8               	btfsc	status,2,c
  5628  004498  D006               	goto	l1312
  5629  00449A  0E20               	movlw	32
  5630  00449C  1017               	iorwf	tolower@c,w,c
  5631  00449E  6E17               	movwf	?_tolower,c
  5632  0044A0  5018               	movf	tolower@c+1,w,c
  5633  0044A2  6E18               	movwf	?_tolower+1,c
  5634  0044A4  0012               	return	
  5635  0044A6                     l1312:
  5636  0044A6  C017  F017         	movff	tolower@c,?_tolower
  5637  0044AA  C018  F018         	movff	tolower@c+1,?_tolower+1
  5638  0044AE  0012               	return		;funcret
  5639  0044B0                     __end_of_tolower:
  5640                           	opt callstack 0
  5641                           
  5642 ;; *************** function _isupper *****************
  5643 ;; Defined at:
  5644 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  c               2   16[COMRAM] int 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;		None
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  2   16[COMRAM] int 
  5651 ;; Registers used:
  5652 ;;		wreg, status,2, status,0
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5660 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5661 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;Total ram usage:        6 bytes
  5663 ;; Hardware stack levels used:    1
  5664 ;; Hardware stack levels required when called:    2
  5665 ;; This function calls:
  5666 ;;		Nothing
  5667 ;; This function is called by:
  5668 ;;		_efgtoa
  5669 ;;		_xtoa
  5670 ;;		_vfpfcnvrt
  5671 ;;		_tolower
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text13
  5676  004692                     __ptext13:
  5677                           	opt callstack 0
  5678  004692                     _isupper:
  5679                           	opt callstack 24
  5680                           
  5681                           ;incstack = 0
  5682  004692  0EBF               	movlw	191
  5683  004694  6E13               	movwf	??_isupper& (0+255),c
  5684  004696  0EFF               	movlw	255
  5685  004698  6E14               	movwf	(??_isupper+1)& (0+255),c
  5686  00469A  C011  F015         	movff	isupper@c,??_isupper+2
  5687  00469E  C012  F016         	movff	isupper@c+1,??_isupper+3
  5688  0046A2  5013               	movf	??_isupper,w,c
  5689  0046A4  2615               	addwf	??_isupper+2,f,c
  5690  0046A6  5014               	movf	??_isupper+1,w,c
  5691  0046A8  2216               	addwfc	??_isupper+3,f,c
  5692  0046AA  5016               	movf	??_isupper+3,w,c
  5693  0046AC  E106               	bnz	u7470
  5694  0046AE  0E1A               	movlw	26
  5695  0046B0  5C15               	subwf	??_isupper+2,w,c
  5696  0046B2  B0D8               	btfsc	status,0,c
  5697  0046B4  D002               	goto	u7470
  5698  0046B6  0E01               	movlw	1
  5699  0046B8  D001               	goto	u7480
  5700  0046BA                     u7470:
  5701  0046BA  0E00               	movlw	0
  5702  0046BC                     u7480:
  5703  0046BC  6E11               	movwf	?_isupper,c
  5704  0046BE  6A12               	clrf	?_isupper+1,c
  5705  0046C0  0012               	return		;funcret
  5706  0046C2                     __end_of_isupper:
  5707                           	opt callstack 0
  5708                           
  5709 ;; *************** function _strcpy *****************
  5710 ;; Defined at:
  5711 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strcpy.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;  dest            2   16[COMRAM] PTR unsigned char 
  5714 ;;		 -> dbuf(80), 
  5715 ;;  src             2   18[COMRAM] PTR const unsigned char 
  5716 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  5717 ;;		 -> dbuf(80), 
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;  d               2   24[COMRAM] PTR unsigned char 
  5720 ;;		 -> dbuf(80), 
  5721 ;;  s               2   22[COMRAM] PTR const unsigned char 
  5722 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  5723 ;;		 -> dbuf(80), 
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  2   16[COMRAM] PTR unsigned char 
  5726 ;; Registers used:
  5727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5733 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5734 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5735 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5736 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5737 ;;Total ram usage:       10 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:    2
  5740 ;; This function calls:
  5741 ;;		Nothing
  5742 ;; This function is called by:
  5743 ;;		_efgtoa
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text14
  5748  004410                     __ptext14:
  5749                           	opt callstack 0
  5750  004410                     _strcpy:
  5751                           	opt callstack 24
  5752                           
  5753                           ;incstack = 0
  5754  004410  C013  F017         	movff	strcpy@src,strcpy@s
  5755  004414  C014  F018         	movff	strcpy@src+1,strcpy@s+1
  5756  004418  C011  F019         	movff	strcpy@dest,strcpy@d
  5757  00441C  C012  F01A         	movff	strcpy@dest+1,strcpy@d+1
  5758  004420                     l6309:
  5759  004420  5017               	movf	strcpy@s,w,c
  5760  004422  6E15               	movwf	??_strcpy& (0+255),c
  5761  004424  5018               	movf	strcpy@s+1,w,c
  5762  004426  6E16               	movwf	(??_strcpy+1)& (0+255),c
  5763  004428  4A17               	infsnz	strcpy@s,f,c
  5764  00442A  2A18               	incf	strcpy@s+1,f,c
  5765  00442C  C015  FFF6         	movff	??_strcpy,tblptrl
  5766  004430  C016  FFF7         	movff	??_strcpy+1,tblptrh
  5767  004434  0E00               	movlw	low (__smallconst shr (0+16))
  5768  004436  6EF8               	movwf	tblptru,c
  5769  004438  C019  FFD9         	movff	strcpy@d,fsr2l
  5770  00443C  C01A  FFDA         	movff	strcpy@d+1,fsr2h
  5771  004440  4A19               	infsnz	strcpy@d,f,c
  5772  004442  2A1A               	incf	strcpy@d+1,f,c
  5773  004444  0E0F               	movlw	(high __ramtop+-1)
  5774  004446  64F7               	cpfsgt	tblptrh,c
  5775  004448  D003               	bra	u8027
  5776  00444A  0008               	tblrd		*
  5777  00444C  50F5               	movf	tablat,w,c
  5778  00444E  D005               	bra	u8020
  5779  004450                     u8027:
  5780  004450  CFF6 FFE1          	movff	tblptrl,fsr1l
  5781  004454  CFF7 FFE2          	movff	tblptrh,fsr1h
  5782  004458  50E7               	movf	indf1,w,c
  5783  00445A                     u8020:
  5784  00445A  6EDF               	movwf	indf2,c
  5785  00445C  50DF               	movf	indf2,w,c
  5786  00445E  B4D8               	btfsc	status,2,c
  5787  004460  0012               	return	
  5788  004462  D7DE               	goto	l6309
  5789  004464                     __end_of_strcpy:
  5790                           	opt callstack 0
  5791                           
  5792 ;; *************** function _floorf *****************
  5793 ;; Defined at:
  5794 ;;		line 3 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/floorf.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;  x               4   41[COMRAM] float 
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;  u               4   57[COMRAM] struct .
  5799 ;;  m               4   51[COMRAM] unsigned long 
  5800 ;;  e               2   55[COMRAM] int 
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  4   41[COMRAM] float 
  5803 ;; Registers used:
  5804 ;;		wreg, status,2, status,0
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5810 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5811 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5812 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5813 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5814 ;;Total ram usage:       20 bytes
  5815 ;; Hardware stack levels used:    1
  5816 ;; Hardware stack levels required when called:    2
  5817 ;; This function calls:
  5818 ;;		Nothing
  5819 ;; This function is called by:
  5820 ;;		_efgtoa
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           	psect	text15
  5825  0033A4                     __ptext15:
  5826                           	opt callstack 0
  5827  0033A4                     _floorf:
  5828                           	opt callstack 24
  5829                           
  5830                           ;incstack = 0
  5831  0033A4  C05C  F03A         	movff	floorf@F524,floorf@u
  5832  0033A8  C05D  F03B         	movff	floorf@F524+1,floorf@u+1
  5833  0033AC  C05E  F03C         	movff	floorf@F524+2,floorf@u+2
  5834  0033B0  C05F  F03D         	movff	floorf@F524+3,floorf@u+3
  5835  0033B4  C02A  F03A         	movff	floorf@x,floorf@u
  5836  0033B8  C02B  F03B         	movff	floorf@x+1,floorf@u+1
  5837  0033BC  C02C  F03C         	movff	floorf@x+2,floorf@u+2
  5838  0033C0  C02D  F03D         	movff	floorf@x+3,floorf@u+3
  5839  0033C4  0E81               	movlw	129
  5840  0033C6  6E2E               	movwf	??_floorf& (0+255),c
  5841  0033C8  0EFF               	movlw	255
  5842  0033CA  6E2F               	movwf	(??_floorf+1)& (0+255),c
  5843  0033CC  C03A  F030         	movff	floorf@u,??_floorf+2
  5844  0033D0  C03B  F031         	movff	floorf@u+1,??_floorf+3
  5845  0033D4  C03C  F032         	movff	floorf@u+2,??_floorf+4
  5846  0033D8  C03D  F033         	movff	floorf@u+3,??_floorf+5
  5847  0033DC  0E18               	movlw	24
  5848  0033DE  D005               	goto	u8070
  5849  0033E0                     u8075:
  5850  0033E0  90D8               	bcf	status,0,c
  5851  0033E2  3233               	rrcf	??_floorf+5,f,c
  5852  0033E4  3232               	rrcf	??_floorf+4,f,c
  5853  0033E6  3231               	rrcf	??_floorf+3,f,c
  5854  0033E8  3230               	rrcf	??_floorf+2,f,c
  5855  0033EA                     u8070:
  5856  0033EA  2EE8               	decfsz	wreg,f,c
  5857  0033EC  D7F9               	goto	u8075
  5858  0033EE  5030               	movf	??_floorf+2,w,c
  5859  0033F0  242E               	addwf	??_floorf,w,c
  5860  0033F2  6E38               	movwf	floorf@e,c
  5861  0033F4  0E00               	movlw	0
  5862  0033F6  202F               	addwfc	??_floorf+1,w,c
  5863  0033F8  6E39               	movwf	floorf@e+1,c
  5864  0033FA  BE39               	btfsc	floorf@e+1,7,c
  5865  0033FC  D00F               	goto	l6327
  5866  0033FE  5039               	movf	floorf@e+1,w,c
  5867  003400  E104               	bnz	u8080
  5868  003402  0E17               	movlw	23
  5869  003404  5C38               	subwf	floorf@e,w,c
  5870  003406  A0D8               	btfss	status,0,c
  5871  003408  D009               	goto	l6327
  5872  00340A                     u8080:
  5873  00340A  C02A  F02A         	movff	floorf@x,?_floorf
  5874  00340E  C02B  F02B         	movff	floorf@x+1,?_floorf+1
  5875  003412  C02C  F02C         	movff	floorf@x+2,?_floorf+2
  5876  003416  C02D  F02D         	movff	floorf@x+3,?_floorf+3
  5877  00341A  0012               	return	
  5878  00341C                     l6327:
  5879  00341C  BE39               	btfsc	floorf@e+1,7,c
  5880  00341E  D05E               	goto	l6337
  5881  003420  C038  F02E         	movff	floorf@e,??_floorf
  5882  003424  0EFF               	movlw	255
  5883  003426  6E2F               	movwf	(??_floorf+1)& (0+255),c
  5884  003428  0EFF               	movlw	255
  5885  00342A  6E30               	movwf	(??_floorf+2)& (0+255),c
  5886  00342C  0E7F               	movlw	127
  5887  00342E  6E31               	movwf	(??_floorf+3)& (0+255),c
  5888  003430  0E00               	movlw	0
  5889  003432  6E32               	movwf	(??_floorf+4)& (0+255),c
  5890  003434                     u8105:
  5891  003434  662E               	tstfsz	??_floorf,c
  5892  003436  D001               	goto	u8106
  5893  003438  D007               	goto	u8107
  5894  00343A                     u8106:
  5895  00343A  3432               	rlcf	??_floorf+4,w,c
  5896  00343C  3232               	rrcf	??_floorf+4,f,c
  5897  00343E  3231               	rrcf	??_floorf+3,f,c
  5898  003440  3230               	rrcf	??_floorf+2,f,c
  5899  003442  322F               	rrcf	??_floorf+1,f,c
  5900  003444  2E2E               	decfsz	??_floorf,f,c
  5901  003446  D7F6               	goto	u8105
  5902  003448                     u8107:
  5903  003448  C02F  F034         	movff	??_floorf+1,floorf@m
  5904  00344C  C030  F035         	movff	??_floorf+2,floorf@m+1
  5905  003450  C031  F036         	movff	??_floorf+3,floorf@m+2
  5906  003454  C032  F037         	movff	??_floorf+4,floorf@m+3
  5907  003458  5034               	movf	floorf@m,w,c
  5908  00345A  143A               	andwf	floorf@u,w,c
  5909  00345C  6E2E               	movwf	??_floorf& (0+255),c
  5910  00345E  5035               	movf	floorf@m+1,w,c
  5911  003460  143B               	andwf	floorf@u+1,w,c
  5912  003462  6E2F               	movwf	(??_floorf+1)& (0+255),c
  5913  003464  5036               	movf	floorf@m+2,w,c
  5914  003466  143C               	andwf	floorf@u+2,w,c
  5915  003468  6E30               	movwf	(??_floorf+2)& (0+255),c
  5916  00346A  5037               	movf	floorf@m+3,w,c
  5917  00346C  143D               	andwf	floorf@u+3,w,c
  5918  00346E  6E31               	movwf	(??_floorf+3)& (0+255),c
  5919  003470  502E               	movf	??_floorf,w,c
  5920  003472  102F               	iorwf	??_floorf+1,w,c
  5921  003474  1030               	iorwf	??_floorf+2,w,c
  5922  003476  1031               	iorwf	??_floorf+3,w,c
  5923  003478  B4D8               	btfsc	status,2,c
  5924  00347A  D7C7               	goto	u8080
  5925  00347C  C03A  F02E         	movff	floorf@u,??_floorf
  5926  003480  C03B  F02F         	movff	floorf@u+1,??_floorf+1
  5927  003484  C03C  F030         	movff	floorf@u+2,??_floorf+2
  5928  003488  C03D  F031         	movff	floorf@u+3,??_floorf+3
  5929  00348C  0E20               	movlw	32
  5930  00348E  D005               	goto	u8120
  5931  003490                     u8125:
  5932  003490  90D8               	bcf	status,0,c
  5933  003492  3231               	rrcf	??_floorf+3,f,c
  5934  003494  3230               	rrcf	??_floorf+2,f,c
  5935  003496  322F               	rrcf	??_floorf+1,f,c
  5936  003498  322E               	rrcf	??_floorf,f,c
  5937  00349A                     u8120:
  5938  00349A  2EE8               	decfsz	wreg,f,c
  5939  00349C  D7F9               	goto	u8125
  5940  00349E  502E               	movf	??_floorf,w,c
  5941  0034A0  102F               	iorwf	??_floorf+1,w,c
  5942  0034A2  1030               	iorwf	??_floorf+2,w,c
  5943  0034A4  1031               	iorwf	??_floorf+3,w,c
  5944  0034A6  B4D8               	btfsc	status,2,c
  5945  0034A8  D008               	goto	l1229
  5946  0034AA  5034               	movf	floorf@m,w,c
  5947  0034AC  263A               	addwf	floorf@u,f,c
  5948  0034AE  5035               	movf	floorf@m+1,w,c
  5949  0034B0  223B               	addwfc	floorf@u+1,f,c
  5950  0034B2  5036               	movf	floorf@m+2,w,c
  5951  0034B4  223C               	addwfc	floorf@u+2,f,c
  5952  0034B6  5037               	movf	floorf@m+3,w,c
  5953  0034B8  223D               	addwfc	floorf@u+3,f,c
  5954  0034BA                     l1229:
  5955  0034BA  1C34               	comf	floorf@m,w,c
  5956  0034BC  6E2E               	movwf	??_floorf& (0+255),c
  5957  0034BE  1C35               	comf	floorf@m+1,w,c
  5958  0034C0  6E2F               	movwf	(??_floorf+1)& (0+255),c
  5959  0034C2  1C36               	comf	floorf@m+2,w,c
  5960  0034C4  6E30               	movwf	(??_floorf+2)& (0+255),c
  5961  0034C6  1C37               	comf	floorf@m+3,w,c
  5962  0034C8  6E31               	movwf	(??_floorf+3)& (0+255),c
  5963  0034CA  502E               	movf	??_floorf,w,c
  5964  0034CC  163A               	andwf	floorf@u,f,c
  5965  0034CE  502F               	movf	??_floorf+1,w,c
  5966  0034D0  163B               	andwf	floorf@u+1,f,c
  5967  0034D2  5030               	movf	??_floorf+2,w,c
  5968  0034D4  163C               	andwf	floorf@u+2,f,c
  5969  0034D6  5031               	movf	??_floorf+3,w,c
  5970  0034D8  163D               	andwf	floorf@u+3,f,c
  5971  0034DA  D036               	goto	l6345
  5972  0034DC                     l6337:
  5973  0034DC  C03A  F02E         	movff	floorf@u,??_floorf
  5974  0034E0  C03B  F02F         	movff	floorf@u+1,??_floorf+1
  5975  0034E4  C03C  F030         	movff	floorf@u+2,??_floorf+2
  5976  0034E8  C03D  F031         	movff	floorf@u+3,??_floorf+3
  5977  0034EC  0E20               	movlw	32
  5978  0034EE  D005               	goto	u8140
  5979  0034F0                     u8145:
  5980  0034F0  90D8               	bcf	status,0,c
  5981  0034F2  3231               	rrcf	??_floorf+3,f,c
  5982  0034F4  3230               	rrcf	??_floorf+2,f,c
  5983  0034F6  322F               	rrcf	??_floorf+1,f,c
  5984  0034F8  322E               	rrcf	??_floorf,f,c
  5985  0034FA                     u8140:
  5986  0034FA  2EE8               	decfsz	wreg,f,c
  5987  0034FC  D7F9               	goto	u8145
  5988  0034FE  502E               	movf	??_floorf,w,c
  5989  003500  102F               	iorwf	??_floorf+1,w,c
  5990  003502  1030               	iorwf	??_floorf+2,w,c
  5991  003504  1031               	iorwf	??_floorf+3,w,c
  5992  003506  A4D8               	btfss	status,2,c
  5993  003508  D008               	goto	l6341
  5994  00350A  0E00               	movlw	0
  5995  00350C  6E3A               	movwf	floorf@u,c
  5996  00350E  0E00               	movlw	0
  5997  003510  6E3B               	movwf	floorf@u+1,c
  5998  003512  0E00               	movlw	0
  5999  003514  6E3C               	movwf	floorf@u+2,c
  6000  003516  0E00               	movlw	0
  6001  003518  D016               	goto	L8
  6002  00351A                     l6341:
  6003  00351A  90D8               	bcf	status,0,c
  6004  00351C  343A               	rlcf	floorf@u,w,c
  6005  00351E  6E2E               	movwf	??_floorf& (0+255),c
  6006  003520  343B               	rlcf	floorf@u+1,w,c
  6007  003522  6E2F               	movwf	(??_floorf+1)& (0+255),c
  6008  003524  343C               	rlcf	floorf@u+2,w,c
  6009  003526  6E30               	movwf	(??_floorf+2)& (0+255),c
  6010  003528  343D               	rlcf	floorf@u+3,w,c
  6011  00352A  6E31               	movwf	(??_floorf+3)& (0+255),c
  6012  00352C  502E               	movf	??_floorf,w,c
  6013  00352E  102F               	iorwf	??_floorf+1,w,c
  6014  003530  1030               	iorwf	??_floorf+2,w,c
  6015  003532  1031               	iorwf	??_floorf+3,w,c
  6016  003534  B4D8               	btfsc	status,2,c
  6017  003536  D008               	goto	l6345
  6018  003538  0E00               	movlw	0
  6019  00353A  6E3A               	movwf	floorf@u,c
  6020  00353C  0E00               	movlw	0
  6021  00353E  6E3B               	movwf	floorf@u+1,c
  6022  003540  0E80               	movlw	128
  6023  003542  6E3C               	movwf	floorf@u+2,c
  6024  003544  0EBF               	movlw	191
  6025  003546                     L8:
  6026  003546  6E3D               	movwf	floorf@u+3,c
  6027  003548                     l6345:
  6028  003548  C03A  F02A         	movff	floorf@u,?_floorf
  6029  00354C  C03B  F02B         	movff	floorf@u+1,?_floorf+1
  6030  003550  C03C  F02C         	movff	floorf@u+2,?_floorf+2
  6031  003554  C03D  F02D         	movff	floorf@u+3,?_floorf+3
  6032  003558  0012               	return		;funcret
  6033  00355A                     __end_of_floorf:
  6034                           	opt callstack 0
  6035                           
  6036 ;; *************** function ___fpclassifyf *****************
  6037 ;; Defined at:
  6038 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/__fpclassifyf.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  x               4   16[COMRAM] float 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  u               4   26[COMRAM] struct .
  6043 ;;  e               2   24[COMRAM] int 
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  2   16[COMRAM] int 
  6046 ;; Registers used:
  6047 ;;		wreg, status,2, status,0
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6053 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6054 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6055 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6056 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;Total ram usage:       14 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    2
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_efgtoa
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           	psect	text16
  6068  003BD6                     __ptext16:
  6069                           	opt callstack 0
  6070  003BD6                     ___fpclassifyf:
  6071                           	opt callstack 24
  6072                           
  6073                           ;incstack = 0
  6074  003BD6  C060  F01B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6075  003BDA  C061  F01C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6076  003BDE  C062  F01D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6077  003BE2  C063  F01E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6078  003BE6  C011  F01B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6079  003BEA  C012  F01C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6080  003BEE  C013  F01D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6081  003BF2  C014  F01E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6082  003BF6  C01B  F015         	movff	___fpclassifyf@u,??___fpclassifyf
  6083  003BFA  C01C  F016         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6084  003BFE  C01D  F017         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6085  003C02  C01E  F018         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6086  003C06  0E18               	movlw	24
  6087  003C08  D005               	goto	u7950
  6088  003C0A                     u7955:
  6089  003C0A  90D8               	bcf	status,0,c
  6090  003C0C  3218               	rrcf	??___fpclassifyf+3,f,c
  6091  003C0E  3217               	rrcf	??___fpclassifyf+2,f,c
  6092  003C10  3216               	rrcf	??___fpclassifyf+1,f,c
  6093  003C12  3215               	rrcf	??___fpclassifyf,f,c
  6094  003C14                     u7950:
  6095  003C14  2EE8               	decfsz	wreg,f,c
  6096  003C16  D7F9               	goto	u7955
  6097  003C18  5015               	movf	??___fpclassifyf,w,c
  6098  003C1A  6E19               	movwf	___fpclassifyf@e,c
  6099  003C1C  6A1A               	clrf	___fpclassifyf@e+1,c
  6100  003C1E  5019               	movf	___fpclassifyf@e,w,c
  6101  003C20  101A               	iorwf	___fpclassifyf@e+1,w,c
  6102  003C22  A4D8               	btfss	status,2,c
  6103  003C24  D019               	goto	l6297
  6104  003C26  90D8               	bcf	status,0,c
  6105  003C28  341B               	rlcf	___fpclassifyf@u,w,c
  6106  003C2A  6E15               	movwf	??___fpclassifyf& (0+255),c
  6107  003C2C  341C               	rlcf	___fpclassifyf@u+1,w,c
  6108  003C2E  6E16               	movwf	(??___fpclassifyf+1)& (0+255),c
  6109  003C30  341D               	rlcf	___fpclassifyf@u+2,w,c
  6110  003C32  6E17               	movwf	(??___fpclassifyf+2)& (0+255),c
  6111  003C34  341E               	rlcf	___fpclassifyf@u+3,w,c
  6112  003C36  6E18               	movwf	(??___fpclassifyf+3)& (0+255),c
  6113  003C38  5015               	movf	??___fpclassifyf,w,c
  6114  003C3A  1016               	iorwf	??___fpclassifyf+1,w,c
  6115  003C3C  1017               	iorwf	??___fpclassifyf+2,w,c
  6116  003C3E  1018               	iorwf	??___fpclassifyf+3,w,c
  6117  003C40  A4D8               	btfss	status,2,c
  6118  003C42  D005               	goto	l6293
  6119  003C44  0E00               	movlw	0
  6120  003C46  6E12               	movwf	?___fpclassifyf+1,c
  6121  003C48  0E02               	movlw	2
  6122  003C4A  6E11               	movwf	?___fpclassifyf,c
  6123  003C4C  0012               	return	
  6124  003C4E                     l6293:
  6125  003C4E  0E00               	movlw	0
  6126  003C50  6E12               	movwf	?___fpclassifyf+1,c
  6127  003C52  0E03               	movlw	3
  6128  003C54  6E11               	movwf	?___fpclassifyf,c
  6129  003C56  0012               	return	
  6130  003C58                     l6297:
  6131  003C58  2819               	incf	___fpclassifyf@e,w,c
  6132  003C5A  101A               	iorwf	___fpclassifyf@e+1,w,c
  6133  003C5C  A4D8               	btfss	status,2,c
  6134  003C5E  D01C               	goto	l6303
  6135  003C60  C01B  F015         	movff	___fpclassifyf@u,??___fpclassifyf
  6136  003C64  C01C  F016         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6137  003C68  C01D  F017         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6138  003C6C  C01E  F018         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6139  003C70  0E09               	movlw	9
  6140  003C72                     u7995:
  6141  003C72  90D8               	bcf	status,0,c
  6142  003C74  3615               	rlcf	??___fpclassifyf,f,c
  6143  003C76  3616               	rlcf	??___fpclassifyf+1,f,c
  6144  003C78  3617               	rlcf	??___fpclassifyf+2,f,c
  6145  003C7A  3618               	rlcf	??___fpclassifyf+3,f,c
  6146  003C7C  2EE8               	decfsz	wreg,f,c
  6147  003C7E  D7F9               	goto	u7995
  6148  003C80  5015               	movf	??___fpclassifyf,w,c
  6149  003C82  1016               	iorwf	??___fpclassifyf+1,w,c
  6150  003C84  1017               	iorwf	??___fpclassifyf+2,w,c
  6151  003C86  1018               	iorwf	??___fpclassifyf+3,w,c
  6152  003C88  A4D8               	btfss	status,2,c
  6153  003C8A  D002               	goto	u8000
  6154  003C8C  0E01               	movlw	1
  6155  003C8E  D001               	goto	u8010
  6156  003C90                     u8000:
  6157  003C90  0E00               	movlw	0
  6158  003C92                     u8010:
  6159  003C92  6E11               	movwf	?___fpclassifyf,c
  6160  003C94  6A12               	clrf	?___fpclassifyf+1,c
  6161  003C96  0012               	return	
  6162  003C98                     l6303:
  6163  003C98  0E00               	movlw	0
  6164  003C9A  6E12               	movwf	?___fpclassifyf+1,c
  6165  003C9C  0E04               	movlw	4
  6166  003C9E  6E11               	movwf	?___fpclassifyf,c
  6167  003CA0  0012               	return		;funcret
  6168  003CA2                     __end_of___fpclassifyf:
  6169                           	opt callstack 0
  6170                           
  6171 ;; *************** function ___fltol *****************
  6172 ;; Defined at:
  6173 ;;		line 43 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  f1              4   16[COMRAM] int 
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;  exp1            1   25[COMRAM] unsigned char 
  6178 ;;  sign1           1   24[COMRAM] unsigned char 
  6179 ;; Return value:  Size  Location     Type
  6180 ;;                  4   16[COMRAM] long 
  6181 ;; Registers used:
  6182 ;;		wreg, status,2, status,0
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6188 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6189 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6192 ;;Total ram usage:       10 bytes
  6193 ;; Hardware stack levels used:    1
  6194 ;; Hardware stack levels required when called:    2
  6195 ;; This function calls:
  6196 ;;		Nothing
  6197 ;; This function is called by:
  6198 ;;		_main
  6199 ;;		_efgtoa
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           	psect	text17
  6204  003D6E                     __ptext17:
  6205                           	opt callstack 0
  6206  003D6E                     ___fltol:
  6207                           	opt callstack 24
  6208                           
  6209                           ;incstack = 0
  6210  003D6E  3413               	rlcf	___fltol@f1+2,w,c
  6211  003D70  3414               	rlcf	___fltol@f1+3,w,c
  6212  003D72  6E1A               	movwf	___fltol@exp1,c
  6213  003D74  501A               	movf	___fltol@exp1,w,c
  6214  003D76  A4D8               	btfss	status,2,c
  6215  003D78  D009               	goto	l6859
  6216  003D7A                     u9000:
  6217  003D7A  0E00               	movlw	0
  6218  003D7C  6E11               	movwf	?___fltol,c
  6219  003D7E  0E00               	movlw	0
  6220  003D80  6E12               	movwf	?___fltol+1,c
  6221  003D82  0E00               	movlw	0
  6222  003D84  6E13               	movwf	?___fltol+2,c
  6223  003D86  0E00               	movlw	0
  6224  003D88  6E14               	movwf	?___fltol+3,c
  6225  003D8A  0012               	return	
  6226  003D8C                     l6859:
  6227  003D8C  C011  F015         	movff	___fltol@f1,??___fltol
  6228  003D90  C012  F016         	movff	___fltol@f1+1,??___fltol+1
  6229  003D94  C013  F017         	movff	___fltol@f1+2,??___fltol+2
  6230  003D98  C014  F018         	movff	___fltol@f1+3,??___fltol+3
  6231  003D9C  0E20               	movlw	32
  6232  003D9E  D005               	goto	u9010
  6233  003DA0                     u9015:
  6234  003DA0  90D8               	bcf	status,0,c
  6235  003DA2  3218               	rrcf	??___fltol+3,f,c
  6236  003DA4  3217               	rrcf	??___fltol+2,f,c
  6237  003DA6  3216               	rrcf	??___fltol+1,f,c
  6238  003DA8  3215               	rrcf	??___fltol,f,c
  6239  003DAA                     u9010:
  6240  003DAA  2EE8               	decfsz	wreg,f,c
  6241  003DAC  D7F9               	goto	u9015
  6242  003DAE  5015               	movf	??___fltol,w,c
  6243  003DB0  6E19               	movwf	___fltol@sign1,c
  6244  003DB2  8E13               	bsf	___fltol@f1+2,7,c
  6245  003DB4  0EFF               	movlw	255
  6246  003DB6  1611               	andwf	___fltol@f1,f,c
  6247  003DB8  0EFF               	movlw	255
  6248  003DBA  1612               	andwf	___fltol@f1+1,f,c
  6249  003DBC  0EFF               	movlw	255
  6250  003DBE  1613               	andwf	___fltol@f1+2,f,c
  6251  003DC0  0E00               	movlw	0
  6252  003DC2  1614               	andwf	___fltol@f1+3,f,c
  6253  003DC4  0E96               	movlw	150
  6254  003DC6  5E1A               	subwf	___fltol@exp1,f,c
  6255  003DC8  AE1A               	btfss	___fltol@exp1,7,c
  6256  003DCA  D00D               	goto	l6879
  6257  003DCC  501A               	movf	___fltol@exp1,w,c
  6258  003DCE  0A80               	xorlw	128
  6259  003DD0  0F97               	addlw	151
  6260  003DD2  A0D8               	btfss	status,0,c
  6261  003DD4  D7D2               	goto	u9000
  6262  003DD6                     l6875:
  6263  003DD6  90D8               	bcf	status,0,c
  6264  003DD8  3214               	rrcf	___fltol@f1+3,f,c
  6265  003DDA  3213               	rrcf	___fltol@f1+2,f,c
  6266  003DDC  3212               	rrcf	___fltol@f1+1,f,c
  6267  003DDE  3211               	rrcf	___fltol@f1,f,c
  6268  003DE0  3E1A               	incfsz	___fltol@exp1,f,c
  6269  003DE2  D7F9               	goto	l6875
  6270  003DE4  D00D               	goto	u9050
  6271  003DE6                     l6879:
  6272  003DE6  0E1F               	movlw	31
  6273  003DE8  641A               	cpfsgt	___fltol@exp1,c
  6274  003DEA  D007               	goto	l6887
  6275  003DEC  D7C6               	goto	u9000
  6276  003DEE                     l6885:
  6277  003DEE  90D8               	bcf	status,0,c
  6278  003DF0  3611               	rlcf	___fltol@f1,f,c
  6279  003DF2  3612               	rlcf	___fltol@f1+1,f,c
  6280  003DF4  3613               	rlcf	___fltol@f1+2,f,c
  6281  003DF6  3614               	rlcf	___fltol@f1+3,f,c
  6282  003DF8  061A               	decf	___fltol@exp1,f,c
  6283  003DFA                     l6887:
  6284  003DFA  501A               	movf	___fltol@exp1,w,c
  6285  003DFC  A4D8               	btfss	status,2,c
  6286  003DFE  D7F7               	goto	l6885
  6287  003E00                     u9050:
  6288  003E00  5019               	movf	___fltol@sign1,w,c
  6289  003E02  B4D8               	btfsc	status,2,c
  6290  003E04  D008               	goto	l6893
  6291  003E06  1E14               	comf	___fltol@f1+3,f,c
  6292  003E08  1E13               	comf	___fltol@f1+2,f,c
  6293  003E0A  1E12               	comf	___fltol@f1+1,f,c
  6294  003E0C  6C11               	negf	___fltol@f1,c
  6295  003E0E  0E00               	movlw	0
  6296  003E10  2212               	addwfc	___fltol@f1+1,f,c
  6297  003E12  2213               	addwfc	___fltol@f1+2,f,c
  6298  003E14  2214               	addwfc	___fltol@f1+3,f,c
  6299  003E16                     l6893:
  6300  003E16  C011  F011         	movff	___fltol@f1,?___fltol
  6301  003E1A  C012  F012         	movff	___fltol@f1+1,?___fltol+1
  6302  003E1E  C013  F013         	movff	___fltol@f1+2,?___fltol+2
  6303  003E22  C014  F014         	movff	___fltol@f1+3,?___fltol+3
  6304  003E26  0012               	return		;funcret
  6305  003E28                     __end_of___fltol:
  6306                           	opt callstack 0
  6307                           
  6308 ;; *************** function ___flsub *****************
  6309 ;; Defined at:
  6310 ;;		line 245 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  b               4   41[COMRAM] long 
  6313 ;;  a               4   45[COMRAM] long 
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;		None
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  4   41[COMRAM] long 
  6318 ;; Registers used:
  6319 ;;		wreg, status,2, status,0, cstack
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6325 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6328 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;Total ram usage:        8 bytes
  6330 ;; Hardware stack levels used:    1
  6331 ;; Hardware stack levels required when called:    3
  6332 ;; This function calls:
  6333 ;;		___fladd
  6334 ;; This function is called by:
  6335 ;;		_efgtoa
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           	psect	text18
  6340  0044FA                     __ptext18:
  6341                           	opt callstack 0
  6342  0044FA                     ___flsub:
  6343                           	opt callstack 23
  6344                           
  6345                           ;incstack = 0
  6346  0044FA  0E00               	movlw	0
  6347  0044FC  1A2E               	xorwf	___flsub@a,f,c
  6348  0044FE  0E00               	movlw	0
  6349  004500  1A2F               	xorwf	___flsub@a+1,f,c
  6350  004502  0E00               	movlw	0
  6351  004504  1A30               	xorwf	___flsub@a+2,f,c
  6352  004506  0E80               	movlw	128
  6353  004508  1A31               	xorwf	___flsub@a+3,f,c
  6354  00450A  C02A  F011         	movff	___flsub@b,___fladd@b
  6355  00450E  C02B  F012         	movff	___flsub@b+1,___fladd@b+1
  6356  004512  C02C  F013         	movff	___flsub@b+2,___fladd@b+2
  6357  004516  C02D  F014         	movff	___flsub@b+3,___fladd@b+3
  6358  00451A  C02E  F015         	movff	___flsub@a,___fladd@a
  6359  00451E  C02F  F016         	movff	___flsub@a+1,___fladd@a+1
  6360  004522  C030  F017         	movff	___flsub@a+2,___fladd@a+2
  6361  004526  C031  F018         	movff	___flsub@a+3,___fladd@a+3
  6362  00452A  EC4B  F013         	call	___fladd	;wreg free
  6363  00452E  C011  F02A         	movff	?___fladd,?___flsub
  6364  004532  C012  F02B         	movff	?___fladd+1,?___flsub+1
  6365  004536  C013  F02C         	movff	?___fladd+2,?___flsub+2
  6366  00453A  C014  F02D         	movff	?___fladd+3,?___flsub+3
  6367  00453E  0012               	return		;funcret
  6368  004540                     __end_of___flsub:
  6369                           	opt callstack 0
  6370                           
  6371 ;; *************** function ___fladd *****************
  6372 ;; Defined at:
  6373 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;  b               4   16[COMRAM] long 
  6376 ;;  a               4   20[COMRAM] long 
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;  grs             1   31[COMRAM] unsigned char 
  6379 ;;  bexp            1   30[COMRAM] unsigned char 
  6380 ;;  aexp            1   29[COMRAM] unsigned char 
  6381 ;;  signs           1   28[COMRAM] unsigned char 
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  4   16[COMRAM] unsigned char 
  6384 ;; Registers used:
  6385 ;;		wreg, status,2, status,0
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6391 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6392 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6393 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6394 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6395 ;;Total ram usage:       16 bytes
  6396 ;; Hardware stack levels used:    1
  6397 ;; Hardware stack levels required when called:    2
  6398 ;; This function calls:
  6399 ;;		Nothing
  6400 ;; This function is called by:
  6401 ;;		_efgtoa
  6402 ;;		___flsub
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           	psect	text19
  6407  002696                     __ptext19:
  6408                           	opt callstack 0
  6409  002696                     ___fladd:
  6410                           	opt callstack 23
  6411                           
  6412                           ;incstack = 0
  6413  002696  5014               	movf	___fladd@b+3,w,c
  6414  002698  0B80               	andlw	128
  6415  00269A  6E1D               	movwf	___fladd@signs,c
  6416  00269C  5014               	movf	___fladd@b+3,w,c
  6417  00269E  2414               	addwf	___fladd@b+3,w,c
  6418  0026A0  6E1F               	movwf	___fladd@bexp,c
  6419  0026A2  BE13               	btfsc	___fladd@b+2,7,c
  6420  0026A4  801F               	bsf	___fladd@bexp,0,c
  6421  0026A6  501F               	movf	___fladd@bexp,w,c
  6422  0026A8  B4D8               	btfsc	status,2,c
  6423  0026AA  D00D               	goto	l6069
  6424  0026AC  281F               	incf	___fladd@bexp,w,c
  6425  0026AE  A4D8               	btfss	status,2,c
  6426  0026B0  D008               	goto	l6065
  6427  0026B2  0E00               	movlw	0
  6428  0026B4  6E11               	movwf	___fladd@b,c
  6429  0026B6  0E00               	movlw	0
  6430  0026B8  6E12               	movwf	___fladd@b+1,c
  6431  0026BA  0E00               	movlw	0
  6432  0026BC  6E13               	movwf	___fladd@b+2,c
  6433  0026BE  0E00               	movlw	0
  6434  0026C0  6E14               	movwf	___fladd@b+3,c
  6435  0026C2                     l6065:
  6436  0026C2  8E13               	bsf	___fladd@b+2,7,c
  6437  0026C4  D006               	goto	L9
  6438  0026C6                     l6069:
  6439  0026C6  0E00               	movlw	0
  6440  0026C8  6E11               	movwf	___fladd@b,c
  6441  0026CA  0E00               	movlw	0
  6442  0026CC  6E12               	movwf	___fladd@b+1,c
  6443  0026CE  0E00               	movlw	0
  6444  0026D0  6E13               	movwf	___fladd@b+2,c
  6445  0026D2                     L9:
  6446  0026D2  0E00               	movlw	0
  6447  0026D4  6E14               	movwf	___fladd@b+3,c
  6448  0026D6  5018               	movf	___fladd@a+3,w,c
  6449  0026D8  0B80               	andlw	128
  6450  0026DA  6E1E               	movwf	___fladd@aexp,c
  6451  0026DC  501D               	movf	___fladd@signs,w,c
  6452  0026DE  181E               	xorwf	___fladd@aexp,w,c
  6453  0026E0  A4D8               	btfss	status,2,c
  6454  0026E2  8C1D               	bsf	___fladd@signs,6,c
  6455  0026E4  5018               	movf	___fladd@a+3,w,c
  6456  0026E6  2418               	addwf	___fladd@a+3,w,c
  6457  0026E8  6E1E               	movwf	___fladd@aexp,c
  6458  0026EA  BE17               	btfsc	___fladd@a+2,7,c
  6459  0026EC  801E               	bsf	___fladd@aexp,0,c
  6460  0026EE  501E               	movf	___fladd@aexp,w,c
  6461  0026F0  B4D8               	btfsc	status,2,c
  6462  0026F2  D00D               	goto	l6093
  6463  0026F4  281E               	incf	___fladd@aexp,w,c
  6464  0026F6  A4D8               	btfss	status,2,c
  6465  0026F8  D008               	goto	l6089
  6466  0026FA  0E00               	movlw	0
  6467  0026FC  6E15               	movwf	___fladd@a,c
  6468  0026FE  0E00               	movlw	0
  6469  002700  6E16               	movwf	___fladd@a+1,c
  6470  002702  0E00               	movlw	0
  6471  002704  6E17               	movwf	___fladd@a+2,c
  6472  002706  0E00               	movlw	0
  6473  002708  6E18               	movwf	___fladd@a+3,c
  6474  00270A                     l6089:
  6475  00270A  8E17               	bsf	___fladd@a+2,7,c
  6476  00270C  D006               	goto	L10
  6477  00270E                     l6093:
  6478  00270E  0E00               	movlw	0
  6479  002710  6E15               	movwf	___fladd@a,c
  6480  002712  0E00               	movlw	0
  6481  002714  6E16               	movwf	___fladd@a+1,c
  6482  002716  0E00               	movlw	0
  6483  002718  6E17               	movwf	___fladd@a+2,c
  6484  00271A                     L10:
  6485  00271A  0E00               	movlw	0
  6486  00271C  6E18               	movwf	___fladd@a+3,c
  6487  00271E  501F               	movf	___fladd@bexp,w,c
  6488  002720  5C1E               	subwf	___fladd@aexp,w,c
  6489  002722  B0D8               	btfsc	status,0,c
  6490  002724  D022               	goto	l6131
  6491  002726  AC1D               	btfss	___fladd@signs,6,c
  6492  002728  D002               	goto	l6101
  6493  00272A  0E80               	movlw	128
  6494  00272C  1A1D               	xorwf	___fladd@signs,f,c
  6495  00272E                     l6101:
  6496  00272E  C01F  F020         	movff	___fladd@bexp,___fladd@grs
  6497  002732  C01E  F01F         	movff	___fladd@aexp,___fladd@bexp
  6498  002736  C020  F01E         	movff	___fladd@grs,___fladd@aexp
  6499  00273A  C011  F020         	movff	___fladd@b,___fladd@grs
  6500  00273E  C015  F011         	movff	___fladd@a,___fladd@b
  6501  002742  C020  F015         	movff	___fladd@grs,___fladd@a
  6502  002746  C012  F020         	movff	___fladd@b+1,___fladd@grs
  6503  00274A  C016  F012         	movff	___fladd@a+1,___fladd@b+1
  6504  00274E  C020  F016         	movff	___fladd@grs,___fladd@a+1
  6505  002752  C013  F020         	movff	___fladd@b+2,___fladd@grs
  6506  002756  C017  F013         	movff	___fladd@a+2,___fladd@b+2
  6507  00275A  C020  F017         	movff	___fladd@grs,___fladd@a+2
  6508  00275E  C014  F020         	movff	___fladd@b+3,___fladd@grs
  6509  002762  C018  F014         	movff	___fladd@a+3,___fladd@b+3
  6510  002766  C020  F018         	movff	___fladd@grs,___fladd@a+3
  6511  00276A                     l6131:
  6512  00276A  0E00               	movlw	0
  6513  00276C  6E20               	movwf	___fladd@grs,c
  6514  00276E  501F               	movf	___fladd@bexp,w,c
  6515  002770  C01E  F019         	movff	___fladd@aexp,??___fladd
  6516  002774  6A1A               	clrf	(??___fladd+1)& (0+255),c
  6517  002776  5E19               	subwf	??___fladd,f,c
  6518  002778  0E00               	movlw	0
  6519  00277A  5A1A               	subwfb	??___fladd+1,f,c
  6520  00277C  BE1A               	btfsc	??___fladd+1,7,c
  6521  00277E  D02C               	goto	l1029
  6522  002780  501A               	movf	??___fladd+1,w,c
  6523  002782  E104               	bnz	u7580
  6524  002784  0E1A               	movlw	26
  6525  002786  5C19               	subwf	??___fladd,w,c
  6526  002788  A0D8               	btfss	status,0,c
  6527  00278A  D026               	goto	l1029
  6528  00278C                     u7580:
  6529  00278C  5011               	movf	___fladd@b,w,c
  6530  00278E  1012               	iorwf	___fladd@b+1,w,c
  6531  002790  1013               	iorwf	___fladd@b+2,w,c
  6532  002792  1014               	iorwf	___fladd@b+3,w,c
  6533  002794  B4D8               	btfsc	status,2,c
  6534  002796  D002               	goto	u7590
  6535  002798  0E01               	movlw	1
  6536  00279A  D001               	goto	u7600
  6537  00279C                     u7590:
  6538  00279C  0E00               	movlw	0
  6539  00279E                     u7600:
  6540  00279E  6E20               	movwf	___fladd@grs,c
  6541  0027A0  0E00               	movlw	0
  6542  0027A2  6E11               	movwf	___fladd@b,c
  6543  0027A4  0E00               	movlw	0
  6544  0027A6  6E12               	movwf	___fladd@b+1,c
  6545  0027A8  0E00               	movlw	0
  6546  0027AA  6E13               	movwf	___fladd@b+2,c
  6547  0027AC  0E00               	movlw	0
  6548  0027AE  6E14               	movwf	___fladd@b+3,c
  6549  0027B0  C01E  F01F         	movff	___fladd@aexp,___fladd@bexp
  6550  0027B4  D015               	goto	u7630
  6551  0027B6                     l1030:
  6552  0027B6  A020               	btfss	___fladd@grs,0,c
  6553  0027B8  D005               	goto	l6143
  6554  0027BA  90D8               	bcf	status,0,c
  6555  0027BC  3020               	rrcf	___fladd@grs,w,c
  6556  0027BE  0901               	iorlw	1
  6557  0027C0  6E20               	movwf	___fladd@grs,c
  6558  0027C2  D002               	goto	l6145
  6559  0027C4                     l6143:
  6560  0027C4  90D8               	bcf	status,0,c
  6561  0027C6  3220               	rrcf	___fladd@grs,f,c
  6562  0027C8                     l6145:
  6563  0027C8  B011               	btfsc	___fladd@b,0,c
  6564  0027CA  8E20               	bsf	___fladd@grs,7,c
  6565  0027CC  3414               	rlcf	___fladd@b+3,w,c
  6566  0027CE  3214               	rrcf	___fladd@b+3,f,c
  6567  0027D0  3213               	rrcf	___fladd@b+2,f,c
  6568  0027D2  3212               	rrcf	___fladd@b+1,f,c
  6569  0027D4  3211               	rrcf	___fladd@b,f,c
  6570  0027D6  2A1F               	incf	___fladd@bexp,f,c
  6571  0027D8                     l1029:
  6572  0027D8  501E               	movf	___fladd@aexp,w,c
  6573  0027DA  5C1F               	subwf	___fladd@bexp,w,c
  6574  0027DC  A0D8               	btfss	status,0,c
  6575  0027DE  D7EB               	goto	l1030
  6576  0027E0                     u7630:
  6577  0027E0  BC1D               	btfsc	___fladd@signs,6,c
  6578  0027E2  D028               	goto	l6177
  6579  0027E4  501F               	movf	___fladd@bexp,w,c
  6580  0027E6  A4D8               	btfss	status,2,c
  6581  0027E8  D009               	goto	l6159
  6582  0027EA  0E00               	movlw	0
  6583  0027EC  6E11               	movwf	?___fladd,c
  6584  0027EE  0E00               	movlw	0
  6585  0027F0  6E12               	movwf	?___fladd+1,c
  6586  0027F2  0E00               	movlw	0
  6587  0027F4  6E13               	movwf	?___fladd+2,c
  6588  0027F6  0E00               	movlw	0
  6589  0027F8  6E14               	movwf	?___fladd+3,c
  6590  0027FA  0012               	return	
  6591  0027FC                     l6159:
  6592  0027FC  5015               	movf	___fladd@a,w,c
  6593  0027FE  2611               	addwf	___fladd@b,f,c
  6594  002800  5016               	movf	___fladd@a+1,w,c
  6595  002802  2212               	addwfc	___fladd@b+1,f,c
  6596  002804  5017               	movf	___fladd@a+2,w,c
  6597  002806  2213               	addwfc	___fladd@b+2,f,c
  6598  002808  5018               	movf	___fladd@a+3,w,c
  6599  00280A  2214               	addwfc	___fladd@b+3,f,c
  6600  00280C  A014               	btfss	___fladd@b+3,0,c
  6601  00280E  D071               	goto	u7760
  6602  002810  A020               	btfss	___fladd@grs,0,c
  6603  002812  D005               	goto	l6167
  6604  002814  90D8               	bcf	status,0,c
  6605  002816  3020               	rrcf	___fladd@grs,w,c
  6606  002818  0901               	iorlw	1
  6607  00281A  6E20               	movwf	___fladd@grs,c
  6608  00281C  D002               	goto	l6169
  6609  00281E                     l6167:
  6610  00281E  90D8               	bcf	status,0,c
  6611  002820  3220               	rrcf	___fladd@grs,f,c
  6612  002822                     l6169:
  6613  002822  B011               	btfsc	___fladd@b,0,c
  6614  002824  8E20               	bsf	___fladd@grs,7,c
  6615  002826  3414               	rlcf	___fladd@b+3,w,c
  6616  002828  3214               	rrcf	___fladd@b+3,f,c
  6617  00282A  3213               	rrcf	___fladd@b+2,f,c
  6618  00282C  3212               	rrcf	___fladd@b+1,f,c
  6619  00282E  3211               	rrcf	___fladd@b,f,c
  6620  002830  2A1F               	incf	___fladd@bexp,f,c
  6621  002832  D05F               	goto	u7760
  6622  002834                     l6177:
  6623  002834  5015               	movf	___fladd@a,w,c
  6624  002836  5C11               	subwf	___fladd@b,w,c
  6625  002838  5016               	movf	___fladd@a+1,w,c
  6626  00283A  5812               	subwfb	___fladd@b+1,w,c
  6627  00283C  5017               	movf	___fladd@a+2,w,c
  6628  00283E  5813               	subwfb	___fladd@b+2,w,c
  6629  002840  5014               	movf	___fladd@b+3,w,c
  6630  002842  0A80               	xorlw	128
  6631  002844  6E19               	movwf	??___fladd& (0+255),c
  6632  002846  5018               	movf	___fladd@a+3,w,c
  6633  002848  0A80               	xorlw	128
  6634  00284A  5819               	subwfb	??___fladd& (0+255),w,c
  6635  00284C  B0D8               	btfsc	status,0,c
  6636  00284E  D025               	goto	l6187
  6637  002850  5011               	movf	___fladd@b,w,c
  6638  002852  5C15               	subwf	___fladd@a,w,c
  6639  002854  6E19               	movwf	??___fladd& (0+255),c
  6640  002856  5012               	movf	___fladd@b+1,w,c
  6641  002858  5816               	subwfb	___fladd@a+1,w,c
  6642  00285A  6E1A               	movwf	(??___fladd+1)& (0+255),c
  6643  00285C  5013               	movf	___fladd@b+2,w,c
  6644  00285E  5817               	subwfb	___fladd@a+2,w,c
  6645  002860  6E1B               	movwf	(??___fladd+2)& (0+255),c
  6646  002862  5014               	movf	___fladd@b+3,w,c
  6647  002864  5818               	subwfb	___fladd@a+3,w,c
  6648  002866  6E1C               	movwf	(??___fladd+3)& (0+255),c
  6649  002868  0EFF               	movlw	255
  6650  00286A  2419               	addwf	??___fladd,w,c
  6651  00286C  6E11               	movwf	___fladd@b,c
  6652  00286E  0EFF               	movlw	255
  6653  002870  201A               	addwfc	??___fladd+1,w,c
  6654  002872  6E12               	movwf	___fladd@b+1,c
  6655  002874  0EFF               	movlw	255
  6656  002876  201B               	addwfc	??___fladd+2,w,c
  6657  002878  6E13               	movwf	___fladd@b+2,c
  6658  00287A  0EFF               	movlw	255
  6659  00287C  201C               	addwfc	??___fladd+3,w,c
  6660  00287E  6E14               	movwf	___fladd@b+3,c
  6661  002880  0E80               	movlw	128
  6662  002882  1A1D               	xorwf	___fladd@signs,f,c
  6663  002884  6C20               	negf	___fladd@grs,c
  6664  002886  5020               	movf	___fladd@grs,w,c
  6665  002888  A4D8               	btfss	status,2,c
  6666  00288A  D00F               	goto	l1045
  6667  00288C  0E01               	movlw	1
  6668  00288E  2611               	addwf	___fladd@b,f,c
  6669  002890  0E00               	movlw	0
  6670  002892  2212               	addwfc	___fladd@b+1,f,c
  6671  002894  2213               	addwfc	___fladd@b+2,f,c
  6672  002896  2214               	addwfc	___fladd@b+3,f,c
  6673  002898  D008               	goto	l1045
  6674  00289A                     l6187:
  6675  00289A  5015               	movf	___fladd@a,w,c
  6676  00289C  5E11               	subwf	___fladd@b,f,c
  6677  00289E  5016               	movf	___fladd@a+1,w,c
  6678  0028A0  5A12               	subwfb	___fladd@b+1,f,c
  6679  0028A2  5017               	movf	___fladd@a+2,w,c
  6680  0028A4  5A13               	subwfb	___fladd@b+2,f,c
  6681  0028A6  5018               	movf	___fladd@a+3,w,c
  6682  0028A8  5A14               	subwfb	___fladd@b+3,f,c
  6683  0028AA                     l1045:
  6684  0028AA  5011               	movf	___fladd@b,w,c
  6685  0028AC  1012               	iorwf	___fladd@b+1,w,c
  6686  0028AE  1013               	iorwf	___fladd@b+2,w,c
  6687  0028B0  1014               	iorwf	___fladd@b+3,w,c
  6688  0028B2  A4D8               	btfss	status,2,c
  6689  0028B4  D01C               	goto	l6211
  6690  0028B6  5020               	movf	___fladd@grs,w,c
  6691  0028B8  A4D8               	btfss	status,2,c
  6692  0028BA  D019               	goto	l6211
  6693  0028BC  0E00               	movlw	0
  6694  0028BE  6E11               	movwf	?___fladd,c
  6695  0028C0  0E00               	movlw	0
  6696  0028C2  6E12               	movwf	?___fladd+1,c
  6697  0028C4  0E00               	movlw	0
  6698  0028C6  6E13               	movwf	?___fladd+2,c
  6699  0028C8  0E00               	movlw	0
  6700  0028CA  6E14               	movwf	?___fladd+3,c
  6701  0028CC  0012               	return	
  6702  0028CE                     l6195:
  6703  0028CE  90D8               	bcf	status,0,c
  6704  0028D0  3611               	rlcf	___fladd@b,f,c
  6705  0028D2  3612               	rlcf	___fladd@b+1,f,c
  6706  0028D4  3613               	rlcf	___fladd@b+2,f,c
  6707  0028D6  3614               	rlcf	___fladd@b+3,f,c
  6708  0028D8  BE20               	btfsc	___fladd@grs,7,c
  6709  0028DA  8011               	bsf	___fladd@b,0,c
  6710  0028DC  A020               	btfss	___fladd@grs,0,c
  6711  0028DE  D002               	goto	l6205
  6712  0028E0  80D8               	bsf	status,0,c
  6713  0028E2  D001               	goto	L11
  6714  0028E4                     l6205:
  6715  0028E4  90D8               	bcf	status,0,c
  6716  0028E6                     L11:
  6717  0028E6  3620               	rlcf	___fladd@grs,f,c
  6718  0028E8  501F               	movf	___fladd@bexp,w,c
  6719  0028EA  A4D8               	btfss	status,2,c
  6720  0028EC  061F               	decf	___fladd@bexp,f,c
  6721  0028EE                     l6211:
  6722  0028EE  AE13               	btfss	___fladd@b+2,7,c
  6723  0028F0  D7EE               	goto	l6195
  6724  0028F2                     u7760:
  6725  0028F2  0E00               	movlw	0
  6726  0028F4  6E1E               	movwf	___fladd@aexp,c
  6727  0028F6  AE20               	btfss	___fladd@grs,7,c
  6728  0028F8  D00B               	goto	l1054
  6729  0028FA  C020  F019         	movff	___fladd@grs,??___fladd
  6730  0028FE  0E7F               	movlw	127
  6731  002900  1619               	andwf	??___fladd,f,c
  6732  002902  B4D8               	btfsc	status,2,c
  6733  002904  D003               	goto	l1055
  6734  002906                     u7780:
  6735  002906  0E01               	movlw	1
  6736  002908  6E1E               	movwf	___fladd@aexp,c
  6737  00290A  D002               	goto	l1054
  6738  00290C                     l1055:
  6739  00290C  B011               	btfsc	___fladd@b,0,c
  6740  00290E  D7FB               	goto	u7780
  6741  002910                     l1054:
  6742  002910  501E               	movf	___fladd@aexp,w,c
  6743  002912  B4D8               	btfsc	status,2,c
  6744  002914  D020               	goto	l6231
  6745  002916  0E01               	movlw	1
  6746  002918  2611               	addwf	___fladd@b,f,c
  6747  00291A  0E00               	movlw	0
  6748  00291C  2212               	addwfc	___fladd@b+1,f,c
  6749  00291E  2213               	addwfc	___fladd@b+2,f,c
  6750  002920  2214               	addwfc	___fladd@b+3,f,c
  6751  002922  A014               	btfss	___fladd@b+3,0,c
  6752  002924  D018               	goto	l6231
  6753  002926  C011  F019         	movff	___fladd@b,??___fladd
  6754  00292A  C012  F01A         	movff	___fladd@b+1,??___fladd+1
  6755  00292E  C013  F01B         	movff	___fladd@b+2,??___fladd+2
  6756  002932  C014  F01C         	movff	___fladd@b+3,??___fladd+3
  6757  002936  341C               	rlcf	??___fladd+3,w,c
  6758  002938  321C               	rrcf	??___fladd+3,f,c
  6759  00293A  321B               	rrcf	??___fladd+2,f,c
  6760  00293C  321A               	rrcf	??___fladd+1,f,c
  6761  00293E  3219               	rrcf	??___fladd,f,c
  6762  002940  C019  F011         	movff	??___fladd,___fladd@b
  6763  002944  C01A  F012         	movff	??___fladd+1,___fladd@b+1
  6764  002948  C01B  F013         	movff	??___fladd+2,___fladd@b+2
  6765  00294C  C01C  F014         	movff	??___fladd+3,___fladd@b+3
  6766  002950  281F               	incf	___fladd@bexp,w,c
  6767  002952  A4D8               	btfss	status,2,c
  6768  002954  2A1F               	incf	___fladd@bexp,f,c
  6769  002956                     l6231:
  6770  002956  281F               	incf	___fladd@bexp,w,c
  6771  002958  B4D8               	btfsc	status,2,c
  6772  00295A  D003               	goto	u7840
  6773  00295C  501F               	movf	___fladd@bexp,w,c
  6774  00295E  A4D8               	btfss	status,2,c
  6775  002960  D00D               	goto	l6239
  6776  002962                     u7840:
  6777  002962  0E00               	movlw	0
  6778  002964  6E11               	movwf	___fladd@b,c
  6779  002966  0E00               	movlw	0
  6780  002968  6E12               	movwf	___fladd@b+1,c
  6781  00296A  0E00               	movlw	0
  6782  00296C  6E13               	movwf	___fladd@b+2,c
  6783  00296E  0E00               	movlw	0
  6784  002970  6E14               	movwf	___fladd@b+3,c
  6785  002972  501F               	movf	___fladd@bexp,w,c
  6786  002974  A4D8               	btfss	status,2,c
  6787  002976  D002               	goto	l6239
  6788  002978  0E00               	movlw	0
  6789  00297A  6E1D               	movwf	___fladd@signs,c
  6790  00297C                     l6239:
  6791  00297C  A01F               	btfss	___fladd@bexp,0,c
  6792  00297E  D002               	goto	l6243
  6793  002980  8E13               	bsf	___fladd@b+2,7,c
  6794  002982  D001               	goto	l6245
  6795  002984                     l6243:
  6796  002984  9E13               	bcf	___fladd@b+2,7,c
  6797  002986                     l6245:
  6798  002986  90D8               	bcf	status,0,c
  6799  002988  301F               	rrcf	___fladd@bexp,w,c
  6800  00298A  6E14               	movwf	___fladd@b+3,c
  6801  00298C  BE1D               	btfsc	___fladd@signs,7,c
  6802  00298E  8E14               	bsf	___fladd@b+3,7,c
  6803  002990  C011  F011         	movff	___fladd@b,?___fladd
  6804  002994  C012  F012         	movff	___fladd@b+1,?___fladd+1
  6805  002998  C013  F013         	movff	___fladd@b+2,?___fladd+2
  6806  00299C  C014  F014         	movff	___fladd@b+3,?___fladd+3
  6807  0029A0  0012               	return		;funcret
  6808  0029A2                     __end_of___fladd:
  6809                           	opt callstack 0
  6810                           
  6811 ;; *************** function ___flneg *****************
  6812 ;; Defined at:
  6813 ;;		line 15 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/flneg.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;  f1              4   16[COMRAM] unsigned char 
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;		None
  6818 ;; Return value:  Size  Location     Type
  6819 ;;                  4   16[COMRAM] unsigned char 
  6820 ;; Registers used:
  6821 ;;		wreg, status,2, status,0
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6827 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6830 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6831 ;;Total ram usage:        4 bytes
  6832 ;; Hardware stack levels used:    1
  6833 ;; Hardware stack levels required when called:    2
  6834 ;; This function calls:
  6835 ;;		Nothing
  6836 ;; This function is called by:
  6837 ;;		_efgtoa
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text20
  6842  004722                     __ptext20:
  6843                           	opt callstack 0
  6844  004722                     ___flneg:
  6845                           	opt callstack 24
  6846                           
  6847                           ;incstack = 0
  6848  004722  5011               	movf	___flneg@f1,w,c
  6849  004724  1012               	iorwf	___flneg@f1+1,w,c
  6850  004726  1013               	iorwf	___flneg@f1+2,w,c
  6851  004728  1014               	iorwf	___flneg@f1+3,w,c
  6852  00472A  B4D8               	btfsc	status,2,c
  6853  00472C  D008               	goto	l6849
  6854  00472E  0E00               	movlw	0
  6855  004730  1A11               	xorwf	___flneg@f1,f,c
  6856  004732  0E00               	movlw	0
  6857  004734  1A12               	xorwf	___flneg@f1+1,f,c
  6858  004736  0E00               	movlw	0
  6859  004738  1A13               	xorwf	___flneg@f1+2,f,c
  6860  00473A  0E80               	movlw	128
  6861  00473C  1A14               	xorwf	___flneg@f1+3,f,c
  6862  00473E                     l6849:
  6863  00473E  C011  F011         	movff	___flneg@f1,?___flneg
  6864  004742  C012  F012         	movff	___flneg@f1+1,?___flneg+1
  6865  004746  C013  F013         	movff	___flneg@f1+2,?___flneg+2
  6866  00474A  C014  F014         	movff	___flneg@f1+3,?___flneg+3
  6867  00474E  0012               	return		;funcret
  6868  004750                     __end_of___flneg:
  6869                           	opt callstack 0
  6870                           
  6871 ;; *************** function ___flmul *****************
  6872 ;; Defined at:
  6873 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;  b               4   16[COMRAM] unsigned char 
  6876 ;;  a               4   20[COMRAM] unsigned char 
  6877 ;; Auto vars:     Size  Location     Type
  6878 ;;  prod            4   35[COMRAM] struct .
  6879 ;;  grs             4   30[COMRAM] unsigned long 
  6880 ;;  temp            2   39[COMRAM] struct .
  6881 ;;  bexp            1   34[COMRAM] unsigned char 
  6882 ;;  aexp            1   29[COMRAM] unsigned char 
  6883 ;;  sign            1   28[COMRAM] unsigned char 
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  4   16[COMRAM] unsigned char 
  6886 ;; Registers used:
  6887 ;;		wreg, status,2, status,0, prodl, prodh
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6893 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6894 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6895 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6896 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;Total ram usage:       25 bytes
  6898 ;; Hardware stack levels used:    1
  6899 ;; Hardware stack levels required when called:    2
  6900 ;; This function calls:
  6901 ;;		Nothing
  6902 ;; This function is called by:
  6903 ;;		_efgtoa
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text21
  6908  002038                     __ptext21:
  6909                           	opt callstack 0
  6910  002038                     ___flmul:
  6911                           	opt callstack 24
  6912                           
  6913                           ;incstack = 0
  6914  002038  5014               	movf	___flmul@b+3,w,c
  6915  00203A  0B80               	andlw	128
  6916  00203C  6E1D               	movwf	___flmul@sign,c
  6917  00203E  5014               	movf	___flmul@b+3,w,c
  6918  002040  2414               	addwf	___flmul@b+3,w,c
  6919  002042  6E23               	movwf	___flmul@bexp,c
  6920  002044  BE13               	btfsc	___flmul@b+2,7,c
  6921  002046  8023               	bsf	___flmul@bexp,0,c
  6922  002048  5023               	movf	___flmul@bexp,w,c
  6923  00204A  B4D8               	btfsc	status,2,c
  6924  00204C  D00D               	goto	l6605
  6925  00204E  2823               	incf	___flmul@bexp,w,c
  6926  002050  A4D8               	btfss	status,2,c
  6927  002052  D008               	goto	l6603
  6928  002054  0E00               	movlw	0
  6929  002056  6E11               	movwf	___flmul@b,c
  6930  002058  0E00               	movlw	0
  6931  00205A  6E12               	movwf	___flmul@b+1,c
  6932  00205C  0E00               	movlw	0
  6933  00205E  6E13               	movwf	___flmul@b+2,c
  6934  002060  0E00               	movlw	0
  6935  002062  6E14               	movwf	___flmul@b+3,c
  6936  002064                     l6603:
  6937  002064  8E13               	bsf	___flmul@b+2,7,c
  6938  002066  D008               	goto	l6607
  6939  002068                     l6605:
  6940  002068  0E00               	movlw	0
  6941  00206A  6E11               	movwf	___flmul@b,c
  6942  00206C  0E00               	movlw	0
  6943  00206E  6E12               	movwf	___flmul@b+1,c
  6944  002070  0E00               	movlw	0
  6945  002072  6E13               	movwf	___flmul@b+2,c
  6946  002074  0E00               	movlw	0
  6947  002076  6E14               	movwf	___flmul@b+3,c
  6948  002078                     l6607:
  6949  002078  5018               	movf	___flmul@a+3,w,c
  6950  00207A  0B80               	andlw	128
  6951  00207C  1A1D               	xorwf	___flmul@sign,f,c
  6952  00207E  5018               	movf	___flmul@a+3,w,c
  6953  002080  2418               	addwf	___flmul@a+3,w,c
  6954  002082  6E1E               	movwf	___flmul@aexp,c
  6955  002084  BE17               	btfsc	___flmul@a+2,7,c
  6956  002086  801E               	bsf	___flmul@aexp,0,c
  6957  002088  501E               	movf	___flmul@aexp,w,c
  6958  00208A  B4D8               	btfsc	status,2,c
  6959  00208C  D00D               	goto	l6623
  6960  00208E  281E               	incf	___flmul@aexp,w,c
  6961  002090  A4D8               	btfss	status,2,c
  6962  002092  D008               	goto	l6621
  6963  002094  0E00               	movlw	0
  6964  002096  6E15               	movwf	___flmul@a,c
  6965  002098  0E00               	movlw	0
  6966  00209A  6E16               	movwf	___flmul@a+1,c
  6967  00209C  0E00               	movlw	0
  6968  00209E  6E17               	movwf	___flmul@a+2,c
  6969  0020A0  0E00               	movlw	0
  6970  0020A2  6E18               	movwf	___flmul@a+3,c
  6971  0020A4                     l6621:
  6972  0020A4  8E17               	bsf	___flmul@a+2,7,c
  6973  0020A6  D008               	goto	l1114
  6974  0020A8                     l6623:
  6975  0020A8  0E00               	movlw	0
  6976  0020AA  6E15               	movwf	___flmul@a,c
  6977  0020AC  0E00               	movlw	0
  6978  0020AE  6E16               	movwf	___flmul@a+1,c
  6979  0020B0  0E00               	movlw	0
  6980  0020B2  6E17               	movwf	___flmul@a+2,c
  6981  0020B4  0E00               	movlw	0
  6982  0020B6  6E18               	movwf	___flmul@a+3,c
  6983  0020B8                     l1114:
  6984  0020B8  501E               	movf	___flmul@aexp,w,c
  6985  0020BA  B4D8               	btfsc	status,2,c
  6986  0020BC  D003               	goto	u8670
  6987  0020BE  5023               	movf	___flmul@bexp,w,c
  6988  0020C0  A4D8               	btfss	status,2,c
  6989  0020C2  D009               	goto	l6631
  6990  0020C4                     u8670:
  6991  0020C4  0E00               	movlw	0
  6992  0020C6  6E11               	movwf	?___flmul,c
  6993  0020C8  0E00               	movlw	0
  6994  0020CA  6E12               	movwf	?___flmul+1,c
  6995  0020CC  0E00               	movlw	0
  6996  0020CE  6E13               	movwf	?___flmul+2,c
  6997  0020D0  0E00               	movlw	0
  6998  0020D2  6E14               	movwf	?___flmul+3,c
  6999  0020D4  0012               	return	
  7000  0020D6                     l6631:
  7001  0020D6  5017               	movf	___flmul@a+2,w,c
  7002  0020D8  0211               	mulwf	___flmul@b,c
  7003  0020DA  CFF3 F028          	movff	prodl,___flmul@temp
  7004  0020DE  CFF4 F029          	movff	prodh,___flmul@temp+1
  7005  0020E2  5028               	movf	___flmul@temp,w,c
  7006  0020E4  6E1F               	movwf	___flmul@grs,c
  7007  0020E6  6A20               	clrf	___flmul@grs+1,c
  7008  0020E8  6A21               	clrf	___flmul@grs+2,c
  7009  0020EA  6A22               	clrf	___flmul@grs+3,c
  7010  0020EC  5029               	movf	___flmul@temp+1,w,c
  7011  0020EE  6E24               	movwf	___flmul@prod,c
  7012  0020F0  6A25               	clrf	___flmul@prod+1,c
  7013  0020F2  6A26               	clrf	___flmul@prod+2,c
  7014  0020F4  6A27               	clrf	___flmul@prod+3,c
  7015  0020F6  5016               	movf	___flmul@a+1,w,c
  7016  0020F8  0212               	mulwf	___flmul@b+1,c
  7017  0020FA  CFF3 F028          	movff	prodl,___flmul@temp
  7018  0020FE  CFF4 F029          	movff	prodh,___flmul@temp+1
  7019  002102  5028               	movf	___flmul@temp,w,c
  7020  002104  261F               	addwf	___flmul@grs,f,c
  7021  002106  0E00               	movlw	0
  7022  002108  2220               	addwfc	___flmul@grs+1,f,c
  7023  00210A  2221               	addwfc	___flmul@grs+2,f,c
  7024  00210C  2222               	addwfc	___flmul@grs+3,f,c
  7025  00210E  5029               	movf	___flmul@temp+1,w,c
  7026  002110  2624               	addwf	___flmul@prod,f,c
  7027  002112  0E00               	movlw	0
  7028  002114  2225               	addwfc	___flmul@prod+1,f,c
  7029  002116  2226               	addwfc	___flmul@prod+2,f,c
  7030  002118  2227               	addwfc	___flmul@prod+3,f,c
  7031  00211A  5015               	movf	___flmul@a,w,c
  7032  00211C  0213               	mulwf	___flmul@b+2,c
  7033  00211E  CFF3 F028          	movff	prodl,___flmul@temp
  7034  002122  CFF4 F029          	movff	prodh,___flmul@temp+1
  7035  002126  5028               	movf	___flmul@temp,w,c
  7036  002128  261F               	addwf	___flmul@grs,f,c
  7037  00212A  0E00               	movlw	0
  7038  00212C  2220               	addwfc	___flmul@grs+1,f,c
  7039  00212E  2221               	addwfc	___flmul@grs+2,f,c
  7040  002130  2222               	addwfc	___flmul@grs+3,f,c
  7041  002132  5029               	movf	___flmul@temp+1,w,c
  7042  002134  2624               	addwf	___flmul@prod,f,c
  7043  002136  0E00               	movlw	0
  7044  002138  2225               	addwfc	___flmul@prod+1,f,c
  7045  00213A  2226               	addwfc	___flmul@prod+2,f,c
  7046  00213C  2227               	addwfc	___flmul@prod+3,f,c
  7047  00213E  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  7048  002142  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  7049  002146  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  7050  00214A  6A1F               	clrf	___flmul@grs,c
  7051  00214C  5015               	movf	___flmul@a,w,c
  7052  00214E  0212               	mulwf	___flmul@b+1,c
  7053  002150  CFF3 F028          	movff	prodl,___flmul@temp
  7054  002154  CFF4 F029          	movff	prodh,___flmul@temp+1
  7055  002158  5028               	movf	___flmul@temp,w,c
  7056  00215A  261F               	addwf	___flmul@grs,f,c
  7057  00215C  5029               	movf	___flmul@temp+1,w,c
  7058  00215E  2220               	addwfc	___flmul@grs+1,f,c
  7059  002160  0E00               	movlw	0
  7060  002162  2221               	addwfc	___flmul@grs+2,f,c
  7061  002164  0E00               	movlw	0
  7062  002166  2222               	addwfc	___flmul@grs+3,f,c
  7063  002168  5016               	movf	___flmul@a+1,w,c
  7064  00216A  0211               	mulwf	___flmul@b,c
  7065  00216C  CFF3 F028          	movff	prodl,___flmul@temp
  7066  002170  CFF4 F029          	movff	prodh,___flmul@temp+1
  7067  002174  5028               	movf	___flmul@temp,w,c
  7068  002176  261F               	addwf	___flmul@grs,f,c
  7069  002178  5029               	movf	___flmul@temp+1,w,c
  7070  00217A  2220               	addwfc	___flmul@grs+1,f,c
  7071  00217C  0E00               	movlw	0
  7072  00217E  2221               	addwfc	___flmul@grs+2,f,c
  7073  002180  0E00               	movlw	0
  7074  002182  2222               	addwfc	___flmul@grs+3,f,c
  7075  002184  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  7076  002188  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  7077  00218C  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  7078  002190  6A1F               	clrf	___flmul@grs,c
  7079  002192  5015               	movf	___flmul@a,w,c
  7080  002194  0211               	mulwf	___flmul@b,c
  7081  002196  CFF3 F028          	movff	prodl,___flmul@temp
  7082  00219A  CFF4 F029          	movff	prodh,___flmul@temp+1
  7083  00219E  5028               	movf	___flmul@temp,w,c
  7084  0021A0  261F               	addwf	___flmul@grs,f,c
  7085  0021A2  5029               	movf	___flmul@temp+1,w,c
  7086  0021A4  2220               	addwfc	___flmul@grs+1,f,c
  7087  0021A6  0E00               	movlw	0
  7088  0021A8  2221               	addwfc	___flmul@grs+2,f,c
  7089  0021AA  0E00               	movlw	0
  7090  0021AC  2222               	addwfc	___flmul@grs+3,f,c
  7091  0021AE  5017               	movf	___flmul@a+2,w,c
  7092  0021B0  0212               	mulwf	___flmul@b+1,c
  7093  0021B2  CFF3 F028          	movff	prodl,___flmul@temp
  7094  0021B6  CFF4 F029          	movff	prodh,___flmul@temp+1
  7095  0021BA  5028               	movf	___flmul@temp,w,c
  7096  0021BC  2624               	addwf	___flmul@prod,f,c
  7097  0021BE  5029               	movf	___flmul@temp+1,w,c
  7098  0021C0  2225               	addwfc	___flmul@prod+1,f,c
  7099  0021C2  0E00               	movlw	0
  7100  0021C4  2226               	addwfc	___flmul@prod+2,f,c
  7101  0021C6  0E00               	movlw	0
  7102  0021C8  2227               	addwfc	___flmul@prod+3,f,c
  7103  0021CA  5016               	movf	___flmul@a+1,w,c
  7104  0021CC  0213               	mulwf	___flmul@b+2,c
  7105  0021CE  CFF3 F028          	movff	prodl,___flmul@temp
  7106  0021D2  CFF4 F029          	movff	prodh,___flmul@temp+1
  7107  0021D6  5028               	movf	___flmul@temp,w,c
  7108  0021D8  2624               	addwf	___flmul@prod,f,c
  7109  0021DA  5029               	movf	___flmul@temp+1,w,c
  7110  0021DC  2225               	addwfc	___flmul@prod+1,f,c
  7111  0021DE  0E00               	movlw	0
  7112  0021E0  2226               	addwfc	___flmul@prod+2,f,c
  7113  0021E2  0E00               	movlw	0
  7114  0021E4  2227               	addwfc	___flmul@prod+3,f,c
  7115  0021E6  5017               	movf	___flmul@a+2,w,c
  7116  0021E8  0213               	mulwf	___flmul@b+2,c
  7117  0021EA  CFF3 F028          	movff	prodl,___flmul@temp
  7118  0021EE  CFF4 F029          	movff	prodh,___flmul@temp+1
  7119  0021F2  5028               	movf	___flmul@temp,w,c
  7120  0021F4  6E19               	movwf	??___flmul& (0+255),c
  7121  0021F6  5029               	movf	___flmul@temp+1,w,c
  7122  0021F8  6E1A               	movwf	(??___flmul+1)& (0+255),c
  7123  0021FA  6A1B               	clrf	(??___flmul+2)& (0+255),c
  7124  0021FC  6A1C               	clrf	(??___flmul+3)& (0+255),c
  7125  0021FE  C01B  F01C         	movff	??___flmul+2,??___flmul+3
  7126  002202  C01A  F01B         	movff	??___flmul+1,??___flmul+2
  7127  002206  C019  F01A         	movff	??___flmul,??___flmul+1
  7128  00220A  6A19               	clrf	??___flmul,c
  7129  00220C  5019               	movf	??___flmul,w,c
  7130  00220E  2624               	addwf	___flmul@prod,f,c
  7131  002210  501A               	movf	??___flmul+1,w,c
  7132  002212  2225               	addwfc	___flmul@prod+1,f,c
  7133  002214  501B               	movf	??___flmul+2,w,c
  7134  002216  2226               	addwfc	___flmul@prod+2,f,c
  7135  002218  501C               	movf	??___flmul+3,w,c
  7136  00221A  2227               	addwfc	___flmul@prod+3,f,c
  7137  00221C  C01F  F019         	movff	___flmul@grs,??___flmul
  7138  002220  C020  F01A         	movff	___flmul@grs+1,??___flmul+1
  7139  002224  C021  F01B         	movff	___flmul@grs+2,??___flmul+2
  7140  002228  C022  F01C         	movff	___flmul@grs+3,??___flmul+3
  7141  00222C  0E19               	movlw	25
  7142  00222E  D005               	goto	u8680
  7143  002230                     u8685:
  7144  002230  90D8               	bcf	status,0,c
  7145  002232  321C               	rrcf	??___flmul+3,f,c
  7146  002234  321B               	rrcf	??___flmul+2,f,c
  7147  002236  321A               	rrcf	??___flmul+1,f,c
  7148  002238  3219               	rrcf	??___flmul,f,c
  7149  00223A                     u8680:
  7150  00223A  2EE8               	decfsz	wreg,f,c
  7151  00223C  D7F9               	goto	u8685
  7152  00223E  5019               	movf	??___flmul,w,c
  7153  002240  2624               	addwf	___flmul@prod,f,c
  7154  002242  501A               	movf	??___flmul+1,w,c
  7155  002244  2225               	addwfc	___flmul@prod+1,f,c
  7156  002246  501B               	movf	??___flmul+2,w,c
  7157  002248  2226               	addwfc	___flmul@prod+2,f,c
  7158  00224A  501C               	movf	??___flmul+3,w,c
  7159  00224C  2227               	addwfc	___flmul@prod+3,f,c
  7160  00224E  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  7161  002252  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  7162  002256  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  7163  00225A  6A1F               	clrf	___flmul@grs,c
  7164  00225C  501E               	movf	___flmul@aexp,w,c
  7165  00225E  C023  F019         	movff	___flmul@bexp,??___flmul
  7166  002262  6A1A               	clrf	(??___flmul+1)& (0+255),c
  7167  002264  2619               	addwf	??___flmul,f,c
  7168  002266  0E00               	movlw	0
  7169  002268  221A               	addwfc	??___flmul+1,f,c
  7170  00226A  0E82               	movlw	130
  7171  00226C  2419               	addwf	??___flmul,w,c
  7172  00226E  6E28               	movwf	___flmul@temp,c
  7173  002270  0EFF               	movlw	255
  7174  002272  201A               	addwfc	??___flmul+1,w,c
  7175  002274  6E29               	movwf	___flmul@temp+1,c
  7176  002276  D00F               	goto	l6679
  7177  002278                     l6673:
  7178  002278  90D8               	bcf	status,0,c
  7179  00227A  3624               	rlcf	___flmul@prod,f,c
  7180  00227C  3625               	rlcf	___flmul@prod+1,f,c
  7181  00227E  3626               	rlcf	___flmul@prod+2,f,c
  7182  002280  3627               	rlcf	___flmul@prod+3,f,c
  7183  002282  BE22               	btfsc	___flmul@grs+3,7,c
  7184  002284  8024               	bsf	___flmul@prod,0,c
  7185  002286  90D8               	bcf	status,0,c
  7186  002288  361F               	rlcf	___flmul@grs,f,c
  7187  00228A  3620               	rlcf	___flmul@grs+1,f,c
  7188  00228C  3621               	rlcf	___flmul@grs+2,f,c
  7189  00228E  3622               	rlcf	___flmul@grs+3,f,c
  7190  002290  0628               	decf	___flmul@temp,f,c
  7191  002292  A0D8               	btfss	status,0,c
  7192  002294  0629               	decf	___flmul@temp+1,f,c
  7193  002296                     l6679:
  7194  002296  AE26               	btfss	___flmul@prod+2,7,c
  7195  002298  D7EF               	goto	l6673
  7196  00229A  0E00               	movlw	0
  7197  00229C  6E1E               	movwf	___flmul@aexp,c
  7198  00229E  AE22               	btfss	___flmul@grs+3,7,c
  7199  0022A0  D017               	goto	l1123
  7200  0022A2  0EFF               	movlw	255
  7201  0022A4  141F               	andwf	___flmul@grs,w,c
  7202  0022A6  6E19               	movwf	??___flmul& (0+255),c
  7203  0022A8  0EFF               	movlw	255
  7204  0022AA  1420               	andwf	___flmul@grs+1,w,c
  7205  0022AC  6E1A               	movwf	(??___flmul+1)& (0+255),c
  7206  0022AE  0EFF               	movlw	255
  7207  0022B0  1421               	andwf	___flmul@grs+2,w,c
  7208  0022B2  6E1B               	movwf	(??___flmul+2)& (0+255),c
  7209  0022B4  0E7F               	movlw	127
  7210  0022B6  1422               	andwf	___flmul@grs+3,w,c
  7211  0022B8  6E1C               	movwf	(??___flmul+3)& (0+255),c
  7212  0022BA  5019               	movf	??___flmul,w,c
  7213  0022BC  101A               	iorwf	??___flmul+1,w,c
  7214  0022BE  101B               	iorwf	??___flmul+2,w,c
  7215  0022C0  101C               	iorwf	??___flmul+3,w,c
  7216  0022C2  B4D8               	btfsc	status,2,c
  7217  0022C4  D003               	goto	l1124
  7218  0022C6                     u8720:
  7219  0022C6  0E01               	movlw	1
  7220  0022C8  6E1E               	movwf	___flmul@aexp,c
  7221  0022CA  D002               	goto	l1123
  7222  0022CC                     l1124:
  7223  0022CC  B024               	btfsc	___flmul@prod,0,c
  7224  0022CE  D7FB               	goto	u8720
  7225  0022D0                     l1123:
  7226  0022D0  501E               	movf	___flmul@aexp,w,c
  7227  0022D2  B4D8               	btfsc	status,2,c
  7228  0022D4  D01F               	goto	l6699
  7229  0022D6  0E01               	movlw	1
  7230  0022D8  2624               	addwf	___flmul@prod,f,c
  7231  0022DA  0E00               	movlw	0
  7232  0022DC  2225               	addwfc	___flmul@prod+1,f,c
  7233  0022DE  2226               	addwfc	___flmul@prod+2,f,c
  7234  0022E0  2227               	addwfc	___flmul@prod+3,f,c
  7235  0022E2  A027               	btfss	___flmul@prod+3,0,c
  7236  0022E4  D017               	goto	l6699
  7237  0022E6  C024  F019         	movff	___flmul@prod,??___flmul
  7238  0022EA  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
  7239  0022EE  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
  7240  0022F2  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
  7241  0022F6  341C               	rlcf	??___flmul+3,w,c
  7242  0022F8  321C               	rrcf	??___flmul+3,f,c
  7243  0022FA  321B               	rrcf	??___flmul+2,f,c
  7244  0022FC  321A               	rrcf	??___flmul+1,f,c
  7245  0022FE  3219               	rrcf	??___flmul,f,c
  7246  002300  C019  F024         	movff	??___flmul,___flmul@prod
  7247  002304  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
  7248  002308  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
  7249  00230C  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
  7250  002310  4A28               	infsnz	___flmul@temp,f,c
  7251  002312  2A29               	incf	___flmul@temp+1,f,c
  7252  002314                     l6699:
  7253  002314  BE29               	btfsc	___flmul@temp+1,7,c
  7254  002316  D00D               	goto	l6703
  7255  002318  5029               	movf	___flmul@temp+1,w,c
  7256  00231A  E103               	bnz	u8760
  7257  00231C  2828               	incf	___flmul@temp,w,c
  7258  00231E  A0D8               	btfss	status,0,c
  7259  002320  D008               	goto	l6703
  7260  002322                     u8760:
  7261  002322  0E00               	movlw	0
  7262  002324  6E24               	movwf	___flmul@prod,c
  7263  002326  0E00               	movlw	0
  7264  002328  6E25               	movwf	___flmul@prod+1,c
  7265  00232A  0E80               	movlw	128
  7266  00232C  6E26               	movwf	___flmul@prod+2,c
  7267  00232E  0E7F               	movlw	127
  7268  002330  D020               	goto	L12
  7269  002332                     l6703:
  7270  002332  BE29               	btfsc	___flmul@temp+1,7,c
  7271  002334  D005               	goto	u8770
  7272  002336  5029               	movf	___flmul@temp+1,w,c
  7273  002338  E10E               	bnz	l1131
  7274  00233A  0428               	decf	___flmul@temp,w,c
  7275  00233C  B0D8               	btfsc	status,0,c
  7276  00233E  D00B               	goto	l1131
  7277  002340                     u8770:
  7278  002340  0E00               	movlw	0
  7279  002342  6E24               	movwf	___flmul@prod,c
  7280  002344  0E00               	movlw	0
  7281  002346  6E25               	movwf	___flmul@prod+1,c
  7282  002348  0E00               	movlw	0
  7283  00234A  6E26               	movwf	___flmul@prod+2,c
  7284  00234C  0E00               	movlw	0
  7285  00234E  6E27               	movwf	___flmul@prod+3,c
  7286  002350  0E00               	movlw	0
  7287  002352  6E1D               	movwf	___flmul@sign,c
  7288  002354  D00F               	goto	l6715
  7289  002356                     l1131:
  7290  002356  C028  F023         	movff	___flmul@temp,___flmul@bexp
  7291  00235A  0EFF               	movlw	255
  7292  00235C  1624               	andwf	___flmul@prod,f,c
  7293  00235E  0EFF               	movlw	255
  7294  002360  1625               	andwf	___flmul@prod+1,f,c
  7295  002362  0E7F               	movlw	127
  7296  002364  1626               	andwf	___flmul@prod+2,f,c
  7297  002366  0E00               	movlw	0
  7298  002368  1627               	andwf	___flmul@prod+3,f,c
  7299  00236A  B023               	btfsc	___flmul@bexp,0,c
  7300  00236C  8E26               	bsf	___flmul@prod+2,7,c
  7301  00236E  90D8               	bcf	status,0,c
  7302  002370  3023               	rrcf	___flmul@bexp,w,c
  7303  002372                     L12:
  7304  002372  6E27               	movwf	___flmul@prod+3,c
  7305  002374                     l6715:
  7306  002374  501D               	movf	___flmul@sign,w,c
  7307  002376  1227               	iorwf	___flmul@prod+3,f,c
  7308  002378  C024  F011         	movff	___flmul@prod,?___flmul
  7309  00237C  C025  F012         	movff	___flmul@prod+1,?___flmul+1
  7310  002380  C026  F013         	movff	___flmul@prod+2,?___flmul+2
  7311  002384  C027  F014         	movff	___flmul@prod+3,?___flmul+3
  7312  002388  0012               	return		;funcret
  7313  00238A                     __end_of___flmul:
  7314                           	opt callstack 0
  7315                           
  7316 ;; *************** function ___flge *****************
  7317 ;; Defined at:
  7318 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/flge.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;  ff1             4   41[COMRAM] unsigned char 
  7321 ;;  ff2             4   45[COMRAM] unsigned char 
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;		None
  7324 ;; Return value:  Size  Location     Type
  7325 ;;		None               void
  7326 ;; Registers used:
  7327 ;;		wreg, status,2, status,0
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7333 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7335 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7336 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7337 ;;Total ram usage:       12 bytes
  7338 ;; Hardware stack levels used:    1
  7339 ;; Hardware stack levels required when called:    2
  7340 ;; This function calls:
  7341 ;;		Nothing
  7342 ;; This function is called by:
  7343 ;;		_efgtoa
  7344 ;; This function uses a non-reentrant model
  7345 ;;
  7346                           
  7347                           	psect	text22
  7348  003B06                     __ptext22:
  7349                           	opt callstack 0
  7350  003B06                     ___flge:
  7351                           	opt callstack 24
  7352                           
  7353                           ;incstack = 0
  7354  003B06  0E00               	movlw	0
  7355  003B08  142A               	andwf	___flge@ff1,w,c
  7356  003B0A  6E32               	movwf	??___flge& (0+255),c
  7357  003B0C  0E00               	movlw	0
  7358  003B0E  142B               	andwf	___flge@ff1+1,w,c
  7359  003B10  6E33               	movwf	(??___flge+1)& (0+255),c
  7360  003B12  0E80               	movlw	128
  7361  003B14  142C               	andwf	___flge@ff1+2,w,c
  7362  003B16  6E34               	movwf	(??___flge+2)& (0+255),c
  7363  003B18  0E7F               	movlw	127
  7364  003B1A  142D               	andwf	___flge@ff1+3,w,c
  7365  003B1C  6E35               	movwf	(??___flge+3)& (0+255),c
  7366  003B1E  5032               	movf	??___flge,w,c
  7367  003B20  1033               	iorwf	??___flge+1,w,c
  7368  003B22  1034               	iorwf	??___flge+2,w,c
  7369  003B24  1035               	iorwf	??___flge+3,w,c
  7370  003B26  A4D8               	btfss	status,2,c
  7371  003B28  D008               	goto	l6827
  7372  003B2A  0E00               	movlw	0
  7373  003B2C  6E2A               	movwf	___flge@ff1,c
  7374  003B2E  0E00               	movlw	0
  7375  003B30  6E2B               	movwf	___flge@ff1+1,c
  7376  003B32  0E00               	movlw	0
  7377  003B34  6E2C               	movwf	___flge@ff1+2,c
  7378  003B36  0E00               	movlw	0
  7379  003B38  6E2D               	movwf	___flge@ff1+3,c
  7380  003B3A                     l6827:
  7381  003B3A  0E00               	movlw	0
  7382  003B3C  142E               	andwf	___flge@ff2,w,c
  7383  003B3E  6E32               	movwf	??___flge& (0+255),c
  7384  003B40  0E00               	movlw	0
  7385  003B42  142F               	andwf	___flge@ff2+1,w,c
  7386  003B44  6E33               	movwf	(??___flge+1)& (0+255),c
  7387  003B46  0E80               	movlw	128
  7388  003B48  1430               	andwf	___flge@ff2+2,w,c
  7389  003B4A  6E34               	movwf	(??___flge+2)& (0+255),c
  7390  003B4C  0E7F               	movlw	127
  7391  003B4E  1431               	andwf	___flge@ff2+3,w,c
  7392  003B50  6E35               	movwf	(??___flge+3)& (0+255),c
  7393  003B52  5032               	movf	??___flge,w,c
  7394  003B54  1033               	iorwf	??___flge+1,w,c
  7395  003B56  1034               	iorwf	??___flge+2,w,c
  7396  003B58  1035               	iorwf	??___flge+3,w,c
  7397  003B5A  A4D8               	btfss	status,2,c
  7398  003B5C  D008               	goto	l6831
  7399  003B5E  0E00               	movlw	0
  7400  003B60  6E2E               	movwf	___flge@ff2,c
  7401  003B62  0E00               	movlw	0
  7402  003B64  6E2F               	movwf	___flge@ff2+1,c
  7403  003B66  0E00               	movlw	0
  7404  003B68  6E30               	movwf	___flge@ff2+2,c
  7405  003B6A  0E00               	movlw	0
  7406  003B6C  6E31               	movwf	___flge@ff2+3,c
  7407  003B6E                     l6831:
  7408  003B6E  AE2D               	btfss	___flge@ff1+3,7,c
  7409  003B70  D009               	goto	l6835
  7410  003B72  6C2A               	negf	___flge@ff1,c
  7411  003B74  1E2B               	comf	___flge@ff1+1,f,c
  7412  003B76  B0D8               	btfsc	status,0,c
  7413  003B78  2A2B               	incf	___flge@ff1+1,f,c
  7414  003B7A  1E2C               	comf	___flge@ff1+2,f,c
  7415  003B7C  B0D8               	btfsc	status,0,c
  7416  003B7E  2A2C               	incf	___flge@ff1+2,f,c
  7417  003B80  0E80               	movlw	128
  7418  003B82  562D               	subfwb	___flge@ff1+3,f,c
  7419  003B84                     l6835:
  7420  003B84  AE31               	btfss	___flge@ff2+3,7,c
  7421  003B86  D009               	goto	l765
  7422  003B88  6C2E               	negf	___flge@ff2,c
  7423  003B8A  1E2F               	comf	___flge@ff2+1,f,c
  7424  003B8C  B0D8               	btfsc	status,0,c
  7425  003B8E  2A2F               	incf	___flge@ff2+1,f,c
  7426  003B90  1E30               	comf	___flge@ff2+2,f,c
  7427  003B92  B0D8               	btfsc	status,0,c
  7428  003B94  2A30               	incf	___flge@ff2+2,f,c
  7429  003B96  0E80               	movlw	128
  7430  003B98  5631               	subfwb	___flge@ff2+3,f,c
  7431  003B9A                     l765:
  7432  003B9A  0E00               	movlw	0
  7433  003B9C  1A2A               	xorwf	___flge@ff1,f,c
  7434  003B9E  0E00               	movlw	0
  7435  003BA0  1A2B               	xorwf	___flge@ff1+1,f,c
  7436  003BA2  0E00               	movlw	0
  7437  003BA4  1A2C               	xorwf	___flge@ff1+2,f,c
  7438  003BA6  0E80               	movlw	128
  7439  003BA8  1A2D               	xorwf	___flge@ff1+3,f,c
  7440  003BAA  0E00               	movlw	0
  7441  003BAC  1A2E               	xorwf	___flge@ff2,f,c
  7442  003BAE  0E00               	movlw	0
  7443  003BB0  1A2F               	xorwf	___flge@ff2+1,f,c
  7444  003BB2  0E00               	movlw	0
  7445  003BB4  1A30               	xorwf	___flge@ff2+2,f,c
  7446  003BB6  0E80               	movlw	128
  7447  003BB8  1A31               	xorwf	___flge@ff2+3,f,c
  7448  003BBA  502E               	movf	___flge@ff2,w,c
  7449  003BBC  5C2A               	subwf	___flge@ff1,w,c
  7450  003BBE  502F               	movf	___flge@ff2+1,w,c
  7451  003BC0  582B               	subwfb	___flge@ff1+1,w,c
  7452  003BC2  5030               	movf	___flge@ff2+2,w,c
  7453  003BC4  582C               	subwfb	___flge@ff1+2,w,c
  7454  003BC6  5031               	movf	___flge@ff2+3,w,c
  7455  003BC8  582D               	subwfb	___flge@ff1+3,w,c
  7456  003BCA  B0D8               	btfsc	status,0,c
  7457  003BCC  D002               	goto	l6841
  7458  003BCE  90D8               	bcf	status,0,c
  7459  003BD0  0012               	return	
  7460  003BD2                     l6841:
  7461  003BD2  80D8               	bsf	status,0,c
  7462  003BD4  0012               	return		;funcret
  7463  003BD6                     __end_of___flge:
  7464                           	opt callstack 0
  7465                           
  7466 ;; *************** function ___fleq *****************
  7467 ;; Defined at:
  7468 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/fleq.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;  ff1             4   16[COMRAM] unsigned char 
  7471 ;;  ff2             4   20[COMRAM] unsigned char 
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;		None
  7474 ;; Return value:  Size  Location     Type
  7475 ;;		None               void
  7476 ;; Registers used:
  7477 ;;		wreg, status,2, status,0
  7478 ;; Tracked objects:
  7479 ;;		On entry : 0/0
  7480 ;;		On exit  : 0/0
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7483 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7485 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7486 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7487 ;;Total ram usage:       12 bytes
  7488 ;; Hardware stack levels used:    1
  7489 ;; Hardware stack levels required when called:    2
  7490 ;; This function calls:
  7491 ;;		Nothing
  7492 ;; This function is called by:
  7493 ;;		_efgtoa
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497                           	psect	text23
  7498  004096                     __ptext23:
  7499                           	opt callstack 0
  7500  004096                     ___fleq:
  7501                           	opt callstack 24
  7502                           
  7503                           ;incstack = 0
  7504  004096  0E00               	movlw	0
  7505  004098  1411               	andwf	___fleq@ff1,w,c
  7506  00409A  6E19               	movwf	??___fleq& (0+255),c
  7507  00409C  0E00               	movlw	0
  7508  00409E  1412               	andwf	___fleq@ff1+1,w,c
  7509  0040A0  6E1A               	movwf	(??___fleq+1)& (0+255),c
  7510  0040A2  0E80               	movlw	128
  7511  0040A4  1413               	andwf	___fleq@ff1+2,w,c
  7512  0040A6  6E1B               	movwf	(??___fleq+2)& (0+255),c
  7513  0040A8  0E7F               	movlw	127
  7514  0040AA  1414               	andwf	___fleq@ff1+3,w,c
  7515  0040AC  6E1C               	movwf	(??___fleq+3)& (0+255),c
  7516  0040AE  5019               	movf	??___fleq,w,c
  7517  0040B0  101A               	iorwf	??___fleq+1,w,c
  7518  0040B2  101B               	iorwf	??___fleq+2,w,c
  7519  0040B4  101C               	iorwf	??___fleq+3,w,c
  7520  0040B6  A4D8               	btfss	status,2,c
  7521  0040B8  D008               	goto	l6811
  7522  0040BA  0E00               	movlw	0
  7523  0040BC  6E11               	movwf	___fleq@ff1,c
  7524  0040BE  0E00               	movlw	0
  7525  0040C0  6E12               	movwf	___fleq@ff1+1,c
  7526  0040C2  0E00               	movlw	0
  7527  0040C4  6E13               	movwf	___fleq@ff1+2,c
  7528  0040C6  0E00               	movlw	0
  7529  0040C8  6E14               	movwf	___fleq@ff1+3,c
  7530  0040CA                     l6811:
  7531  0040CA  0E00               	movlw	0
  7532  0040CC  1415               	andwf	___fleq@ff2,w,c
  7533  0040CE  6E19               	movwf	??___fleq& (0+255),c
  7534  0040D0  0E00               	movlw	0
  7535  0040D2  1416               	andwf	___fleq@ff2+1,w,c
  7536  0040D4  6E1A               	movwf	(??___fleq+1)& (0+255),c
  7537  0040D6  0E80               	movlw	128
  7538  0040D8  1417               	andwf	___fleq@ff2+2,w,c
  7539  0040DA  6E1B               	movwf	(??___fleq+2)& (0+255),c
  7540  0040DC  0E7F               	movlw	127
  7541  0040DE  1418               	andwf	___fleq@ff2+3,w,c
  7542  0040E0  6E1C               	movwf	(??___fleq+3)& (0+255),c
  7543  0040E2  5019               	movf	??___fleq,w,c
  7544  0040E4  101A               	iorwf	??___fleq+1,w,c
  7545  0040E6  101B               	iorwf	??___fleq+2,w,c
  7546  0040E8  101C               	iorwf	??___fleq+3,w,c
  7547  0040EA  A4D8               	btfss	status,2,c
  7548  0040EC  D008               	goto	l6815
  7549  0040EE  0E00               	movlw	0
  7550  0040F0  6E15               	movwf	___fleq@ff2,c
  7551  0040F2  0E00               	movlw	0
  7552  0040F4  6E16               	movwf	___fleq@ff2+1,c
  7553  0040F6  0E00               	movlw	0
  7554  0040F8  6E17               	movwf	___fleq@ff2+2,c
  7555  0040FA  0E00               	movlw	0
  7556  0040FC  6E18               	movwf	___fleq@ff2+3,c
  7557  0040FE                     l6815:
  7558  0040FE  5015               	movf	___fleq@ff2,w,c
  7559  004100  1811               	xorwf	___fleq@ff1,w,c
  7560  004102  E10A               	bnz	u8930
  7561  004104  5016               	movf	___fleq@ff2+1,w,c
  7562  004106  1812               	xorwf	___fleq@ff1+1,w,c
  7563  004108  E107               	bnz	u8930
  7564  00410A  5017               	movf	___fleq@ff2+2,w,c
  7565  00410C  1813               	xorwf	___fleq@ff1+2,w,c
  7566  00410E  E104               	bnz	u8930
  7567  004110  5018               	movf	___fleq@ff2+3,w,c
  7568  004112  1814               	xorwf	___fleq@ff1+3,w,c
  7569  004114  B4D8               	btfsc	status,2,c
  7570  004116  D002               	goto	l6819
  7571  004118                     u8930:
  7572  004118  90D8               	bcf	status,0,c
  7573  00411A  0012               	return	
  7574  00411C                     l6819:
  7575  00411C  80D8               	bsf	status,0,c
  7576  00411E  0012               	return		;funcret
  7577  004120                     __end_of___fleq:
  7578                           	opt callstack 0
  7579                           
  7580 ;; *************** function ___fldiv *****************
  7581 ;; Defined at:
  7582 ;;		line 11 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
  7583 ;; Parameters:    Size  Location     Type
  7584 ;;  b               4   16[COMRAM] unsigned char 
  7585 ;;  a               4   20[COMRAM] unsigned char 
  7586 ;; Auto vars:     Size  Location     Type
  7587 ;;  grs             4   35[COMRAM] unsigned long 
  7588 ;;  rem             4   28[COMRAM] unsigned long 
  7589 ;;  new_exp         2   33[COMRAM] short 
  7590 ;;  aexp            1   40[COMRAM] unsigned char 
  7591 ;;  bexp            1   39[COMRAM] unsigned char 
  7592 ;;  sign            1   32[COMRAM] unsigned char 
  7593 ;; Return value:  Size  Location     Type
  7594 ;;                  4   16[COMRAM] unsigned char 
  7595 ;; Registers used:
  7596 ;;		wreg, status,2, status,0
  7597 ;; Tracked objects:
  7598 ;;		On entry : 0/0
  7599 ;;		On exit  : 0/0
  7600 ;;		Unchanged: 0/0
  7601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7602 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7603 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7604 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7605 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7606 ;;Total ram usage:       25 bytes
  7607 ;; Hardware stack levels used:    1
  7608 ;; Hardware stack levels required when called:    2
  7609 ;; This function calls:
  7610 ;;		Nothing
  7611 ;; This function is called by:
  7612 ;;		_efgtoa
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           	psect	text24
  7617  002CAE                     __ptext24:
  7618                           	opt callstack 0
  7619  002CAE                     ___fldiv:
  7620                           	opt callstack 24
  7621                           
  7622                           ;incstack = 0
  7623  002CAE  5014               	movf	___fldiv@b+3,w,c
  7624  002CB0  0B80               	andlw	128
  7625  002CB2  6E21               	movwf	___fldiv@sign,c
  7626  002CB4  5014               	movf	___fldiv@b+3,w,c
  7627  002CB6  2414               	addwf	___fldiv@b+3,w,c
  7628  002CB8  6E28               	movwf	___fldiv@bexp,c
  7629  002CBA  BE13               	btfsc	___fldiv@b+2,7,c
  7630  002CBC  8028               	bsf	___fldiv@bexp,0,c
  7631  002CBE  5028               	movf	___fldiv@bexp,w,c
  7632  002CC0  B4D8               	btfsc	status,2,c
  7633  002CC2  D00D               	goto	l6469
  7634  002CC4  2828               	incf	___fldiv@bexp,w,c
  7635  002CC6  A4D8               	btfss	status,2,c
  7636  002CC8  D008               	goto	l6465
  7637  002CCA  0E00               	movlw	0
  7638  002CCC  6E11               	movwf	___fldiv@b,c
  7639  002CCE  0E00               	movlw	0
  7640  002CD0  6E12               	movwf	___fldiv@b+1,c
  7641  002CD2  0E00               	movlw	0
  7642  002CD4  6E13               	movwf	___fldiv@b+2,c
  7643  002CD6  0E00               	movlw	0
  7644  002CD8  6E14               	movwf	___fldiv@b+3,c
  7645  002CDA                     l6465:
  7646  002CDA  8E13               	bsf	___fldiv@b+2,7,c
  7647  002CDC  D006               	goto	L13
  7648  002CDE                     l6469:
  7649  002CDE  0E00               	movlw	0
  7650  002CE0  6E11               	movwf	___fldiv@b,c
  7651  002CE2  0E00               	movlw	0
  7652  002CE4  6E12               	movwf	___fldiv@b+1,c
  7653  002CE6  0E00               	movlw	0
  7654  002CE8  6E13               	movwf	___fldiv@b+2,c
  7655  002CEA                     L13:
  7656  002CEA  0E00               	movlw	0
  7657  002CEC  6E14               	movwf	___fldiv@b+3,c
  7658  002CEE  5018               	movf	___fldiv@a+3,w,c
  7659  002CF0  0B80               	andlw	128
  7660  002CF2  1A21               	xorwf	___fldiv@sign,f,c
  7661  002CF4  5018               	movf	___fldiv@a+3,w,c
  7662  002CF6  2418               	addwf	___fldiv@a+3,w,c
  7663  002CF8  6E29               	movwf	___fldiv@aexp,c
  7664  002CFA  BE17               	btfsc	___fldiv@a+2,7,c
  7665  002CFC  8029               	bsf	___fldiv@aexp,0,c
  7666  002CFE  5029               	movf	___fldiv@aexp,w,c
  7667  002D00  B4D8               	btfsc	status,2,c
  7668  002D02  D00D               	goto	l6489
  7669  002D04  2829               	incf	___fldiv@aexp,w,c
  7670  002D06  A4D8               	btfss	status,2,c
  7671  002D08  D008               	goto	l6485
  7672  002D0A  0E00               	movlw	0
  7673  002D0C  6E15               	movwf	___fldiv@a,c
  7674  002D0E  0E00               	movlw	0
  7675  002D10  6E16               	movwf	___fldiv@a+1,c
  7676  002D12  0E00               	movlw	0
  7677  002D14  6E17               	movwf	___fldiv@a+2,c
  7678  002D16  0E00               	movlw	0
  7679  002D18  6E18               	movwf	___fldiv@a+3,c
  7680  002D1A                     l6485:
  7681  002D1A  8E17               	bsf	___fldiv@a+2,7,c
  7682  002D1C  D006               	goto	L14
  7683  002D1E                     l6489:
  7684  002D1E  0E00               	movlw	0
  7685  002D20  6E15               	movwf	___fldiv@a,c
  7686  002D22  0E00               	movlw	0
  7687  002D24  6E16               	movwf	___fldiv@a+1,c
  7688  002D26  0E00               	movlw	0
  7689  002D28  6E17               	movwf	___fldiv@a+2,c
  7690  002D2A                     L14:
  7691  002D2A  0E00               	movlw	0
  7692  002D2C  6E18               	movwf	___fldiv@a+3,c
  7693  002D2E  5015               	movf	___fldiv@a,w,c
  7694  002D30  1016               	iorwf	___fldiv@a+1,w,c
  7695  002D32  1017               	iorwf	___fldiv@a+2,w,c
  7696  002D34  1018               	iorwf	___fldiv@a+3,w,c
  7697  002D36  A4D8               	btfss	status,2,c
  7698  002D38  D017               	goto	l6503
  7699  002D3A  0E00               	movlw	0
  7700  002D3C  6E11               	movwf	___fldiv@b,c
  7701  002D3E  0E00               	movlw	0
  7702  002D40  6E12               	movwf	___fldiv@b+1,c
  7703  002D42  0E00               	movlw	0
  7704  002D44  6E13               	movwf	___fldiv@b+2,c
  7705  002D46  0E00               	movlw	0
  7706  002D48  6E14               	movwf	___fldiv@b+3,c
  7707  002D4A  0E80               	movlw	128
  7708  002D4C  1213               	iorwf	___fldiv@b+2,f,c
  7709  002D4E  0E7F               	movlw	127
  7710  002D50  1214               	iorwf	___fldiv@b+3,f,c
  7711  002D52                     l6497:
  7712  002D52  5021               	movf	___fldiv@sign,w,c
  7713  002D54  1214               	iorwf	___fldiv@b+3,f,c
  7714  002D56  C011  F011         	movff	___fldiv@b,?___fldiv
  7715  002D5A  C012  F012         	movff	___fldiv@b+1,?___fldiv+1
  7716  002D5E  C013  F013         	movff	___fldiv@b+2,?___fldiv+2
  7717  002D62  C014  F014         	movff	___fldiv@b+3,?___fldiv+3
  7718  002D66  0012               	return	
  7719  002D68                     l6503:
  7720  002D68  5028               	movf	___fldiv@bexp,w,c
  7721  002D6A  A4D8               	btfss	status,2,c
  7722  002D6C  D009               	goto	l6511
  7723  002D6E  0E00               	movlw	0
  7724  002D70  6E11               	movwf	?___fldiv,c
  7725  002D72  0E00               	movlw	0
  7726  002D74  6E12               	movwf	?___fldiv+1,c
  7727  002D76  0E00               	movlw	0
  7728  002D78  6E13               	movwf	?___fldiv+2,c
  7729  002D7A  0E00               	movlw	0
  7730  002D7C  6E14               	movwf	?___fldiv+3,c
  7731  002D7E  0012               	return	
  7732  002D80                     l6511:
  7733  002D80  5029               	movf	___fldiv@aexp,w,c
  7734  002D82  C028  F019         	movff	___fldiv@bexp,??___fldiv
  7735  002D86  6A1A               	clrf	(??___fldiv+1)& (0+255),c
  7736  002D88  5E19               	subwf	??___fldiv,f,c
  7737  002D8A  0E00               	movlw	0
  7738  002D8C  5A1A               	subwfb	??___fldiv+1,f,c
  7739  002D8E  0E7F               	movlw	127
  7740  002D90  2419               	addwf	??___fldiv,w,c
  7741  002D92  6E22               	movwf	___fldiv@new_exp,c
  7742  002D94  0E00               	movlw	0
  7743  002D96  201A               	addwfc	??___fldiv+1,w,c
  7744  002D98  6E23               	movwf	___fldiv@new_exp+1,c
  7745  002D9A  C011  F01D         	movff	___fldiv@b,___fldiv@rem
  7746  002D9E  C012  F01E         	movff	___fldiv@b+1,___fldiv@rem+1
  7747  002DA2  C013  F01F         	movff	___fldiv@b+2,___fldiv@rem+2
  7748  002DA6  C014  F020         	movff	___fldiv@b+3,___fldiv@rem+3
  7749  002DAA  0E00               	movlw	0
  7750  002DAC  6E11               	movwf	___fldiv@b,c
  7751  002DAE  0E00               	movlw	0
  7752  002DB0  6E12               	movwf	___fldiv@b+1,c
  7753  002DB2  0E00               	movlw	0
  7754  002DB4  6E13               	movwf	___fldiv@b+2,c
  7755  002DB6  0E00               	movlw	0
  7756  002DB8  6E14               	movwf	___fldiv@b+3,c
  7757  002DBA  0E00               	movlw	0
  7758  002DBC  6E24               	movwf	___fldiv@grs,c
  7759  002DBE  0E00               	movlw	0
  7760  002DC0  6E25               	movwf	___fldiv@grs+1,c
  7761  002DC2  0E00               	movlw	0
  7762  002DC4  6E26               	movwf	___fldiv@grs+2,c
  7763  002DC6  0E00               	movlw	0
  7764  002DC8  6E27               	movwf	___fldiv@grs+3,c
  7765  002DCA  0E00               	movlw	0
  7766  002DCC  6E29               	movwf	___fldiv@aexp,c
  7767  002DCE  D028               	goto	l1084
  7768  002DD0                     l6521:
  7769  002DD0  5029               	movf	___fldiv@aexp,w,c
  7770  002DD2  B4D8               	btfsc	status,2,c
  7771  002DD4  D011               	goto	l6529
  7772  002DD6  90D8               	bcf	status,0,c
  7773  002DD8  361D               	rlcf	___fldiv@rem,f,c
  7774  002DDA  361E               	rlcf	___fldiv@rem+1,f,c
  7775  002DDC  361F               	rlcf	___fldiv@rem+2,f,c
  7776  002DDE  3620               	rlcf	___fldiv@rem+3,f,c
  7777  002DE0  90D8               	bcf	status,0,c
  7778  002DE2  3611               	rlcf	___fldiv@b,f,c
  7779  002DE4  3612               	rlcf	___fldiv@b+1,f,c
  7780  002DE6  3613               	rlcf	___fldiv@b+2,f,c
  7781  002DE8  3614               	rlcf	___fldiv@b+3,f,c
  7782  002DEA  BE27               	btfsc	___fldiv@grs+3,7,c
  7783  002DEC  8011               	bsf	___fldiv@b,0,c
  7784  002DEE  90D8               	bcf	status,0,c
  7785  002DF0  3624               	rlcf	___fldiv@grs,f,c
  7786  002DF2  3625               	rlcf	___fldiv@grs+1,f,c
  7787  002DF4  3626               	rlcf	___fldiv@grs+2,f,c
  7788  002DF6  3627               	rlcf	___fldiv@grs+3,f,c
  7789  002DF8                     l6529:
  7790  002DF8  5015               	movf	___fldiv@a,w,c
  7791  002DFA  5C1D               	subwf	___fldiv@rem,w,c
  7792  002DFC  5016               	movf	___fldiv@a+1,w,c
  7793  002DFE  581E               	subwfb	___fldiv@rem+1,w,c
  7794  002E00  5017               	movf	___fldiv@a+2,w,c
  7795  002E02  581F               	subwfb	___fldiv@rem+2,w,c
  7796  002E04  5018               	movf	___fldiv@a+3,w,c
  7797  002E06  5820               	subwfb	___fldiv@rem+3,w,c
  7798  002E08  A0D8               	btfss	status,0,c
  7799  002E0A  D009               	goto	l6535
  7800  002E0C  8C27               	bsf	___fldiv@grs+3,6,c
  7801  002E0E  5015               	movf	___fldiv@a,w,c
  7802  002E10  5E1D               	subwf	___fldiv@rem,f,c
  7803  002E12  5016               	movf	___fldiv@a+1,w,c
  7804  002E14  5A1E               	subwfb	___fldiv@rem+1,f,c
  7805  002E16  5017               	movf	___fldiv@a+2,w,c
  7806  002E18  5A1F               	subwfb	___fldiv@rem+2,f,c
  7807  002E1A  5018               	movf	___fldiv@a+3,w,c
  7808  002E1C  5A20               	subwfb	___fldiv@rem+3,f,c
  7809  002E1E                     l6535:
  7810  002E1E  2A29               	incf	___fldiv@aexp,f,c
  7811  002E20                     l1084:
  7812  002E20  0E19               	movlw	25
  7813  002E22  6429               	cpfsgt	___fldiv@aexp,c
  7814  002E24  D7D5               	goto	l6521
  7815  002E26  501D               	movf	___fldiv@rem,w,c
  7816  002E28  101E               	iorwf	___fldiv@rem+1,w,c
  7817  002E2A  101F               	iorwf	___fldiv@rem+2,w,c
  7818  002E2C  1020               	iorwf	___fldiv@rem+3,w,c
  7819  002E2E  B4D8               	btfsc	status,2,c
  7820  002E30  D011               	goto	l6547
  7821  002E32  8024               	bsf	___fldiv@grs,0,c
  7822  002E34  D00F               	goto	l6547
  7823  002E36                     l6541:
  7824  002E36  90D8               	bcf	status,0,c
  7825  002E38  3611               	rlcf	___fldiv@b,f,c
  7826  002E3A  3612               	rlcf	___fldiv@b+1,f,c
  7827  002E3C  3613               	rlcf	___fldiv@b+2,f,c
  7828  002E3E  3614               	rlcf	___fldiv@b+3,f,c
  7829  002E40  BE27               	btfsc	___fldiv@grs+3,7,c
  7830  002E42  8011               	bsf	___fldiv@b,0,c
  7831  002E44  90D8               	bcf	status,0,c
  7832  002E46  3624               	rlcf	___fldiv@grs,f,c
  7833  002E48  3625               	rlcf	___fldiv@grs+1,f,c
  7834  002E4A  3626               	rlcf	___fldiv@grs+2,f,c
  7835  002E4C  3627               	rlcf	___fldiv@grs+3,f,c
  7836  002E4E  0622               	decf	___fldiv@new_exp,f,c
  7837  002E50  A0D8               	btfss	status,0,c
  7838  002E52  0623               	decf	___fldiv@new_exp+1,f,c
  7839  002E54                     l6547:
  7840  002E54  AE13               	btfss	___fldiv@b+2,7,c
  7841  002E56  D7EF               	goto	l6541
  7842  002E58  0E00               	movlw	0
  7843  002E5A  6E29               	movwf	___fldiv@aexp,c
  7844  002E5C  AE27               	btfss	___fldiv@grs+3,7,c
  7845  002E5E  D017               	goto	l1095
  7846  002E60  0EFF               	movlw	255
  7847  002E62  1424               	andwf	___fldiv@grs,w,c
  7848  002E64  6E19               	movwf	??___fldiv& (0+255),c
  7849  002E66  0EFF               	movlw	255
  7850  002E68  1425               	andwf	___fldiv@grs+1,w,c
  7851  002E6A  6E1A               	movwf	(??___fldiv+1)& (0+255),c
  7852  002E6C  0EFF               	movlw	255
  7853  002E6E  1426               	andwf	___fldiv@grs+2,w,c
  7854  002E70  6E1B               	movwf	(??___fldiv+2)& (0+255),c
  7855  002E72  0E7F               	movlw	127
  7856  002E74  1427               	andwf	___fldiv@grs+3,w,c
  7857  002E76  6E1C               	movwf	(??___fldiv+3)& (0+255),c
  7858  002E78  5019               	movf	??___fldiv,w,c
  7859  002E7A  101A               	iorwf	??___fldiv+1,w,c
  7860  002E7C  101B               	iorwf	??___fldiv+2,w,c
  7861  002E7E  101C               	iorwf	??___fldiv+3,w,c
  7862  002E80  B4D8               	btfsc	status,2,c
  7863  002E82  D003               	goto	l1096
  7864  002E84                     u8530:
  7865  002E84  0E01               	movlw	1
  7866  002E86  6E29               	movwf	___fldiv@aexp,c
  7867  002E88  D002               	goto	l1095
  7868  002E8A                     l1096:
  7869  002E8A  B011               	btfsc	___fldiv@b,0,c
  7870  002E8C  D7FB               	goto	u8530
  7871  002E8E                     l1095:
  7872  002E8E  5029               	movf	___fldiv@aexp,w,c
  7873  002E90  B4D8               	btfsc	status,2,c
  7874  002E92  D01F               	goto	l6567
  7875  002E94  0E01               	movlw	1
  7876  002E96  2611               	addwf	___fldiv@b,f,c
  7877  002E98  0E00               	movlw	0
  7878  002E9A  2212               	addwfc	___fldiv@b+1,f,c
  7879  002E9C  2213               	addwfc	___fldiv@b+2,f,c
  7880  002E9E  2214               	addwfc	___fldiv@b+3,f,c
  7881  002EA0  A014               	btfss	___fldiv@b+3,0,c
  7882  002EA2  D017               	goto	l6567
  7883  002EA4  C011  F019         	movff	___fldiv@b,??___fldiv
  7884  002EA8  C012  F01A         	movff	___fldiv@b+1,??___fldiv+1
  7885  002EAC  C013  F01B         	movff	___fldiv@b+2,??___fldiv+2
  7886  002EB0  C014  F01C         	movff	___fldiv@b+3,??___fldiv+3
  7887  002EB4  341C               	rlcf	??___fldiv+3,w,c
  7888  002EB6  321C               	rrcf	??___fldiv+3,f,c
  7889  002EB8  321B               	rrcf	??___fldiv+2,f,c
  7890  002EBA  321A               	rrcf	??___fldiv+1,f,c
  7891  002EBC  3219               	rrcf	??___fldiv,f,c
  7892  002EBE  C019  F011         	movff	??___fldiv,___fldiv@b
  7893  002EC2  C01A  F012         	movff	??___fldiv+1,___fldiv@b+1
  7894  002EC6  C01B  F013         	movff	??___fldiv+2,___fldiv@b+2
  7895  002ECA  C01C  F014         	movff	??___fldiv+3,___fldiv@b+3
  7896  002ECE  4A22               	infsnz	___fldiv@new_exp,f,c
  7897  002ED0  2A23               	incf	___fldiv@new_exp+1,f,c
  7898  002ED2                     l6567:
  7899  002ED2  BE23               	btfsc	___fldiv@new_exp+1,7,c
  7900  002ED4  D010               	goto	l6571
  7901  002ED6  5023               	movf	___fldiv@new_exp+1,w,c
  7902  002ED8  E103               	bnz	u8570
  7903  002EDA  2822               	incf	___fldiv@new_exp,w,c
  7904  002EDC  A0D8               	btfss	status,0,c
  7905  002EDE  D00B               	goto	l6571
  7906  002EE0                     u8570:
  7907  002EE0  0E00               	movlw	0
  7908  002EE2  6E23               	movwf	___fldiv@new_exp+1,c
  7909  002EE4  6822               	setf	___fldiv@new_exp,c
  7910  002EE6  0E00               	movlw	0
  7911  002EE8  6E11               	movwf	___fldiv@b,c
  7912  002EEA  0E00               	movlw	0
  7913  002EEC  6E12               	movwf	___fldiv@b+1,c
  7914  002EEE  0E00               	movlw	0
  7915  002EF0  6E13               	movwf	___fldiv@b+2,c
  7916  002EF2  0E00               	movlw	0
  7917  002EF4  6E14               	movwf	___fldiv@b+3,c
  7918  002EF6                     l6571:
  7919  002EF6  BE23               	btfsc	___fldiv@new_exp+1,7,c
  7920  002EF8  D005               	goto	u8580
  7921  002EFA  5023               	movf	___fldiv@new_exp+1,w,c
  7922  002EFC  E111               	bnz	l6575
  7923  002EFE  0422               	decf	___fldiv@new_exp,w,c
  7924  002F00  B0D8               	btfsc	status,0,c
  7925  002F02  D00E               	goto	l6575
  7926  002F04                     u8580:
  7927  002F04  0E00               	movlw	0
  7928  002F06  6E23               	movwf	___fldiv@new_exp+1,c
  7929  002F08  0E00               	movlw	0
  7930  002F0A  6E22               	movwf	___fldiv@new_exp,c
  7931  002F0C  0E00               	movlw	0
  7932  002F0E  6E11               	movwf	___fldiv@b,c
  7933  002F10  0E00               	movlw	0
  7934  002F12  6E12               	movwf	___fldiv@b+1,c
  7935  002F14  0E00               	movlw	0
  7936  002F16  6E13               	movwf	___fldiv@b+2,c
  7937  002F18  0E00               	movlw	0
  7938  002F1A  6E14               	movwf	___fldiv@b+3,c
  7939  002F1C  0E00               	movlw	0
  7940  002F1E  6E21               	movwf	___fldiv@sign,c
  7941  002F20                     l6575:
  7942  002F20  C022  F028         	movff	___fldiv@new_exp,___fldiv@bexp
  7943  002F24  A028               	btfss	___fldiv@bexp,0,c
  7944  002F26  D002               	goto	l6581
  7945  002F28  8E13               	bsf	___fldiv@b+2,7,c
  7946  002F2A  D001               	goto	l6583
  7947  002F2C                     l6581:
  7948  002F2C  9E13               	bcf	___fldiv@b+2,7,c
  7949  002F2E                     l6583:
  7950  002F2E  90D8               	bcf	status,0,c
  7951  002F30  3028               	rrcf	___fldiv@bexp,w,c
  7952  002F32  6E14               	movwf	___fldiv@b+3,c
  7953  002F34  D70E               	goto	l6497
  7954  002F36                     __end_of___fldiv:
  7955                           	opt callstack 0
  7956                           
  7957 ;; *************** function ___awmod *****************
  7958 ;; Defined at:
  7959 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;  dividend        2   16[COMRAM] int 
  7962 ;;  divisor         2   18[COMRAM] int 
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;  sign            1   21[COMRAM] unsigned char 
  7965 ;;  counter         1   20[COMRAM] unsigned char 
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  2   16[COMRAM] int 
  7968 ;; Registers used:
  7969 ;;		wreg, status,2, status,0
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7975 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7976 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7978 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7979 ;;Total ram usage:        6 bytes
  7980 ;; Hardware stack levels used:    1
  7981 ;; Hardware stack levels required when called:    2
  7982 ;; This function calls:
  7983 ;;		Nothing
  7984 ;; This function is called by:
  7985 ;;		_time_elapsed
  7986 ;;		_efgtoa
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           	psect	text25
  7991  004226                     __ptext25:
  7992                           	opt callstack 0
  7993  004226                     ___awmod:
  7994                           	opt callstack 27
  7995                           
  7996                           ;incstack = 0
  7997  004226  0E00               	movlw	0
  7998  004228  6E16               	movwf	___awmod@sign,c
  7999  00422A  AE12               	btfss	___awmod@dividend+1,7,c
  8000  00422C  D006               	goto	l6779
  8001  00422E  6C11               	negf	___awmod@dividend,c
  8002  004230  1E12               	comf	___awmod@dividend+1,f,c
  8003  004232  B0D8               	btfsc	status,0,c
  8004  004234  2A12               	incf	___awmod@dividend+1,f,c
  8005  004236  0E01               	movlw	1
  8006  004238  6E16               	movwf	___awmod@sign,c
  8007  00423A                     l6779:
  8008  00423A  AE14               	btfss	___awmod@divisor+1,7,c
  8009  00423C  D004               	goto	l6783
  8010  00423E  6C13               	negf	___awmod@divisor,c
  8011  004240  1E14               	comf	___awmod@divisor+1,f,c
  8012  004242  B0D8               	btfsc	status,0,c
  8013  004244  2A14               	incf	___awmod@divisor+1,f,c
  8014  004246                     l6783:
  8015  004246  5013               	movf	___awmod@divisor,w,c
  8016  004248  1014               	iorwf	___awmod@divisor+1,w,c
  8017  00424A  B4D8               	btfsc	status,2,c
  8018  00424C  D018               	goto	l6799
  8019  00424E  0E01               	movlw	1
  8020  004250  6E15               	movwf	___awmod@counter,c
  8021  004252  D004               	goto	l6789
  8022  004254                     l6787:
  8023  004254  90D8               	bcf	status,0,c
  8024  004256  3613               	rlcf	___awmod@divisor,f,c
  8025  004258  3614               	rlcf	___awmod@divisor+1,f,c
  8026  00425A  2A15               	incf	___awmod@counter,f,c
  8027  00425C                     l6789:
  8028  00425C  AE14               	btfss	___awmod@divisor+1,7,c
  8029  00425E  D7FA               	goto	l6787
  8030  004260                     u8880:
  8031  004260  5013               	movf	___awmod@divisor,w,c
  8032  004262  5C11               	subwf	___awmod@dividend,w,c
  8033  004264  5014               	movf	___awmod@divisor+1,w,c
  8034  004266  5812               	subwfb	___awmod@dividend+1,w,c
  8035  004268  A0D8               	btfss	status,0,c
  8036  00426A  D004               	goto	l6795
  8037  00426C  5013               	movf	___awmod@divisor,w,c
  8038  00426E  5E11               	subwf	___awmod@dividend,f,c
  8039  004270  5014               	movf	___awmod@divisor+1,w,c
  8040  004272  5A12               	subwfb	___awmod@dividend+1,f,c
  8041  004274                     l6795:
  8042  004274  90D8               	bcf	status,0,c
  8043  004276  3214               	rrcf	___awmod@divisor+1,f,c
  8044  004278  3213               	rrcf	___awmod@divisor,f,c
  8045  00427A  2E15               	decfsz	___awmod@counter,f,c
  8046  00427C  D7F1               	goto	u8880
  8047  00427E                     l6799:
  8048  00427E  5016               	movf	___awmod@sign,w,c
  8049  004280  B4D8               	btfsc	status,2,c
  8050  004282  D004               	goto	l6803
  8051  004284  6C11               	negf	___awmod@dividend,c
  8052  004286  1E12               	comf	___awmod@dividend+1,f,c
  8053  004288  B0D8               	btfsc	status,0,c
  8054  00428A  2A12               	incf	___awmod@dividend+1,f,c
  8055  00428C                     l6803:
  8056  00428C  C011  F011         	movff	___awmod@dividend,?___awmod
  8057  004290  C012  F012         	movff	___awmod@dividend+1,?___awmod+1
  8058  004294  0012               	return		;funcret
  8059  004296                     __end_of___awmod:
  8060                           	opt callstack 0
  8061                           
  8062 ;; *************** function ___awdiv *****************
  8063 ;; Defined at:
  8064 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;  dividend        2   16[COMRAM] int 
  8067 ;;  divisor         2   18[COMRAM] int 
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;  quotient        2   22[COMRAM] int 
  8070 ;;  sign            1   21[COMRAM] unsigned char 
  8071 ;;  counter         1   20[COMRAM] unsigned char 
  8072 ;; Return value:  Size  Location     Type
  8073 ;;                  2   16[COMRAM] int 
  8074 ;; Registers used:
  8075 ;;		wreg, status,2, status,0
  8076 ;; Tracked objects:
  8077 ;;		On entry : 0/0
  8078 ;;		On exit  : 0/0
  8079 ;;		Unchanged: 0/0
  8080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8081 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8082 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8084 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8085 ;;Total ram usage:        8 bytes
  8086 ;; Hardware stack levels used:    1
  8087 ;; Hardware stack levels required when called:    2
  8088 ;; This function calls:
  8089 ;;		Nothing
  8090 ;; This function is called by:
  8091 ;;		_time_elapsed
  8092 ;;		_efgtoa
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096                           	psect	text26
  8097  004120                     __ptext26:
  8098                           	opt callstack 0
  8099  004120                     ___awdiv:
  8100                           	opt callstack 27
  8101                           
  8102                           ;incstack = 0
  8103  004120  0E00               	movlw	0
  8104  004122  6E16               	movwf	___awdiv@sign,c
  8105  004124  AE14               	btfss	___awdiv@divisor+1,7,c
  8106  004126  D006               	goto	l6735
  8107  004128  6C13               	negf	___awdiv@divisor,c
  8108  00412A  1E14               	comf	___awdiv@divisor+1,f,c
  8109  00412C  B0D8               	btfsc	status,0,c
  8110  00412E  2A14               	incf	___awdiv@divisor+1,f,c
  8111  004130  0E01               	movlw	1
  8112  004132  6E16               	movwf	___awdiv@sign,c
  8113  004134                     l6735:
  8114  004134  AE12               	btfss	___awdiv@dividend+1,7,c
  8115  004136  D006               	goto	l6741
  8116  004138  6C11               	negf	___awdiv@dividend,c
  8117  00413A  1E12               	comf	___awdiv@dividend+1,f,c
  8118  00413C  B0D8               	btfsc	status,0,c
  8119  00413E  2A12               	incf	___awdiv@dividend+1,f,c
  8120  004140  0E01               	movlw	1
  8121  004142  1A16               	xorwf	___awdiv@sign,f,c
  8122  004144                     l6741:
  8123  004144  0E00               	movlw	0
  8124  004146  6E18               	movwf	___awdiv@quotient+1,c
  8125  004148  0E00               	movlw	0
  8126  00414A  6E17               	movwf	___awdiv@quotient,c
  8127  00414C  5013               	movf	___awdiv@divisor,w,c
  8128  00414E  1014               	iorwf	___awdiv@divisor+1,w,c
  8129  004150  B4D8               	btfsc	status,2,c
  8130  004152  D01C               	goto	l6763
  8131  004154  0E01               	movlw	1
  8132  004156  6E15               	movwf	___awdiv@counter,c
  8133  004158  D004               	goto	l6749
  8134  00415A                     l6747:
  8135  00415A  90D8               	bcf	status,0,c
  8136  00415C  3613               	rlcf	___awdiv@divisor,f,c
  8137  00415E  3614               	rlcf	___awdiv@divisor+1,f,c
  8138  004160  2A15               	incf	___awdiv@counter,f,c
  8139  004162                     l6749:
  8140  004162  AE14               	btfss	___awdiv@divisor+1,7,c
  8141  004164  D7FA               	goto	l6747
  8142  004166                     u8820:
  8143  004166  90D8               	bcf	status,0,c
  8144  004168  3617               	rlcf	___awdiv@quotient,f,c
  8145  00416A  3618               	rlcf	___awdiv@quotient+1,f,c
  8146  00416C  5013               	movf	___awdiv@divisor,w,c
  8147  00416E  5C11               	subwf	___awdiv@dividend,w,c
  8148  004170  5014               	movf	___awdiv@divisor+1,w,c
  8149  004172  5812               	subwfb	___awdiv@dividend+1,w,c
  8150  004174  A0D8               	btfss	status,0,c
  8151  004176  D005               	goto	l6759
  8152  004178  5013               	movf	___awdiv@divisor,w,c
  8153  00417A  5E11               	subwf	___awdiv@dividend,f,c
  8154  00417C  5014               	movf	___awdiv@divisor+1,w,c
  8155  00417E  5A12               	subwfb	___awdiv@dividend+1,f,c
  8156  004180  8017               	bsf	___awdiv@quotient,0,c
  8157  004182                     l6759:
  8158  004182  90D8               	bcf	status,0,c
  8159  004184  3214               	rrcf	___awdiv@divisor+1,f,c
  8160  004186  3213               	rrcf	___awdiv@divisor,f,c
  8161  004188  2E15               	decfsz	___awdiv@counter,f,c
  8162  00418A  D7ED               	goto	u8820
  8163  00418C                     l6763:
  8164  00418C  5016               	movf	___awdiv@sign,w,c
  8165  00418E  B4D8               	btfsc	status,2,c
  8166  004190  D004               	goto	l6767
  8167  004192  6C17               	negf	___awdiv@quotient,c
  8168  004194  1E18               	comf	___awdiv@quotient+1,f,c
  8169  004196  B0D8               	btfsc	status,0,c
  8170  004198  2A18               	incf	___awdiv@quotient+1,f,c
  8171  00419A                     l6767:
  8172  00419A  C017  F011         	movff	___awdiv@quotient,?___awdiv
  8173  00419E  C018  F012         	movff	___awdiv@quotient+1,?___awdiv+1
  8174  0041A2  0012               	return		;funcret
  8175  0041A4                     __end_of___awdiv:
  8176                           	opt callstack 0
  8177                           
  8178 ;; *************** function _dtoa *****************
  8179 ;; Defined at:
  8180 ;;		line 274 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8181 ;; Parameters:    Size  Location     Type
  8182 ;;  fp              2   46[COMRAM] PTR struct _IO_FILE
  8183 ;;		 -> NULL(0), 
  8184 ;;  d               8   48[COMRAM] long long 
  8185 ;; Auto vars:     Size  Location     Type
  8186 ;;  n               8   72[COMRAM] long long 
  8187 ;;  i               2   80[COMRAM] int 
  8188 ;;  s               2   70[COMRAM] int 
  8189 ;;  w               2   68[COMRAM] int 
  8190 ;;  p               2   66[COMRAM] int 
  8191 ;; Return value:  Size  Location     Type
  8192 ;;                  2   46[COMRAM] int 
  8193 ;; Registers used:
  8194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/0
  8197 ;;		On exit  : 0/0
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8200 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8201 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8202 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8203 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8204 ;;Total ram usage:       36 bytes
  8205 ;; Hardware stack levels used:    1
  8206 ;; Hardware stack levels required when called:    7
  8207 ;; This function calls:
  8208 ;;		___aodiv
  8209 ;;		___aomod
  8210 ;;		_abs
  8211 ;;		_pad
  8212 ;; This function is called by:
  8213 ;;		_vfpfcnvrt
  8214 ;; This function uses a non-reentrant model
  8215 ;;
  8216                           
  8217                           	psect	text27
  8218  002F36                     __ptext27:
  8219                           	opt callstack 0
  8220  002F36                     _dtoa:
  8221                           	opt callstack 20
  8222                           
  8223                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
  8224                           
  8225                           ;incstack = 0
  8226  002F36  C031  F049         	movff	dtoa@d,dtoa@n
  8227  002F3A  C032  F04A         	movff	dtoa@d+1,dtoa@n+1
  8228  002F3E  C033  F04B         	movff	dtoa@d+2,dtoa@n+2
  8229  002F42  C034  F04C         	movff	dtoa@d+3,dtoa@n+3
  8230  002F46  C035  F04D         	movff	dtoa@d+4,dtoa@n+4
  8231  002F4A  C036  F04E         	movff	dtoa@d+5,dtoa@n+5
  8232  002F4E  C037  F04F         	movff	dtoa@d+6,dtoa@n+6
  8233  002F52  C038  F050         	movff	dtoa@d+7,dtoa@n+7
  8234                           
  8235                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
  8236  002F56  AE50               	btfss	dtoa@n+7,7,c
  8237  002F58  D002               	goto	u9090
  8238  002F5A  0E01               	movlw	1
  8239  002F5C  D001               	goto	u9100
  8240  002F5E                     u9090:
  8241  002F5E  0E00               	movlw	0
  8242  002F60                     u9100:
  8243  002F60  6E47               	movwf	dtoa@s,c
  8244  002F62  6A48               	clrf	dtoa@s+1,c
  8245                           
  8246                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  8247  002F64  5047               	movf	dtoa@s,w,c
  8248  002F66  1048               	iorwf	dtoa@s+1,w,c
  8249  002F68  B4D8               	btfsc	status,2,c
  8250  002F6A  D010               	goto	l6915
  8251                           
  8252                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  8253  002F6C  1E50               	comf	dtoa@n+7,f,c
  8254  002F6E  1E4F               	comf	dtoa@n+6,f,c
  8255  002F70  1E4E               	comf	dtoa@n+5,f,c
  8256  002F72  1E4D               	comf	dtoa@n+4,f,c
  8257  002F74  1E4C               	comf	dtoa@n+3,f,c
  8258  002F76  1E4B               	comf	dtoa@n+2,f,c
  8259  002F78  1E4A               	comf	dtoa@n+1,f,c
  8260  002F7A  6C49               	negf	dtoa@n,c
  8261  002F7C  0E00               	movlw	0
  8262  002F7E  224A               	addwfc	dtoa@n+1,f,c
  8263  002F80  224B               	addwfc	dtoa@n+2,f,c
  8264  002F82  224C               	addwfc	dtoa@n+3,f,c
  8265  002F84  224D               	addwfc	dtoa@n+4,f,c
  8266  002F86  224E               	addwfc	dtoa@n+5,f,c
  8267  002F88  224F               	addwfc	dtoa@n+6,f,c
  8268  002F8A  2250               	addwfc	dtoa@n+7,f,c
  8269  002F8C                     l6915:
  8270                           
  8271                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
  8272  002F8C  AE67               	btfss	_prec+1,7,c
  8273                           
  8274                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
  8275  002F8E  9268               	bcf	_flags,1,c
  8276                           
  8277                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
  8278  002F90  BE67               	btfsc	_prec+1,7,c
  8279  002F92  D005               	goto	u9130
  8280  002F94  5067               	movf	_prec+1,w,c
  8281  002F96  E108               	bnz	l307
  8282  002F98  0466               	decf	_prec,w,c
  8283  002F9A  B0D8               	btfsc	status,0,c
  8284  002F9C  D005               	goto	l307
  8285  002F9E                     u9130:
  8286  002F9E  0E00               	movlw	0
  8287  002FA0  6E44               	movwf	dtoa@p+1,c
  8288  002FA2  0E01               	movlw	1
  8289  002FA4  6E43               	movwf	dtoa@p,c
  8290  002FA6  D004               	goto	l309
  8291  002FA8                     l307:
  8292  002FA8  C066  F043         	movff	_prec,dtoa@p
  8293  002FAC  C067  F044         	movff	_prec+1,dtoa@p+1
  8294  002FB0                     l309:
  8295                           
  8296                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  8297  002FB0  C064  F045         	movff	_width,dtoa@w
  8298  002FB4  C065  F046         	movff	_width+1,dtoa@w+1
  8299                           
  8300                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
  8301  002FB8  5047               	movf	dtoa@s,w,c
  8302  002FBA  1048               	iorwf	dtoa@s+1,w,c
  8303  002FBC  A4D8               	btfss	status,2,c
  8304  002FBE  D002               	goto	u9150
  8305  002FC0  A468               	btfss	_flags,2,c
  8306  002FC2  D003               	goto	l6929
  8307  002FC4                     u9150:
  8308                           
  8309                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  8310  002FC4  0645               	decf	dtoa@w,f,c
  8311  002FC6  A0D8               	btfss	status,0,c
  8312  002FC8  0646               	decf	dtoa@w+1,f,c
  8313  002FCA                     l6929:
  8314                           
  8315                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
  8316  002FCA  0E00               	movlw	0
  8317  002FCC  6E52               	movwf	dtoa@i+1,c
  8318  002FCE  0E4F               	movlw	79
  8319  002FD0  6E51               	movwf	dtoa@i,c
  8320                           
  8321                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
  8322  002FD2  0E00               	movlw	0
  8323  002FD4  0101               	movlb	1	; () banked
  8324  002FD6  6F5B               	movwf	(_dbuf+79)& (0+255),b
  8325                           
  8326                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8327  002FD8  D07C               	goto	l6943
  8328  002FDA                     l6933:
  8329                           
  8330                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  8331  002FDA  0651               	decf	dtoa@i,f,c
  8332  002FDC  A0D8               	btfss	status,0,c
  8333  002FDE  0652               	decf	dtoa@i+1,f,c
  8334                           
  8335                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
  8336  002FE0  0E0C               	movlw	low _dbuf
  8337  002FE2  2451               	addwf	dtoa@i,w,c
  8338  002FE4  6ED9               	movwf	fsr2l,c
  8339  002FE6  0E01               	movlw	high _dbuf
  8340  002FE8  2052               	addwfc	dtoa@i+1,w,c
  8341  002FEA  6EDA               	movwf	fsr2h,c
  8342  002FEC  C049  F011         	movff	dtoa@n,___aomod@dividend
  8343  002FF0  C04A  F012         	movff	dtoa@n+1,___aomod@dividend+1
  8344  002FF4  C04B  F013         	movff	dtoa@n+2,___aomod@dividend+2
  8345  002FF8  C04C  F014         	movff	dtoa@n+3,___aomod@dividend+3
  8346  002FFC  C04D  F015         	movff	dtoa@n+4,___aomod@dividend+4
  8347  003000  C04E  F016         	movff	dtoa@n+5,___aomod@dividend+5
  8348  003004  C04F  F017         	movff	dtoa@n+6,___aomod@dividend+6
  8349  003008  C050  F018         	movff	dtoa@n+7,___aomod@dividend+7
  8350  00300C  0E0A               	movlw	10
  8351  00300E  6E19               	movwf	___aomod@divisor,c
  8352  003010  0E00               	movlw	0
  8353  003012  6E1A               	movwf	___aomod@divisor+1,c
  8354  003014  0E00               	movlw	0
  8355  003016  6E1B               	movwf	___aomod@divisor+2,c
  8356  003018  0E00               	movlw	0
  8357  00301A  6E1C               	movwf	___aomod@divisor+3,c
  8358  00301C  0E00               	movlw	0
  8359  00301E  6E1D               	movwf	___aomod@divisor+4,c
  8360  003020  0E00               	movlw	0
  8361  003022  6E1E               	movwf	___aomod@divisor+5,c
  8362  003024  0E00               	movlw	0
  8363  003026  6E1F               	movwf	___aomod@divisor+6,c
  8364  003028  0E00               	movlw	0
  8365  00302A  6E20               	movwf	___aomod@divisor+7,c
  8366  00302C  ECF1  F01B         	call	___aomod	;wreg free
  8367  003030  C011  F039         	movff	?___aomod,??_dtoa
  8368  003034  C012  F03A         	movff	?___aomod+1,??_dtoa+1
  8369  003038  C013  F03B         	movff	?___aomod+2,??_dtoa+2
  8370  00303C  C014  F03C         	movff	?___aomod+3,??_dtoa+3
  8371  003040  C015  F03D         	movff	?___aomod+4,??_dtoa+4
  8372  003044  C016  F03E         	movff	?___aomod+5,??_dtoa+5
  8373  003048  C017  F03F         	movff	?___aomod+6,??_dtoa+6
  8374  00304C  C018  F040         	movff	?___aomod+7,??_dtoa+7
  8375  003050  C039  F023         	movff	??_dtoa,abs@a
  8376  003054  C03B  F024         	movff	??_dtoa+2,abs@a+1
  8377  003058  EC18  F023         	call	_abs	;wreg free
  8378  00305C  5023               	movf	?_abs,w,c
  8379  00305E  0F30               	addlw	48
  8380  003060  6EDF               	movwf	indf2,c
  8381                           
  8382                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  8383  003062  0643               	decf	dtoa@p,f,c
  8384  003064  A0D8               	btfss	status,0,c
  8385  003066  0644               	decf	dtoa@p+1,f,c
  8386                           
  8387                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  8388  003068  0645               	decf	dtoa@w,f,c
  8389  00306A  A0D8               	btfss	status,0,c
  8390  00306C  0646               	decf	dtoa@w+1,f,c
  8391                           
  8392                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
  8393  00306E  C049  F011         	movff	dtoa@n,___aodiv@dividend
  8394  003072  C04A  F012         	movff	dtoa@n+1,___aodiv@dividend+1
  8395  003076  C04B  F013         	movff	dtoa@n+2,___aodiv@dividend+2
  8396  00307A  C04C  F014         	movff	dtoa@n+3,___aodiv@dividend+3
  8397  00307E  C04D  F015         	movff	dtoa@n+4,___aodiv@dividend+4
  8398  003082  C04E  F016         	movff	dtoa@n+5,___aodiv@dividend+5
  8399  003086  C04F  F017         	movff	dtoa@n+6,___aodiv@dividend+6
  8400  00308A  C050  F018         	movff	dtoa@n+7,___aodiv@dividend+7
  8401  00308E  0E0A               	movlw	10
  8402  003090  6E19               	movwf	___aodiv@divisor,c
  8403  003092  0E00               	movlw	0
  8404  003094  6E1A               	movwf	___aodiv@divisor+1,c
  8405  003096  0E00               	movlw	0
  8406  003098  6E1B               	movwf	___aodiv@divisor+2,c
  8407  00309A  0E00               	movlw	0
  8408  00309C  6E1C               	movwf	___aodiv@divisor+3,c
  8409  00309E  0E00               	movlw	0
  8410  0030A0  6E1D               	movwf	___aodiv@divisor+4,c
  8411  0030A2  0E00               	movlw	0
  8412  0030A4  6E1E               	movwf	___aodiv@divisor+5,c
  8413  0030A6  0E00               	movlw	0
  8414  0030A8  6E1F               	movwf	___aodiv@divisor+6,c
  8415  0030AA  0E00               	movlw	0
  8416  0030AC  6E20               	movwf	___aodiv@divisor+7,c
  8417  0030AE  ECAD  F01A         	call	___aodiv	;wreg free
  8418  0030B2  C011  F049         	movff	?___aodiv,dtoa@n
  8419  0030B6  C012  F04A         	movff	?___aodiv+1,dtoa@n+1
  8420  0030BA  C013  F04B         	movff	?___aodiv+2,dtoa@n+2
  8421  0030BE  C014  F04C         	movff	?___aodiv+3,dtoa@n+3
  8422  0030C2  C015  F04D         	movff	?___aodiv+4,dtoa@n+4
  8423  0030C6  C016  F04E         	movff	?___aodiv+5,dtoa@n+5
  8424  0030CA  C017  F04F         	movff	?___aodiv+6,dtoa@n+6
  8425  0030CE  C018  F050         	movff	?___aodiv+7,dtoa@n+7
  8426  0030D2                     l6943:
  8427                           
  8428                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8429  0030D2  BE52               	btfsc	dtoa@i+1,7,c
  8430  0030D4  D01F               	goto	u9200
  8431  0030D6  5052               	movf	dtoa@i+1,w,c
  8432  0030D8  E103               	bnz	u9160
  8433  0030DA  0451               	decf	dtoa@i,w,c
  8434  0030DC  A0D8               	btfss	status,0,c
  8435  0030DE  D01A               	goto	u9200
  8436  0030E0                     u9160:
  8437  0030E0  5049               	movf	dtoa@n,w,c
  8438  0030E2  104A               	iorwf	dtoa@n+1,w,c
  8439  0030E4  104B               	iorwf	dtoa@n+2,w,c
  8440  0030E6  104C               	iorwf	dtoa@n+3,w,c
  8441  0030E8  104D               	iorwf	dtoa@n+4,w,c
  8442  0030EA  104E               	iorwf	dtoa@n+5,w,c
  8443  0030EC  104F               	iorwf	dtoa@n+6,w,c
  8444  0030EE  1050               	iorwf	dtoa@n+7,w,c
  8445  0030F0  A4D8               	btfss	status,2,c
  8446  0030F2  D773               	goto	l6933
  8447  0030F4  BE44               	btfsc	dtoa@p+1,7,c
  8448  0030F6  D005               	goto	u9180
  8449  0030F8  5044               	movf	dtoa@p+1,w,c
  8450  0030FA  E102               	bnz	u9181
  8451  0030FC  0443               	decf	dtoa@p,w,c
  8452  0030FE  B0D8               	btfsc	status,0,c
  8453  003100                     u9181:
  8454  003100  D76C               	goto	l6933
  8455  003102                     u9180:
  8456  003102  BE46               	btfsc	dtoa@w+1,7,c
  8457  003104  D007               	goto	u9200
  8458  003106  5046               	movf	dtoa@w+1,w,c
  8459  003108  E103               	bnz	u9190
  8460  00310A  0445               	decf	dtoa@w,w,c
  8461  00310C  A0D8               	btfss	status,0,c
  8462  00310E  D002               	goto	u9200
  8463  003110                     u9190:
  8464  003110  B268               	btfsc	_flags,1,c
  8465  003112  D763               	goto	l6933
  8466  003114                     u9200:
  8467                           
  8468                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
  8469  003114  5047               	movf	dtoa@s,w,c
  8470  003116  1048               	iorwf	dtoa@s+1,w,c
  8471  003118  A4D8               	btfss	status,2,c
  8472  00311A  D002               	goto	u9220
  8473  00311C  A468               	btfss	_flags,2,c
  8474  00311E  D017               	goto	l6967
  8475  003120                     u9220:
  8476                           
  8477                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  8478  003120  0651               	decf	dtoa@i,f,c
  8479  003122  A0D8               	btfss	status,0,c
  8480  003124  0652               	decf	dtoa@i+1,f,c
  8481                           
  8482                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
  8483  003126  5047               	movf	dtoa@s,w,c
  8484  003128  1048               	iorwf	dtoa@s+1,w,c
  8485  00312A  A4D8               	btfss	status,2,c
  8486  00312C  D004               	goto	l6963
  8487  00312E  0E00               	movlw	0
  8488  003130  6E42               	movwf	_dtoa$858+1,c
  8489  003132  0E2B               	movlw	43
  8490  003134  D003               	goto	L15
  8491  003136                     l6963:
  8492  003136  0E00               	movlw	0
  8493  003138  6E42               	movwf	_dtoa$858+1,c
  8494  00313A  0E2D               	movlw	45
  8495  00313C                     L15:
  8496  00313C  6E41               	movwf	_dtoa$858,c
  8497  00313E  0E0C               	movlw	low _dbuf
  8498  003140  2451               	addwf	dtoa@i,w,c
  8499  003142  6ED9               	movwf	fsr2l,c
  8500  003144  0E01               	movlw	high _dbuf
  8501  003146  2052               	addwfc	dtoa@i+1,w,c
  8502  003148  6EDA               	movwf	fsr2h,c
  8503  00314A  C041  FFDF         	movff	_dtoa$858,indf2
  8504  00314E                     l6967:
  8505                           
  8506                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
  8507  00314E  C02F  F024         	movff	dtoa@fp,pad@fp
  8508  003152  C030  F025         	movff	dtoa@fp+1,pad@fp+1
  8509  003156  0E0C               	movlw	low _dbuf
  8510  003158  2451               	addwf	dtoa@i,w,c
  8511  00315A  6E26               	movwf	pad@buf,c
  8512  00315C  0E01               	movlw	high _dbuf
  8513  00315E  2052               	addwfc	dtoa@i+1,w,c
  8514  003160  6E27               	movwf	pad@buf+1,c
  8515  003162  C045  F028         	movff	dtoa@w,pad@p
  8516  003166  C046  F029         	movff	dtoa@w+1,pad@p+1
  8517  00316A  ECB7  F01F         	call	_pad	;wreg free
  8518  00316E  C024  F02F         	movff	?_pad,?_dtoa
  8519  003172  C025  F030         	movff	?_pad+1,?_dtoa+1
  8520  003176  0012               	return		;funcret
  8521  003178                     __end_of_dtoa:
  8522                           	opt callstack 0
  8523                           
  8524 ;; *************** function _pad *****************
  8525 ;; Defined at:
  8526 ;;		line 72 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  8529 ;;		 -> NULL(0), 
  8530 ;;  buf             2   37[COMRAM] PTR unsigned char 
  8531 ;;		 -> dbuf(80), 
  8532 ;;  p               2   39[COMRAM] int 
  8533 ;; Auto vars:     Size  Location     Type
  8534 ;;  w               2   44[COMRAM] int 
  8535 ;;  i               2   42[COMRAM] int 
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  2   35[COMRAM] int 
  8538 ;; Registers used:
  8539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8545 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8546 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8547 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8548 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8549 ;;Total ram usage:       11 bytes
  8550 ;; Hardware stack levels used:    1
  8551 ;; Hardware stack levels required when called:    6
  8552 ;; This function calls:
  8553 ;;		_fputc
  8554 ;;		_fputs
  8555 ;;		_strlen
  8556 ;; This function is called by:
  8557 ;;		_dtoa
  8558 ;;		_efgtoa
  8559 ;;		_xtoa
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           	psect	text28
  8564  003F6E                     __ptext28:
  8565                           	opt callstack 0
  8566  003F6E                     _pad:
  8567                           	opt callstack 20
  8568                           
  8569                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  8570                           
  8571                           ;incstack = 0
  8572  003F6E  A068               	btfss	_flags,0,c
  8573  003F70  D00A               	goto	l6263
  8574                           
  8575                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  8576  003F72  C026  F01D         	movff	pad@buf,fputs@s
  8577  003F76  C027  F01E         	movff	pad@buf+1,fputs@s+1
  8578  003F7A  C024  F01F         	movff	pad@fp,fputs@fp
  8579  003F7E  C025  F020         	movff	pad@fp+1,fputs@fp+1
  8580  003F82  ECE2  F022         	call	_fputs	;wreg free
  8581  003F86                     l6263:
  8582                           
  8583                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  8584  003F86  BE29               	btfsc	pad@p+1,7,c
  8585  003F88  D005               	goto	l6267
  8586  003F8A  C028  F02D         	movff	pad@p,pad@w
  8587  003F8E  C029  F02E         	movff	pad@p+1,pad@w+1
  8588  003F92  D004               	goto	l296
  8589  003F94                     l6267:
  8590  003F94  0E00               	movlw	0
  8591  003F96  6E2E               	movwf	pad@w+1,c
  8592  003F98  0E00               	movlw	0
  8593  003F9A  6E2D               	movwf	pad@w,c
  8594  003F9C                     l296:
  8595                           
  8596                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  8597  003F9C  0E00               	movlw	0
  8598  003F9E  6E2C               	movwf	pad@i+1,c
  8599  003FA0  0E00               	movlw	0
  8600  003FA2  6E2B               	movwf	pad@i,c
  8601                           
  8602                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  8603  003FA4  D00C               	goto	l6273
  8604  003FA6                     l6269:
  8605                           
  8606                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  8607  003FA6  0E00               	movlw	0
  8608  003FA8  6E15               	movwf	fputc@c+1,c
  8609  003FAA  0E20               	movlw	32
  8610  003FAC  6E14               	movwf	fputc@c,c
  8611  003FAE  C024  F016         	movff	pad@fp,fputc@fp
  8612  003FB2  C025  F017         	movff	pad@fp+1,fputc@fp+1
  8613  003FB6  EC4B  F021         	call	_fputc	;wreg free
  8614                           
  8615                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  8616  003FBA  4A2B               	infsnz	pad@i,f,c
  8617  003FBC  2A2C               	incf	pad@i+1,f,c
  8618  003FBE                     l6273:
  8619                           
  8620                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  8621  003FBE  502D               	movf	pad@w,w,c
  8622  003FC0  5C2B               	subwf	pad@i,w,c
  8623  003FC2  502C               	movf	pad@i+1,w,c
  8624  003FC4  0A80               	xorlw	128
  8625  003FC6  6E2A               	movwf	??_pad& (0+255),c
  8626  003FC8  502E               	movf	pad@w+1,w,c
  8627  003FCA  0A80               	xorlw	128
  8628  003FCC  582A               	subwfb	??_pad& (0+255),w,c
  8629  003FCE  A0D8               	btfss	status,0,c
  8630  003FD0  D7EA               	goto	l6269
  8631                           
  8632                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  8633  003FD2  B068               	btfsc	_flags,0,c
  8634  003FD4  D00A               	goto	l6277
  8635                           
  8636                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  8637  003FD6  C026  F01D         	movff	pad@buf,fputs@s
  8638  003FDA  C027  F01E         	movff	pad@buf+1,fputs@s+1
  8639  003FDE  C024  F01F         	movff	pad@fp,fputs@fp
  8640  003FE2  C025  F020         	movff	pad@fp+1,fputs@fp+1
  8641  003FE6  ECE2  F022         	call	_fputs	;wreg free
  8642  003FEA                     l6277:
  8643                           
  8644                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
  8645  003FEA  C026  F011         	movff	pad@buf,strlen@s
  8646  003FEE  C027  F012         	movff	pad@buf+1,strlen@s+1
  8647  003FF2  ECA8  F023         	call	_strlen	;wreg free
  8648  003FF6  502D               	movf	pad@w,w,c
  8649  003FF8  2411               	addwf	?_strlen,w,c
  8650  003FFA  6E24               	movwf	?_pad,c
  8651  003FFC  502E               	movf	pad@w+1,w,c
  8652  003FFE  2012               	addwfc	?_strlen+1,w,c
  8653  004000  6E25               	movwf	?_pad+1,c
  8654  004002  0012               	return		;funcret
  8655  004004                     __end_of_pad:
  8656                           	opt callstack 0
  8657                           
  8658 ;; *************** function _strlen *****************
  8659 ;; Defined at:
  8660 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  8661 ;; Parameters:    Size  Location     Type
  8662 ;;  s               2   16[COMRAM] PTR const unsigned char 
  8663 ;;		 -> dbuf(80), 
  8664 ;; Auto vars:     Size  Location     Type
  8665 ;;  a               2   18[COMRAM] PTR const unsigned char 
  8666 ;;		 -> dbuf(80), 
  8667 ;; Return value:  Size  Location     Type
  8668 ;;                  2   16[COMRAM] unsigned int 
  8669 ;; Registers used:
  8670 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8671 ;; Tracked objects:
  8672 ;;		On entry : 0/0
  8673 ;;		On exit  : 0/0
  8674 ;;		Unchanged: 0/0
  8675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8679 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8680 ;;Total ram usage:        4 bytes
  8681 ;; Hardware stack levels used:    1
  8682 ;; Hardware stack levels required when called:    2
  8683 ;; This function calls:
  8684 ;;		Nothing
  8685 ;; This function is called by:
  8686 ;;		_pad
  8687 ;; This function uses a non-reentrant model
  8688 ;;
  8689                           
  8690                           	psect	text29
  8691  004750                     __ptext29:
  8692                           	opt callstack 0
  8693  004750                     _strlen:
  8694                           	opt callstack 23
  8695                           
  8696                           ;incstack = 0
  8697  004750  C011  F013         	movff	strlen@s,strlen@a
  8698  004754  C012  F014         	movff	strlen@s+1,strlen@a+1
  8699  004758  D002               	goto	l6043
  8700  00475A                     l6041:
  8701  00475A  4A11               	infsnz	strlen@s,f,c
  8702  00475C  2A12               	incf	strlen@s+1,f,c
  8703  00475E                     l6043:
  8704  00475E  C011  FFD9         	movff	strlen@s,fsr2l
  8705  004762  C012  FFDA         	movff	strlen@s+1,fsr2h
  8706  004766  50DF               	movf	indf2,w,c
  8707  004768  A4D8               	btfss	status,2,c
  8708  00476A  D7F7               	goto	l6041
  8709  00476C  5013               	movf	strlen@a,w,c
  8710  00476E  5C11               	subwf	strlen@s,w,c
  8711  004770  6E11               	movwf	?_strlen,c
  8712  004772  5014               	movf	strlen@a+1,w,c
  8713  004774  5812               	subwfb	strlen@s+1,w,c
  8714  004776  6E12               	movwf	?_strlen+1,c
  8715  004778  0012               	return		;funcret
  8716  00477A                     __end_of_strlen:
  8717                           	opt callstack 0
  8718                           
  8719 ;; *************** function _fputs *****************
  8720 ;; Defined at:
  8721 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  8722 ;; Parameters:    Size  Location     Type
  8723 ;;  s               2   28[COMRAM] PTR const unsigned char 
  8724 ;;		 -> dbuf(80), 
  8725 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  8726 ;;		 -> NULL(0), 
  8727 ;; Auto vars:     Size  Location     Type
  8728 ;;  i               2   33[COMRAM] int 
  8729 ;;  c               1   32[COMRAM] unsigned char 
  8730 ;; Return value:  Size  Location     Type
  8731 ;;                  2   28[COMRAM] int 
  8732 ;; Registers used:
  8733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8734 ;; Tracked objects:
  8735 ;;		On entry : 0/0
  8736 ;;		On exit  : 0/0
  8737 ;;		Unchanged: 0/0
  8738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8739 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8740 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8742 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8743 ;;Total ram usage:        7 bytes
  8744 ;; Hardware stack levels used:    1
  8745 ;; Hardware stack levels required when called:    5
  8746 ;; This function calls:
  8747 ;;		_fputc
  8748 ;; This function is called by:
  8749 ;;		_pad
  8750 ;; This function uses a non-reentrant model
  8751 ;;
  8752                           
  8753                           	psect	text30
  8754  0045C4                     __ptext30:
  8755                           	opt callstack 0
  8756  0045C4                     _fputs:
  8757                           	opt callstack 20
  8758                           
  8759                           ;incstack = 0
  8760  0045C4  0E00               	movlw	0
  8761  0045C6  6E23               	movwf	fputs@i+1,c
  8762  0045C8  0E00               	movlw	0
  8763  0045CA  6E22               	movwf	fputs@i,c
  8764  0045CC  D00B               	goto	l6037
  8765  0045CE                     l6033:
  8766  0045CE  C021  F014         	movff	fputs@c,fputc@c
  8767  0045D2  6A15               	clrf	fputc@c+1,c
  8768  0045D4  C01F  F016         	movff	fputs@fp,fputc@fp
  8769  0045D8  C020  F017         	movff	fputs@fp+1,fputc@fp+1
  8770  0045DC  EC4B  F021         	call	_fputc	;wreg free
  8771  0045E0  4A22               	infsnz	fputs@i,f,c
  8772  0045E2  2A23               	incf	fputs@i+1,f,c
  8773  0045E4                     l6037:
  8774  0045E4  5022               	movf	fputs@i,w,c
  8775  0045E6  241D               	addwf	fputs@s,w,c
  8776  0045E8  6ED9               	movwf	fsr2l,c
  8777  0045EA  5023               	movf	fputs@i+1,w,c
  8778  0045EC  201E               	addwfc	fputs@s+1,w,c
  8779  0045EE  6EDA               	movwf	fsr2h,c
  8780  0045F0  50DF               	movf	indf2,w,c
  8781  0045F2  6E21               	movwf	fputs@c,c
  8782  0045F4  5021               	movf	fputs@c,w,c
  8783  0045F6  B4D8               	btfsc	status,2,c
  8784  0045F8  0012               	return	
  8785  0045FA  D7E9               	goto	l6033
  8786  0045FC                     __end_of_fputs:
  8787                           	opt callstack 0
  8788                           
  8789 ;; *************** function _fputc *****************
  8790 ;; Defined at:
  8791 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;  c               2   19[COMRAM] int 
  8794 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  8795 ;;		 -> NULL(0), 
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;		None
  8798 ;; Return value:  Size  Location     Type
  8799 ;;                  2   19[COMRAM] int 
  8800 ;; Registers used:
  8801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8802 ;; Tracked objects:
  8803 ;;		On entry : 0/0
  8804 ;;		On exit  : 0/0
  8805 ;;		Unchanged: 0/0
  8806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8809 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8810 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8811 ;;Total ram usage:        9 bytes
  8812 ;; Hardware stack levels used:    1
  8813 ;; Hardware stack levels required when called:    4
  8814 ;; This function calls:
  8815 ;;		_putch
  8816 ;; This function is called by:
  8817 ;;		_pad
  8818 ;;		_vfpfcnvrt
  8819 ;;		_fputs
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           	psect	text31
  8824  004296                     __ptext31:
  8825                           	opt callstack 0
  8826  004296                     _fputc:
  8827                           	opt callstack 20
  8828                           
  8829                           ;incstack = 0
  8830  004296  5016               	movf	fputc@fp,w,c
  8831  004298  1017               	iorwf	fputc@fp+1,w,c
  8832  00429A  B4D8               	btfsc	status,2,c
  8833  00429C  D004               	goto	u7420
  8834  00429E  5016               	movf	fputc@fp,w,c
  8835  0042A0  1017               	iorwf	fputc@fp+1,w,c
  8836  0042A2  A4D8               	btfss	status,2,c
  8837  0042A4  D004               	goto	l6023
  8838  0042A6                     u7420:
  8839  0042A6  5014               	movf	fputc@c,w,c
  8840  0042A8  EC02  F024         	call	_putch
  8841  0042AC  0012               	return	
  8842  0042AE                     l6023:
  8843  0042AE  EE20 F004          	lfsr	2,4
  8844  0042B2  5016               	movf	fputc@fp,w,c
  8845  0042B4  26D9               	addwf	fsr2l,f,c
  8846  0042B6  5017               	movf	fputc@fp+1,w,c
  8847  0042B8  22DA               	addwfc	fsr2h,f,c
  8848  0042BA  50DE               	movf	postinc2,w,c
  8849  0042BC  10DE               	iorwf	postinc2,w,c
  8850  0042BE  B4D8               	btfsc	status,2,c
  8851  0042C0  D016               	goto	u7440
  8852  0042C2  EE20 F004          	lfsr	2,4
  8853  0042C6  5016               	movf	fputc@fp,w,c
  8854  0042C8  26D9               	addwf	fsr2l,f,c
  8855  0042CA  5017               	movf	fputc@fp+1,w,c
  8856  0042CC  22DA               	addwfc	fsr2h,f,c
  8857  0042CE  EE10 F002          	lfsr	1,2
  8858  0042D2  5016               	movf	fputc@fp,w,c
  8859  0042D4  26E1               	addwf	fsr1l,f,c
  8860  0042D6  5017               	movf	fputc@fp+1,w,c
  8861  0042D8  22E2               	addwfc	fsr1h,f,c
  8862  0042DA  50DE               	movf	postinc2,w,c
  8863  0042DC  5CE6               	subwf	postinc1,w,c
  8864  0042DE  50E6               	movf	postinc1,w,c
  8865  0042E0  0A80               	xorlw	128
  8866  0042E2  6E1C               	movwf	(??_fputc+4)& (0+255),c
  8867  0042E4  50DE               	movf	postinc2,w,c
  8868  0042E6  0A80               	xorlw	128
  8869  0042E8  581C               	subwfb	(??_fputc+4)& (0+255),w,c
  8870  0042EA  B0D8               	btfsc	status,0,c
  8871  0042EC  0012               	return	
  8872  0042EE                     u7440:
  8873  0042EE  EE20 F002          	lfsr	2,2
  8874  0042F2  5016               	movf	fputc@fp,w,c
  8875  0042F4  26D9               	addwf	fsr2l,f,c
  8876  0042F6  5017               	movf	fputc@fp+1,w,c
  8877  0042F8  22DA               	addwfc	fsr2h,f,c
  8878  0042FA  2ADE               	incf	postinc2,f,c
  8879  0042FC  0E00               	movlw	0
  8880  0042FE  22DD               	addwfc	postdec2,f,c
  8881  004300  0012               	return		;funcret
  8882  004302                     __end_of_fputc:
  8883                           	opt callstack 0
  8884                           
  8885 ;; *************** function _putch *****************
  8886 ;; Defined at:
  8887 ;;		line 93 in file "LCD_F.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;  data            1    wreg     unsigned char 
  8890 ;; Auto vars:     Size  Location     Type
  8891 ;;  data            1   18[COMRAM] unsigned char 
  8892 ;; Return value:  Size  Location     Type
  8893 ;;                  1    wreg      void 
  8894 ;; Registers used:
  8895 ;;		wreg, status,2, status,0, cstack
  8896 ;; Tracked objects:
  8897 ;;		On entry : 0/0
  8898 ;;		On exit  : 0/0
  8899 ;;		Unchanged: 0/0
  8900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8902 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8904 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8905 ;;Total ram usage:        1 bytes
  8906 ;; Hardware stack levels used:    1
  8907 ;; Hardware stack levels required when called:    3
  8908 ;; This function calls:
  8909 ;;		_lcd_byte
  8910 ;; This function is called by:
  8911 ;;		_fputc
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           	psect	text32
  8916  004804                     __ptext32:
  8917                           	opt callstack 0
  8918  004804                     _putch:
  8919                           	opt callstack 20
  8920                           
  8921                           ;incstack = 0
  8922                           ;putch@data stored from wreg
  8923  004804  6E13               	movwf	putch@data,c
  8924                           
  8925                           ;LCD_F.c: 94:     LATDbits.LATD2 = 1;
  8926  004806  848C               	bsf	3980,2,c	;volatile
  8927                           
  8928                           ;LCD_F.c: 95:     lcd_byte(data);
  8929  004808  5013               	movf	putch@data,w,c
  8930  00480A  ECDD  F021         	call	_lcd_byte
  8931                           
  8932                           ;LCD_F.c: 96:     _delay((unsigned long)((100)*(40000000/4000000.0)));
  8933  00480E  0EC8               	movlw	200
  8934  004810                     u10437:
  8935  004810  D000               	nop2	
  8936  004812  2EE8               	decfsz	wreg,f,c
  8937  004814  D7FD               	bra	u10437
  8938  004816  0012               	return		;funcret
  8939  004818                     __end_of_putch:
  8940                           	opt callstack 0
  8941                           
  8942 ;; *************** function _abs *****************
  8943 ;; Defined at:
  8944 ;;		line 1 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;  a               2   34[COMRAM] int 
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;		None
  8949 ;; Return value:  Size  Location     Type
  8950 ;;                  2   34[COMRAM] int 
  8951 ;; Registers used:
  8952 ;;		wreg, status,2, status,0
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8960 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8961 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8962 ;;Total ram usage:        4 bytes
  8963 ;; Hardware stack levels used:    1
  8964 ;; Hardware stack levels required when called:    2
  8965 ;; This function calls:
  8966 ;;		Nothing
  8967 ;; This function is called by:
  8968 ;;		_dtoa
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           	psect	text33
  8973  004630                     __ptext33:
  8974                           	opt callstack 0
  8975  004630                     _abs:
  8976                           	opt callstack 24
  8977                           
  8978                           ;incstack = 0
  8979  004630  BE24               	btfsc	abs@a+1,7,c
  8980  004632  D005               	goto	u7940
  8981  004634  5024               	movf	abs@a+1,w,c
  8982  004636  E110               	bnz	l1186
  8983  004638  0423               	decf	abs@a,w,c
  8984  00463A  B0D8               	btfsc	status,0,c
  8985  00463C  D00D               	goto	l1186
  8986  00463E                     u7940:
  8987  00463E  C023  F025         	movff	abs@a,??_abs
  8988  004642  C024  F026         	movff	abs@a+1,??_abs+1
  8989  004646  1E25               	comf	??_abs,f,c
  8990  004648  1E26               	comf	??_abs+1,f,c
  8991  00464A  4A25               	infsnz	??_abs,f,c
  8992  00464C  2A26               	incf	??_abs+1,f,c
  8993  00464E  C025  F023         	movff	??_abs,?_abs
  8994  004652  C026  F024         	movff	??_abs+1,?_abs+1
  8995  004656  0012               	return	
  8996  004658                     l1186:
  8997  004658  C023  F023         	movff	abs@a,?_abs
  8998  00465C  C024  F024         	movff	abs@a+1,?_abs+1
  8999  004660  0012               	return		;funcret
  9000  004662                     __end_of_abs:
  9001                           	opt callstack 0
  9002                           
  9003 ;; *************** function ___aomod *****************
  9004 ;; Defined at:
  9005 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  9006 ;; Parameters:    Size  Location     Type
  9007 ;;  dividend        8   16[COMRAM] long long 
  9008 ;;  divisor         8   24[COMRAM] long long 
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;  sign            1   33[COMRAM] unsigned char 
  9011 ;;  counter         1   32[COMRAM] unsigned char 
  9012 ;; Return value:  Size  Location     Type
  9013 ;;                  8   16[COMRAM] long long 
  9014 ;; Registers used:
  9015 ;;		wreg, status,2, status,0
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/0
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9021 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9022 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9024 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9025 ;;Total ram usage:       18 bytes
  9026 ;; Hardware stack levels used:    1
  9027 ;; Hardware stack levels required when called:    2
  9028 ;; This function calls:
  9029 ;;		Nothing
  9030 ;; This function is called by:
  9031 ;;		_dtoa
  9032 ;; This function uses a non-reentrant model
  9033 ;;
  9034                           
  9035                           	psect	text34
  9036  0037E2                     __ptext34:
  9037                           	opt callstack 0
  9038  0037E2                     ___aomod:
  9039                           	opt callstack 24
  9040                           
  9041                           ;incstack = 0
  9042  0037E2  0E00               	movlw	0
  9043  0037E4  6E22               	movwf	___aomod@sign,c
  9044  0037E6  AE18               	btfss	___aomod@dividend+7,7,c
  9045  0037E8  D012               	goto	l6425
  9046  0037EA  1E18               	comf	___aomod@dividend+7,f,c
  9047  0037EC  1E17               	comf	___aomod@dividend+6,f,c
  9048  0037EE  1E16               	comf	___aomod@dividend+5,f,c
  9049  0037F0  1E15               	comf	___aomod@dividend+4,f,c
  9050  0037F2  1E14               	comf	___aomod@dividend+3,f,c
  9051  0037F4  1E13               	comf	___aomod@dividend+2,f,c
  9052  0037F6  1E12               	comf	___aomod@dividend+1,f,c
  9053  0037F8  6C11               	negf	___aomod@dividend,c
  9054  0037FA  0E00               	movlw	0
  9055  0037FC  2212               	addwfc	___aomod@dividend+1,f,c
  9056  0037FE  2213               	addwfc	___aomod@dividend+2,f,c
  9057  003800  2214               	addwfc	___aomod@dividend+3,f,c
  9058  003802  2215               	addwfc	___aomod@dividend+4,f,c
  9059  003804  2216               	addwfc	___aomod@dividend+5,f,c
  9060  003806  2217               	addwfc	___aomod@dividend+6,f,c
  9061  003808  2218               	addwfc	___aomod@dividend+7,f,c
  9062  00380A  0E01               	movlw	1
  9063  00380C  6E22               	movwf	___aomod@sign,c
  9064  00380E                     l6425:
  9065  00380E  AE20               	btfss	___aomod@divisor+7,7,c
  9066  003810  D010               	goto	l6429
  9067  003812  1E20               	comf	___aomod@divisor+7,f,c
  9068  003814  1E1F               	comf	___aomod@divisor+6,f,c
  9069  003816  1E1E               	comf	___aomod@divisor+5,f,c
  9070  003818  1E1D               	comf	___aomod@divisor+4,f,c
  9071  00381A  1E1C               	comf	___aomod@divisor+3,f,c
  9072  00381C  1E1B               	comf	___aomod@divisor+2,f,c
  9073  00381E  1E1A               	comf	___aomod@divisor+1,f,c
  9074  003820  6C19               	negf	___aomod@divisor,c
  9075  003822  0E00               	movlw	0
  9076  003824  221A               	addwfc	___aomod@divisor+1,f,c
  9077  003826  221B               	addwfc	___aomod@divisor+2,f,c
  9078  003828  221C               	addwfc	___aomod@divisor+3,f,c
  9079  00382A  221D               	addwfc	___aomod@divisor+4,f,c
  9080  00382C  221E               	addwfc	___aomod@divisor+5,f,c
  9081  00382E  221F               	addwfc	___aomod@divisor+6,f,c
  9082  003830  2220               	addwfc	___aomod@divisor+7,f,c
  9083  003832                     l6429:
  9084  003832  5019               	movf	___aomod@divisor,w,c
  9085  003834  101A               	iorwf	___aomod@divisor+1,w,c
  9086  003836  101B               	iorwf	___aomod@divisor+2,w,c
  9087  003838  101C               	iorwf	___aomod@divisor+3,w,c
  9088  00383A  101D               	iorwf	___aomod@divisor+4,w,c
  9089  00383C  101E               	iorwf	___aomod@divisor+5,w,c
  9090  00383E  101F               	iorwf	___aomod@divisor+6,w,c
  9091  003840  1020               	iorwf	___aomod@divisor+7,w,c
  9092  003842  B4D8               	btfsc	status,2,c
  9093  003844  D03C               	goto	l6445
  9094  003846  0E01               	movlw	1
  9095  003848  6E21               	movwf	___aomod@counter,c
  9096  00384A  D00A               	goto	l6435
  9097  00384C                     l6433:
  9098  00384C  90D8               	bcf	status,0,c
  9099  00384E  3619               	rlcf	___aomod@divisor,f,c
  9100  003850  361A               	rlcf	___aomod@divisor+1,f,c
  9101  003852  361B               	rlcf	___aomod@divisor+2,f,c
  9102  003854  361C               	rlcf	___aomod@divisor+3,f,c
  9103  003856  361D               	rlcf	___aomod@divisor+4,f,c
  9104  003858  361E               	rlcf	___aomod@divisor+5,f,c
  9105  00385A  361F               	rlcf	___aomod@divisor+6,f,c
  9106  00385C  3620               	rlcf	___aomod@divisor+7,f,c
  9107  00385E  2A21               	incf	___aomod@counter,f,c
  9108  003860                     l6435:
  9109  003860  AE20               	btfss	___aomod@divisor+7,7,c
  9110  003862  D7F4               	goto	l6433
  9111  003864                     u8340:
  9112  003864  5019               	movf	___aomod@divisor,w,c
  9113  003866  5C11               	subwf	___aomod@dividend,w,c
  9114  003868  501A               	movf	___aomod@divisor+1,w,c
  9115  00386A  5812               	subwfb	___aomod@dividend+1,w,c
  9116  00386C  501B               	movf	___aomod@divisor+2,w,c
  9117  00386E  5813               	subwfb	___aomod@dividend+2,w,c
  9118  003870  501C               	movf	___aomod@divisor+3,w,c
  9119  003872  5814               	subwfb	___aomod@dividend+3,w,c
  9120  003874  501D               	movf	___aomod@divisor+4,w,c
  9121  003876  5815               	subwfb	___aomod@dividend+4,w,c
  9122  003878  501E               	movf	___aomod@divisor+5,w,c
  9123  00387A  5816               	subwfb	___aomod@dividend+5,w,c
  9124  00387C  501F               	movf	___aomod@divisor+6,w,c
  9125  00387E  5817               	subwfb	___aomod@dividend+6,w,c
  9126  003880  5020               	movf	___aomod@divisor+7,w,c
  9127  003882  5818               	subwfb	___aomod@dividend+7,w,c
  9128  003884  A0D8               	btfss	status,0,c
  9129  003886  D010               	goto	l6441
  9130  003888  5019               	movf	___aomod@divisor,w,c
  9131  00388A  5E11               	subwf	___aomod@dividend,f,c
  9132  00388C  501A               	movf	___aomod@divisor+1,w,c
  9133  00388E  5A12               	subwfb	___aomod@dividend+1,f,c
  9134  003890  501B               	movf	___aomod@divisor+2,w,c
  9135  003892  5A13               	subwfb	___aomod@dividend+2,f,c
  9136  003894  501C               	movf	___aomod@divisor+3,w,c
  9137  003896  5A14               	subwfb	___aomod@dividend+3,f,c
  9138  003898  501D               	movf	___aomod@divisor+4,w,c
  9139  00389A  5A15               	subwfb	___aomod@dividend+4,f,c
  9140  00389C  501E               	movf	___aomod@divisor+5,w,c
  9141  00389E  5A16               	subwfb	___aomod@dividend+5,f,c
  9142  0038A0  501F               	movf	___aomod@divisor+6,w,c
  9143  0038A2  5A17               	subwfb	___aomod@dividend+6,f,c
  9144  0038A4  5020               	movf	___aomod@divisor+7,w,c
  9145  0038A6  5A18               	subwfb	___aomod@dividend+7,f,c
  9146  0038A8                     l6441:
  9147  0038A8  90D8               	bcf	status,0,c
  9148  0038AA  3220               	rrcf	___aomod@divisor+7,f,c
  9149  0038AC  321F               	rrcf	___aomod@divisor+6,f,c
  9150  0038AE  321E               	rrcf	___aomod@divisor+5,f,c
  9151  0038B0  321D               	rrcf	___aomod@divisor+4,f,c
  9152  0038B2  321C               	rrcf	___aomod@divisor+3,f,c
  9153  0038B4  321B               	rrcf	___aomod@divisor+2,f,c
  9154  0038B6  321A               	rrcf	___aomod@divisor+1,f,c
  9155  0038B8  3219               	rrcf	___aomod@divisor,f,c
  9156  0038BA  2E21               	decfsz	___aomod@counter,f,c
  9157  0038BC  D7D3               	goto	u8340
  9158  0038BE                     l6445:
  9159  0038BE  5022               	movf	___aomod@sign,w,c
  9160  0038C0  B4D8               	btfsc	status,2,c
  9161  0038C2  D010               	goto	l6449
  9162  0038C4  1E18               	comf	___aomod@dividend+7,f,c
  9163  0038C6  1E17               	comf	___aomod@dividend+6,f,c
  9164  0038C8  1E16               	comf	___aomod@dividend+5,f,c
  9165  0038CA  1E15               	comf	___aomod@dividend+4,f,c
  9166  0038CC  1E14               	comf	___aomod@dividend+3,f,c
  9167  0038CE  1E13               	comf	___aomod@dividend+2,f,c
  9168  0038D0  1E12               	comf	___aomod@dividend+1,f,c
  9169  0038D2  6C11               	negf	___aomod@dividend,c
  9170  0038D4  0E00               	movlw	0
  9171  0038D6  2212               	addwfc	___aomod@dividend+1,f,c
  9172  0038D8  2213               	addwfc	___aomod@dividend+2,f,c
  9173  0038DA  2214               	addwfc	___aomod@dividend+3,f,c
  9174  0038DC  2215               	addwfc	___aomod@dividend+4,f,c
  9175  0038DE  2216               	addwfc	___aomod@dividend+5,f,c
  9176  0038E0  2217               	addwfc	___aomod@dividend+6,f,c
  9177  0038E2  2218               	addwfc	___aomod@dividend+7,f,c
  9178  0038E4                     l6449:
  9179  0038E4  C011  F011         	movff	___aomod@dividend,?___aomod
  9180  0038E8  C012  F012         	movff	___aomod@dividend+1,?___aomod+1
  9181  0038EC  C013  F013         	movff	___aomod@dividend+2,?___aomod+2
  9182  0038F0  C014  F014         	movff	___aomod@dividend+3,?___aomod+3
  9183  0038F4  C015  F015         	movff	___aomod@dividend+4,?___aomod+4
  9184  0038F8  C016  F016         	movff	___aomod@dividend+5,?___aomod+5
  9185  0038FC  C017  F017         	movff	___aomod@dividend+6,?___aomod+6
  9186  003900  C018  F018         	movff	___aomod@dividend+7,?___aomod+7
  9187  003904  0012               	return		;funcret
  9188  003906                     __end_of___aomod:
  9189                           	opt callstack 0
  9190                           
  9191 ;; *************** function ___aodiv *****************
  9192 ;; Defined at:
  9193 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;  dividend        8   16[COMRAM] long long 
  9196 ;;  divisor         8   24[COMRAM] long long 
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;  quotient        8   34[COMRAM] long long 
  9199 ;;  sign            1   33[COMRAM] unsigned char 
  9200 ;;  counter         1   32[COMRAM] unsigned char 
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  8   16[COMRAM] long long 
  9203 ;; Registers used:
  9204 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 0/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9210 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9211 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9213 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9214 ;;Total ram usage:       26 bytes
  9215 ;; Hardware stack levels used:    1
  9216 ;; Hardware stack levels required when called:    2
  9217 ;; This function calls:
  9218 ;;		Nothing
  9219 ;; This function is called by:
  9220 ;;		_dtoa
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           	psect	text35
  9225  00355A                     __ptext35:
  9226                           	opt callstack 0
  9227  00355A                     ___aodiv:
  9228                           	opt callstack 24
  9229                           
  9230                           ;incstack = 0
  9231  00355A  0E00               	movlw	0
  9232  00355C  6E22               	movwf	___aodiv@sign,c
  9233  00355E  AE20               	btfss	___aodiv@divisor+7,7,c
  9234  003560  D012               	goto	l6381
  9235  003562  1E20               	comf	___aodiv@divisor+7,f,c
  9236  003564  1E1F               	comf	___aodiv@divisor+6,f,c
  9237  003566  1E1E               	comf	___aodiv@divisor+5,f,c
  9238  003568  1E1D               	comf	___aodiv@divisor+4,f,c
  9239  00356A  1E1C               	comf	___aodiv@divisor+3,f,c
  9240  00356C  1E1B               	comf	___aodiv@divisor+2,f,c
  9241  00356E  1E1A               	comf	___aodiv@divisor+1,f,c
  9242  003570  6C19               	negf	___aodiv@divisor,c
  9243  003572  0E00               	movlw	0
  9244  003574  221A               	addwfc	___aodiv@divisor+1,f,c
  9245  003576  221B               	addwfc	___aodiv@divisor+2,f,c
  9246  003578  221C               	addwfc	___aodiv@divisor+3,f,c
  9247  00357A  221D               	addwfc	___aodiv@divisor+4,f,c
  9248  00357C  221E               	addwfc	___aodiv@divisor+5,f,c
  9249  00357E  221F               	addwfc	___aodiv@divisor+6,f,c
  9250  003580  2220               	addwfc	___aodiv@divisor+7,f,c
  9251  003582  0E01               	movlw	1
  9252  003584  6E22               	movwf	___aodiv@sign,c
  9253  003586                     l6381:
  9254  003586  AE18               	btfss	___aodiv@dividend+7,7,c
  9255  003588  D012               	goto	l6387
  9256  00358A  1E18               	comf	___aodiv@dividend+7,f,c
  9257  00358C  1E17               	comf	___aodiv@dividend+6,f,c
  9258  00358E  1E16               	comf	___aodiv@dividend+5,f,c
  9259  003590  1E15               	comf	___aodiv@dividend+4,f,c
  9260  003592  1E14               	comf	___aodiv@dividend+3,f,c
  9261  003594  1E13               	comf	___aodiv@dividend+2,f,c
  9262  003596  1E12               	comf	___aodiv@dividend+1,f,c
  9263  003598  6C11               	negf	___aodiv@dividend,c
  9264  00359A  0E00               	movlw	0
  9265  00359C  2212               	addwfc	___aodiv@dividend+1,f,c
  9266  00359E  2213               	addwfc	___aodiv@dividend+2,f,c
  9267  0035A0  2214               	addwfc	___aodiv@dividend+3,f,c
  9268  0035A2  2215               	addwfc	___aodiv@dividend+4,f,c
  9269  0035A4  2216               	addwfc	___aodiv@dividend+5,f,c
  9270  0035A6  2217               	addwfc	___aodiv@dividend+6,f,c
  9271  0035A8  2218               	addwfc	___aodiv@dividend+7,f,c
  9272  0035AA  0E01               	movlw	1
  9273  0035AC  1A22               	xorwf	___aodiv@sign,f,c
  9274  0035AE                     l6387:
  9275  0035AE  EE20  F023         	lfsr	2,___aodiv@quotient
  9276  0035B2  0E07               	movlw	7
  9277  0035B4                     u8261:
  9278  0035B4  6ADE               	clrf	postinc2,c
  9279  0035B6  06E8               	decf	wreg,f,c
  9280  0035B8  E2FD               	bc	u8261
  9281  0035BA  5019               	movf	___aodiv@divisor,w,c
  9282  0035BC  101A               	iorwf	___aodiv@divisor+1,w,c
  9283  0035BE  101B               	iorwf	___aodiv@divisor+2,w,c
  9284  0035C0  101C               	iorwf	___aodiv@divisor+3,w,c
  9285  0035C2  101D               	iorwf	___aodiv@divisor+4,w,c
  9286  0035C4  101E               	iorwf	___aodiv@divisor+5,w,c
  9287  0035C6  101F               	iorwf	___aodiv@divisor+6,w,c
  9288  0035C8  1020               	iorwf	___aodiv@divisor+7,w,c
  9289  0035CA  B4D8               	btfsc	status,2,c
  9290  0035CC  D046               	goto	l6409
  9291  0035CE  0E01               	movlw	1
  9292  0035D0  6E21               	movwf	___aodiv@counter,c
  9293  0035D2  D00A               	goto	l6395
  9294  0035D4                     l6393:
  9295  0035D4  90D8               	bcf	status,0,c
  9296  0035D6  3619               	rlcf	___aodiv@divisor,f,c
  9297  0035D8  361A               	rlcf	___aodiv@divisor+1,f,c
  9298  0035DA  361B               	rlcf	___aodiv@divisor+2,f,c
  9299  0035DC  361C               	rlcf	___aodiv@divisor+3,f,c
  9300  0035DE  361D               	rlcf	___aodiv@divisor+4,f,c
  9301  0035E0  361E               	rlcf	___aodiv@divisor+5,f,c
  9302  0035E2  361F               	rlcf	___aodiv@divisor+6,f,c
  9303  0035E4  3620               	rlcf	___aodiv@divisor+7,f,c
  9304  0035E6  2A21               	incf	___aodiv@counter,f,c
  9305  0035E8                     l6395:
  9306  0035E8  AE20               	btfss	___aodiv@divisor+7,7,c
  9307  0035EA  D7F4               	goto	l6393
  9308  0035EC                     u8280:
  9309  0035EC  90D8               	bcf	status,0,c
  9310  0035EE  3623               	rlcf	___aodiv@quotient,f,c
  9311  0035F0  3624               	rlcf	___aodiv@quotient+1,f,c
  9312  0035F2  3625               	rlcf	___aodiv@quotient+2,f,c
  9313  0035F4  3626               	rlcf	___aodiv@quotient+3,f,c
  9314  0035F6  3627               	rlcf	___aodiv@quotient+4,f,c
  9315  0035F8  3628               	rlcf	___aodiv@quotient+5,f,c
  9316  0035FA  3629               	rlcf	___aodiv@quotient+6,f,c
  9317  0035FC  362A               	rlcf	___aodiv@quotient+7,f,c
  9318  0035FE  5019               	movf	___aodiv@divisor,w,c
  9319  003600  5C11               	subwf	___aodiv@dividend,w,c
  9320  003602  501A               	movf	___aodiv@divisor+1,w,c
  9321  003604  5812               	subwfb	___aodiv@dividend+1,w,c
  9322  003606  501B               	movf	___aodiv@divisor+2,w,c
  9323  003608  5813               	subwfb	___aodiv@dividend+2,w,c
  9324  00360A  501C               	movf	___aodiv@divisor+3,w,c
  9325  00360C  5814               	subwfb	___aodiv@dividend+3,w,c
  9326  00360E  501D               	movf	___aodiv@divisor+4,w,c
  9327  003610  5815               	subwfb	___aodiv@dividend+4,w,c
  9328  003612  501E               	movf	___aodiv@divisor+5,w,c
  9329  003614  5816               	subwfb	___aodiv@dividend+5,w,c
  9330  003616  501F               	movf	___aodiv@divisor+6,w,c
  9331  003618  5817               	subwfb	___aodiv@dividend+6,w,c
  9332  00361A  5020               	movf	___aodiv@divisor+7,w,c
  9333  00361C  5818               	subwfb	___aodiv@dividend+7,w,c
  9334  00361E  A0D8               	btfss	status,0,c
  9335  003620  D011               	goto	l6405
  9336  003622  5019               	movf	___aodiv@divisor,w,c
  9337  003624  5E11               	subwf	___aodiv@dividend,f,c
  9338  003626  501A               	movf	___aodiv@divisor+1,w,c
  9339  003628  5A12               	subwfb	___aodiv@dividend+1,f,c
  9340  00362A  501B               	movf	___aodiv@divisor+2,w,c
  9341  00362C  5A13               	subwfb	___aodiv@dividend+2,f,c
  9342  00362E  501C               	movf	___aodiv@divisor+3,w,c
  9343  003630  5A14               	subwfb	___aodiv@dividend+3,f,c
  9344  003632  501D               	movf	___aodiv@divisor+4,w,c
  9345  003634  5A15               	subwfb	___aodiv@dividend+4,f,c
  9346  003636  501E               	movf	___aodiv@divisor+5,w,c
  9347  003638  5A16               	subwfb	___aodiv@dividend+5,f,c
  9348  00363A  501F               	movf	___aodiv@divisor+6,w,c
  9349  00363C  5A17               	subwfb	___aodiv@dividend+6,f,c
  9350  00363E  5020               	movf	___aodiv@divisor+7,w,c
  9351  003640  5A18               	subwfb	___aodiv@dividend+7,f,c
  9352  003642  8023               	bsf	___aodiv@quotient,0,c
  9353  003644                     l6405:
  9354  003644  90D8               	bcf	status,0,c
  9355  003646  3220               	rrcf	___aodiv@divisor+7,f,c
  9356  003648  321F               	rrcf	___aodiv@divisor+6,f,c
  9357  00364A  321E               	rrcf	___aodiv@divisor+5,f,c
  9358  00364C  321D               	rrcf	___aodiv@divisor+4,f,c
  9359  00364E  321C               	rrcf	___aodiv@divisor+3,f,c
  9360  003650  321B               	rrcf	___aodiv@divisor+2,f,c
  9361  003652  321A               	rrcf	___aodiv@divisor+1,f,c
  9362  003654  3219               	rrcf	___aodiv@divisor,f,c
  9363  003656  2E21               	decfsz	___aodiv@counter,f,c
  9364  003658  D7C9               	goto	u8280
  9365  00365A                     l6409:
  9366  00365A  5022               	movf	___aodiv@sign,w,c
  9367  00365C  B4D8               	btfsc	status,2,c
  9368  00365E  D010               	goto	l6413
  9369  003660  1E2A               	comf	___aodiv@quotient+7,f,c
  9370  003662  1E29               	comf	___aodiv@quotient+6,f,c
  9371  003664  1E28               	comf	___aodiv@quotient+5,f,c
  9372  003666  1E27               	comf	___aodiv@quotient+4,f,c
  9373  003668  1E26               	comf	___aodiv@quotient+3,f,c
  9374  00366A  1E25               	comf	___aodiv@quotient+2,f,c
  9375  00366C  1E24               	comf	___aodiv@quotient+1,f,c
  9376  00366E  6C23               	negf	___aodiv@quotient,c
  9377  003670  0E00               	movlw	0
  9378  003672  2224               	addwfc	___aodiv@quotient+1,f,c
  9379  003674  2225               	addwfc	___aodiv@quotient+2,f,c
  9380  003676  2226               	addwfc	___aodiv@quotient+3,f,c
  9381  003678  2227               	addwfc	___aodiv@quotient+4,f,c
  9382  00367A  2228               	addwfc	___aodiv@quotient+5,f,c
  9383  00367C  2229               	addwfc	___aodiv@quotient+6,f,c
  9384  00367E  222A               	addwfc	___aodiv@quotient+7,f,c
  9385  003680                     l6413:
  9386  003680  C023  F011         	movff	___aodiv@quotient,?___aodiv
  9387  003684  C024  F012         	movff	___aodiv@quotient+1,?___aodiv+1
  9388  003688  C025  F013         	movff	___aodiv@quotient+2,?___aodiv+2
  9389  00368C  C026  F014         	movff	___aodiv@quotient+3,?___aodiv+3
  9390  003690  C027  F015         	movff	___aodiv@quotient+4,?___aodiv+4
  9391  003694  C028  F016         	movff	___aodiv@quotient+5,?___aodiv+5
  9392  003698  C029  F017         	movff	___aodiv@quotient+6,?___aodiv+6
  9393  00369C  C02A  F018         	movff	___aodiv@quotient+7,?___aodiv+7
  9394  0036A0  0012               	return		;funcret
  9395  0036A2                     __end_of___aodiv:
  9396                           	opt callstack 0
  9397                           
  9398 ;; *************** function _atoi *****************
  9399 ;; Defined at:
  9400 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  9401 ;; Parameters:    Size  Location     Type
  9402 ;;  s               2   23[COMRAM] PTR const unsigned char 
  9403 ;;		 -> STR_13(14), STR_12(14), STR_11(15), STR_10(15), 
  9404 ;;		 -> STR_9(10), STR_8(11), STR_7(10), STR_6(16), 
  9405 ;;		 -> STR_5(9), STR_4(10), STR_3(3), STR_2(15), 
  9406 ;;		 -> STR_1(15), 
  9407 ;; Auto vars:     Size  Location     Type
  9408 ;;  n               2   36[COMRAM] int 
  9409 ;;  neg             2   29[COMRAM] int 
  9410 ;; Return value:  Size  Location     Type
  9411 ;;                  2   23[COMRAM] int 
  9412 ;; Registers used:
  9413 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9414 ;; Tracked objects:
  9415 ;;		On entry : 0/0
  9416 ;;		On exit  : 0/0
  9417 ;;		Unchanged: 0/0
  9418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9420 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9421 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9422 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9423 ;;Total ram usage:       15 bytes
  9424 ;; Hardware stack levels used:    1
  9425 ;; Hardware stack levels required when called:    3
  9426 ;; This function calls:
  9427 ;;		___wmul
  9428 ;;		_isdigit
  9429 ;;		_isspace
  9430 ;; This function is called by:
  9431 ;;		_vfpfcnvrt
  9432 ;; This function uses a non-reentrant model
  9433 ;;
  9434                           
  9435                           	psect	text36
  9436  0036A2                     __ptext36:
  9437                           	opt callstack 0
  9438  0036A2                     _atoi:
  9439                           	opt callstack 24
  9440                           
  9441                           ;incstack = 0
  9442  0036A2  0E00               	movlw	0
  9443  0036A4  6E26               	movwf	atoi@n+1,c
  9444  0036A6  0E00               	movlw	0
  9445  0036A8  6E25               	movwf	atoi@n,c
  9446  0036AA  0E00               	movlw	0
  9447  0036AC  6E1F               	movwf	atoi@neg+1,c
  9448  0036AE  0E00               	movlw	0
  9449  0036B0  6E1E               	movwf	atoi@neg,c
  9450  0036B2  D002               	goto	l7339
  9451  0036B4                     l7337:
  9452  0036B4  4A18               	infsnz	atoi@s,f,c
  9453  0036B6  2A19               	incf	atoi@s+1,f,c
  9454  0036B8                     l7339:
  9455  0036B8  0E01               	movlw	1
  9456  0036BA  6E24               	movwf	_atoi$1398,c
  9457  0036BC  C018  FFF6         	movff	atoi@s,tblptrl
  9458  0036C0  C019  FFF7         	movff	atoi@s+1,tblptrh
  9459  0036C4                     	if	0	;tblptru may be non-zero
  9460  0036C4                     	endif
  9461  0036C4                     	if	0	;tblptru may be non-zero
  9462  0036C4                     	endif
  9463  0036C4  0008               	tblrd		*
  9464  0036C6  50F5               	movf	tablat,w,c
  9465  0036C8  0A20               	xorlw	32
  9466  0036CA  B4D8               	btfsc	status,2,c
  9467  0036CC  D018               	goto	l7347
  9468  0036CE  0EF7               	movlw	247
  9469  0036D0  6E1A               	movwf	??_atoi& (0+255),c
  9470  0036D2  0EFF               	movlw	255
  9471  0036D4  6E1B               	movwf	(??_atoi+1)& (0+255),c
  9472  0036D6  C018  FFF6         	movff	atoi@s,tblptrl
  9473  0036DA  C019  FFF7         	movff	atoi@s+1,tblptrh
  9474  0036DE                     	if	0	;tblptru may be non-zero
  9475  0036DE                     	endif
  9476  0036DE                     	if	0	;tblptru may be non-zero
  9477  0036DE                     	endif
  9478  0036DE  0008               	tblrd		*
  9479  0036E0  50F5               	movf	tablat,w,c
  9480  0036E2  6E1C               	movwf	(??_atoi+2)& (0+255),c
  9481  0036E4  6A1D               	clrf	(??_atoi+3)& (0+255),c
  9482  0036E6  501A               	movf	??_atoi,w,c
  9483  0036E8  261C               	addwf	??_atoi+2,f,c
  9484  0036EA  501B               	movf	??_atoi+1,w,c
  9485  0036EC  221D               	addwfc	??_atoi+3,f,c
  9486  0036EE  501D               	movf	??_atoi+3,w,c
  9487  0036F0  E104               	bnz	u9940
  9488  0036F2  0E05               	movlw	5
  9489  0036F4  5C1C               	subwf	??_atoi+2,w,c
  9490  0036F6  A0D8               	btfss	status,0,c
  9491  0036F8  D002               	goto	l7347
  9492  0036FA                     u9940:
  9493  0036FA  0E00               	movlw	0
  9494  0036FC  6E24               	movwf	_atoi$1398,c
  9495  0036FE                     l7347:
  9496  0036FE  C024  F020         	movff	_atoi$1398,_atoi$1397
  9497  003702  6A21               	clrf	_atoi$1397+1,c
  9498  003704  5020               	movf	_atoi$1397,w,c
  9499  003706  1021               	iorwf	_atoi$1397+1,w,c
  9500  003708  B4D8               	btfsc	status,2,c
  9501  00370A  D008               	goto	l7357
  9502  00370C  D7D3               	goto	l7337
  9503  00370E                     l7353:
  9504  00370E  0E00               	movlw	0
  9505  003710  6E1F               	movwf	atoi@neg+1,c
  9506  003712  0E01               	movlw	1
  9507  003714  6E1E               	movwf	atoi@neg,c
  9508  003716                     l7355:
  9509  003716  4A18               	infsnz	atoi@s,f,c
  9510  003718  2A19               	incf	atoi@s+1,f,c
  9511  00371A  D02E               	goto	l7363
  9512  00371C                     l7357:
  9513  00371C  C018  FFF6         	movff	atoi@s,tblptrl
  9514  003720  C019  FFF7         	movff	atoi@s+1,tblptrh
  9515  003724                     	if	0	;tblptru may be non-zero
  9516  003724                     	endif
  9517  003724                     	if	0	;tblptru may be non-zero
  9518  003724                     	endif
  9519  003724  0008               	tblrd		*
  9520  003726  50F5               	movf	tablat,w,c
  9521  003728  6E1A               	movwf	??_atoi& (0+255),c
  9522  00372A  6A1B               	clrf	(??_atoi+1)& (0+255),c
  9523                           
  9524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9525                           ; Switch size 1, requested type "simple"
  9526                           ; Number of cases is 1, Range of values is 0 to 0
  9527                           ; switch strategies available:
  9528                           ; Name         Instructions Cycles
  9529                           ; simple_byte            4     3 (average)
  9530                           ;	Chosen strategy is simple_byte
  9531  00372C  501B               	movf	??_atoi+1,w,c
  9532  00372E  0A00               	xorlw	0	; case 0
  9533  003730  A4D8               	btfss	status,2,c
  9534  003732  D022               	goto	l7363
  9535                           
  9536                           ; Switch size 1, requested type "simple"
  9537                           ; Number of cases is 2, Range of values is 43 to 45
  9538                           ; switch strategies available:
  9539                           ; Name         Instructions Cycles
  9540                           ; simple_byte            7     4 (average)
  9541                           ;	Chosen strategy is simple_byte
  9542  003734  501A               	movf	??_atoi,w,c
  9543  003736  0A2B               	xorlw	43	; case 43
  9544  003738  B4D8               	btfsc	status,2,c
  9545  00373A  D7ED               	goto	l7355
  9546  00373C  0A06               	xorlw	6	; case 45
  9547  00373E  B4D8               	btfsc	status,2,c
  9548  003740  D7E6               	goto	l7353
  9549  003742  D01A               	goto	l7363
  9550  003744                     l7359:
  9551  003744  C025  F011         	movff	atoi@n,___wmul@multiplier
  9552  003748  C026  F012         	movff	atoi@n+1,___wmul@multiplier+1
  9553  00374C  0E00               	movlw	0
  9554  00374E  6E14               	movwf	___wmul@multiplicand+1,c
  9555  003750  0E0A               	movlw	10
  9556  003752  6E13               	movwf	___wmul@multiplicand,c
  9557  003754  ECD1  F023         	call	___wmul	;wreg free
  9558  003758  C018  FFF6         	movff	atoi@s,tblptrl
  9559  00375C  C019  FFF7         	movff	atoi@s+1,tblptrh
  9560  003760                     	if	0	;tblptru may be non-zero
  9561  003760                     	endif
  9562  003760                     	if	0	;tblptru may be non-zero
  9563  003760                     	endif
  9564  003760  0008               	tblrd		*
  9565  003762  50F5               	movf	tablat,w,c
  9566  003764  5E11               	subwf	?___wmul,f,c
  9567  003766  0E00               	movlw	0
  9568  003768  5A12               	subwfb	?___wmul+1,f,c
  9569  00376A  0E30               	movlw	48
  9570  00376C  2411               	addwf	?___wmul,w,c
  9571  00376E  6E25               	movwf	atoi@n,c
  9572  003770  0E00               	movlw	0
  9573  003772  2012               	addwfc	?___wmul+1,w,c
  9574  003774  6E26               	movwf	atoi@n+1,c
  9575  003776  D7CF               	goto	l7355
  9576  003778                     l7363:
  9577  003778  0ED0               	movlw	208
  9578  00377A  6E1A               	movwf	??_atoi& (0+255),c
  9579  00377C  0EFF               	movlw	255
  9580  00377E  6E1B               	movwf	(??_atoi+1)& (0+255),c
  9581  003780  C018  FFF6         	movff	atoi@s,tblptrl
  9582  003784  C019  FFF7         	movff	atoi@s+1,tblptrh
  9583  003788                     	if	0	;tblptru may be non-zero
  9584  003788                     	endif
  9585  003788                     	if	0	;tblptru may be non-zero
  9586  003788                     	endif
  9587  003788  0008               	tblrd		*
  9588  00378A  50F5               	movf	tablat,w,c
  9589  00378C  6E1C               	movwf	(??_atoi+2)& (0+255),c
  9590  00378E  6A1D               	clrf	(??_atoi+3)& (0+255),c
  9591  003790  501A               	movf	??_atoi,w,c
  9592  003792  261C               	addwf	??_atoi+2,f,c
  9593  003794  501B               	movf	??_atoi+1,w,c
  9594  003796  221D               	addwfc	??_atoi+3,f,c
  9595  003798  501D               	movf	??_atoi+3,w,c
  9596  00379A  E106               	bnz	u9960
  9597  00379C  0E0A               	movlw	10
  9598  00379E  5C1C               	subwf	??_atoi+2,w,c
  9599  0037A0  B0D8               	btfsc	status,0,c
  9600  0037A2  D002               	goto	u9960
  9601  0037A4  0E01               	movlw	1
  9602  0037A6  D001               	goto	u9970
  9603  0037A8                     u9960:
  9604  0037A8  0E00               	movlw	0
  9605  0037AA                     u9970:
  9606  0037AA  6E22               	movwf	_atoi$1399,c
  9607  0037AC  6A23               	clrf	_atoi$1399+1,c
  9608  0037AE  5022               	movf	_atoi$1399,w,c
  9609  0037B0  1023               	iorwf	_atoi$1399+1,w,c
  9610  0037B2  A4D8               	btfss	status,2,c
  9611  0037B4  D7C7               	goto	l7359
  9612  0037B6  501E               	movf	atoi@neg,w,c
  9613  0037B8  101F               	iorwf	atoi@neg+1,w,c
  9614  0037BA  A4D8               	btfss	status,2,c
  9615  0037BC  D00D               	goto	l1217
  9616  0037BE  C025  F01A         	movff	atoi@n,??_atoi
  9617  0037C2  C026  F01B         	movff	atoi@n+1,??_atoi+1
  9618  0037C6  1E1A               	comf	??_atoi,f,c
  9619  0037C8  1E1B               	comf	??_atoi+1,f,c
  9620  0037CA  4A1A               	infsnz	??_atoi,f,c
  9621  0037CC  2A1B               	incf	??_atoi+1,f,c
  9622  0037CE  C01A  F018         	movff	??_atoi,?_atoi
  9623  0037D2  C01B  F019         	movff	??_atoi+1,?_atoi+1
  9624  0037D6  0012               	return	
  9625  0037D8                     l1217:
  9626  0037D8  C025  F018         	movff	atoi@n,?_atoi
  9627  0037DC  C026  F019         	movff	atoi@n+1,?_atoi+1
  9628  0037E0  0012               	return		;funcret
  9629  0037E2                     __end_of_atoi:
  9630                           	opt callstack 0
  9631                           
  9632 ;; *************** function _isspace *****************
  9633 ;; Defined at:
  9634 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  9635 ;; Parameters:    Size  Location     Type
  9636 ;;  c               2   16[COMRAM] int 
  9637 ;; Auto vars:     Size  Location     Type
  9638 ;;		None
  9639 ;; Return value:  Size  Location     Type
  9640 ;;                  2   16[COMRAM] int 
  9641 ;; Registers used:
  9642 ;;		wreg, status,2, status,0
  9643 ;; Tracked objects:
  9644 ;;		On entry : 0/0
  9645 ;;		On exit  : 0/0
  9646 ;;		Unchanged: 0/0
  9647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9649 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9650 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9651 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9652 ;;Total ram usage:        7 bytes
  9653 ;; Hardware stack levels used:    1
  9654 ;; Hardware stack levels required when called:    2
  9655 ;; This function calls:
  9656 ;;		Nothing
  9657 ;; This function is called by:
  9658 ;;		_atoi
  9659 ;; This function uses a non-reentrant model
  9660 ;;
  9661                           
  9662                           	psect	text37
  9663  004586                     __ptext37:
  9664                           	opt callstack 0
  9665  004586                     _isspace:
  9666                           	opt callstack 24
  9667                           
  9668                           ;incstack = 0
  9669  004586  0E01               	movlw	1
  9670  004588  6E17               	movwf	_isspace$1437,c
  9671  00458A  0E20               	movlw	32
  9672  00458C  1811               	xorwf	isspace@c,w,c
  9673  00458E  1012               	iorwf	isspace@c+1,w,c
  9674  004590  B4D8               	btfsc	status,2,c
  9675  004592  D014               	goto	l6905
  9676  004594  0EF7               	movlw	247
  9677  004596  6E13               	movwf	??_isspace& (0+255),c
  9678  004598  0EFF               	movlw	255
  9679  00459A  6E14               	movwf	(??_isspace+1)& (0+255),c
  9680  00459C  C011  F015         	movff	isspace@c,??_isspace+2
  9681  0045A0  C012  F016         	movff	isspace@c+1,??_isspace+3
  9682  0045A4  5013               	movf	??_isspace,w,c
  9683  0045A6  2615               	addwf	??_isspace+2,f,c
  9684  0045A8  5014               	movf	??_isspace+1,w,c
  9685  0045AA  2216               	addwfc	??_isspace+3,f,c
  9686  0045AC  5016               	movf	??_isspace+3,w,c
  9687  0045AE  E104               	bnz	u9080
  9688  0045B0  0E05               	movlw	5
  9689  0045B2  5C15               	subwf	??_isspace+2,w,c
  9690  0045B4  A0D8               	btfss	status,0,c
  9691  0045B6  D002               	goto	l6905
  9692  0045B8                     u9080:
  9693  0045B8  0E00               	movlw	0
  9694  0045BA  6E17               	movwf	_isspace$1437,c
  9695  0045BC                     l6905:
  9696  0045BC  C017  F011         	movff	_isspace$1437,?_isspace
  9697  0045C0  6A12               	clrf	?_isspace+1,c
  9698  0045C2  0012               	return		;funcret
  9699  0045C4                     __end_of_isspace:
  9700                           	opt callstack 0
  9701                           
  9702 ;; *************** function _isdigit *****************
  9703 ;; Defined at:
  9704 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;  c               2   16[COMRAM] int 
  9707 ;; Auto vars:     Size  Location     Type
  9708 ;;		None
  9709 ;; Return value:  Size  Location     Type
  9710 ;;                  2   16[COMRAM] int 
  9711 ;; Registers used:
  9712 ;;		wreg, status,2, status,0
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/0
  9715 ;;		On exit  : 0/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9720 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9721 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;Total ram usage:        6 bytes
  9723 ;; Hardware stack levels used:    1
  9724 ;; Hardware stack levels required when called:    2
  9725 ;; This function calls:
  9726 ;;		Nothing
  9727 ;; This function is called by:
  9728 ;;		_vfpfcnvrt
  9729 ;;		_atoi
  9730 ;; This function uses a non-reentrant model
  9731 ;;
  9732                           
  9733                           	psect	text38
  9734  0046C2                     __ptext38:
  9735                           	opt callstack 0
  9736  0046C2                     _isdigit:
  9737                           	opt callstack 25
  9738                           
  9739                           ;incstack = 0
  9740  0046C2  0ED0               	movlw	208
  9741  0046C4  6E13               	movwf	??_isdigit& (0+255),c
  9742  0046C6  0EFF               	movlw	255
  9743  0046C8  6E14               	movwf	(??_isdigit+1)& (0+255),c
  9744  0046CA  C011  F015         	movff	isdigit@c,??_isdigit+2
  9745  0046CE  C012  F016         	movff	isdigit@c+1,??_isdigit+3
  9746  0046D2  5013               	movf	??_isdigit,w,c
  9747  0046D4  2615               	addwf	??_isdigit+2,f,c
  9748  0046D6  5014               	movf	??_isdigit+1,w,c
  9749  0046D8  2216               	addwfc	??_isdigit+3,f,c
  9750  0046DA  5016               	movf	??_isdigit+3,w,c
  9751  0046DC  E106               	bnz	u8220
  9752  0046DE  0E0A               	movlw	10
  9753  0046E0  5C15               	subwf	??_isdigit+2,w,c
  9754  0046E2  B0D8               	btfsc	status,0,c
  9755  0046E4  D002               	goto	u8220
  9756  0046E6  0E01               	movlw	1
  9757  0046E8  D001               	goto	u8230
  9758  0046EA                     u8220:
  9759  0046EA  0E00               	movlw	0
  9760  0046EC                     u8230:
  9761  0046EC  6E11               	movwf	?_isdigit,c
  9762  0046EE  6A12               	clrf	?_isdigit+1,c
  9763  0046F0  0012               	return		;funcret
  9764  0046F2                     __end_of_isdigit:
  9765                           	opt callstack 0
  9766                           
  9767 ;; *************** function _line_2 *****************
  9768 ;; Defined at:
  9769 ;;		line 53 in file "LCD_F.c"
  9770 ;; Parameters:    Size  Location     Type
  9771 ;;		None
  9772 ;; Auto vars:     Size  Location     Type
  9773 ;;		None
  9774 ;; Return value:  Size  Location     Type
  9775 ;;                  1    wreg      void 
  9776 ;; Registers used:
  9777 ;;		wreg, status,2, status,0, cstack
  9778 ;; Tracked objects:
  9779 ;;		On entry : 0/0
  9780 ;;		On exit  : 0/0
  9781 ;;		Unchanged: 0/0
  9782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9787 ;;Total ram usage:        0 bytes
  9788 ;; Hardware stack levels used:    1
  9789 ;; Hardware stack levels required when called:    4
  9790 ;; This function calls:
  9791 ;;		_lcd_Instructions
  9792 ;; This function is called by:
  9793 ;;		_main
  9794 ;; This function uses a non-reentrant model
  9795 ;;
  9796                           
  9797                           	psect	text39
  9798  004840                     __ptext39:
  9799                           	opt callstack 0
  9800  004840                     _line_2:
  9801                           	opt callstack 26
  9802                           
  9803                           ;LCD_F.c: 54:     lcd_Instructions(0x80 | 64);
  9804                           
  9805                           ;incstack = 0
  9806  004840  0EC0               	movlw	192
  9807  004842  EC15  F024         	call	_lcd_Instructions
  9808  004846  0012               	return		;funcret
  9809  004848                     __end_of_line_2:
  9810                           	opt callstack 0
  9811                           
  9812 ;; *************** function _keypad_total *****************
  9813 ;; Defined at:
  9814 ;;		line 37 in file "timer.c"
  9815 ;; Parameters:    Size  Location     Type
  9816 ;;  first           1    wreg     unsigned char 
  9817 ;;  second          1   22[COMRAM] unsigned char 
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;  first           1   24[COMRAM] unsigned char 
  9820 ;;  second_int      2   27[COMRAM] int 
  9821 ;;  first_int       2   25[COMRAM] int 
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  2   22[COMRAM] int 
  9824 ;; Registers used:
  9825 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9832 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9834 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9835 ;;Total ram usage:        7 bytes
  9836 ;; Hardware stack levels used:    1
  9837 ;; Hardware stack levels required when called:    3
  9838 ;; This function calls:
  9839 ;;		___wmul
  9840 ;; This function is called by:
  9841 ;;		_main
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845                           	psect	text40
  9846  0046F2                     __ptext40:
  9847                           	opt callstack 0
  9848  0046F2                     _keypad_total:
  9849                           	opt callstack 27
  9850                           
  9851                           ;incstack = 0
  9852                           ;keypad_total@first stored from wreg
  9853  0046F2  6E19               	movwf	keypad_total@first,c
  9854                           
  9855                           ;timer.c: 38:     int first_int = (int)first;
  9856  0046F4  C019  F01A         	movff	keypad_total@first,keypad_total@first_int
  9857  0046F8  6A1B               	clrf	keypad_total@first_int+1,c
  9858                           
  9859                           ;timer.c: 39:     int second_int = (int)second;
  9860  0046FA  C017  F01C         	movff	keypad_total@second,keypad_total@second_int
  9861  0046FE  6A1D               	clrf	keypad_total@second_int+1,c
  9862                           
  9863                           ;timer.c: 40:     return first_int*10+second_int;
  9864  004700  C01A  F011         	movff	keypad_total@first_int,___wmul@multiplier
  9865  004704  C01B  F012         	movff	keypad_total@first_int+1,___wmul@multiplier+1
  9866  004708  0E00               	movlw	0
  9867  00470A  6E14               	movwf	___wmul@multiplicand+1,c
  9868  00470C  0E0A               	movlw	10
  9869  00470E  6E13               	movwf	___wmul@multiplicand,c
  9870  004710  ECD1  F023         	call	___wmul	;wreg free
  9871  004714  501C               	movf	keypad_total@second_int,w,c
  9872  004716  2411               	addwf	?___wmul,w,c
  9873  004718  6E17               	movwf	?_keypad_total,c
  9874  00471A  501D               	movf	keypad_total@second_int+1,w,c
  9875  00471C  2012               	addwfc	?___wmul+1,w,c
  9876  00471E  6E18               	movwf	?_keypad_total+1,c
  9877  004720  0012               	return		;funcret
  9878  004722                     __end_of_keypad_total:
  9879                           	opt callstack 0
  9880                           
  9881 ;; *************** function ___wmul *****************
  9882 ;; Defined at:
  9883 ;;		line 15 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;  multiplier      2   16[COMRAM] unsigned int 
  9886 ;;  multiplicand    2   18[COMRAM] unsigned int 
  9887 ;; Auto vars:     Size  Location     Type
  9888 ;;  product         2   20[COMRAM] unsigned int 
  9889 ;; Return value:  Size  Location     Type
  9890 ;;                  2   16[COMRAM] unsigned int 
  9891 ;; Registers used:
  9892 ;;		wreg, status,2, status,0, prodl, prodh
  9893 ;; Tracked objects:
  9894 ;;		On entry : 0/0
  9895 ;;		On exit  : 0/0
  9896 ;;		Unchanged: 0/0
  9897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9898 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9899 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9901 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9902 ;;Total ram usage:        6 bytes
  9903 ;; Hardware stack levels used:    1
  9904 ;; Hardware stack levels required when called:    2
  9905 ;; This function calls:
  9906 ;;		Nothing
  9907 ;; This function is called by:
  9908 ;;		_keypad_total
  9909 ;;		_time_elapsed
  9910 ;;		_atoi
  9911 ;; This function uses a non-reentrant model
  9912 ;;
  9913                           
  9914                           	psect	text41
  9915  0047A2                     __ptext41:
  9916                           	opt callstack 0
  9917  0047A2                     ___wmul:
  9918                           	opt callstack 27
  9919                           
  9920                           ;incstack = 0
  9921  0047A2  5011               	movf	___wmul@multiplier,w,c
  9922  0047A4  0213               	mulwf	___wmul@multiplicand,c
  9923  0047A6  CFF3 F015          	movff	prodl,___wmul@product
  9924  0047AA  CFF4 F016          	movff	prodh,___wmul@product+1
  9925  0047AE  5011               	movf	___wmul@multiplier,w,c
  9926  0047B0  0214               	mulwf	___wmul@multiplicand+1,c
  9927  0047B2  50F3               	movf	prodl,w,c
  9928  0047B4  2616               	addwf	___wmul@product+1,f,c
  9929  0047B6  5012               	movf	___wmul@multiplier+1,w,c
  9930  0047B8  0213               	mulwf	___wmul@multiplicand,c
  9931  0047BA  50F3               	movf	prodl,w,c
  9932  0047BC  2616               	addwf	___wmul@product+1,f,c
  9933  0047BE  C015  F011         	movff	___wmul@product,?___wmul
  9934  0047C2  C016  F012         	movff	___wmul@product+1,?___wmul+1
  9935  0047C6  0012               	return		;funcret
  9936  0047C8                     __end_of___wmul:
  9937                           	opt callstack 0
  9938                           
  9939 ;; *************** function _initialize_LCD *****************
  9940 ;; Defined at:
  9941 ;;		line 75 in file "LCD_F.c"
  9942 ;; Parameters:    Size  Location     Type
  9943 ;;		None
  9944 ;; Auto vars:     Size  Location     Type
  9945 ;;		None
  9946 ;; Return value:  Size  Location     Type
  9947 ;;                  1    wreg      void 
  9948 ;; Registers used:
  9949 ;;		wreg, status,2, status,0, cstack
  9950 ;; Tracked objects:
  9951 ;;		On entry : 0/0
  9952 ;;		On exit  : 0/0
  9953 ;;		Unchanged: 0/0
  9954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9957 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9959 ;;Total ram usage:        1 bytes
  9960 ;; Hardware stack levels used:    1
  9961 ;; Hardware stack levels required when called:    4
  9962 ;; This function calls:
  9963 ;;		_lcd_Instructions
  9964 ;; This function is called by:
  9965 ;;		_main
  9966 ;; This function uses a non-reentrant model
  9967 ;;
  9968                           
  9969                           	psect	text42
  9970  004540                     __ptext42:
  9971                           	opt callstack 0
  9972  004540                     _initialize_LCD:
  9973                           	opt callstack 26
  9974                           
  9975                           ;LCD_F.c: 76:     _delay((unsigned long)((15)*(40000000/4000.0)));
  9976                           
  9977                           ;incstack = 0
  9978  004540  0EC3               	movlw	195
  9979  004542  6E14               	movwf	??_initialize_LCD& (0+255),c
  9980  004544  0ECD               	movlw	205
  9981  004546                     u10447:
  9982  004546  2EE8               	decfsz	wreg,f,c
  9983  004548  D7FE               	bra	u10447
  9984  00454A  2E14               	decfsz	??_initialize_LCD& (0+255),f,c
  9985  00454C  D7FC               	bra	u10447
  9986  00454E  F000               	nop	
  9987                           
  9988                           ;LCD_F.c: 80:     lcd_Instructions(0b00110011);
  9989  004550  0E33               	movlw	51
  9990  004552  EC15  F024         	call	_lcd_Instructions
  9991                           
  9992                           ;LCD_F.c: 81:     lcd_Instructions(0b00110010);
  9993  004556  0E32               	movlw	50
  9994  004558  EC15  F024         	call	_lcd_Instructions
  9995                           
  9996                           ;LCD_F.c: 82:     lcd_Instructions(0b00101000);
  9997  00455C  0E28               	movlw	40
  9998  00455E  EC15  F024         	call	_lcd_Instructions
  9999                           
 10000                           ;LCD_F.c: 83:     lcd_Instructions(0b00001100);
 10001  004562  0E0C               	movlw	12
 10002  004564  EC15  F024         	call	_lcd_Instructions
 10003                           
 10004                           ;LCD_F.c: 84:     lcd_Instructions(0b00000110);
 10005  004568  0E06               	movlw	6
 10006  00456A  EC15  F024         	call	_lcd_Instructions
 10007                           
 10008                           ;LCD_F.c: 85:     lcd_Instructions(0b00000001);
 10009  00456E  0E01               	movlw	1
 10010  004570  EC15  F024         	call	_lcd_Instructions
 10011                           
 10012                           ;LCD_F.c: 86:     _delay((unsigned long)((15)*(40000000/4000.0)));
 10013  004574  0EC3               	movlw	195
 10014  004576  6E14               	movwf	??_initialize_LCD& (0+255),c
 10015  004578  0ECD               	movlw	205
 10016  00457A                     u10457:
 10017  00457A  2EE8               	decfsz	wreg,f,c
 10018  00457C  D7FE               	bra	u10457
 10019  00457E  2E14               	decfsz	??_initialize_LCD& (0+255),f,c
 10020  004580  D7FC               	bra	u10457
 10021  004582  F000               	nop	
 10022  004584  0012               	return		;funcret
 10023  004586                     __end_of_initialize_LCD:
 10024                           	opt callstack 0
 10025                           
 10026 ;; *************** function _cursor_reset *****************
 10027 ;; Defined at:
 10028 ;;		line 68 in file "LCD_F.c"
 10029 ;; Parameters:    Size  Location     Type
 10030 ;;		None
 10031 ;; Auto vars:     Size  Location     Type
 10032 ;;		None
 10033 ;; Return value:  Size  Location     Type
 10034 ;;                  1    wreg      void 
 10035 ;; Registers used:
 10036 ;;		wreg, status,2, status,0, cstack
 10037 ;; Tracked objects:
 10038 ;;		On entry : 0/0
 10039 ;;		On exit  : 0/0
 10040 ;;		Unchanged: 0/0
 10041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10046 ;;Total ram usage:        0 bytes
 10047 ;; Hardware stack levels used:    1
 10048 ;; Hardware stack levels required when called:    4
 10049 ;; This function calls:
 10050 ;;		_lcd_Instructions
 10051 ;; This function is called by:
 10052 ;;		_main
 10053 ;; This function uses a non-reentrant model
 10054 ;;
 10055                           
 10056                           	psect	text43
 10057  004848                     __ptext43:
 10058                           	opt callstack 0
 10059  004848                     _cursor_reset:
 10060                           	opt callstack 26
 10061                           
 10062                           ;LCD_F.c: 69:     lcd_Instructions(0x80);
 10063                           
 10064                           ;incstack = 0
 10065  004848  0E80               	movlw	128
 10066  00484A  EC15  F024         	call	_lcd_Instructions
 10067  00484E  0012               	return		;funcret
 10068  004850                     __end_of_cursor_reset:
 10069                           	opt callstack 0
 10070                           
 10071 ;; *************** function _clear *****************
 10072 ;; Defined at:
 10073 ;;		line 60 in file "LCD_F.c"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;		None
 10076 ;; Auto vars:     Size  Location     Type
 10077 ;;		None
 10078 ;; Return value:  Size  Location     Type
 10079 ;;                  1    wreg      void 
 10080 ;; Registers used:
 10081 ;;		wreg, status,2, status,0, cstack
 10082 ;; Tracked objects:
 10083 ;;		On entry : 0/0
 10084 ;;		On exit  : 0/0
 10085 ;;		Unchanged: 0/0
 10086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10089 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10090 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10091 ;;Total ram usage:        1 bytes
 10092 ;; Hardware stack levels used:    1
 10093 ;; Hardware stack levels required when called:    4
 10094 ;; This function calls:
 10095 ;;		_lcd_Instructions
 10096 ;; This function is called by:
 10097 ;;		_main
 10098 ;; This function uses a non-reentrant model
 10099 ;;
 10100                           
 10101                           	psect	text44
 10102  0047EC                     __ptext44:
 10103                           	opt callstack 0
 10104  0047EC                     _clear:
 10105                           	opt callstack 26
 10106                           
 10107                           ;LCD_F.c: 61:     lcd_Instructions(0x01);
 10108                           
 10109                           ;incstack = 0
 10110  0047EC  0E01               	movlw	1
 10111  0047EE  EC15  F024         	call	_lcd_Instructions
 10112                           
 10113                           ;LCD_F.c: 62:  _delay((unsigned long)((5)*(40000000/4000.0)));
 10114  0047F2  0E41               	movlw	65
 10115  0047F4  6E14               	movwf	??_clear& (0+255),c
 10116  0047F6  0EEE               	movlw	238
 10117  0047F8                     u10467:
 10118  0047F8  2EE8               	decfsz	wreg,f,c
 10119  0047FA  D7FE               	bra	u10467
 10120  0047FC  2E14               	decfsz	??_clear& (0+255),f,c
 10121  0047FE  D7FC               	bra	u10467
 10122  004800  D000               	nop2	
 10123  004802  0012               	return		;funcret
 10124  004804                     __end_of_clear:
 10125                           	opt callstack 0
 10126                           
 10127 ;; *************** function _lcd_Instructions *****************
 10128 ;; Defined at:
 10129 ;;		line 44 in file "LCD_F.c"
 10130 ;; Parameters:    Size  Location     Type
 10131 ;;  data            1    wreg     unsigned char 
 10132 ;; Auto vars:     Size  Location     Type
 10133 ;;  data            1   18[COMRAM] unsigned char 
 10134 ;; Return value:  Size  Location     Type
 10135 ;;                  1    wreg      void 
 10136 ;; Registers used:
 10137 ;;		wreg, status,2, status,0, cstack
 10138 ;; Tracked objects:
 10139 ;;		On entry : 0/0
 10140 ;;		On exit  : 0/0
 10141 ;;		Unchanged: 0/0
 10142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10146 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10147 ;;Total ram usage:        1 bytes
 10148 ;; Hardware stack levels used:    1
 10149 ;; Hardware stack levels required when called:    3
 10150 ;; This function calls:
 10151 ;;		_lcd_byte
 10152 ;; This function is called by:
 10153 ;;		_line_2
 10154 ;;		_clear
 10155 ;;		_cursor_reset
 10156 ;;		_initialize_LCD
 10157 ;; This function uses a non-reentrant model
 10158 ;;
 10159                           
 10160                           	psect	text45
 10161  00482A                     __ptext45:
 10162                           	opt callstack 0
 10163  00482A                     _lcd_Instructions:
 10164                           	opt callstack 26
 10165                           
 10166                           ;incstack = 0
 10167                           ;lcd_Instructions@data stored from wreg
 10168  00482A  6E13               	movwf	lcd_Instructions@data,c
 10169                           
 10170                           ;LCD_F.c: 45:     LATDbits.LATD2 = 0;
 10171  00482C  948C               	bcf	3980,2,c	;volatile
 10172                           
 10173                           ;LCD_F.c: 46:     lcd_byte(data);
 10174  00482E  5013               	movf	lcd_Instructions@data,w,c
 10175  004830  ECDD  F021         	call	_lcd_byte
 10176  004834  0012               	return		;funcret
 10177  004836                     __end_of_lcd_Instructions:
 10178                           	opt callstack 0
 10179                           
 10180 ;; *************** function _lcd_byte *****************
 10181 ;; Defined at:
 10182 ;;		line 16 in file "LCD_F.c"
 10183 ;; Parameters:    Size  Location     Type
 10184 ;;  data            1    wreg     unsigned char 
 10185 ;; Auto vars:     Size  Location     Type
 10186 ;;  data            1   17[COMRAM] unsigned char 
 10187 ;;  temp            1   16[COMRAM] unsigned char 
 10188 ;; Return value:  Size  Location     Type
 10189 ;;                  1    wreg      void 
 10190 ;; Registers used:
 10191 ;;		wreg, status,2, status,0
 10192 ;; Tracked objects:
 10193 ;;		On entry : 0/0
 10194 ;;		On exit  : 0/0
 10195 ;;		Unchanged: 0/0
 10196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10198 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10200 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10201 ;;Total ram usage:        2 bytes
 10202 ;; Hardware stack levels used:    1
 10203 ;; Hardware stack levels required when called:    2
 10204 ;; This function calls:
 10205 ;;		Nothing
 10206 ;; This function is called by:
 10207 ;;		_lcd_Instructions
 10208 ;;		_putch
 10209 ;; This function uses a non-reentrant model
 10210 ;;
 10211                           
 10212                           	psect	text46
 10213  0043BA                     __ptext46:
 10214                           	opt callstack 0
 10215  0043BA                     _lcd_byte:
 10216                           	opt callstack 20
 10217                           
 10218                           ;incstack = 0
 10219                           ;lcd_byte@data stored from wreg
 10220  0043BA  6E12               	movwf	lcd_byte@data,c
 10221                           
 10222                           ;LCD_F.c: 18:     char temp = data & 0xF0;
 10223  0043BC  5012               	movf	lcd_byte@data,w,c
 10224  0043BE  0BF0               	andlw	240
 10225  0043C0  6E11               	movwf	lcd_byte@temp,c
 10226                           
 10227                           ;LCD_F.c: 19:     LATD = LATD & 0x0F;
 10228  0043C2  508C               	movf	3980,w,c	;volatile
 10229  0043C4  0B0F               	andlw	15
 10230  0043C6  6E8C               	movwf	3980,c	;volatile
 10231                           
 10232                           ;LCD_F.c: 20:     LATD = temp | LATD;
 10233  0043C8  5011               	movf	lcd_byte@temp,w,c
 10234  0043CA  108C               	iorwf	3980,w,c	;volatile
 10235  0043CC  6E8C               	movwf	3980,c	;volatile
 10236                           
 10237                           ;LCD_F.c: 23:     LATDbits.LATD3 = 0;
 10238  0043CE  968C               	bcf	3980,3,c	;volatile
 10239                           
 10240                           ;LCD_F.c: 24:     _delay((unsigned long)((25)*(40000000/4000000.0)));
 10241  0043D0  0E53               	movlw	83
 10242  0043D2                     u10477:
 10243  0043D2  2EE8               	decfsz	wreg,f,c
 10244  0043D4  D7FE               	bra	u10477
 10245  0043D6  F000               	nop	
 10246                           
 10247                           ;LCD_F.c: 25:     LATDbits.LATD3 = 1;
 10248  0043D8  868C               	bsf	3980,3,c	;volatile
 10249                           
 10250                           ;LCD_F.c: 26:     _delay((unsigned long)((100)*(40000000/4000000.0)));
 10251  0043DA  0EC8               	movlw	200
 10252  0043DC                     u10487:
 10253  0043DC  D000               	nop2	
 10254  0043DE  2EE8               	decfsz	wreg,f,c
 10255  0043E0  D7FD               	bra	u10487
 10256                           
 10257                           ;LCD_F.c: 29:     data = data << 4;
 10258  0043E2  3812               	swapf	lcd_byte@data,w,c
 10259  0043E4  0BF0               	andlw	240
 10260  0043E6  6E12               	movwf	lcd_byte@data,c
 10261                           
 10262                           ;LCD_F.c: 30:     temp = data & 0xF0;
 10263  0043E8  5012               	movf	lcd_byte@data,w,c
 10264  0043EA  0BF0               	andlw	240
 10265  0043EC  6E11               	movwf	lcd_byte@temp,c
 10266                           
 10267                           ;LCD_F.c: 31:     LATD = LATD & 0x0F;
 10268  0043EE  508C               	movf	3980,w,c	;volatile
 10269  0043F0  0B0F               	andlw	15
 10270  0043F2  6E8C               	movwf	3980,c	;volatile
 10271                           
 10272                           ;LCD_F.c: 32:     LATD = temp | LATD;
 10273  0043F4  5011               	movf	lcd_byte@temp,w,c
 10274  0043F6  108C               	iorwf	3980,w,c	;volatile
 10275  0043F8  6E8C               	movwf	3980,c	;volatile
 10276                           
 10277                           ;LCD_F.c: 35:     LATDbits.LATD3 = 0;
 10278  0043FA  968C               	bcf	3980,3,c	;volatile
 10279                           
 10280                           ;LCD_F.c: 36:     _delay((unsigned long)((25)*(40000000/4000000.0)));
 10281  0043FC  0E53               	movlw	83
 10282  0043FE                     u10497:
 10283  0043FE  2EE8               	decfsz	wreg,f,c
 10284  004400  D7FE               	bra	u10497
 10285  004402  F000               	nop	
 10286                           
 10287                           ;LCD_F.c: 37:     LATDbits.LATD3 = 1;
 10288  004404  868C               	bsf	3980,3,c	;volatile
 10289                           
 10290                           ;LCD_F.c: 38:     _delay((unsigned long)((100)*(40000000/4000000.0)));
 10291  004406  0EC8               	movlw	200
 10292  004408                     u10507:
 10293  004408  D000               	nop2	
 10294  00440A  2EE8               	decfsz	wreg,f,c
 10295  00440C  D7FD               	bra	u10507
 10296  00440E  0012               	return		;funcret
 10297  004410                     __end_of_lcd_byte:
 10298                           	opt callstack 0
 10299                           
 10300 ;; *************** function ___aldiv *****************
 10301 ;; Defined at:
 10302 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aldiv.c"
 10303 ;; Parameters:    Size  Location     Type
 10304 ;;  dividend        4   16[COMRAM] long 
 10305 ;;  divisor         4   20[COMRAM] long 
 10306 ;; Auto vars:     Size  Location     Type
 10307 ;;  quotient        4   26[COMRAM] long 
 10308 ;;  sign            1   25[COMRAM] unsigned char 
 10309 ;;  counter         1   24[COMRAM] unsigned char 
 10310 ;; Return value:  Size  Location     Type
 10311 ;;                  4   16[COMRAM] long 
 10312 ;; Registers used:
 10313 ;;		wreg, status,2, status,0
 10314 ;; Tracked objects:
 10315 ;;		On entry : 0/0
 10316 ;;		On exit  : 0/0
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10319 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10320 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10322 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10323 ;;Total ram usage:       14 bytes
 10324 ;; Hardware stack levels used:    1
 10325 ;; Hardware stack levels required when called:    2
 10326 ;; This function calls:
 10327 ;;		Nothing
 10328 ;; This function is called by:
 10329 ;;		_main
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332                           
 10333                           	psect	text47
 10334  003CA2                     __ptext47:
 10335                           	opt callstack 0
 10336  003CA2                     ___aldiv:
 10337                           	opt callstack 28
 10338                           
 10339                           ;incstack = 0
 10340  003CA2  0E00               	movlw	0
 10341  003CA4  6E1A               	movwf	___aldiv@sign,c
 10342  003CA6  AE18               	btfss	___aldiv@divisor+3,7,c
 10343  003CA8  D00A               	goto	l5419
 10344  003CAA  1E18               	comf	___aldiv@divisor+3,f,c
 10345  003CAC  1E17               	comf	___aldiv@divisor+2,f,c
 10346  003CAE  1E16               	comf	___aldiv@divisor+1,f,c
 10347  003CB0  6C15               	negf	___aldiv@divisor,c
 10348  003CB2  0E00               	movlw	0
 10349  003CB4  2216               	addwfc	___aldiv@divisor+1,f,c
 10350  003CB6  2217               	addwfc	___aldiv@divisor+2,f,c
 10351  003CB8  2218               	addwfc	___aldiv@divisor+3,f,c
 10352  003CBA  0E01               	movlw	1
 10353  003CBC  6E1A               	movwf	___aldiv@sign,c
 10354  003CBE                     l5419:
 10355  003CBE  AE14               	btfss	___aldiv@dividend+3,7,c
 10356  003CC0  D00A               	goto	l5425
 10357  003CC2  1E14               	comf	___aldiv@dividend+3,f,c
 10358  003CC4  1E13               	comf	___aldiv@dividend+2,f,c
 10359  003CC6  1E12               	comf	___aldiv@dividend+1,f,c
 10360  003CC8  6C11               	negf	___aldiv@dividend,c
 10361  003CCA  0E00               	movlw	0
 10362  003CCC  2212               	addwfc	___aldiv@dividend+1,f,c
 10363  003CCE  2213               	addwfc	___aldiv@dividend+2,f,c
 10364  003CD0  2214               	addwfc	___aldiv@dividend+3,f,c
 10365  003CD2  0E01               	movlw	1
 10366  003CD4  1A1A               	xorwf	___aldiv@sign,f,c
 10367  003CD6                     l5425:
 10368  003CD6  0E00               	movlw	0
 10369  003CD8  6E1B               	movwf	___aldiv@quotient,c
 10370  003CDA  0E00               	movlw	0
 10371  003CDC  6E1C               	movwf	___aldiv@quotient+1,c
 10372  003CDE  0E00               	movlw	0
 10373  003CE0  6E1D               	movwf	___aldiv@quotient+2,c
 10374  003CE2  0E00               	movlw	0
 10375  003CE4  6E1E               	movwf	___aldiv@quotient+3,c
 10376  003CE6  5015               	movf	___aldiv@divisor,w,c
 10377  003CE8  1016               	iorwf	___aldiv@divisor+1,w,c
 10378  003CEA  1017               	iorwf	___aldiv@divisor+2,w,c
 10379  003CEC  1018               	iorwf	___aldiv@divisor+3,w,c
 10380  003CEE  B4D8               	btfsc	status,2,c
 10381  003CF0  D02A               	goto	l5447
 10382  003CF2  0E01               	movlw	1
 10383  003CF4  6E19               	movwf	___aldiv@counter,c
 10384  003CF6  D006               	goto	l5433
 10385  003CF8                     l5431:
 10386  003CF8  90D8               	bcf	status,0,c
 10387  003CFA  3615               	rlcf	___aldiv@divisor,f,c
 10388  003CFC  3616               	rlcf	___aldiv@divisor+1,f,c
 10389  003CFE  3617               	rlcf	___aldiv@divisor+2,f,c
 10390  003D00  3618               	rlcf	___aldiv@divisor+3,f,c
 10391  003D02  2A19               	incf	___aldiv@counter,f,c
 10392  003D04                     l5433:
 10393  003D04  AE18               	btfss	___aldiv@divisor+3,7,c
 10394  003D06  D7F8               	goto	l5431
 10395  003D08                     u6790:
 10396  003D08  90D8               	bcf	status,0,c
 10397  003D0A  361B               	rlcf	___aldiv@quotient,f,c
 10398  003D0C  361C               	rlcf	___aldiv@quotient+1,f,c
 10399  003D0E  361D               	rlcf	___aldiv@quotient+2,f,c
 10400  003D10  361E               	rlcf	___aldiv@quotient+3,f,c
 10401  003D12  5015               	movf	___aldiv@divisor,w,c
 10402  003D14  5C11               	subwf	___aldiv@dividend,w,c
 10403  003D16  5016               	movf	___aldiv@divisor+1,w,c
 10404  003D18  5812               	subwfb	___aldiv@dividend+1,w,c
 10405  003D1A  5017               	movf	___aldiv@divisor+2,w,c
 10406  003D1C  5813               	subwfb	___aldiv@dividend+2,w,c
 10407  003D1E  5018               	movf	___aldiv@divisor+3,w,c
 10408  003D20  5814               	subwfb	___aldiv@dividend+3,w,c
 10409  003D22  A0D8               	btfss	status,0,c
 10410  003D24  D009               	goto	l5443
 10411  003D26  5015               	movf	___aldiv@divisor,w,c
 10412  003D28  5E11               	subwf	___aldiv@dividend,f,c
 10413  003D2A  5016               	movf	___aldiv@divisor+1,w,c
 10414  003D2C  5A12               	subwfb	___aldiv@dividend+1,f,c
 10415  003D2E  5017               	movf	___aldiv@divisor+2,w,c
 10416  003D30  5A13               	subwfb	___aldiv@dividend+2,f,c
 10417  003D32  5018               	movf	___aldiv@divisor+3,w,c
 10418  003D34  5A14               	subwfb	___aldiv@dividend+3,f,c
 10419  003D36  801B               	bsf	___aldiv@quotient,0,c
 10420  003D38                     l5443:
 10421  003D38  90D8               	bcf	status,0,c
 10422  003D3A  3218               	rrcf	___aldiv@divisor+3,f,c
 10423  003D3C  3217               	rrcf	___aldiv@divisor+2,f,c
 10424  003D3E  3216               	rrcf	___aldiv@divisor+1,f,c
 10425  003D40  3215               	rrcf	___aldiv@divisor,f,c
 10426  003D42  2E19               	decfsz	___aldiv@counter,f,c
 10427  003D44  D7E1               	goto	u6790
 10428  003D46                     l5447:
 10429  003D46  501A               	movf	___aldiv@sign,w,c
 10430  003D48  B4D8               	btfsc	status,2,c
 10431  003D4A  D008               	goto	l5451
 10432  003D4C  1E1E               	comf	___aldiv@quotient+3,f,c
 10433  003D4E  1E1D               	comf	___aldiv@quotient+2,f,c
 10434  003D50  1E1C               	comf	___aldiv@quotient+1,f,c
 10435  003D52  6C1B               	negf	___aldiv@quotient,c
 10436  003D54  0E00               	movlw	0
 10437  003D56  221C               	addwfc	___aldiv@quotient+1,f,c
 10438  003D58  221D               	addwfc	___aldiv@quotient+2,f,c
 10439  003D5A  221E               	addwfc	___aldiv@quotient+3,f,c
 10440  003D5C                     l5451:
 10441  003D5C  C01B  F011         	movff	___aldiv@quotient,?___aldiv
 10442  003D60  C01C  F012         	movff	___aldiv@quotient+1,?___aldiv+1
 10443  003D64  C01D  F013         	movff	___aldiv@quotient+2,?___aldiv+2
 10444  003D68  C01E  F014         	movff	___aldiv@quotient+3,?___aldiv+3
 10445  003D6C  0012               	return		;funcret
 10446  003D6E                     __end_of___aldiv:
 10447                           	opt callstack 0
 10448                           
 10449 ;; *************** function _I2C_Master_Write *****************
 10450 ;; Defined at:
 10451 ;;		line 68 in file "RTC_I2C.c"
 10452 ;; Parameters:    Size  Location     Type
 10453 ;;  byteToWrite     2   17[COMRAM] unsigned int 
 10454 ;; Auto vars:     Size  Location     Type
 10455 ;;		None
 10456 ;; Return value:  Size  Location     Type
 10457 ;;                  1    wreg      void 
 10458 ;; Registers used:
 10459 ;;		wreg, status,2, status,0, cstack
 10460 ;; Tracked objects:
 10461 ;;		On entry : 0/0
 10462 ;;		On exit  : 0/0
 10463 ;;		Unchanged: 0/0
 10464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10469 ;;Total ram usage:        2 bytes
 10470 ;; Hardware stack levels used:    1
 10471 ;; Hardware stack levels required when called:    3
 10472 ;; This function calls:
 10473 ;;		_I2C_Master_Wait
 10474 ;; This function is called by:
 10475 ;;		_main
 10476 ;;		_reset_time
 10477 ;; This function uses a non-reentrant model
 10478 ;;
 10479                           
 10480                           	psect	text48
 10481  004836                     __ptext48:
 10482                           	opt callstack 0
 10483  004836                     _I2C_Master_Write:
 10484                           	opt callstack 27
 10485                           
 10486                           ;RTC_I2C.c: 69:     I2C_Master_Wait();
 10487                           
 10488                           ;incstack = 0
 10489  004836  EC0C  F024         	call	_I2C_Master_Wait	;wreg free
 10490                           
 10491                           ;RTC_I2C.c: 71:     SSPBUF = byteToWrite;
 10492  00483A  C012  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 10493  00483E  0012               	return		;funcret
 10494  004840                     __end_of_I2C_Master_Write:
 10495                           	opt callstack 0
 10496                           
 10497 ;; *************** function _I2C_Master_Stop *****************
 10498 ;; Defined at:
 10499 ;;		line 63 in file "RTC_I2C.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;		None
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;		None
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  1    wreg      void 
 10506 ;; Registers used:
 10507 ;;		wreg, status,2, status,0, cstack
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/0
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10517 ;;Total ram usage:        0 bytes
 10518 ;; Hardware stack levels used:    1
 10519 ;; Hardware stack levels required when called:    3
 10520 ;; This function calls:
 10521 ;;		_I2C_Master_Wait
 10522 ;; This function is called by:
 10523 ;;		_main
 10524 ;;		_reset_time
 10525 ;; This function uses a non-reentrant model
 10526 ;;
 10527                           
 10528                           	psect	text49
 10529  004850                     __ptext49:
 10530                           	opt callstack 0
 10531  004850                     _I2C_Master_Stop:
 10532                           	opt callstack 27
 10533                           
 10534                           ;RTC_I2C.c: 64:     I2C_Master_Wait();
 10535                           
 10536                           ;incstack = 0
 10537  004850  EC0C  F024         	call	_I2C_Master_Wait	;wreg free
 10538                           
 10539                           ;RTC_I2C.c: 65:     SSPCON2bits.PEN = 1;
 10540  004854  84C5               	bsf	4037,2,c	;volatile
 10541  004856  0012               	return		;funcret
 10542  004858                     __end_of_I2C_Master_Stop:
 10543                           	opt callstack 0
 10544                           
 10545 ;; *************** function _I2C_Master_Start *****************
 10546 ;; Defined at:
 10547 ;;		line 53 in file "RTC_I2C.c"
 10548 ;; Parameters:    Size  Location     Type
 10549 ;;		None
 10550 ;; Auto vars:     Size  Location     Type
 10551 ;;		None
 10552 ;; Return value:  Size  Location     Type
 10553 ;;                  1    wreg      void 
 10554 ;; Registers used:
 10555 ;;		wreg, status,2, status,0, cstack
 10556 ;; Tracked objects:
 10557 ;;		On entry : 0/0
 10558 ;;		On exit  : 0/0
 10559 ;;		Unchanged: 0/0
 10560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10565 ;;Total ram usage:        0 bytes
 10566 ;; Hardware stack levels used:    1
 10567 ;; Hardware stack levels required when called:    3
 10568 ;; This function calls:
 10569 ;;		_I2C_Master_Wait
 10570 ;; This function is called by:
 10571 ;;		_main
 10572 ;;		_reset_time
 10573 ;; This function uses a non-reentrant model
 10574 ;;
 10575                           
 10576                           	psect	text50
 10577  004858                     __ptext50:
 10578                           	opt callstack 0
 10579  004858                     _I2C_Master_Start:
 10580                           	opt callstack 27
 10581                           
 10582                           ;RTC_I2C.c: 54:     I2C_Master_Wait();
 10583                           
 10584                           ;incstack = 0
 10585  004858  EC0C  F024         	call	_I2C_Master_Wait	;wreg free
 10586                           
 10587                           ;RTC_I2C.c: 55:     SSPCON2bits.SEN = 1;
 10588  00485C  80C5               	bsf	4037,0,c	;volatile
 10589  00485E  0012               	return		;funcret
 10590  004860                     __end_of_I2C_Master_Start:
 10591                           	opt callstack 0
 10592                           
 10593 ;; *************** function _I2C_Master_Read *****************
 10594 ;; Defined at:
 10595 ;;		line 74 in file "RTC_I2C.c"
 10596 ;; Parameters:    Size  Location     Type
 10597 ;;  ackBit          1    wreg     unsigned char 
 10598 ;; Auto vars:     Size  Location     Type
 10599 ;;  ackBit          1   17[COMRAM] unsigned char 
 10600 ;;  receivedByte    1   18[COMRAM] unsigned char 
 10601 ;; Return value:  Size  Location     Type
 10602 ;;                  1    wreg      unsigned char 
 10603 ;; Registers used:
 10604 ;;		wreg, status,2, status,0, cstack
 10605 ;; Tracked objects:
 10606 ;;		On entry : 0/0
 10607 ;;		On exit  : 0/0
 10608 ;;		Unchanged: 0/0
 10609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10611 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10613 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10614 ;;Total ram usage:        2 bytes
 10615 ;; Hardware stack levels used:    1
 10616 ;; Hardware stack levels required when called:    3
 10617 ;; This function calls:
 10618 ;;		_I2C_Master_Wait
 10619 ;; This function is called by:
 10620 ;;		_main
 10621 ;; This function uses a non-reentrant model
 10622 ;;
 10623                           
 10624                           	psect	text51
 10625  0047C8                     __ptext51:
 10626                           	opt callstack 0
 10627  0047C8                     _I2C_Master_Read:
 10628                           	opt callstack 27
 10629                           
 10630                           ;incstack = 0
 10631                           ;I2C_Master_Read@ackBit stored from wreg
 10632  0047C8  6E12               	movwf	I2C_Master_Read@ackBit,c
 10633                           
 10634                           ;RTC_I2C.c: 75:     I2C_Master_Wait();
 10635  0047CA  EC0C  F024         	call	_I2C_Master_Wait	;wreg free
 10636                           
 10637                           ;RTC_I2C.c: 76:     SSPCON2bits.RCEN = 1;
 10638  0047CE  86C5               	bsf	4037,3,c	;volatile
 10639                           
 10640                           ;RTC_I2C.c: 78:     I2C_Master_Wait();
 10641  0047D0  EC0C  F024         	call	_I2C_Master_Wait	;wreg free
 10642                           
 10643                           ;RTC_I2C.c: 81:     unsigned char receivedByte = SSPBUF;
 10644  0047D4  CFC9 F013          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 10645                           
 10646                           ;RTC_I2C.c: 83:     I2C_Master_Wait();
 10647  0047D8  EC0C  F024         	call	_I2C_Master_Wait	;wreg free
 10648                           
 10649                           ;RTC_I2C.c: 84:     SSPCON2bits.ACKDT = ackBit;
 10650  0047DC  B012               	btfsc	I2C_Master_Read@ackBit,0,c
 10651  0047DE  D002               	bra	u6755
 10652  0047E0  9AC5               	bcf	4037,5,c	;volatile
 10653  0047E2  D001               	bra	u6756
 10654  0047E4                     u6755:
 10655  0047E4  8AC5               	bsf	4037,5,c	;volatile
 10656  0047E6                     u6756:
 10657                           
 10658                           ;RTC_I2C.c: 85:     SSPCON2bits.ACKEN = 1;
 10659  0047E6  88C5               	bsf	4037,4,c	;volatile
 10660                           
 10661                           ;RTC_I2C.c: 89:     return receivedByte;
 10662  0047E8  5013               	movf	I2C_Master_Read@receivedByte,w,c
 10663  0047EA  0012               	return		;funcret
 10664  0047EC                     __end_of_I2C_Master_Read:
 10665                           	opt callstack 0
 10666                           
 10667 ;; *************** function _I2C_Master_Wait *****************
 10668 ;; Defined at:
 10669 ;;		line 19 in file "RTC_I2C.c"
 10670 ;; Parameters:    Size  Location     Type
 10671 ;;		None
 10672 ;; Auto vars:     Size  Location     Type
 10673 ;;		None
 10674 ;; Return value:  Size  Location     Type
 10675 ;;                  1    wreg      void 
 10676 ;; Registers used:
 10677 ;;		wreg, status,2, status,0
 10678 ;; Tracked objects:
 10679 ;;		On entry : 0/0
 10680 ;;		On exit  : 0/0
 10681 ;;		Unchanged: 0/0
 10682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10685 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10686 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10687 ;;Total ram usage:        1 bytes
 10688 ;; Hardware stack levels used:    1
 10689 ;; Hardware stack levels required when called:    2
 10690 ;; This function calls:
 10691 ;;		Nothing
 10692 ;; This function is called by:
 10693 ;;		_I2C_Master_Start
 10694 ;;		_I2C_Master_Stop
 10695 ;;		_I2C_Master_Write
 10696 ;;		_I2C_Master_Read
 10697 ;;		_I2C_Master_RepeatedStart
 10698 ;; This function uses a non-reentrant model
 10699 ;;
 10700                           
 10701                           	psect	text52
 10702  004818                     __ptext52:
 10703                           	opt callstack 0
 10704  004818                     _I2C_Master_Wait:
 10705                           	opt callstack 27
 10706                           
 10707                           ;RTC_I2C.c: 25:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 10708                           
 10709                           ;RTC_I2C.c: 27:     }
 10710                           
 10711                           ;incstack = 0
 10712  004818  B4C7               	btfsc	4039,2,c	;volatile
 10713  00481A  D7FE               	goto	_I2C_Master_Wait
 10714  00481C  CFC5 F011          	movff	4037,??_I2C_Master_Wait	;volatile
 10715  004820  0E1F               	movlw	31
 10716  004822  1611               	andwf	??_I2C_Master_Wait,f,c
 10717  004824  B4D8               	btfsc	status,2,c
 10718  004826  0012               	return	
 10719  004828  D7F7               	goto	_I2C_Master_Wait
 10720  00482A                     __end_of_I2C_Master_Wait:
 10721                           	opt callstack 0
 10722                           
 10723 ;; *************** function _I2C_Master_Init *****************
 10724 ;; Defined at:
 10725 ;;		line 31 in file "RTC_I2C.c"
 10726 ;; Parameters:    Size  Location     Type
 10727 ;;  clockFreq       4   29[COMRAM] const unsigned long 
 10728 ;; Auto vars:     Size  Location     Type
 10729 ;;		None
 10730 ;; Return value:  Size  Location     Type
 10731 ;;                  1    wreg      void 
 10732 ;; Registers used:
 10733 ;;		wreg, status,2, status,0, cstack
 10734 ;; Tracked objects:
 10735 ;;		On entry : 0/0
 10736 ;;		On exit  : 0/0
 10737 ;;		Unchanged: 0/0
 10738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10739 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10741 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10742 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10743 ;;Total ram usage:        8 bytes
 10744 ;; Hardware stack levels used:    1
 10745 ;; Hardware stack levels required when called:    3
 10746 ;; This function calls:
 10747 ;;		___lldiv
 10748 ;; This function is called by:
 10749 ;;		_main
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753                           	psect	text53
 10754  003E28                     __ptext53:
 10755                           	opt callstack 0
 10756  003E28                     _I2C_Master_Init:
 10757                           	opt callstack 27
 10758                           
 10759                           ;RTC_I2C.c: 32:     SSPCON1bits.SSPEN = 0;
 10760                           
 10761                           ;incstack = 0
 10762  003E28  9AC6               	bcf	4038,5,c	;volatile
 10763                           
 10764                           ;RTC_I2C.c: 35:     TRISCbits.TRISC3 = 1;
 10765  003E2A  8694               	bsf	3988,3,c	;volatile
 10766                           
 10767                           ;RTC_I2C.c: 36:     TRISCbits.TRISC4 = 1;
 10768  003E2C  8894               	bsf	3988,4,c	;volatile
 10769                           
 10770                           ;RTC_I2C.c: 42:     SSPADD = (40000000 / (4 * clockFreq)) - 1;
 10771  003E2E  0E00               	movlw	0
 10772  003E30  6E11               	movwf	___lldiv@dividend,c
 10773  003E32  0E5A               	movlw	90
 10774  003E34  6E12               	movwf	___lldiv@dividend+1,c
 10775  003E36  0E62               	movlw	98
 10776  003E38  6E13               	movwf	___lldiv@dividend+2,c
 10777  003E3A  0E02               	movlw	2
 10778  003E3C  6E14               	movwf	___lldiv@dividend+3,c
 10779  003E3E  C01E  F022         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 10780  003E42  C01F  F023         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 10781  003E46  C020  F024         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 10782  003E4A  C021  F025         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 10783  003E4E  0E02               	movlw	2
 10784  003E50                     u6735:
 10785  003E50  90D8               	bcf	status,0,c
 10786  003E52  3622               	rlcf	??_I2C_Master_Init,f,c
 10787  003E54  3623               	rlcf	??_I2C_Master_Init+1,f,c
 10788  003E56  3624               	rlcf	??_I2C_Master_Init+2,f,c
 10789  003E58  3625               	rlcf	??_I2C_Master_Init+3,f,c
 10790  003E5A  2EE8               	decfsz	wreg,f,c
 10791  003E5C  D7F9               	goto	u6735
 10792  003E5E  C022  F015         	movff	??_I2C_Master_Init,___lldiv@divisor
 10793  003E62  C023  F016         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 10794  003E66  C024  F017         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 10795  003E6A  C025  F018         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 10796  003E6E  ECD2  F020         	call	___lldiv	;wreg free
 10797  003E72  0411               	decf	?___lldiv,w,c
 10798  003E74  6EC8               	movwf	4040,c	;volatile
 10799                           
 10800                           ;RTC_I2C.c: 43:     SSPADD = (40000000 / (4 * clockFreq)) - 1;
 10801  003E76  0E00               	movlw	0
 10802  003E78  6E11               	movwf	___lldiv@dividend,c
 10803  003E7A  0E5A               	movlw	90
 10804  003E7C  6E12               	movwf	___lldiv@dividend+1,c
 10805  003E7E  0E62               	movlw	98
 10806  003E80  6E13               	movwf	___lldiv@dividend+2,c
 10807  003E82  0E02               	movlw	2
 10808  003E84  6E14               	movwf	___lldiv@dividend+3,c
 10809  003E86  C01E  F022         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 10810  003E8A  C01F  F023         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 10811  003E8E  C020  F024         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 10812  003E92  C021  F025         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 10813  003E96  0E02               	movlw	2
 10814  003E98                     u6745:
 10815  003E98  90D8               	bcf	status,0,c
 10816  003E9A  3622               	rlcf	??_I2C_Master_Init,f,c
 10817  003E9C  3623               	rlcf	??_I2C_Master_Init+1,f,c
 10818  003E9E  3624               	rlcf	??_I2C_Master_Init+2,f,c
 10819  003EA0  3625               	rlcf	??_I2C_Master_Init+3,f,c
 10820  003EA2  2EE8               	decfsz	wreg,f,c
 10821  003EA4  D7F9               	goto	u6745
 10822  003EA6  C022  F015         	movff	??_I2C_Master_Init,___lldiv@divisor
 10823  003EAA  C023  F016         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 10824  003EAE  C024  F017         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 10825  003EB2  C025  F018         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 10826  003EB6  ECD2  F020         	call	___lldiv	;wreg free
 10827  003EBA  0411               	decf	?___lldiv,w,c
 10828  003EBC  6EC8               	movwf	4040,c	;volatile
 10829                           
 10830                           ;RTC_I2C.c: 45:     SSPSTAT = 0b10000000;
 10831  003EBE  0E80               	movlw	128
 10832  003EC0  6EC7               	movwf	4039,c	;volatile
 10833                           
 10834                           ;RTC_I2C.c: 47:     SSPCON1 = 0b00101000;
 10835  003EC2  0E28               	movlw	40
 10836  003EC4  6EC6               	movwf	4038,c	;volatile
 10837                           
 10838                           ;RTC_I2C.c: 50:     SSPCON2 = 0b00000000;
 10839  003EC6  0E00               	movlw	0
 10840  003EC8  6EC5               	movwf	4037,c	;volatile
 10841  003ECA  0012               	return		;funcret
 10842  003ECC                     __end_of_I2C_Master_Init:
 10843                           	opt callstack 0
 10844                           
 10845 ;; *************** function ___lldiv *****************
 10846 ;; Defined at:
 10847 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/__lldiv.c"
 10848 ;; Parameters:    Size  Location     Type
 10849 ;;  dividend        4   16[COMRAM] unsigned long 
 10850 ;;  divisor         4   20[COMRAM] unsigned long 
 10851 ;; Auto vars:     Size  Location     Type
 10852 ;;  quotient        4   24[COMRAM] unsigned long 
 10853 ;;  counter         1   28[COMRAM] unsigned char 
 10854 ;; Return value:  Size  Location     Type
 10855 ;;                  4   16[COMRAM] unsigned long 
 10856 ;; Registers used:
 10857 ;;		wreg, status,2, status,0
 10858 ;; Tracked objects:
 10859 ;;		On entry : 0/0
 10860 ;;		On exit  : 0/0
 10861 ;;		Unchanged: 0/0
 10862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10863 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10864 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10866 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10867 ;;Total ram usage:       13 bytes
 10868 ;; Hardware stack levels used:    1
 10869 ;; Hardware stack levels required when called:    2
 10870 ;; This function calls:
 10871 ;;		Nothing
 10872 ;; This function is called by:
 10873 ;;		_I2C_Master_Init
 10874 ;; This function uses a non-reentrant model
 10875 ;;
 10876                           
 10877                           	psect	text54
 10878  0041A4                     __ptext54:
 10879                           	opt callstack 0
 10880  0041A4                     ___lldiv:
 10881                           	opt callstack 27
 10882                           
 10883                           ;incstack = 0
 10884  0041A4  0E00               	movlw	0
 10885  0041A6  6E19               	movwf	___lldiv@quotient,c
 10886  0041A8  0E00               	movlw	0
 10887  0041AA  6E1A               	movwf	___lldiv@quotient+1,c
 10888  0041AC  0E00               	movlw	0
 10889  0041AE  6E1B               	movwf	___lldiv@quotient+2,c
 10890  0041B0  0E00               	movlw	0
 10891  0041B2  6E1C               	movwf	___lldiv@quotient+3,c
 10892  0041B4  5015               	movf	___lldiv@divisor,w,c
 10893  0041B6  1016               	iorwf	___lldiv@divisor+1,w,c
 10894  0041B8  1017               	iorwf	___lldiv@divisor+2,w,c
 10895  0041BA  1018               	iorwf	___lldiv@divisor+3,w,c
 10896  0041BC  B4D8               	btfsc	status,2,c
 10897  0041BE  D02A               	goto	l527
 10898  0041C0  0E01               	movlw	1
 10899  0041C2  6E1D               	movwf	___lldiv@counter,c
 10900  0041C4  D006               	goto	l5307
 10901  0041C6                     l5305:
 10902  0041C6  90D8               	bcf	status,0,c
 10903  0041C8  3615               	rlcf	___lldiv@divisor,f,c
 10904  0041CA  3616               	rlcf	___lldiv@divisor+1,f,c
 10905  0041CC  3617               	rlcf	___lldiv@divisor+2,f,c
 10906  0041CE  3618               	rlcf	___lldiv@divisor+3,f,c
 10907  0041D0  2A1D               	incf	___lldiv@counter,f,c
 10908  0041D2                     l5307:
 10909  0041D2  AE18               	btfss	___lldiv@divisor+3,7,c
 10910  0041D4  D7F8               	goto	l5305
 10911  0041D6                     u6710:
 10912  0041D6  90D8               	bcf	status,0,c
 10913  0041D8  3619               	rlcf	___lldiv@quotient,f,c
 10914  0041DA  361A               	rlcf	___lldiv@quotient+1,f,c
 10915  0041DC  361B               	rlcf	___lldiv@quotient+2,f,c
 10916  0041DE  361C               	rlcf	___lldiv@quotient+3,f,c
 10917  0041E0  5015               	movf	___lldiv@divisor,w,c
 10918  0041E2  5C11               	subwf	___lldiv@dividend,w,c
 10919  0041E4  5016               	movf	___lldiv@divisor+1,w,c
 10920  0041E6  5812               	subwfb	___lldiv@dividend+1,w,c
 10921  0041E8  5017               	movf	___lldiv@divisor+2,w,c
 10922  0041EA  5813               	subwfb	___lldiv@dividend+2,w,c
 10923  0041EC  5018               	movf	___lldiv@divisor+3,w,c
 10924  0041EE  5814               	subwfb	___lldiv@dividend+3,w,c
 10925  0041F0  A0D8               	btfss	status,0,c
 10926  0041F2  D009               	goto	l5317
 10927  0041F4  5015               	movf	___lldiv@divisor,w,c
 10928  0041F6  5E11               	subwf	___lldiv@dividend,f,c
 10929  0041F8  5016               	movf	___lldiv@divisor+1,w,c
 10930  0041FA  5A12               	subwfb	___lldiv@dividend+1,f,c
 10931  0041FC  5017               	movf	___lldiv@divisor+2,w,c
 10932  0041FE  5A13               	subwfb	___lldiv@dividend+2,f,c
 10933  004200  5018               	movf	___lldiv@divisor+3,w,c
 10934  004202  5A14               	subwfb	___lldiv@dividend+3,f,c
 10935  004204  8019               	bsf	___lldiv@quotient,0,c
 10936  004206                     l5317:
 10937  004206  90D8               	bcf	status,0,c
 10938  004208  3218               	rrcf	___lldiv@divisor+3,f,c
 10939  00420A  3217               	rrcf	___lldiv@divisor+2,f,c
 10940  00420C  3216               	rrcf	___lldiv@divisor+1,f,c
 10941  00420E  3215               	rrcf	___lldiv@divisor,f,c
 10942  004210  2E1D               	decfsz	___lldiv@counter,f,c
 10943  004212  D7E1               	goto	u6710
 10944  004214                     l527:
 10945  004214  C019  F011         	movff	___lldiv@quotient,?___lldiv
 10946  004218  C01A  F012         	movff	___lldiv@quotient+1,?___lldiv+1
 10947  00421C  C01B  F013         	movff	___lldiv@quotient+2,?___lldiv+2
 10948  004220  C01C  F014         	movff	___lldiv@quotient+3,?___lldiv+3
 10949  004224  0012               	return		;funcret
 10950  004226                     __end_of___lldiv:
 10951                           	opt callstack 0
 10952                           
 10953 ;; *************** function _interruptHandler *****************
 10954 ;; Defined at:
 10955 ;;		line 354 in file "main.c"
 10956 ;; Parameters:    Size  Location     Type
 10957 ;;		None
 10958 ;; Auto vars:     Size  Location     Type
 10959 ;;		None
 10960 ;; Return value:  Size  Location     Type
 10961 ;;                  1    wreg      void 
 10962 ;; Registers used:
 10963 ;;		wreg, status,2, status,0, cstack
 10964 ;; Tracked objects:
 10965 ;;		On entry : 0/0
 10966 ;;		On exit  : 0/0
 10967 ;;		Unchanged: 0/0
 10968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10973 ;;Total ram usage:        0 bytes
 10974 ;; Hardware stack levels used:    1
 10975 ;; Hardware stack levels required when called:    1
 10976 ;; This function calls:
 10977 ;;		i2___fladd
 10978 ;; This function is called by:
 10979 ;;		Interrupt level 2
 10980 ;; This function uses a non-reentrant model
 10981 ;;
 10982                           
 10983                           	psect	intcode
 10984  000008                     __pintcode:
 10985                           	opt callstack 0
 10986  000008                     _interruptHandler:
 10987                           	opt callstack 20
 10988                           
 10989                           ;incstack = 0
 10990  000008  826C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10991  00000A  ED02  F020         	call	int_func,f	;refresh shadow registers
 10992                           
 10993                           	psect	intcode_body
 10994  004004                     __pintcode_body:
 10995                           	opt callstack 20
 10996  004004                     int_func:
 10997                           	opt callstack 20
 10998  004004  0006               	pop		; remove dummy address from shadow register refresh
 10999                           
 11000                           ;main.c: 355:     INTCONbits.GIE = 0;
 11001  004006  9EF2               	bcf	4082,7,c	;volatile
 11002                           
 11003                           ;main.c: 358:     if(INT1IE && INT1IF){
 11004  004008  B6F0               	btfsc	4080,3,c	;volatile
 11005  00400A  A0F0               	btfss	4080,0,c	;volatile
 11006  00400C  D006               	goto	i2l5903
 11007                           
 11008                           ;main.c: 359:         key_pressed = 1;
 11009  00400E  0E00               	movlw	0
 11010  004010  0101               	movlb	1	; () banked
 11011  004012  6F05               	movwf	(_key_pressed+1)& (0+255),b	;volatile
 11012  004014  0E01               	movlw	1
 11013  004016  6F04               	movwf	_key_pressed& (0+255),b	;volatile
 11014                           
 11015                           ; BSR set to: 1
 11016                           ;main.c: 360:         INT1IF = 0;
 11017  004018  90F0               	bcf	4080,0,c	;volatile
 11018  00401A                     i2l5903:
 11019                           
 11020                           ;main.c: 363:     if(INT2IE && INT2IF){
 11021  00401A  B8F0               	btfsc	4080,4,c	;volatile
 11022  00401C  A2F0               	btfss	4080,1,c	;volatile
 11023  00401E  D01B               	goto	i2l5911
 11024                           
 11025                           ;main.c: 364:         distance_travelled = distance_travelled + 1.06103295395;
 11026  004020  C100  F001         	movff	_distance_travelled,i2___fladd@b
 11027  004024  C101  F002         	movff	_distance_travelled+1,i2___fladd@b+1
 11028  004028  C102  F003         	movff	_distance_travelled+2,i2___fladd@b+2
 11029  00402C  C103  F004         	movff	_distance_travelled+3,i2___fladd@b+3
 11030  004030  0EEE               	movlw	238
 11031  004032  6E05               	movwf	i2___fladd@a,c
 11032  004034  0ECF               	movlw	207
 11033  004036  6E06               	movwf	i2___fladd@a+1,c
 11034  004038  0E87               	movlw	135
 11035  00403A  6E07               	movwf	i2___fladd@a+2,c
 11036  00403C  0E3F               	movlw	63
 11037  00403E  6E08               	movwf	i2___fladd@a+3,c
 11038  004040  ECD1  F014         	call	i2___fladd	;wreg free
 11039  004044  C001  F100         	movff	?i2___fladd,_distance_travelled
 11040  004048  C002  F101         	movff	?i2___fladd+1,_distance_travelled+1
 11041  00404C  C003  F102         	movff	?i2___fladd+2,_distance_travelled+2
 11042  004050  C004  F103         	movff	?i2___fladd+3,_distance_travelled+3
 11043                           
 11044                           ;main.c: 365:         INT2IF = 0;
 11045  004054  92F0               	bcf	4080,1,c	;volatile
 11046  004056                     i2l5911:
 11047                           
 11048                           ;main.c: 368:     if(INT0IE && INT0IF){
 11049  004056  B8F2               	btfsc	4082,4,c	;volatile
 11050  004058  A2F2               	btfss	4082,1,c	;volatile
 11051  00405A  D01B               	goto	i2l162
 11052                           
 11053                           ;main.c: 369:        distance_travelled = distance_travelled + 1.06103295395;
 11054  00405C  C100  F001         	movff	_distance_travelled,i2___fladd@b
 11055  004060  C101  F002         	movff	_distance_travelled+1,i2___fladd@b+1
 11056  004064  C102  F003         	movff	_distance_travelled+2,i2___fladd@b+2
 11057  004068  C103  F004         	movff	_distance_travelled+3,i2___fladd@b+3
 11058  00406C  0EEE               	movlw	238
 11059  00406E  6E05               	movwf	i2___fladd@a,c
 11060  004070  0ECF               	movlw	207
 11061  004072  6E06               	movwf	i2___fladd@a+1,c
 11062  004074  0E87               	movlw	135
 11063  004076  6E07               	movwf	i2___fladd@a+2,c
 11064  004078  0E3F               	movlw	63
 11065  00407A  6E08               	movwf	i2___fladd@a+3,c
 11066  00407C  ECD1  F014         	call	i2___fladd	;wreg free
 11067  004080  C001  F100         	movff	?i2___fladd,_distance_travelled
 11068  004084  C002  F101         	movff	?i2___fladd+1,_distance_travelled+1
 11069  004088  C003  F102         	movff	?i2___fladd+2,_distance_travelled+2
 11070  00408C  C004  F103         	movff	?i2___fladd+3,_distance_travelled+3
 11071                           
 11072                           ;main.c: 370:        INT0IF = 0;
 11073  004090  92F2               	bcf	4082,1,c	;volatile
 11074  004092                     i2l162:
 11075  004092  926C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11076  004094  0011               	retfie		f
 11077  004096                     __end_of_interruptHandler:
 11078                           	opt callstack 0
 11079                           
 11080 ;; *************** function i2___fladd *****************
 11081 ;; Defined at:
 11082 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
 11083 ;; Parameters:    Size  Location     Type
 11084 ;;  b               4    0[COMRAM] void 
 11085 ;;  a               4    4[COMRAM] void 
 11086 ;; Auto vars:     Size  Location     Type
 11087 ;;  __fladd         1   15[COMRAM] unsigned char 
 11088 ;;  __fladd         1   14[COMRAM] unsigned char 
 11089 ;;  __fladd         1   13[COMRAM] unsigned char 
 11090 ;;  __fladd         1   12[COMRAM] unsigned char 
 11091 ;; Return value:  Size  Location     Type
 11092 ;;                  4    0[COMRAM] unsigned char 
 11093 ;; Registers used:
 11094 ;;		wreg, status,2, status,0
 11095 ;; Tracked objects:
 11096 ;;		On entry : 0/0
 11097 ;;		On exit  : 0/0
 11098 ;;		Unchanged: 0/0
 11099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11100 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11101 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11102 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11103 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11104 ;;Total ram usage:       16 bytes
 11105 ;; Hardware stack levels used:    1
 11106 ;; This function calls:
 11107 ;;		Nothing
 11108 ;; This function is called by:
 11109 ;;		_interruptHandler
 11110 ;; This function uses a non-reentrant model
 11111 ;;
 11112                           
 11113                           	psect	text56
 11114  0029A2                     __ptext56:
 11115                           	opt callstack 0
 11116  0029A2                     i2___fladd:
 11117                           	opt callstack 20
 11118                           
 11119                           ;incstack = 0
 11120  0029A2  5004               	movf	i2___fladd@b+3,w,c
 11121  0029A4  0B80               	andlw	128
 11122  0029A6  6E0D               	movwf	i2___fladd@signs,c
 11123  0029A8  5004               	movf	i2___fladd@b+3,w,c
 11124  0029AA  2404               	addwf	i2___fladd@b+3,w,c
 11125  0029AC  6E0F               	movwf	i2___fladd@bexp,c
 11126  0029AE  BE03               	btfsc	i2___fladd@b+2,7,c
 11127  0029B0  800F               	bsf	i2___fladd@bexp,0,c
 11128  0029B2  500F               	movf	i2___fladd@bexp,w,c
 11129  0029B4  B4D8               	btfsc	status,2,c
 11130  0029B6  D00D               	goto	i2l5471
 11131  0029B8  280F               	incf	i2___fladd@bexp,w,c
 11132  0029BA  A4D8               	btfss	status,2,c
 11133  0029BC  D008               	goto	i2l5467
 11134  0029BE  0E00               	movlw	0
 11135  0029C0  6E01               	movwf	i2___fladd@b,c
 11136  0029C2  0E00               	movlw	0
 11137  0029C4  6E02               	movwf	i2___fladd@b+1,c
 11138  0029C6  0E00               	movlw	0
 11139  0029C8  6E03               	movwf	i2___fladd@b+2,c
 11140  0029CA  0E00               	movlw	0
 11141  0029CC  6E04               	movwf	i2___fladd@b+3,c
 11142  0029CE                     i2l5467:
 11143  0029CE  8E03               	bsf	i2___fladd@b+2,7,c
 11144  0029D0  D006               	goto	L16
 11145  0029D2                     i2l5471:
 11146  0029D2  0E00               	movlw	0
 11147  0029D4  6E01               	movwf	i2___fladd@b,c
 11148  0029D6  0E00               	movlw	0
 11149  0029D8  6E02               	movwf	i2___fladd@b+1,c
 11150  0029DA  0E00               	movlw	0
 11151  0029DC  6E03               	movwf	i2___fladd@b+2,c
 11152  0029DE                     L16:
 11153  0029DE  0E00               	movlw	0
 11154  0029E0  6E04               	movwf	i2___fladd@b+3,c
 11155  0029E2  5008               	movf	i2___fladd@a+3,w,c
 11156  0029E4  0B80               	andlw	128
 11157  0029E6  6E0E               	movwf	i2___fladd@aexp,c
 11158  0029E8  500D               	movf	i2___fladd@signs,w,c
 11159  0029EA  180E               	xorwf	i2___fladd@aexp,w,c
 11160  0029EC  A4D8               	btfss	status,2,c
 11161  0029EE  8C0D               	bsf	i2___fladd@signs,6,c
 11162  0029F0  5008               	movf	i2___fladd@a+3,w,c
 11163  0029F2  2408               	addwf	i2___fladd@a+3,w,c
 11164  0029F4  6E0E               	movwf	i2___fladd@aexp,c
 11165  0029F6  BE07               	btfsc	i2___fladd@a+2,7,c
 11166  0029F8  800E               	bsf	i2___fladd@aexp,0,c
 11167  0029FA  500E               	movf	i2___fladd@aexp,w,c
 11168  0029FC  B4D8               	btfsc	status,2,c
 11169  0029FE  D00D               	goto	i2l5495
 11170  002A00  280E               	incf	i2___fladd@aexp,w,c
 11171  002A02  A4D8               	btfss	status,2,c
 11172  002A04  D008               	goto	i2l5491
 11173  002A06  0E00               	movlw	0
 11174  002A08  6E05               	movwf	i2___fladd@a,c
 11175  002A0A  0E00               	movlw	0
 11176  002A0C  6E06               	movwf	i2___fladd@a+1,c
 11177  002A0E  0E00               	movlw	0
 11178  002A10  6E07               	movwf	i2___fladd@a+2,c
 11179  002A12  0E00               	movlw	0
 11180  002A14  6E08               	movwf	i2___fladd@a+3,c
 11181  002A16                     i2l5491:
 11182  002A16  8E07               	bsf	i2___fladd@a+2,7,c
 11183  002A18  D006               	goto	L17
 11184  002A1A                     i2l5495:
 11185  002A1A  0E00               	movlw	0
 11186  002A1C  6E05               	movwf	i2___fladd@a,c
 11187  002A1E  0E00               	movlw	0
 11188  002A20  6E06               	movwf	i2___fladd@a+1,c
 11189  002A22  0E00               	movlw	0
 11190  002A24  6E07               	movwf	i2___fladd@a+2,c
 11191  002A26                     L17:
 11192  002A26  0E00               	movlw	0
 11193  002A28  6E08               	movwf	i2___fladd@a+3,c
 11194  002A2A  500F               	movf	i2___fladd@bexp,w,c
 11195  002A2C  5C0E               	subwf	i2___fladd@aexp,w,c
 11196  002A2E  B0D8               	btfsc	status,0,c
 11197  002A30  D022               	goto	i2l5533
 11198  002A32  AC0D               	btfss	i2___fladd@signs,6,c
 11199  002A34  D002               	goto	i2l5503
 11200  002A36  0E80               	movlw	128
 11201  002A38  1A0D               	xorwf	i2___fladd@signs,f,c
 11202  002A3A                     i2l5503:
 11203  002A3A  C00F  F010         	movff	i2___fladd@bexp,i2___fladd@grs
 11204  002A3E  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 11205  002A42  C010  F00E         	movff	i2___fladd@grs,i2___fladd@aexp
 11206  002A46  C001  F010         	movff	i2___fladd@b,i2___fladd@grs
 11207  002A4A  C005  F001         	movff	i2___fladd@a,i2___fladd@b
 11208  002A4E  C010  F005         	movff	i2___fladd@grs,i2___fladd@a
 11209  002A52  C002  F010         	movff	i2___fladd@b+1,i2___fladd@grs
 11210  002A56  C006  F002         	movff	i2___fladd@a+1,i2___fladd@b+1
 11211  002A5A  C010  F006         	movff	i2___fladd@grs,i2___fladd@a+1
 11212  002A5E  C003  F010         	movff	i2___fladd@b+2,i2___fladd@grs
 11213  002A62  C007  F003         	movff	i2___fladd@a+2,i2___fladd@b+2
 11214  002A66  C010  F007         	movff	i2___fladd@grs,i2___fladd@a+2
 11215  002A6A  C004  F010         	movff	i2___fladd@b+3,i2___fladd@grs
 11216  002A6E  C008  F004         	movff	i2___fladd@a+3,i2___fladd@b+3
 11217  002A72  C010  F008         	movff	i2___fladd@grs,i2___fladd@a+3
 11218  002A76                     i2l5533:
 11219  002A76  0E00               	movlw	0
 11220  002A78  6E10               	movwf	i2___fladd@grs,c
 11221  002A7A  500F               	movf	i2___fladd@bexp,w,c
 11222  002A7C  C00E  F009         	movff	i2___fladd@aexp,??i2___fladd
 11223  002A80  6A0A               	clrf	(??i2___fladd+1)& (0+255),c
 11224  002A82  5E09               	subwf	??i2___fladd,f,c
 11225  002A84  0E00               	movlw	0
 11226  002A86  5A0A               	subwfb	??i2___fladd+1,f,c
 11227  002A88  BE0A               	btfsc	??i2___fladd+1,7,c
 11228  002A8A  D02C               	goto	i2l1029
 11229  002A8C  500A               	movf	??i2___fladd+1,w,c
 11230  002A8E  E104               	bnz	i2u691_40
 11231  002A90  0E1A               	movlw	26
 11232  002A92  5C09               	subwf	??i2___fladd,w,c
 11233  002A94  A0D8               	btfss	status,0,c
 11234  002A96  D026               	goto	i2l1029
 11235  002A98                     i2u691_40:
 11236  002A98  5001               	movf	i2___fladd@b,w,c
 11237  002A9A  1002               	iorwf	i2___fladd@b+1,w,c
 11238  002A9C  1003               	iorwf	i2___fladd@b+2,w,c
 11239  002A9E  1004               	iorwf	i2___fladd@b+3,w,c
 11240  002AA0  B4D8               	btfsc	status,2,c
 11241  002AA2  D002               	goto	i2u692_40
 11242  002AA4  0E01               	movlw	1
 11243  002AA6  D001               	goto	i2u693_40
 11244  002AA8                     i2u692_40:
 11245  002AA8  0E00               	movlw	0
 11246  002AAA                     i2u693_40:
 11247  002AAA  6E10               	movwf	i2___fladd@grs,c
 11248  002AAC  0E00               	movlw	0
 11249  002AAE  6E01               	movwf	i2___fladd@b,c
 11250  002AB0  0E00               	movlw	0
 11251  002AB2  6E02               	movwf	i2___fladd@b+1,c
 11252  002AB4  0E00               	movlw	0
 11253  002AB6  6E03               	movwf	i2___fladd@b+2,c
 11254  002AB8  0E00               	movlw	0
 11255  002ABA  6E04               	movwf	i2___fladd@b+3,c
 11256  002ABC  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 11257  002AC0  D015               	goto	i2u696_40
 11258  002AC2                     i2l1030:
 11259  002AC2  A010               	btfss	i2___fladd@grs,0,c
 11260  002AC4  D005               	goto	i2l5545
 11261  002AC6  90D8               	bcf	status,0,c
 11262  002AC8  3010               	rrcf	i2___fladd@grs,w,c
 11263  002ACA  0901               	iorlw	1
 11264  002ACC  6E10               	movwf	i2___fladd@grs,c
 11265  002ACE  D002               	goto	i2l5547
 11266  002AD0                     i2l5545:
 11267  002AD0  90D8               	bcf	status,0,c
 11268  002AD2  3210               	rrcf	i2___fladd@grs,f,c
 11269  002AD4                     i2l5547:
 11270  002AD4  B001               	btfsc	i2___fladd@b,0,c
 11271  002AD6  8E10               	bsf	i2___fladd@grs,7,c
 11272  002AD8  3404               	rlcf	i2___fladd@b+3,w,c
 11273  002ADA  3204               	rrcf	i2___fladd@b+3,f,c
 11274  002ADC  3203               	rrcf	i2___fladd@b+2,f,c
 11275  002ADE  3202               	rrcf	i2___fladd@b+1,f,c
 11276  002AE0  3201               	rrcf	i2___fladd@b,f,c
 11277  002AE2  2A0F               	incf	i2___fladd@bexp,f,c
 11278  002AE4                     i2l1029:
 11279  002AE4  500E               	movf	i2___fladd@aexp,w,c
 11280  002AE6  5C0F               	subwf	i2___fladd@bexp,w,c
 11281  002AE8  A0D8               	btfss	status,0,c
 11282  002AEA  D7EB               	goto	i2l1030
 11283  002AEC                     i2u696_40:
 11284  002AEC  BC0D               	btfsc	i2___fladd@signs,6,c
 11285  002AEE  D028               	goto	i2l5579
 11286  002AF0  500F               	movf	i2___fladd@bexp,w,c
 11287  002AF2  A4D8               	btfss	status,2,c
 11288  002AF4  D009               	goto	i2l5561
 11289  002AF6  0E00               	movlw	0
 11290  002AF8  6E01               	movwf	?i2___fladd,c
 11291  002AFA  0E00               	movlw	0
 11292  002AFC  6E02               	movwf	?i2___fladd+1,c
 11293  002AFE  0E00               	movlw	0
 11294  002B00  6E03               	movwf	?i2___fladd+2,c
 11295  002B02  0E00               	movlw	0
 11296  002B04  6E04               	movwf	?i2___fladd+3,c
 11297  002B06  0012               	return	
 11298  002B08                     i2l5561:
 11299  002B08  5005               	movf	i2___fladd@a,w,c
 11300  002B0A  2601               	addwf	i2___fladd@b,f,c
 11301  002B0C  5006               	movf	i2___fladd@a+1,w,c
 11302  002B0E  2202               	addwfc	i2___fladd@b+1,f,c
 11303  002B10  5007               	movf	i2___fladd@a+2,w,c
 11304  002B12  2203               	addwfc	i2___fladd@b+2,f,c
 11305  002B14  5008               	movf	i2___fladd@a+3,w,c
 11306  002B16  2204               	addwfc	i2___fladd@b+3,f,c
 11307  002B18  A004               	btfss	i2___fladd@b+3,0,c
 11308  002B1A  D071               	goto	i2u709_40
 11309  002B1C  A010               	btfss	i2___fladd@grs,0,c
 11310  002B1E  D005               	goto	i2l5569
 11311  002B20  90D8               	bcf	status,0,c
 11312  002B22  3010               	rrcf	i2___fladd@grs,w,c
 11313  002B24  0901               	iorlw	1
 11314  002B26  6E10               	movwf	i2___fladd@grs,c
 11315  002B28  D002               	goto	i2l5571
 11316  002B2A                     i2l5569:
 11317  002B2A  90D8               	bcf	status,0,c
 11318  002B2C  3210               	rrcf	i2___fladd@grs,f,c
 11319  002B2E                     i2l5571:
 11320  002B2E  B001               	btfsc	i2___fladd@b,0,c
 11321  002B30  8E10               	bsf	i2___fladd@grs,7,c
 11322  002B32  3404               	rlcf	i2___fladd@b+3,w,c
 11323  002B34  3204               	rrcf	i2___fladd@b+3,f,c
 11324  002B36  3203               	rrcf	i2___fladd@b+2,f,c
 11325  002B38  3202               	rrcf	i2___fladd@b+1,f,c
 11326  002B3A  3201               	rrcf	i2___fladd@b,f,c
 11327  002B3C  2A0F               	incf	i2___fladd@bexp,f,c
 11328  002B3E  D05F               	goto	i2u709_40
 11329  002B40                     i2l5579:
 11330  002B40  5005               	movf	i2___fladd@a,w,c
 11331  002B42  5C01               	subwf	i2___fladd@b,w,c
 11332  002B44  5006               	movf	i2___fladd@a+1,w,c
 11333  002B46  5802               	subwfb	i2___fladd@b+1,w,c
 11334  002B48  5007               	movf	i2___fladd@a+2,w,c
 11335  002B4A  5803               	subwfb	i2___fladd@b+2,w,c
 11336  002B4C  5004               	movf	i2___fladd@b+3,w,c
 11337  002B4E  0A80               	xorlw	128
 11338  002B50  6E09               	movwf	??i2___fladd& (0+255),c
 11339  002B52  5008               	movf	i2___fladd@a+3,w,c
 11340  002B54  0A80               	xorlw	128
 11341  002B56  5809               	subwfb	??i2___fladd& (0+255),w,c
 11342  002B58  B0D8               	btfsc	status,0,c
 11343  002B5A  D025               	goto	i2l5589
 11344  002B5C  5001               	movf	i2___fladd@b,w,c
 11345  002B5E  5C05               	subwf	i2___fladd@a,w,c
 11346  002B60  6E09               	movwf	??i2___fladd& (0+255),c
 11347  002B62  5002               	movf	i2___fladd@b+1,w,c
 11348  002B64  5806               	subwfb	i2___fladd@a+1,w,c
 11349  002B66  6E0A               	movwf	(??i2___fladd+1)& (0+255),c
 11350  002B68  5003               	movf	i2___fladd@b+2,w,c
 11351  002B6A  5807               	subwfb	i2___fladd@a+2,w,c
 11352  002B6C  6E0B               	movwf	(??i2___fladd+2)& (0+255),c
 11353  002B6E  5004               	movf	i2___fladd@b+3,w,c
 11354  002B70  5808               	subwfb	i2___fladd@a+3,w,c
 11355  002B72  6E0C               	movwf	(??i2___fladd+3)& (0+255),c
 11356  002B74  0EFF               	movlw	255
 11357  002B76  2409               	addwf	??i2___fladd,w,c
 11358  002B78  6E01               	movwf	i2___fladd@b,c
 11359  002B7A  0EFF               	movlw	255
 11360  002B7C  200A               	addwfc	??i2___fladd+1,w,c
 11361  002B7E  6E02               	movwf	i2___fladd@b+1,c
 11362  002B80  0EFF               	movlw	255
 11363  002B82  200B               	addwfc	??i2___fladd+2,w,c
 11364  002B84  6E03               	movwf	i2___fladd@b+2,c
 11365  002B86  0EFF               	movlw	255
 11366  002B88  200C               	addwfc	??i2___fladd+3,w,c
 11367  002B8A  6E04               	movwf	i2___fladd@b+3,c
 11368  002B8C  0E80               	movlw	128
 11369  002B8E  1A0D               	xorwf	i2___fladd@signs,f,c
 11370  002B90  6C10               	negf	i2___fladd@grs,c
 11371  002B92  5010               	movf	i2___fladd@grs,w,c
 11372  002B94  A4D8               	btfss	status,2,c
 11373  002B96  D00F               	goto	i2l1045
 11374  002B98  0E01               	movlw	1
 11375  002B9A  2601               	addwf	i2___fladd@b,f,c
 11376  002B9C  0E00               	movlw	0
 11377  002B9E  2202               	addwfc	i2___fladd@b+1,f,c
 11378  002BA0  2203               	addwfc	i2___fladd@b+2,f,c
 11379  002BA2  2204               	addwfc	i2___fladd@b+3,f,c
 11380  002BA4  D008               	goto	i2l1045
 11381  002BA6                     i2l5589:
 11382  002BA6  5005               	movf	i2___fladd@a,w,c
 11383  002BA8  5E01               	subwf	i2___fladd@b,f,c
 11384  002BAA  5006               	movf	i2___fladd@a+1,w,c
 11385  002BAC  5A02               	subwfb	i2___fladd@b+1,f,c
 11386  002BAE  5007               	movf	i2___fladd@a+2,w,c
 11387  002BB0  5A03               	subwfb	i2___fladd@b+2,f,c
 11388  002BB2  5008               	movf	i2___fladd@a+3,w,c
 11389  002BB4  5A04               	subwfb	i2___fladd@b+3,f,c
 11390  002BB6                     i2l1045:
 11391  002BB6  5001               	movf	i2___fladd@b,w,c
 11392  002BB8  1002               	iorwf	i2___fladd@b+1,w,c
 11393  002BBA  1003               	iorwf	i2___fladd@b+2,w,c
 11394  002BBC  1004               	iorwf	i2___fladd@b+3,w,c
 11395  002BBE  A4D8               	btfss	status,2,c
 11396  002BC0  D01C               	goto	i2l5613
 11397  002BC2  5010               	movf	i2___fladd@grs,w,c
 11398  002BC4  A4D8               	btfss	status,2,c
 11399  002BC6  D019               	goto	i2l5613
 11400  002BC8  0E00               	movlw	0
 11401  002BCA  6E01               	movwf	?i2___fladd,c
 11402  002BCC  0E00               	movlw	0
 11403  002BCE  6E02               	movwf	?i2___fladd+1,c
 11404  002BD0  0E00               	movlw	0
 11405  002BD2  6E03               	movwf	?i2___fladd+2,c
 11406  002BD4  0E00               	movlw	0
 11407  002BD6  6E04               	movwf	?i2___fladd+3,c
 11408  002BD8  0012               	return	
 11409  002BDA                     i2l5597:
 11410  002BDA  90D8               	bcf	status,0,c
 11411  002BDC  3601               	rlcf	i2___fladd@b,f,c
 11412  002BDE  3602               	rlcf	i2___fladd@b+1,f,c
 11413  002BE0  3603               	rlcf	i2___fladd@b+2,f,c
 11414  002BE2  3604               	rlcf	i2___fladd@b+3,f,c
 11415  002BE4  BE10               	btfsc	i2___fladd@grs,7,c
 11416  002BE6  8001               	bsf	i2___fladd@b,0,c
 11417  002BE8  A010               	btfss	i2___fladd@grs,0,c
 11418  002BEA  D002               	goto	i2l5607
 11419  002BEC  80D8               	bsf	status,0,c
 11420  002BEE  D001               	goto	L18
 11421  002BF0                     i2l5607:
 11422  002BF0  90D8               	bcf	status,0,c
 11423  002BF2                     L18:
 11424  002BF2  3610               	rlcf	i2___fladd@grs,f,c
 11425  002BF4  500F               	movf	i2___fladd@bexp,w,c
 11426  002BF6  A4D8               	btfss	status,2,c
 11427  002BF8  060F               	decf	i2___fladd@bexp,f,c
 11428  002BFA                     i2l5613:
 11429  002BFA  AE03               	btfss	i2___fladd@b+2,7,c
 11430  002BFC  D7EE               	goto	i2l5597
 11431  002BFE                     i2u709_40:
 11432  002BFE  0E00               	movlw	0
 11433  002C00  6E0E               	movwf	i2___fladd@aexp,c
 11434  002C02  AE10               	btfss	i2___fladd@grs,7,c
 11435  002C04  D00B               	goto	i2l1054
 11436  002C06  C010  F009         	movff	i2___fladd@grs,??i2___fladd
 11437  002C0A  0E7F               	movlw	127
 11438  002C0C  1609               	andwf	??i2___fladd,f,c
 11439  002C0E  B4D8               	btfsc	status,2,c
 11440  002C10  D003               	goto	i2l1055
 11441  002C12                     i2u711_40:
 11442  002C12  0E01               	movlw	1
 11443  002C14  6E0E               	movwf	i2___fladd@aexp,c
 11444  002C16  D002               	goto	i2l1054
 11445  002C18                     i2l1055:
 11446  002C18  B001               	btfsc	i2___fladd@b,0,c
 11447  002C1A  D7FB               	goto	i2u711_40
 11448  002C1C                     i2l1054:
 11449  002C1C  500E               	movf	i2___fladd@aexp,w,c
 11450  002C1E  B4D8               	btfsc	status,2,c
 11451  002C20  D020               	goto	i2l5633
 11452  002C22  0E01               	movlw	1
 11453  002C24  2601               	addwf	i2___fladd@b,f,c
 11454  002C26  0E00               	movlw	0
 11455  002C28  2202               	addwfc	i2___fladd@b+1,f,c
 11456  002C2A  2203               	addwfc	i2___fladd@b+2,f,c
 11457  002C2C  2204               	addwfc	i2___fladd@b+3,f,c
 11458  002C2E  A004               	btfss	i2___fladd@b+3,0,c
 11459  002C30  D018               	goto	i2l5633
 11460  002C32  C001  F009         	movff	i2___fladd@b,??i2___fladd
 11461  002C36  C002  F00A         	movff	i2___fladd@b+1,??i2___fladd+1
 11462  002C3A  C003  F00B         	movff	i2___fladd@b+2,??i2___fladd+2
 11463  002C3E  C004  F00C         	movff	i2___fladd@b+3,??i2___fladd+3
 11464  002C42  340C               	rlcf	??i2___fladd+3,w,c
 11465  002C44  320C               	rrcf	??i2___fladd+3,f,c
 11466  002C46  320B               	rrcf	??i2___fladd+2,f,c
 11467  002C48  320A               	rrcf	??i2___fladd+1,f,c
 11468  002C4A  3209               	rrcf	??i2___fladd,f,c
 11469  002C4C  C009  F001         	movff	??i2___fladd,i2___fladd@b
 11470  002C50  C00A  F002         	movff	??i2___fladd+1,i2___fladd@b+1
 11471  002C54  C00B  F003         	movff	??i2___fladd+2,i2___fladd@b+2
 11472  002C58  C00C  F004         	movff	??i2___fladd+3,i2___fladd@b+3
 11473  002C5C  280F               	incf	i2___fladd@bexp,w,c
 11474  002C5E  A4D8               	btfss	status,2,c
 11475  002C60  2A0F               	incf	i2___fladd@bexp,f,c
 11476  002C62                     i2l5633:
 11477  002C62  280F               	incf	i2___fladd@bexp,w,c
 11478  002C64  B4D8               	btfsc	status,2,c
 11479  002C66  D003               	goto	i2u717_40
 11480  002C68  500F               	movf	i2___fladd@bexp,w,c
 11481  002C6A  A4D8               	btfss	status,2,c
 11482  002C6C  D00D               	goto	i2l5641
 11483  002C6E                     i2u717_40:
 11484  002C6E  0E00               	movlw	0
 11485  002C70  6E01               	movwf	i2___fladd@b,c
 11486  002C72  0E00               	movlw	0
 11487  002C74  6E02               	movwf	i2___fladd@b+1,c
 11488  002C76  0E00               	movlw	0
 11489  002C78  6E03               	movwf	i2___fladd@b+2,c
 11490  002C7A  0E00               	movlw	0
 11491  002C7C  6E04               	movwf	i2___fladd@b+3,c
 11492  002C7E  500F               	movf	i2___fladd@bexp,w,c
 11493  002C80  A4D8               	btfss	status,2,c
 11494  002C82  D002               	goto	i2l5641
 11495  002C84  0E00               	movlw	0
 11496  002C86  6E0D               	movwf	i2___fladd@signs,c
 11497  002C88                     i2l5641:
 11498  002C88  A00F               	btfss	i2___fladd@bexp,0,c
 11499  002C8A  D002               	goto	i2l5645
 11500  002C8C  8E03               	bsf	i2___fladd@b+2,7,c
 11501  002C8E  D001               	goto	i2l5647
 11502  002C90                     i2l5645:
 11503  002C90  9E03               	bcf	i2___fladd@b+2,7,c
 11504  002C92                     i2l5647:
 11505  002C92  90D8               	bcf	status,0,c
 11506  002C94  300F               	rrcf	i2___fladd@bexp,w,c
 11507  002C96  6E04               	movwf	i2___fladd@b+3,c
 11508  002C98  BE0D               	btfsc	i2___fladd@signs,7,c
 11509  002C9A  8E04               	bsf	i2___fladd@b+3,7,c
 11510  002C9C  C001  F001         	movff	i2___fladd@b,?i2___fladd
 11511  002CA0  C002  F002         	movff	i2___fladd@b+1,?i2___fladd+1
 11512  002CA4  C003  F003         	movff	i2___fladd@b+2,?i2___fladd+2
 11513  002CA8  C004  F004         	movff	i2___fladd@b+3,?i2___fladd+3
 11514  002CAC  0012               	return		;funcret
 11515  002CAE                     __end_ofi2___fladd:
 11516                           	opt callstack 0
 11517                           
 11518                           	psect	rparam
 11519  0000                     
 11520                           	psect	temp
 11521  00006C                     btemp:
 11522                           	opt callstack 0
 11523  00006C                     	ds	1
 11524  0000                     int$flags	set	btemp
 11525  0000                     wtemp8	set	btemp+1
 11526  0000                     ttemp5	set	btemp+1
 11527  0000                     ttemp6	set	btemp+4
 11528  0000                     ttemp7	set	btemp+8
 11529                           tosu	equ	0xFFF
 11530                           tosh	equ	0xFFE
 11531                           tosl	equ	0xFFD
 11532                           stkptr	equ	0xFFC
 11533                           pclatu	equ	0xFFB
 11534                           pclath	equ	0xFFA
 11535                           pcl	equ	0xFF9
 11536                           tblptru	equ	0xFF8
 11537                           tblptrh	equ	0xFF7
 11538                           tblptrl	equ	0xFF6
 11539                           tablat	equ	0xFF5
 11540                           prodh	equ	0xFF4
 11541                           prodl	equ	0xFF3
 11542                           indf0	equ	0xFEF
 11543                           postinc0	equ	0xFEE
 11544                           postdec0	equ	0xFED
 11545                           preinc0	equ	0xFEC
 11546                           plusw0	equ	0xFEB
 11547                           fsr0h	equ	0xFEA
 11548                           fsr0l	equ	0xFE9
 11549                           wreg	equ	0xFE8
 11550                           indf1	equ	0xFE7
 11551                           postinc1	equ	0xFE6
 11552                           postdec1	equ	0xFE5
 11553                           preinc1	equ	0xFE4
 11554                           plusw1	equ	0xFE3
 11555                           fsr1h	equ	0xFE2
 11556                           fsr1l	equ	0xFE1
 11557                           bsr	equ	0xFE0
 11558                           indf2	equ	0xFDF
 11559                           postinc2	equ	0xFDE
 11560                           postdec2	equ	0xFDD
 11561                           preinc2	equ	0xFDC
 11562                           plusw2	equ	0xFDB
 11563                           fsr2h	equ	0xFDA
 11564                           fsr2l	equ	0xFD9
 11565                           status	equ	0xFD8


Data Sizes:
    Strings     147
    Constant    24
    Data        3
    BSS         510
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     91     107
    BANK0           128    114     116
    BANK1           256     27     122
    BANK2           256      0     200
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_13(CODE[14]), STR_12(CODE[14]), STR_11(CODE[15]), STR_10(CODE[15]), 
		 -> STR_9(CODE[10]), STR_8(CODE[11]), STR_7(CODE[10]), STR_6(CODE[16]), 
		 -> STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[3]), STR_2(CODE[15]), 
		 -> STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1450_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_13(CODE[14]), STR_12(CODE[14]), STR_11(CODE[15]), STR_10(CODE[15]), 
		 -> STR_9(CODE[10]), STR_8(CODE[11]), STR_7(CODE[10]), STR_6(CODE[16]), 
		 -> STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[3]), STR_2(CODE[15]), 
		 -> STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_13(CODE[14]), STR_12(CODE[14]), STR_11(CODE[15]), STR_10(CODE[15]), 
		 -> STR_9(CODE[10]), STR_8(CODE[11]), STR_7(CODE[10]), STR_6(CODE[16]), 
		 -> STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[3]), STR_2(CODE[15]), 
		 -> STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_13(CODE[14]), STR_12(CODE[14]), STR_11(CODE[15]), STR_10(CODE[15]), 
		 -> STR_9(CODE[10]), STR_8(CODE[11]), STR_7(CODE[10]), STR_6(CODE[16]), 
		 -> STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[3]), STR_2(CODE[15]), 
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    time_elapsed@array	PTR int  size(2) Largest target is 4
		 -> main@op_time(BANK1[4]), 

    main@temp	PTR unsigned char  size(2) Largest target is 1
		 -> main@begin_sec(BANK1[1]), 


Critical Paths under _main in COMRAM

    _time_elapsed->___awdiv
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_lcd_byte
    _abs->___aomod
    _atoi->_isspace
    _line_2->_lcd_Instructions
    _keypad_total->___wmul
    _initialize_LCD->_lcd_Instructions
    _cursor_reset->_lcd_Instructions
    _clear->_lcd_Instructions
    _lcd_Instructions->_lcd_byte
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->i2___fladd

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0   65160
                                            110 BANK0      4     4      0
                                              0 BANK1     27    27      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___aldiv
                            ___fltol
                              _clear
                       _cursor_reset
                     _initialize_LCD
                       _keypad_total
                             _line_2
                             _printf
                       _time_elapsed
 ---------------------------------------------------------------------------------
 (1) _time_elapsed                                        24    19      5    4052
                                             24 COMRAM    24    19      5
                            ___awdiv
                            ___awmod
                             ___wmul
                            _atohtoi
 ---------------------------------------------------------------------------------
 (2) _atohtoi                                              5     3      2     419
                                             16 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   55123
                                             98 BANK0     12     4      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   53842
                                             89 COMRAM     2     2      0
                                             92 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   53264
                                             85 COMRAM     4     4      0
                                             56 BANK0     36    30      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7181
                                             46 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             22 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                             16 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   30681
                                             61 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1232
                                             22 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     641
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                             16 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             41 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             16 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                             16 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4227
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3662
                                             16 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                             16 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3233
                                             16 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     806
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                             16 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2723
                                             16 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     793
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     805
                                             16 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6967
                                             46 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4701
                                             35 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1639
                                             28 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1139
                                             19 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     195
                                             18 COMRAM     1     1      0
                           _lcd_byte
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             34 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             16 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             16 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    2255
                                             23 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             16 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _line_2                                               0     0      0     195
                   _lcd_Instructions
 ---------------------------------------------------------------------------------
 (1) _keypad_total                                         7     5      2    1372
                                             22 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1152
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initialize_LCD                                       1     1      0     195
                                             19 COMRAM     1     1      0
                   _lcd_Instructions
 ---------------------------------------------------------------------------------
 (1) _cursor_reset                                         0     0      0     195
                   _lcd_Instructions
 ---------------------------------------------------------------------------------
 (1) _clear                                                1     1      0     195
                                             19 COMRAM     1     1      0
                   _lcd_Instructions
 ---------------------------------------------------------------------------------
 (2) _lcd_Instructions                                     1     1      0     195
                                             18 COMRAM     1     1      0
                           _lcd_byte
 ---------------------------------------------------------------------------------
 (9) _lcd_byte                                             2     2      0     164
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             16 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     934
                                             17 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      45
                                             17 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     586
                                             29 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                             16 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _interruptHandler                                    0     0      0    2088
                          i2___fladd
 ---------------------------------------------------------------------------------
 (11) i2___fladd                                          16     8      8    2088
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___aldiv
   ___fltol
   _clear
     _lcd_Instructions
       _lcd_byte
   _cursor_reset
     _lcd_Instructions
       _lcd_byte
   _initialize_LCD
     _lcd_Instructions
       _lcd_byte
   _keypad_total
     ___wmul
   _line_2
     _lcd_Instructions
       _lcd_byte
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _lcd_byte
             _fputs
               _fputc
                 _putch
                   _lcd_byte
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _lcd_byte
             _fputs
               _fputc
                 _putch
                   _lcd_byte
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _lcd_byte
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _lcd_byte
             _fputs
               _fputc
                 _putch
                   _lcd_byte
             _strlen
           _toupper
             _islower
   _time_elapsed
     ___awdiv
     ___awmod
     ___wmul
     _atohtoi

 _interruptHandler (ROOT)
   i2___fladd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1B      7A       7       47.7%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     72      74       5       90.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5B      6B       1       84.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2E9      34        0.0%
DATA                 0      0     2E9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 17 14:40:14 2019

               ___fldiv@aexp 0029                 ___fldiv@bexp 0028                 ___fldiv@sign 0021  
               ___awdiv@sign 0016          ___wmul@multiplicand 0013                  __CFG_BORV$3 000000  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                          l242 3A1C                          l307 2FA8  
                        l236 39EE                          l309 2FB0                          l423 3194  
                        l425 319C                          l363 1418                          l527 4214  
                        l296 3F9C                          l389 16FA                          l765 3B9A  
               __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000        keypad_total@first_int 001A  
                i2___fladd@a 0005                  i2___fladd@b 0001                          _abs 4630  
                        _pad 3F6E                 ___awmod@sign 0016         lcd_Instructions@data 0013  
                        wreg 000FE8                 ___flmul@aexp 001E                 ___flmul@bexp 0023  
               ___flmul@sign 001D                 ___flmul@temp 0028                 ___flmul@prod 0024  
                _total_cones 010A                  _total_holes 0106                 __CFG_LVP$OFF 000000  
               ___fltol@exp1 001A                 __CFG_WDT$OFF 000000                         l1030 27B6  
                       l1114 20B8                         l1131 2356                         l1123 22D0  
                       ?_abs 0023                         l1124 22CC                         l1045 28AA  
                       l1029 27D8                         l1054 2910                         l1055 290C  
                       l1312 44A6                         l1217 37D8                         l1084 2E20  
                       l1229 34BA                         l1325 44F0                         l1095 2E8E  
                       l1096 2E8A                         l1186 4658                         l6101 272E  
                       l6023 42AE                         l5305 41C6                         l6033 45CE  
                       l6041 475A                         l7001 113C                         l5307 41D2  
                       l6043 475E                         l6211 28EE                         l6131 276A  
                       l7011 11A8                         l5243 3936                         l5317 4206  
                       l6037 45E4                         l6205 28E4                         l7101 14B6  
                       l7013 11C0                         l5253 3964                         ?_pad 0024  
                       l5431 3CF8                         l6231 2956                         l6143 27C4  
                       l6303 3C98                         l7111 14F0                         l7031 1274  
                       l5263 3992                         l5433 3D04                         l5425 3CD6  
                       l6145 27C8                         l6065 26C2                         l7105 14C6  
                       l5273 39C0                         l5451 3D5C                         l5443 3D38  
                       l5419 3CBE                         l6243 2984                         l7203 18E4  
                       l7043 12E8                         l7019 11F0                         l6413 3680  
                       l6405 3644                         l6245 2986                         l6093 270E  
                       l6069 26C6                         l6341 351A                         l6309 4420  
                       l7221 193A                         l7141 16F2                         l7133 169A  
                       l7053 13AC                         l7029 125C                         l7037 12A4  
                       l5447 3D46                         l6263 3F86                         l6511 2D80  
                       l6503 2D68                         l6239 297C                         l6167 281E  
                       l6159 27FC                         l6327 341C                         l7231 1990  
                       l7143 1714                         l7127 165C                         l7119 15E6  
                       l7047 1322                         l6409 365A                         l6441 38A8  
                       l6433 384C                         l6425 380E                         l6273 3FBE  
                       l6521 2DD0                         l6169 2822                         l6177 2834  
                       l6089 270A                         l6345 3548                         l6337 34DC  
                       l7241 19BC                         l7065 1400                         l7049 1370  
                       l6435 3860                         l6267 3F94                         l6603 2064  
                       l6195 28CE                         l6187 289A                         l7219 1930  
                       l7155 1796                         l7083 1470                         l7075 1428  
                       l7331 337A                         l7307 3290                         l7315 3306  
                       l7411 1AD4                         l6381 3586                         l6445 38BE  
                       l6429 3832                         l6277 3FEA                         l6269 3FA6  
                       l6541 2E36                         l6621 20A4                         l6605 2068  
                       l6293 3C4E                         l7085 1474                         l7069 1422  
                       l6535 2E1E                         l6703 2332                         l6631 20D6  
                       l6623 20A8                         l6607 2078                         l7167 17C6  
                       l7175 17E6                         l7183 180A                         l7191 18A2  
                       l7095 1492                         l7503 1ED2                         l7431 1AEE  
                       l7423 1AE0                         l7415 1AD8                         l7407 1AC2  
                       l7353 370E                         l7337 36B4                         l6393 35D4  
                       l6449 38E4                         l6529 2DF8                         l6465 2CDA  
                       l6297 3C58                         l7257 1A1C                         l7265 1A56  
                       l7409 1AC4                         l7433 1B30                         l7363 3778  
                       l7355 3716                         l7347 36FE                         l7339 36B8  
                       l6395 35E8                         l6387 35AE                         l6803 428C  
                       l6571 2EF6                         l6547 2E54                         l6811 40CA  
                       l6715 2374                         l7523 1FDE                         l7427 1AE4  
                       l7419 1ADC                         l7357 371C                         l6741 4144  
                       l6581 2F2C                         l6485 2D1A                         l6469 2CDE  
                       l7293 3202                         l7285 31E0                         l7517 1FA2  
                       l7445 1B9C                         l7533 2004                         l7701 2518  
                       l7359 3744                         l6735 4134                         l6583 2F2E  
                       l6575 2F20                         l6567 2ED2                         l6815 40FE  
                       l6831 3B6E                         l7383 3EF6                         l7279 31B0  
                       l7527 1FEA                         l7447 1BBA                         l6905 45BC  
                       l6497 2D52                         l6489 2D1E                         l6841 3BD2  
                       l6673 2278                         l7385 3F04                         l7465 1CA2  
                       l7449 1BC8                         l7561 439E                         l6915 2F8C  
                       l6747 415A                         l6763 418C                         l6819 411C  
                       l6835 3B84                         l6827 3B3A                         l7475 1D54  
                       l7723 2596                         l6933 2FDA                         l6749 4162  
                       l7733 2622                         l6943 30D2                         l6767 419A  
                       l6759 4182                         l6783 4246                         l6679 2296  
                       l7487 1DDA                         l7559 4378                         l7743 2660  
                       l7727 25D2                         l7663 243E                         l6929 2FCA  
                       l6849 473E                         l7681 2474                         l6963 3136  
                       l6795 4274                         l6787 4254                         l6779 423A  
                       l6699 2314                         l6875 3DD6                         l6859 3D8C  
                       l6789 425C                         l6893 3E16                         l6885 3DEE  
                       l6981 10F8                         l6967 314E                         l6799 427E  
                       l6887 3DFA                         l6879 3DE6                         l6993 1126  
                       STR_1 1038                         STR_2 1047                         STR_3 10A9  
                       STR_4 1083                         STR_5 108D                         STR_6 1019  
                       STR_7 1079                         STR_8 1064                         STR_9 106F  
                       _LATD 000F8C                         u8000 3C90                         u8010 3C92  
                       u8020 445A                         u9000 3D7A                         u8120 349A  
                       u8040 448C                         u8200 44DA                         u6600 3956  
                       u8105 3434                         u9010 3DAA                         u8106 343A  
                       u8050 448E                         u6610 3974                         u8107 3448  
                       u8027 4450                         u8220 46EA                         u7420 42A6  
                       u9100 2F60                         u8140 34FA                         u6620 3984  
                       u8125 3490                         u6710 41D6                         u8230 46EC  
                       u8070 33EA                         u6630 39A2                         u9015 3DA0  
                       u7440 42EE                         u9200 3114                         u7600 279E  
                       u8080 340A                         u6640 39B2                         u8145 34F0  
                       u9130 2F9E                         u9050 3E00                         u8170 4628  
                       u6650 39D0                         u6570 391E                         u8075 33E0  
                       u8340 3864                         u9220 3120                         u9300 1180  
                       u8180 462A                         u6660 39E0                         u6580 392C  
                       u8261 35B4                         u9150 2FC4                         u7630 27E0  
                       u7470 46BA                         u8190 44D8                         u6670 39FE  
                       u6590 3946                         u6735 3E50                         u9080 45B8  
                       u8280 35EC                         u9160 30E0                         u7480 46BC  
                       u6680 3A0E                         u6745 3E98                         u9090 2F5E  
                       u8530 2E84                         u9410 140E                         u9330 1232  
                       u6755 47E4                         u6756 47E6                         u9180 3102  
                       u7580 278C                         u9340 1234                         u9260 1116  
                       u9181 3100                         u6790 3D08                         u9190 3110  
                       u7590 279C                         u8720 22C6                         u7840 2962  
                       u7760 28F2                         u9440 1440                         u8570 2EE0  
                       u9290 117E                         u7940 463E                         u8820 4166  
                       u8580 2F04                         u7780 2906                         u9380 13D4  
                       u8670 20C4                         u7950 3C14                         u9710 19A6  
                       u8760 2322                         u8680 223A                         u9480 148E  
                       u7880 468A                         u9800 3234             ??_initialize_LCD 0014  
                       u8930 4118                         u8770 2340                         u9730 1A06  
                       u9650 18C6                         u7890 468C                         u9810 3236  
                       u7955 3C0A                         u9740 1A08                         u9900 3346  
                       u8685 2230                         u9910 334A                         u9830 326E  
                       u8880 4260                         u9840 3270                         u9770 318A  
                       u7995 3C72                         u9940 36FA                         u9860 32E2  
                       u9870 3316                         u9790 31FE                         u9960 37A8  
                       u9865 32D0                         u9970 37AA                         u9890 3338  
                       u9891 3336                         _TRMT 007D61                         _TXIF 007CF4  
                       abs@a 0023                 lcd_byte@data 0012                         _dbuf 010C  
                       _atoi 36A2                  main@op_time 016C                         _main 238A  
                       _dtoa 2F36     __end_of_interruptHandler 4096                         _keys 1001  
                       _prec 0066                 lcd_byte@temp 0011                         _nout 00F2  
                       pad@i 002B                         pad@p 0028                         fsr1h 000FE2  
                       fsr2h 000FDA                         indf1 000FE7                         indf2 000FDF  
                       fsr1l 000FE1                         pad@w 002D                         fsr2l 000FD9  
                       btemp 006C                         _xtoa 3178                ___fpclassifyf 3BD6  
                       prodh 000FF4                         prodl 000FF3                         start 000E  
              __CFG_IESO$OFF 000000              ___fldiv@new_exp 0022            keypad_total@first 0019  
               _tolower$1511 001D                 main@baudRate 015E                __CFG_MCLRE$ON 000000  
               ___param_bank 000000                 _total_cracks 0108                        ??_abs 0025  
                      ??_pad 002A        I2C_Master_Read@ackBit 0012             ?_I2C_Master_Init 001E  
           ?_I2C_Master_Read 0001             ?_I2C_Master_Wait 0001             ?_I2C_Master_Stop 0001  
              ___fltol@sign1 0019              __end_of___aldiv 3D6E              __end_of___aodiv 36A2  
                      ?_atoi 0018              __end_of___fladd 29A2                        ?_main 0001  
                      ?_dtoa 002F              __end_of___aomod 3906              __end_of___fldiv 2F36  
            __end_of___awdiv 41A4              __end_of___flneg 4750                        STR_10 1029  
                      STR_12 1056                        STR_22 10A6                        STR_14 1096  
                      STR_15 109E                        STR_24 10A6                        STR_18 109A  
                      STR_19 10A2              __end_of___awmod 4296              __end_of___flmul 238A  
            __end_of___flsub 4540              __end_of___fltol 3E28              __end_of___lldiv 4226  
                      u10100 1C00                        u10110 1C02                        u10040 3F4A  
                      u10200 1E5E                        u10120 1C10                        u10230 1F06  
                      u10160 1CD6                        u10330 259E                        u10340 25AC  
                      u10332 25A0                        u10190 1E5C                        u10350 262A  
                      u10342 25AE                        u10407 24F4                        u10360 2638  
                      u10352 262C                        u10417 25C2                        u10265 23E2  
                      u10370 2668                        u10362 263A                        u10507 4408  
                      u10427 264E                        u10380 2676                        u10372 266A  
            ___awdiv@divisor 0013                        u10437 4810                        u10382 2678  
                      u10447 4546                        ?_xtoa 002F                        u10457 457A  
                      u10467 47F8                        u10477 43D2                        u10397 2418  
                      u10487 43DC                        u10497 43FE                        i2l162 4092  
            ___awdiv@counter 0015                 vfpfcnvrt@fmt 00BA                 vfpfcnvrt@llu 00C6  
                      _SPBRG 000FAF                        _PORTB 000F81                        _TRISD 000F95  
                      _TXREG 000FAD                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
              i2___fladd@grs 0010               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000                 main@keypress 0174  
             __CFG_EBTR3$OFF 000000       keypad_total@second_int 001C                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000              __end_of_atohtoi 3A22  
             __CFG_EBTRB$OFF 000000                        _clear 47EC                        _flags 0068  
                      _fputc 4296              __end_of_isalpha 4630                        _fputs 45C4  
            __end_of_isdigit 46F2                        _reset 1012                        atoi@n 0025  
                      pad@fp 0024                        atoi@s 0018                        _width 0064  
                      _putch 4804                        dtoa@d 0031                        dtoa@i 0051  
                      dtoa@n 0049                        dtoa@p 0043                        dtoa@s 0047  
                      dtoa@w 0045              __end_of_islower 4692              __end_of_isspace 45C4  
            __end_of_isupper 46C2                        tablat 000FF5                        ttemp5 006D  
                      ttemp6 0070                        ttemp7 0074                        status 000FD8  
I2C_Master_Read@receivedByte 0013                        wtemp8 006D               ?___fpclassifyf 0011  
            __end_of_tolower 44B0                        xtoa@c 0054                        xtoa@d 0031  
                      xtoa@i 0052                        xtoa@n 004A                        xtoa@p 0046  
                      xtoa@w 0048                        xtoa@x 0039              __end_of_strncmp 3F6E  
            __end_of_toupper 44FA           __size_ofi2___fladd 030C                 _toupper$1526 001D  
         keypad_total@second 0017              __initialization 4302                main@begin_min 0169  
              main@begin_sec 0170                 __end_of_atoi 37E2                 __end_of_main 2696  
               __end_of_dtoa 3178                 __end_of_keys 1012                 __end_of_xtoa 33A4  
             __CFG_OSC$HSPLL 000000                       ??_atoi 001A                       ??_main 00EE  
                     ??_dtoa 0039                       ??_xtoa 003A                __activetblptr 000002  
          ?_I2C_Master_Start 0001            ?_I2C_Master_Write 0012                       ?_clear 0001  
         ??_I2C_Master_Start 0012           ??_I2C_Master_Write 0014                       ?_fputc 0014  
                     ?_fputs 001D             ___awdiv@dividend 0011                       ?_putch 0001  
                     _INT0IE 007F94                       _INT0IF 007F91                 atohtoi@ascii 0013  
                     _INT1IE 007F83                       _INT1IF 007F80                       _INT2IE 007F84  
                     _INT2IF 007F81                       i2l1030 2AC2                       i2l1045 2BB6  
                     i2l1029 2AE4                       i2l1054 2C1C                       i2l1055 2C18  
                     i2l5503 2A3A                       i2l5613 2BFA                       i2l5533 2A76  
                     i2l5607 2BF0                       i2l5471 29D2                       i2l5641 2C88  
                     i2l5633 2C62                       i2l5561 2B08                       i2l5545 2AD0  
                     i2l5571 2B2E                       i2l5547 2AD4                       i2l5491 2A16  
                     i2l5467 29CE                       i2l5645 2C90                       i2l5647 2C92  
                     i2l5495 2A1A                       i2l5911 4056                       i2l5903 401A  
                     i2l5569 2B2A                       i2l5579 2B40                       i2l5597 2BDA  
                     i2l5589 2BA6                vfpfcnvrt@done 00CE                       _SSPADD 000FC8  
                     _SSPBUF 000FC9               i2___fladd@aexp 000E               i2___fladd@bexp 000F  
             __CFG_XINST$OFF 000000                 vfprintf@cfmt 005A             __end_of_lcd_byte 4410  
                     ___flge 3B06                       ___fleq 4096                    ??___aldiv 0019  
                  ??___aodiv 0021                    ??___fladd 0019                    ??___aomod 0021  
                     ___wmul 47A2                    ??___fldiv 0019                    ??___awdiv 0015  
                  ??___flneg 0015               __CFG_STVREN$ON 000000                    ??___awmod 0015  
                  ??___flmul 0019                    ??___flsub 0032                    ??___fltol 0015  
                  ??___lldiv 0019                       _efgtoa 10AE                ?_cursor_reset 0001  
                     _floorf 33A4                       _line_2 4840                       clear_0 4326  
                     clear_1 4332                       clear_2 433E                       clear_3 4350  
              ?_keypad_total 0017             ___awdiv@quotient 0017              ___awmod@divisor 0013  
         _distance_travelled 0100              ___awmod@counter 0015                       _printf 477A  
                     pad@buf 0026                       _status 0175                       dtoa@fp 002F  
                     _strcpy 4410                       _strlen 4750                    ??_atohtoi 0013  
                     fputc@c 0014                       fputs@c 0021                       fputs@i 0022  
                     fputs@s 001D                    ??_isalpha 0013            __end_ofi2___fladd 2CAE  
                  ??_isdigit 0013              ___fpclassifyf@e 0019              ___fpclassifyf@u 001B  
            ___fpclassifyf@x 0011                    ??_islower 0013                 __mediumconst 0000  
                  ??_isspace 0013                       tblptrh 000FF7                    ??_isupper 0013  
                     tblptrl 000FF6                       tblptru 000FF8             __end_of_vfprintf 43BA  
                  ??_tolower 0019                       xtoa@fp 002F                    ??_strncmp 0017  
                  ??_toupper 0019                   ___flge@ff1 002A                   ___flge@ff2 002E  
            ??___fpclassifyf 0015                   ___fleq@ff1 0011                   ___fleq@ff2 0015  
                 __accesstop 0080      __end_of__initialization 4356              __CFG_PBADEN$OFF 000000  
                 ___flneg@f1 0011                ___rparam_used 000001                   ___fltol@f1 0011  
             __pcstackCOMRAM 0001                 __pidataBANK1 4860                __end_of_clear 4804  
             ??_cursor_reset 0014                __end_of_fputc 4302                __end_of_fputs 45FC  
             ??_keypad_total 0019                __end_of_reset 1019                __end_of_putch 4818  
  __size_of_lcd_Instructions 000C                      ??_clear 0014                      ??_fputc 0018  
                    ??_fputs 0021                      ??_putch 0013                   __pbssBANK0 00F2  
                 __pbssBANK1 0100                   __pbssBANK2 0200                   __pbssBANK3 0300  
                 _data_count 006A            ?_interruptHandler 0001           ??_interruptHandler 0011  
                 _efgtoa$882 0084                   _efgtoa$891 008A                   _efgtoa$883 0086  
                 _efgtoa$892 008C                   _efgtoa$893 008E                   _efgtoa$887 0088  
                    ?___flge 002A                      ?___fleq 0011            time_elapsed@end_s 0029  
          time_elapsed@array 001C                      ?___wmul 0011          time_elapsed@begin_s 0027  
                    ?_efgtoa 003E                      ?_floorf 002A                      ?_line_2 0001  
        time_elapsed@end_min 001A                   _crack_dist 0200          time_elapsed@end_sec 001B  
                    ?_printf 00E2                      ?_strcpy 0011                      ?_strlen 0011  
        time_elapsed@minutes 002B          time_elapsed@seconds 002D        time_elapsed@b_min_int 001F  
      time_elapsed@b_sec_int 0021           __size_of_vfpfcnvrt 05BC        time_elapsed@begin_min 001E  
      time_elapsed@begin_sec 0019          time_elapsed@total_s 002F                      _SSPCON1 000FC6  
                    _SSPCON2 000FC5        time_elapsed@e_min_int 0023        time_elapsed@e_sec_int 0025  
                  ?_lcd_byte 0001                      _SSPSTAT 000FC7              i2___fladd@signs 000D  
                    __Hparam 0000                      __Lparam 0000                      ___aldiv 3CA2  
            __size_of___flge 00D0              __size_of___fleq 008A                      ___aodiv 355A  
                    ___fladd 2696                      ___aomod 37E2                      ___fldiv 2CAE  
                    ___awdiv 4120                      ___flneg 4722                      ___awmod 4226  
                    ___flmul 2038                      ___flsub 44FA                      ___fltol 3D6E  
                    ___lldiv 41A4              __size_of___wmul 0026                    ?_vfprintf 00DC  
               __psmallconst 1000              __size_of_efgtoa 09CE              __size_of_floorf 01B6  
            __size_of_line_2 0008                      __pcinit 4302                      __ramtop 1000  
                    __ptext0 238A                      __ptext1 3A22                      __ptext2 3906  
                    __ptext3 477A                      __ptext4 4364                      __ptext5 1A7C  
                    __ptext6 3178                      __ptext7 44B0                      __ptext8 4662  
                    __ptext9 45FC              __size_of_printf 0028                      _atohtoi 3906  
            __size_of_strcpy 0054              __size_of_strlen 002A                 __size_of_abs 0032  
               __size_of_pad 0096                      _isalpha 45FC                      _isdigit 46C2  
           ___awmod@dividend 0011             ___aldiv@dividend 0011                      _islower 4662  
                    _isspace 4586                      _isupper 4692     __size_of_I2C_Master_Init 00A4  
   __size_of_I2C_Master_Read 0024                      efgtoa@c 0044                      efgtoa@d 0098  
                    efgtoa@e 00B0                      efgtoa@f 0040                      efgtoa@g 00AC  
                    efgtoa@h 00A2                      efgtoa@i 00AA                      efgtoa@l 00A6  
                    efgtoa@m 0094                      efgtoa@n 00B2                      efgtoa@p 009C  
                    efgtoa@t 0090                      efgtoa@u 00B4                      efgtoa@w 009F  
   __size_of_I2C_Master_Wait 0012     __size_of_I2C_Master_Stop 0008                      atoi@neg 001E  
              ?_time_elapsed 0019                      _tolower 4464                   ??_lcd_byte 0011  
                    _strncmp 3ECC               __pintcode_body 4004                      _toupper 44B0  
       end_of_initialization 4356         __end_of_cursor_reset 4850                      floorf@e 0038  
                    floorf@m 0034                      floorf@u 003A                      floorf@x 002A  
       __end_of_keypad_total 4722                      fputc@fp 0016                __Lmediumconst 0000  
                    int_func 4004                      fputs@fp 001F    __size_of_I2C_Master_Start 0008  
  __size_of_I2C_Master_Write 000A              ___lldiv@divisor 0015              ___lldiv@counter 001D  
          __end_of_vfpfcnvrt 2038                   efgtoa@mode 00A1                   efgtoa@sign 009A  
                  _RCSTAbits 000FAB             ___aldiv@quotient 001B      __size_of_initialize_LCD 0046  
                    postdec2 000FDD                      postinc0 000FEE                      postinc1 000FE6  
                    postinc2 000FDE                   ??_vfprintf 005A                      strcpy@d 0019  
                    strlen@a 0013                      strcpy@s 0017                      strlen@s 0011  
           _lcd_Instructions 482A                  ___fladd@grs 0020                    _TRISAbits 000F92  
                  _TRISCbits 000F94               ??_time_elapsed 001E                  ___fldiv@grs 0024  
                ___fldiv@rem 001D                    i2___fladd 29A2                  ___flmul@grs 001F  
                  _TXSTAbits 000FAC               __end_of___flge 3BD6               __end_of___fleq 4120  
                vfpfcnvrt@ap 00BC                  vfpfcnvrt@ct 00D8                  vfpfcnvrt@fp 00B8  
                vfpfcnvrt@ll 00BE               __end_of___wmul 47C8               __end_of_efgtoa 1A7C  
             __end_of_floorf 355A               __end_of_line_2 4848                   floorf@F524 005C  
             __end_of_printf 47A2               __end_of_strcpy 4464               __end_of_strlen 477A  
        start_initialization 4302                  __end_of_abs 4662                  __end_of_pad 4004  
                 ?i2___fladd 0001            ??_I2C_Master_Init 0022            ??_I2C_Master_Read 0012  
          ??_I2C_Master_Wait 0011            ??_I2C_Master_Stop 0012        __end_of___fpclassifyf 3CA2  
                vfprintf@fmt 00DE                     ??___flge 0032                     ??___fleq 0019  
                   ??___wmul 0015                     ??_efgtoa 0045     I2C_Master_Init@clockFreq 001E  
                __pdataBANK1 0175                     ??_floorf 002E             __CFG_LPT1OSC$OFF 000000  
                   ??_line_2 0014                     ??_printf 005C    __size_of_interruptHandler 408E  
                   ??_strcpy 0015                     ??_strlen 0013                    ___fladd@a 0015  
                  ___fladd@b 0011                    ___fldiv@a 0015                    ___fldiv@b 0011  
                  ___flmul@a 0015                    ___flmul@b 0011                  __pbssCOMRAM 005C  
                  ___flsub@a 002E                    ___flsub@b 002A        __size_of_cursor_reset 0008  
              __pcstackBANK0 0080                __pcstackBANK1 015C             ___aodiv@dividend 0011  
      __size_of_keypad_total 0030            __size_of_lcd_byte 0056                    _atoi$1397 0020  
                  _atoi$1398 0024                    _atoi$1399 0022             _I2C_Master_Start 4858  
           _I2C_Master_Write 4836            __CFG_CCP2MX$PORTC 000000               _initialize_LCD 4540  
                  __pintcode 0008         __end_of_time_elapsed 3B06                     ?___aldiv 0011  
                   ?___aodiv 0011                     ?___fladd 0011                     ?___aomod 0011  
                   ?___fldiv 0011                     ?___awdiv 0011             ___aodiv@quotient 0023  
                   ?___flneg 0011                     ?___awmod 0011                     ?___flmul 0011  
                   ?___flsub 002A                     ?___fltol 0011                     ?___lldiv 0011  
               _cursor_reset 4848                 _keypad_total 46F2            __size_of_vfprintf 0056  
                   ?_atohtoi 0011                  __smallconst 1000                     ?_isalpha 0011  
                   ?_isdigit 0011                     ?_islower 0011                     ?_isspace 0011  
                  _hole_dist 0300                     ?_isupper 0011               __size_of_clear 0018  
                ??i2___fladd 0009                     ?_tolower 0017               __size_of_fputc 006C  
             __size_of_fputs 0038                     ?_strncmp 0011                     ?_toupper 0017  
             __size_of_putch 0014              ___aldiv@divisor 0015     __end_of_lcd_Instructions 4836  
            ___aldiv@counter 0019               ___wmul@product 0015                     _LATAbits 000F89  
                   _LATDbits 000F8C                     _PIE1bits 000F9D       __end_of_initialize_LCD 4586  
                   i2u711_40 2C12                     i2u717_40 2C6E                     i2u709_40 2BFE  
                   i2u691_40 2A98                     i2u692_40 2AA8                     i2u693_40 2AAA  
                   i2u696_40 2AEC             __CFG_WDTPS$32768 000000                    _vfpfcnvrt 1A7C  
                  main@i_534 0173            ___wmul@multiplier 0011                 _isspace$1437 0017  
                 vfpfcnvrt@c 00DB                   vfpfcnvrt@f 00D4                  _INTCON3bits 000FF0  
                _first_digit 0177                 _second_digit 0176              ?_initialize_LCD 0001  
                   __Hrparam 0000                   vfprintf@ap 00E0                     __Lrparam 0000  
                 vfprintf@fp 00DC           __CFG_BOREN$SBORDIS 000000             __size_of___aldiv 00CC  
           __size_of___aodiv 0148             __size_of___fladd 030C             __size_of___aomod 0124  
           __size_of___fldiv 0288             __size_of___awdiv 0084             __size_of___flneg 002E  
           __size_of___awmod 0070             __size_of___flmul 0352             __size_of___flsub 0046  
           __size_of___fltol 00BA             __size_of___lldiv 0082                   ?_vfpfcnvrt 00B8  
            ___aodiv@divisor 0019             _interruptHandler 0008              ___aodiv@counter 0021  
         ___fpclassifyf@F463 0060             __size_of_atohtoi 011C              _I2C_Master_Init 3E28  
            _I2C_Master_Read 47C8              _I2C_Master_Wait 4818              _I2C_Master_Stop 4850  
                _key_pressed 0104             __size_of_isalpha 0034             __size_of_isdigit 0030  
                   _dtoa$858 0041             __size_of_islower 0030             __size_of_isspace 003E  
                   __ptext10 3ECC                     __ptext11 10AE                     __ptext20 4722  
                   __ptext12 4464                     __ptext21 2038                     __ptext13 4692  
                   __ptext30 45C4                     __ptext22 3B06                     __ptext14 4410  
                   __ptext31 4296                     __ptext23 4096                     __ptext15 33A4  
                   __ptext40 46F2                     __ptext32 4804                     __ptext24 2CAE  
                   __ptext16 3BD6                     __ptext41 47A2                     __ptext33 4630  
                   __ptext25 4226                     __ptext17 3D6E                     __ptext50 4858  
                   __ptext42 4540                     __ptext34 37E2                     __ptext26 4120  
                   __ptext18 44FA                     __ptext51 47C8                     __ptext43 4848  
                   __ptext35 355A                     __ptext27 2F36                     __ptext19 2696  
                   __ptext52 4818                     __ptext44 47EC                     __ptext36 36A2  
                   __ptext28 3F6E                     __ptext53 3E28                     __ptext45 482A  
                   __ptext37 4586                     __ptext29 4750                     __ptext54 41A4  
                   __ptext46 43BA                     __ptext38 46C2                     __ptext47 3CA2  
                   __ptext39 4840                     __ptext56 29A2                     __ptext48 4836  
                   __ptext49 4850             __size_of_isupper 0030                     _lcd_byte 43BA  
           __size_of_tolower 004C             atohtoi@dec_ascii 0014                   strcpy@dest 0011  
           __size_of_strncmp 00A2             __size_of_toupper 004A                __size_of_atoi 0140  
              __size_of_main 030C                __size_of_dtoa 0242                __size_of_xtoa 022C  
      __size_of_time_elapsed 00E4                     efgtoa@fp 003E                     efgtoa@ne 0096  
                   efgtoa@pp 0092                     efgtoa@ou 0080                     int$flags 006C  
                   _xtoa$903 0042                     _xtoa$904 0044                     _vfprintf 4364  
                  printf@fmt 00E2                     main@temp 015C                     main@time 0162  
I2C_Master_Write@byteToWrite 0012             ___aomod@dividend 0011                    putch@data 0013  
   __end_of_I2C_Master_Start 4860     __end_of_I2C_Master_Write 4840                   _INTCONbits 000FF2  
                   isalpha@c 0011                     isdigit@c 0011                 _time_elapsed 3A22  
                   intlevel2 0000                     islower@c 0011                     isspace@c 0011  
           ___lldiv@dividend 0011                    strcpy@src 0013                     isupper@c 0011  
                  strncmp@_l 0011                    strncmp@_r 0013                  efgtoa@nmode 009E  
                   printf@ap 00EC      __end_of_I2C_Master_Init 3ECC              ___aomod@divisor 0019  
    __end_of_I2C_Master_Read 47EC      __end_of_I2C_Master_Wait 482A      __end_of_I2C_Master_Stop 4858  
                ??_vfpfcnvrt 0056              ___aomod@counter 0021                _vfpfcnvrt$923 00D2  
              _vfpfcnvrt$918 00D0                     tolower@c 0017       __size_of___fpclassifyf 00CC  
           ___lldiv@quotient 0019                     strncmp@l 0018                     strncmp@n 0015  
                   strncmp@r 001A                     toupper@c 0017                 ___aldiv@sign 001A  
                _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5                ___fladd@signs 001D  
               ___aodiv@sign 0022                 ___fladd@aexp 001E                 ___fladd@bexp 001F  
          ?_lcd_Instructions 0001                 ___aomod@sign 0022           ??_lcd_Instructions 0013  
